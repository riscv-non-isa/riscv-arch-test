
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_22272:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000000000003f; valaddr_reg:x3; val_offset:66816*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66816*0 + 3*0*FLEN/8, x4, x1, x2)

inst_22273:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000000000007f; valaddr_reg:x3; val_offset:66819*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66819*0 + 3*1*FLEN/8, x4, x1, x2)

inst_22274:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00000000000ff; valaddr_reg:x3; val_offset:66822*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66822*0 + 3*2*FLEN/8, x4, x1, x2)

inst_22275:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00000000001ff; valaddr_reg:x3; val_offset:66825*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66825*0 + 3*3*FLEN/8, x4, x1, x2)

inst_22276:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00000000003ff; valaddr_reg:x3; val_offset:66828*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66828*0 + 3*4*FLEN/8, x4, x1, x2)

inst_22277:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00000000007ff; valaddr_reg:x3; val_offset:66831*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66831*0 + 3*5*FLEN/8, x4, x1, x2)

inst_22278:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000000000fff; valaddr_reg:x3; val_offset:66834*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66834*0 + 3*6*FLEN/8, x4, x1, x2)

inst_22279:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000000001fff; valaddr_reg:x3; val_offset:66837*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66837*0 + 3*7*FLEN/8, x4, x1, x2)

inst_22280:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000000003fff; valaddr_reg:x3; val_offset:66840*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66840*0 + 3*8*FLEN/8, x4, x1, x2)

inst_22281:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000000007fff; valaddr_reg:x3; val_offset:66843*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66843*0 + 3*9*FLEN/8, x4, x1, x2)

inst_22282:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000000000ffff; valaddr_reg:x3; val_offset:66846*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66846*0 + 3*10*FLEN/8, x4, x1, x2)

inst_22283:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000000001ffff; valaddr_reg:x3; val_offset:66849*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66849*0 + 3*11*FLEN/8, x4, x1, x2)

inst_22284:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000000003ffff; valaddr_reg:x3; val_offset:66852*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66852*0 + 3*12*FLEN/8, x4, x1, x2)

inst_22285:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000000007ffff; valaddr_reg:x3; val_offset:66855*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66855*0 + 3*13*FLEN/8, x4, x1, x2)

inst_22286:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00000000fffff; valaddr_reg:x3; val_offset:66858*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66858*0 + 3*14*FLEN/8, x4, x1, x2)

inst_22287:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00000001fffff; valaddr_reg:x3; val_offset:66861*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66861*0 + 3*15*FLEN/8, x4, x1, x2)

inst_22288:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00000003fffff; valaddr_reg:x3; val_offset:66864*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66864*0 + 3*16*FLEN/8, x4, x1, x2)

inst_22289:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00000007fffff; valaddr_reg:x3; val_offset:66867*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66867*0 + 3*17*FLEN/8, x4, x1, x2)

inst_22290:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000000ffffff; valaddr_reg:x3; val_offset:66870*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66870*0 + 3*18*FLEN/8, x4, x1, x2)

inst_22291:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000001ffffff; valaddr_reg:x3; val_offset:66873*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66873*0 + 3*19*FLEN/8, x4, x1, x2)

inst_22292:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000003ffffff; valaddr_reg:x3; val_offset:66876*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66876*0 + 3*20*FLEN/8, x4, x1, x2)

inst_22293:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000007ffffff; valaddr_reg:x3; val_offset:66879*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66879*0 + 3*21*FLEN/8, x4, x1, x2)

inst_22294:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000000fffffff; valaddr_reg:x3; val_offset:66882*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66882*0 + 3*22*FLEN/8, x4, x1, x2)

inst_22295:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000001fffffff; valaddr_reg:x3; val_offset:66885*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66885*0 + 3*23*FLEN/8, x4, x1, x2)

inst_22296:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000003fffffff; valaddr_reg:x3; val_offset:66888*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66888*0 + 3*24*FLEN/8, x4, x1, x2)

inst_22297:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000007fffffff; valaddr_reg:x3; val_offset:66891*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66891*0 + 3*25*FLEN/8, x4, x1, x2)

inst_22298:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00000ffffffff; valaddr_reg:x3; val_offset:66894*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66894*0 + 3*26*FLEN/8, x4, x1, x2)

inst_22299:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00001ffffffff; valaddr_reg:x3; val_offset:66897*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66897*0 + 3*27*FLEN/8, x4, x1, x2)

inst_22300:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00003ffffffff; valaddr_reg:x3; val_offset:66900*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66900*0 + 3*28*FLEN/8, x4, x1, x2)

inst_22301:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00007ffffffff; valaddr_reg:x3; val_offset:66903*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66903*0 + 3*29*FLEN/8, x4, x1, x2)

inst_22302:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0000fffffffff; valaddr_reg:x3; val_offset:66906*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66906*0 + 3*30*FLEN/8, x4, x1, x2)

inst_22303:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0001fffffffff; valaddr_reg:x3; val_offset:66909*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66909*0 + 3*31*FLEN/8, x4, x1, x2)

inst_22304:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0003fffffffff; valaddr_reg:x3; val_offset:66912*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66912*0 + 3*32*FLEN/8, x4, x1, x2)

inst_22305:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0007fffffffff; valaddr_reg:x3; val_offset:66915*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66915*0 + 3*33*FLEN/8, x4, x1, x2)

inst_22306:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb000ffffffffff; valaddr_reg:x3; val_offset:66918*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66918*0 + 3*34*FLEN/8, x4, x1, x2)

inst_22307:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb001ffffffffff; valaddr_reg:x3; val_offset:66921*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66921*0 + 3*35*FLEN/8, x4, x1, x2)

inst_22308:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb003ffffffffff; valaddr_reg:x3; val_offset:66924*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66924*0 + 3*36*FLEN/8, x4, x1, x2)

inst_22309:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb007ffffffffff; valaddr_reg:x3; val_offset:66927*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66927*0 + 3*37*FLEN/8, x4, x1, x2)

inst_22310:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb00fffffffffff; valaddr_reg:x3; val_offset:66930*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66930*0 + 3*38*FLEN/8, x4, x1, x2)

inst_22311:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb01fffffffffff; valaddr_reg:x3; val_offset:66933*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66933*0 + 3*39*FLEN/8, x4, x1, x2)

inst_22312:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb03fffffffffff; valaddr_reg:x3; val_offset:66936*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66936*0 + 3*40*FLEN/8, x4, x1, x2)

inst_22313:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb07fffffffffff; valaddr_reg:x3; val_offset:66939*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66939*0 + 3*41*FLEN/8, x4, x1, x2)

inst_22314:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb0ffffffffffff; valaddr_reg:x3; val_offset:66942*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66942*0 + 3*42*FLEN/8, x4, x1, x2)

inst_22315:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb1ffffffffffff; valaddr_reg:x3; val_offset:66945*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66945*0 + 3*43*FLEN/8, x4, x1, x2)

inst_22316:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb3ffffffffffff; valaddr_reg:x3; val_offset:66948*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66948*0 + 3*44*FLEN/8, x4, x1, x2)

inst_22317:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb7ffffffffffff; valaddr_reg:x3; val_offset:66951*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66951*0 + 3*45*FLEN/8, x4, x1, x2)

inst_22318:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbb8000000000000; valaddr_reg:x3; val_offset:66954*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66954*0 + 3*46*FLEN/8, x4, x1, x2)

inst_22319:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbc000000000000; valaddr_reg:x3; val_offset:66957*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66957*0 + 3*47*FLEN/8, x4, x1, x2)

inst_22320:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbe000000000000; valaddr_reg:x3; val_offset:66960*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66960*0 + 3*48*FLEN/8, x4, x1, x2)

inst_22321:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbf000000000000; valaddr_reg:x3; val_offset:66963*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66963*0 + 3*49*FLEN/8, x4, x1, x2)

inst_22322:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbf800000000000; valaddr_reg:x3; val_offset:66966*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66966*0 + 3*50*FLEN/8, x4, x1, x2)

inst_22323:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfc00000000000; valaddr_reg:x3; val_offset:66969*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66969*0 + 3*51*FLEN/8, x4, x1, x2)

inst_22324:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfe00000000000; valaddr_reg:x3; val_offset:66972*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66972*0 + 3*52*FLEN/8, x4, x1, x2)

inst_22325:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbff00000000000; valaddr_reg:x3; val_offset:66975*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66975*0 + 3*53*FLEN/8, x4, x1, x2)

inst_22326:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbff80000000000; valaddr_reg:x3; val_offset:66978*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66978*0 + 3*54*FLEN/8, x4, x1, x2)

inst_22327:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffc0000000000; valaddr_reg:x3; val_offset:66981*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66981*0 + 3*55*FLEN/8, x4, x1, x2)

inst_22328:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffe0000000000; valaddr_reg:x3; val_offset:66984*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66984*0 + 3*56*FLEN/8, x4, x1, x2)

inst_22329:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfff0000000000; valaddr_reg:x3; val_offset:66987*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66987*0 + 3*57*FLEN/8, x4, x1, x2)

inst_22330:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfff8000000000; valaddr_reg:x3; val_offset:66990*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66990*0 + 3*58*FLEN/8, x4, x1, x2)

inst_22331:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffc000000000; valaddr_reg:x3; val_offset:66993*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66993*0 + 3*59*FLEN/8, x4, x1, x2)

inst_22332:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffe000000000; valaddr_reg:x3; val_offset:66996*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66996*0 + 3*60*FLEN/8, x4, x1, x2)

inst_22333:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffff000000000; valaddr_reg:x3; val_offset:66999*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66999*0 + 3*61*FLEN/8, x4, x1, x2)

inst_22334:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffff800000000; valaddr_reg:x3; val_offset:67002*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67002*0 + 3*62*FLEN/8, x4, x1, x2)

inst_22335:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffc00000000; valaddr_reg:x3; val_offset:67005*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67005*0 + 3*63*FLEN/8, x4, x1, x2)

inst_22336:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffe00000000; valaddr_reg:x3; val_offset:67008*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67008*0 + 3*64*FLEN/8, x4, x1, x2)

inst_22337:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffff00000000; valaddr_reg:x3; val_offset:67011*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67011*0 + 3*65*FLEN/8, x4, x1, x2)

inst_22338:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffff80000000; valaddr_reg:x3; val_offset:67014*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67014*0 + 3*66*FLEN/8, x4, x1, x2)

inst_22339:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffc0000000; valaddr_reg:x3; val_offset:67017*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67017*0 + 3*67*FLEN/8, x4, x1, x2)

inst_22340:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffe0000000; valaddr_reg:x3; val_offset:67020*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67020*0 + 3*68*FLEN/8, x4, x1, x2)

inst_22341:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffff0000000; valaddr_reg:x3; val_offset:67023*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67023*0 + 3*69*FLEN/8, x4, x1, x2)

inst_22342:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffff8000000; valaddr_reg:x3; val_offset:67026*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67026*0 + 3*70*FLEN/8, x4, x1, x2)

inst_22343:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffc000000; valaddr_reg:x3; val_offset:67029*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67029*0 + 3*71*FLEN/8, x4, x1, x2)

inst_22344:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffe000000; valaddr_reg:x3; val_offset:67032*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67032*0 + 3*72*FLEN/8, x4, x1, x2)

inst_22345:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffff000000; valaddr_reg:x3; val_offset:67035*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67035*0 + 3*73*FLEN/8, x4, x1, x2)

inst_22346:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffff800000; valaddr_reg:x3; val_offset:67038*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67038*0 + 3*74*FLEN/8, x4, x1, x2)

inst_22347:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffffc00000; valaddr_reg:x3; val_offset:67041*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67041*0 + 3*75*FLEN/8, x4, x1, x2)

inst_22348:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffffe00000; valaddr_reg:x3; val_offset:67044*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67044*0 + 3*76*FLEN/8, x4, x1, x2)

inst_22349:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffff00000; valaddr_reg:x3; val_offset:67047*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67047*0 + 3*77*FLEN/8, x4, x1, x2)

inst_22350:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffff80000; valaddr_reg:x3; val_offset:67050*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67050*0 + 3*78*FLEN/8, x4, x1, x2)

inst_22351:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffffc0000; valaddr_reg:x3; val_offset:67053*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67053*0 + 3*79*FLEN/8, x4, x1, x2)

inst_22352:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffffe0000; valaddr_reg:x3; val_offset:67056*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67056*0 + 3*80*FLEN/8, x4, x1, x2)

inst_22353:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffffff0000; valaddr_reg:x3; val_offset:67059*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67059*0 + 3*81*FLEN/8, x4, x1, x2)

inst_22354:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffffff8000; valaddr_reg:x3; val_offset:67062*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67062*0 + 3*82*FLEN/8, x4, x1, x2)

inst_22355:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffffffc000; valaddr_reg:x3; val_offset:67065*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67065*0 + 3*83*FLEN/8, x4, x1, x2)

inst_22356:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffffffe000; valaddr_reg:x3; val_offset:67068*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67068*0 + 3*84*FLEN/8, x4, x1, x2)

inst_22357:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffffff000; valaddr_reg:x3; val_offset:67071*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67071*0 + 3*85*FLEN/8, x4, x1, x2)

inst_22358:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffffff800; valaddr_reg:x3; val_offset:67074*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67074*0 + 3*86*FLEN/8, x4, x1, x2)

inst_22359:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffffffc00; valaddr_reg:x3; val_offset:67077*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67077*0 + 3*87*FLEN/8, x4, x1, x2)

inst_22360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffffffe00; valaddr_reg:x3; val_offset:67080*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67080*0 + 3*88*FLEN/8, x4, x1, x2)

inst_22361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffffffff00; valaddr_reg:x3; val_offset:67083*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67083*0 + 3*89*FLEN/8, x4, x1, x2)

inst_22362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffffffff80; valaddr_reg:x3; val_offset:67086*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67086*0 + 3*90*FLEN/8, x4, x1, x2)

inst_22363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffffffffc0; valaddr_reg:x3; val_offset:67089*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67089*0 + 3*91*FLEN/8, x4, x1, x2)

inst_22364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffffffffe0; valaddr_reg:x3; val_offset:67092*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67092*0 + 3*92*FLEN/8, x4, x1, x2)

inst_22365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffffffff0; valaddr_reg:x3; val_offset:67095*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67095*0 + 3*93*FLEN/8, x4, x1, x2)

inst_22366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffffffff8; valaddr_reg:x3; val_offset:67098*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67098*0 + 3*94*FLEN/8, x4, x1, x2)

inst_22367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffffffffc; valaddr_reg:x3; val_offset:67101*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67101*0 + 3*95*FLEN/8, x4, x1, x2)

inst_22368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbffffffffffffe; valaddr_reg:x3; val_offset:67104*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67104*0 + 3*96*FLEN/8, x4, x1, x2)

inst_22369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3bb and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbbbfffffffffffff; valaddr_reg:x3; val_offset:67107*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67107*0 + 3*97*FLEN/8, x4, x1, x2)

inst_22370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:67110*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67110*0 + 3*98*FLEN/8, x4, x1, x2)

inst_22371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:67113*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67113*0 + 3*99*FLEN/8, x4, x1, x2)

inst_22372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:67116*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67116*0 + 3*100*FLEN/8, x4, x1, x2)

inst_22373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:67119*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67119*0 + 3*101*FLEN/8, x4, x1, x2)

inst_22374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:67122*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67122*0 + 3*102*FLEN/8, x4, x1, x2)

inst_22375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:67125*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67125*0 + 3*103*FLEN/8, x4, x1, x2)

inst_22376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:67128*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67128*0 + 3*104*FLEN/8, x4, x1, x2)

inst_22377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:67131*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67131*0 + 3*105*FLEN/8, x4, x1, x2)

inst_22378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:67134*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67134*0 + 3*106*FLEN/8, x4, x1, x2)

inst_22379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:67137*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67137*0 + 3*107*FLEN/8, x4, x1, x2)

inst_22380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:67140*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67140*0 + 3*108*FLEN/8, x4, x1, x2)

inst_22381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:67143*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67143*0 + 3*109*FLEN/8, x4, x1, x2)

inst_22382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:67146*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67146*0 + 3*110*FLEN/8, x4, x1, x2)

inst_22383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:67149*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67149*0 + 3*111*FLEN/8, x4, x1, x2)

inst_22384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:67152*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67152*0 + 3*112*FLEN/8, x4, x1, x2)

inst_22385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:67155*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67155*0 + 3*113*FLEN/8, x4, x1, x2)

inst_22386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:67158*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67158*0 + 3*114*FLEN/8, x4, x1, x2)

inst_22387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:67161*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67161*0 + 3*115*FLEN/8, x4, x1, x2)

inst_22388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:67164*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67164*0 + 3*116*FLEN/8, x4, x1, x2)

inst_22389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:67167*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67167*0 + 3*117*FLEN/8, x4, x1, x2)

inst_22390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:67170*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67170*0 + 3*118*FLEN/8, x4, x1, x2)

inst_22391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x957151755a3ab and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x4347fef58f8b1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8957151755a3ab; op2val:0x9fe4347fef58f8b1;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:67173*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67173*0 + 3*119*FLEN/8, x4, x1, x2)

inst_22392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000000000000; valaddr_reg:x3; val_offset:67176*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67176*0 + 3*120*FLEN/8, x4, x1, x2)

inst_22393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000000000001; valaddr_reg:x3; val_offset:67179*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67179*0 + 3*121*FLEN/8, x4, x1, x2)

inst_22394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000000000003; valaddr_reg:x3; val_offset:67182*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67182*0 + 3*122*FLEN/8, x4, x1, x2)

inst_22395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000000000007; valaddr_reg:x3; val_offset:67185*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67185*0 + 3*123*FLEN/8, x4, x1, x2)

inst_22396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000000000000f; valaddr_reg:x3; val_offset:67188*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67188*0 + 3*124*FLEN/8, x4, x1, x2)

inst_22397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000000000001f; valaddr_reg:x3; val_offset:67191*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67191*0 + 3*125*FLEN/8, x4, x1, x2)

inst_22398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000000000003f; valaddr_reg:x3; val_offset:67194*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67194*0 + 3*126*FLEN/8, x4, x1, x2)

inst_22399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000000000007f; valaddr_reg:x3; val_offset:67197*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67197*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_22400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00000000000ff; valaddr_reg:x3; val_offset:67200*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67200*0 + 3*128*FLEN/8, x4, x1, x2)

inst_22401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00000000001ff; valaddr_reg:x3; val_offset:67203*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67203*0 + 3*129*FLEN/8, x4, x1, x2)

inst_22402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00000000003ff; valaddr_reg:x3; val_offset:67206*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67206*0 + 3*130*FLEN/8, x4, x1, x2)

inst_22403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00000000007ff; valaddr_reg:x3; val_offset:67209*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67209*0 + 3*131*FLEN/8, x4, x1, x2)

inst_22404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000000000fff; valaddr_reg:x3; val_offset:67212*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67212*0 + 3*132*FLEN/8, x4, x1, x2)

inst_22405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000000001fff; valaddr_reg:x3; val_offset:67215*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67215*0 + 3*133*FLEN/8, x4, x1, x2)

inst_22406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000000003fff; valaddr_reg:x3; val_offset:67218*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67218*0 + 3*134*FLEN/8, x4, x1, x2)

inst_22407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000000007fff; valaddr_reg:x3; val_offset:67221*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67221*0 + 3*135*FLEN/8, x4, x1, x2)

inst_22408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000000000ffff; valaddr_reg:x3; val_offset:67224*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67224*0 + 3*136*FLEN/8, x4, x1, x2)

inst_22409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000000001ffff; valaddr_reg:x3; val_offset:67227*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67227*0 + 3*137*FLEN/8, x4, x1, x2)

inst_22410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000000003ffff; valaddr_reg:x3; val_offset:67230*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67230*0 + 3*138*FLEN/8, x4, x1, x2)

inst_22411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000000007ffff; valaddr_reg:x3; val_offset:67233*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67233*0 + 3*139*FLEN/8, x4, x1, x2)

inst_22412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00000000fffff; valaddr_reg:x3; val_offset:67236*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67236*0 + 3*140*FLEN/8, x4, x1, x2)

inst_22413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00000001fffff; valaddr_reg:x3; val_offset:67239*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67239*0 + 3*141*FLEN/8, x4, x1, x2)

inst_22414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00000003fffff; valaddr_reg:x3; val_offset:67242*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67242*0 + 3*142*FLEN/8, x4, x1, x2)

inst_22415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00000007fffff; valaddr_reg:x3; val_offset:67245*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67245*0 + 3*143*FLEN/8, x4, x1, x2)

inst_22416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000000ffffff; valaddr_reg:x3; val_offset:67248*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67248*0 + 3*144*FLEN/8, x4, x1, x2)

inst_22417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000001ffffff; valaddr_reg:x3; val_offset:67251*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67251*0 + 3*145*FLEN/8, x4, x1, x2)

inst_22418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000003ffffff; valaddr_reg:x3; val_offset:67254*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67254*0 + 3*146*FLEN/8, x4, x1, x2)

inst_22419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000007ffffff; valaddr_reg:x3; val_offset:67257*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67257*0 + 3*147*FLEN/8, x4, x1, x2)

inst_22420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000000fffffff; valaddr_reg:x3; val_offset:67260*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67260*0 + 3*148*FLEN/8, x4, x1, x2)

inst_22421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000001fffffff; valaddr_reg:x3; val_offset:67263*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67263*0 + 3*149*FLEN/8, x4, x1, x2)

inst_22422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000003fffffff; valaddr_reg:x3; val_offset:67266*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67266*0 + 3*150*FLEN/8, x4, x1, x2)

inst_22423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000007fffffff; valaddr_reg:x3; val_offset:67269*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67269*0 + 3*151*FLEN/8, x4, x1, x2)

inst_22424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00000ffffffff; valaddr_reg:x3; val_offset:67272*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67272*0 + 3*152*FLEN/8, x4, x1, x2)

inst_22425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00001ffffffff; valaddr_reg:x3; val_offset:67275*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67275*0 + 3*153*FLEN/8, x4, x1, x2)

inst_22426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00003ffffffff; valaddr_reg:x3; val_offset:67278*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67278*0 + 3*154*FLEN/8, x4, x1, x2)

inst_22427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00007ffffffff; valaddr_reg:x3; val_offset:67281*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67281*0 + 3*155*FLEN/8, x4, x1, x2)

inst_22428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0000fffffffff; valaddr_reg:x3; val_offset:67284*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67284*0 + 3*156*FLEN/8, x4, x1, x2)

inst_22429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0001fffffffff; valaddr_reg:x3; val_offset:67287*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67287*0 + 3*157*FLEN/8, x4, x1, x2)

inst_22430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0003fffffffff; valaddr_reg:x3; val_offset:67290*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67290*0 + 3*158*FLEN/8, x4, x1, x2)

inst_22431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0007fffffffff; valaddr_reg:x3; val_offset:67293*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67293*0 + 3*159*FLEN/8, x4, x1, x2)

inst_22432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db000ffffffffff; valaddr_reg:x3; val_offset:67296*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67296*0 + 3*160*FLEN/8, x4, x1, x2)

inst_22433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db001ffffffffff; valaddr_reg:x3; val_offset:67299*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67299*0 + 3*161*FLEN/8, x4, x1, x2)

inst_22434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db003ffffffffff; valaddr_reg:x3; val_offset:67302*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67302*0 + 3*162*FLEN/8, x4, x1, x2)

inst_22435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db007ffffffffff; valaddr_reg:x3; val_offset:67305*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67305*0 + 3*163*FLEN/8, x4, x1, x2)

inst_22436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db00fffffffffff; valaddr_reg:x3; val_offset:67308*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67308*0 + 3*164*FLEN/8, x4, x1, x2)

inst_22437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db01fffffffffff; valaddr_reg:x3; val_offset:67311*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67311*0 + 3*165*FLEN/8, x4, x1, x2)

inst_22438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db03fffffffffff; valaddr_reg:x3; val_offset:67314*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67314*0 + 3*166*FLEN/8, x4, x1, x2)

inst_22439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db07fffffffffff; valaddr_reg:x3; val_offset:67317*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67317*0 + 3*167*FLEN/8, x4, x1, x2)

inst_22440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db0ffffffffffff; valaddr_reg:x3; val_offset:67320*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67320*0 + 3*168*FLEN/8, x4, x1, x2)

inst_22441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db1ffffffffffff; valaddr_reg:x3; val_offset:67323*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67323*0 + 3*169*FLEN/8, x4, x1, x2)

inst_22442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db3ffffffffffff; valaddr_reg:x3; val_offset:67326*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67326*0 + 3*170*FLEN/8, x4, x1, x2)

inst_22443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db7ffffffffffff; valaddr_reg:x3; val_offset:67329*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67329*0 + 3*171*FLEN/8, x4, x1, x2)

inst_22444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3db8000000000000; valaddr_reg:x3; val_offset:67332*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67332*0 + 3*172*FLEN/8, x4, x1, x2)

inst_22445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbc000000000000; valaddr_reg:x3; val_offset:67335*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67335*0 + 3*173*FLEN/8, x4, x1, x2)

inst_22446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbe000000000000; valaddr_reg:x3; val_offset:67338*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67338*0 + 3*174*FLEN/8, x4, x1, x2)

inst_22447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbf000000000000; valaddr_reg:x3; val_offset:67341*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67341*0 + 3*175*FLEN/8, x4, x1, x2)

inst_22448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbf800000000000; valaddr_reg:x3; val_offset:67344*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67344*0 + 3*176*FLEN/8, x4, x1, x2)

inst_22449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfc00000000000; valaddr_reg:x3; val_offset:67347*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67347*0 + 3*177*FLEN/8, x4, x1, x2)

inst_22450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfe00000000000; valaddr_reg:x3; val_offset:67350*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67350*0 + 3*178*FLEN/8, x4, x1, x2)

inst_22451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbff00000000000; valaddr_reg:x3; val_offset:67353*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67353*0 + 3*179*FLEN/8, x4, x1, x2)

inst_22452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbff80000000000; valaddr_reg:x3; val_offset:67356*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67356*0 + 3*180*FLEN/8, x4, x1, x2)

inst_22453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffc0000000000; valaddr_reg:x3; val_offset:67359*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67359*0 + 3*181*FLEN/8, x4, x1, x2)

inst_22454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffe0000000000; valaddr_reg:x3; val_offset:67362*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67362*0 + 3*182*FLEN/8, x4, x1, x2)

inst_22455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfff0000000000; valaddr_reg:x3; val_offset:67365*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67365*0 + 3*183*FLEN/8, x4, x1, x2)

inst_22456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfff8000000000; valaddr_reg:x3; val_offset:67368*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67368*0 + 3*184*FLEN/8, x4, x1, x2)

inst_22457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffc000000000; valaddr_reg:x3; val_offset:67371*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67371*0 + 3*185*FLEN/8, x4, x1, x2)

inst_22458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffe000000000; valaddr_reg:x3; val_offset:67374*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67374*0 + 3*186*FLEN/8, x4, x1, x2)

inst_22459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffff000000000; valaddr_reg:x3; val_offset:67377*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67377*0 + 3*187*FLEN/8, x4, x1, x2)

inst_22460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffff800000000; valaddr_reg:x3; val_offset:67380*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67380*0 + 3*188*FLEN/8, x4, x1, x2)

inst_22461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffc00000000; valaddr_reg:x3; val_offset:67383*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67383*0 + 3*189*FLEN/8, x4, x1, x2)

inst_22462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffe00000000; valaddr_reg:x3; val_offset:67386*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67386*0 + 3*190*FLEN/8, x4, x1, x2)

inst_22463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffff00000000; valaddr_reg:x3; val_offset:67389*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67389*0 + 3*191*FLEN/8, x4, x1, x2)

inst_22464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffff80000000; valaddr_reg:x3; val_offset:67392*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67392*0 + 3*192*FLEN/8, x4, x1, x2)

inst_22465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffc0000000; valaddr_reg:x3; val_offset:67395*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67395*0 + 3*193*FLEN/8, x4, x1, x2)

inst_22466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffe0000000; valaddr_reg:x3; val_offset:67398*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67398*0 + 3*194*FLEN/8, x4, x1, x2)

inst_22467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffff0000000; valaddr_reg:x3; val_offset:67401*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67401*0 + 3*195*FLEN/8, x4, x1, x2)

inst_22468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffff8000000; valaddr_reg:x3; val_offset:67404*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67404*0 + 3*196*FLEN/8, x4, x1, x2)

inst_22469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffc000000; valaddr_reg:x3; val_offset:67407*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67407*0 + 3*197*FLEN/8, x4, x1, x2)

inst_22470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffe000000; valaddr_reg:x3; val_offset:67410*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67410*0 + 3*198*FLEN/8, x4, x1, x2)

inst_22471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffff000000; valaddr_reg:x3; val_offset:67413*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67413*0 + 3*199*FLEN/8, x4, x1, x2)

inst_22472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffff800000; valaddr_reg:x3; val_offset:67416*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67416*0 + 3*200*FLEN/8, x4, x1, x2)

inst_22473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffffc00000; valaddr_reg:x3; val_offset:67419*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67419*0 + 3*201*FLEN/8, x4, x1, x2)

inst_22474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffffe00000; valaddr_reg:x3; val_offset:67422*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67422*0 + 3*202*FLEN/8, x4, x1, x2)

inst_22475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffff00000; valaddr_reg:x3; val_offset:67425*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67425*0 + 3*203*FLEN/8, x4, x1, x2)

inst_22476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffff80000; valaddr_reg:x3; val_offset:67428*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67428*0 + 3*204*FLEN/8, x4, x1, x2)

inst_22477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffffc0000; valaddr_reg:x3; val_offset:67431*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67431*0 + 3*205*FLEN/8, x4, x1, x2)

inst_22478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffffe0000; valaddr_reg:x3; val_offset:67434*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67434*0 + 3*206*FLEN/8, x4, x1, x2)

inst_22479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffffff0000; valaddr_reg:x3; val_offset:67437*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67437*0 + 3*207*FLEN/8, x4, x1, x2)

inst_22480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffffff8000; valaddr_reg:x3; val_offset:67440*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67440*0 + 3*208*FLEN/8, x4, x1, x2)

inst_22481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffffffc000; valaddr_reg:x3; val_offset:67443*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67443*0 + 3*209*FLEN/8, x4, x1, x2)

inst_22482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffffffe000; valaddr_reg:x3; val_offset:67446*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67446*0 + 3*210*FLEN/8, x4, x1, x2)

inst_22483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffffff000; valaddr_reg:x3; val_offset:67449*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67449*0 + 3*211*FLEN/8, x4, x1, x2)

inst_22484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffffff800; valaddr_reg:x3; val_offset:67452*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67452*0 + 3*212*FLEN/8, x4, x1, x2)

inst_22485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffffffc00; valaddr_reg:x3; val_offset:67455*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67455*0 + 3*213*FLEN/8, x4, x1, x2)

inst_22486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffffffe00; valaddr_reg:x3; val_offset:67458*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67458*0 + 3*214*FLEN/8, x4, x1, x2)

inst_22487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffffffff00; valaddr_reg:x3; val_offset:67461*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67461*0 + 3*215*FLEN/8, x4, x1, x2)

inst_22488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffffffff80; valaddr_reg:x3; val_offset:67464*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67464*0 + 3*216*FLEN/8, x4, x1, x2)

inst_22489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffffffffc0; valaddr_reg:x3; val_offset:67467*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67467*0 + 3*217*FLEN/8, x4, x1, x2)

inst_22490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffffffffe0; valaddr_reg:x3; val_offset:67470*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67470*0 + 3*218*FLEN/8, x4, x1, x2)

inst_22491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffffffff0; valaddr_reg:x3; val_offset:67473*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67473*0 + 3*219*FLEN/8, x4, x1, x2)

inst_22492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffffffff8; valaddr_reg:x3; val_offset:67476*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67476*0 + 3*220*FLEN/8, x4, x1, x2)

inst_22493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffffffffc; valaddr_reg:x3; val_offset:67479*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67479*0 + 3*221*FLEN/8, x4, x1, x2)

inst_22494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbffffffffffffe; valaddr_reg:x3; val_offset:67482*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67482*0 + 3*222*FLEN/8, x4, x1, x2)

inst_22495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3db and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3dbfffffffffffff; valaddr_reg:x3; val_offset:67485*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67485*0 + 3*223*FLEN/8, x4, x1, x2)

inst_22496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:67488*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67488*0 + 3*224*FLEN/8, x4, x1, x2)

inst_22497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:67491*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67491*0 + 3*225*FLEN/8, x4, x1, x2)

inst_22498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:67494*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67494*0 + 3*226*FLEN/8, x4, x1, x2)

inst_22499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:67497*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67497*0 + 3*227*FLEN/8, x4, x1, x2)

inst_22500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:67500*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67500*0 + 3*228*FLEN/8, x4, x1, x2)

inst_22501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:67503*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67503*0 + 3*229*FLEN/8, x4, x1, x2)

inst_22502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:67506*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67506*0 + 3*230*FLEN/8, x4, x1, x2)

inst_22503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:67509*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67509*0 + 3*231*FLEN/8, x4, x1, x2)

inst_22504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:67512*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67512*0 + 3*232*FLEN/8, x4, x1, x2)

inst_22505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:67515*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67515*0 + 3*233*FLEN/8, x4, x1, x2)

inst_22506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:67518*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67518*0 + 3*234*FLEN/8, x4, x1, x2)

inst_22507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:67521*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67521*0 + 3*235*FLEN/8, x4, x1, x2)

inst_22508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:67524*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67524*0 + 3*236*FLEN/8, x4, x1, x2)

inst_22509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:67527*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67527*0 + 3*237*FLEN/8, x4, x1, x2)

inst_22510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:67530*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67530*0 + 3*238*FLEN/8, x4, x1, x2)

inst_22511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:67533*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67533*0 + 3*239*FLEN/8, x4, x1, x2)

inst_22512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:67536*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67536*0 + 3*240*FLEN/8, x4, x1, x2)

inst_22513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:67539*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67539*0 + 3*241*FLEN/8, x4, x1, x2)

inst_22514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:67542*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67542*0 + 3*242*FLEN/8, x4, x1, x2)

inst_22515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:67545*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67545*0 + 3*243*FLEN/8, x4, x1, x2)

inst_22516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:67548*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67548*0 + 3*244*FLEN/8, x4, x1, x2)

inst_22517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x968fc0dfa7c6b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x42643bf97b9f8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8968fc0dfa7c6b; op2val:0x20542643bf97b9f8;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:67551*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67551*0 + 3*245*FLEN/8, x4, x1, x2)

inst_22518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:67554*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67554*0 + 3*246*FLEN/8, x4, x1, x2)

inst_22519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:67557*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67557*0 + 3*247*FLEN/8, x4, x1, x2)

inst_22520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:67560*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67560*0 + 3*248*FLEN/8, x4, x1, x2)

inst_22521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:67563*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67563*0 + 3*249*FLEN/8, x4, x1, x2)

inst_22522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:67566*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67566*0 + 3*250*FLEN/8, x4, x1, x2)

inst_22523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:67569*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67569*0 + 3*251*FLEN/8, x4, x1, x2)

inst_22524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:67572*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67572*0 + 3*252*FLEN/8, x4, x1, x2)

inst_22525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:67575*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67575*0 + 3*253*FLEN/8, x4, x1, x2)

inst_22526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:67578*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67578*0 + 3*254*FLEN/8, x4, x1, x2)

inst_22527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:67581*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67581*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_22528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:67584*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67584*0 + 3*256*FLEN/8, x4, x1, x2)

inst_22529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:67587*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67587*0 + 3*257*FLEN/8, x4, x1, x2)

inst_22530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:67590*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67590*0 + 3*258*FLEN/8, x4, x1, x2)

inst_22531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:67593*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67593*0 + 3*259*FLEN/8, x4, x1, x2)

inst_22532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:67596*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67596*0 + 3*260*FLEN/8, x4, x1, x2)

inst_22533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:67599*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67599*0 + 3*261*FLEN/8, x4, x1, x2)

inst_22534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:67602*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67602*0 + 3*262*FLEN/8, x4, x1, x2)

inst_22535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:67605*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67605*0 + 3*263*FLEN/8, x4, x1, x2)

inst_22536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:67608*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67608*0 + 3*264*FLEN/8, x4, x1, x2)

inst_22537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:67611*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67611*0 + 3*265*FLEN/8, x4, x1, x2)

inst_22538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:67614*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67614*0 + 3*266*FLEN/8, x4, x1, x2)

inst_22539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:67617*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67617*0 + 3*267*FLEN/8, x4, x1, x2)

inst_22540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000000000000; valaddr_reg:x3; val_offset:67620*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67620*0 + 3*268*FLEN/8, x4, x1, x2)

inst_22541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000000000001; valaddr_reg:x3; val_offset:67623*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67623*0 + 3*269*FLEN/8, x4, x1, x2)

inst_22542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000000000003; valaddr_reg:x3; val_offset:67626*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67626*0 + 3*270*FLEN/8, x4, x1, x2)

inst_22543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000000000007; valaddr_reg:x3; val_offset:67629*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67629*0 + 3*271*FLEN/8, x4, x1, x2)

inst_22544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000000000000f; valaddr_reg:x3; val_offset:67632*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67632*0 + 3*272*FLEN/8, x4, x1, x2)

inst_22545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000000000001f; valaddr_reg:x3; val_offset:67635*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67635*0 + 3*273*FLEN/8, x4, x1, x2)

inst_22546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000000000003f; valaddr_reg:x3; val_offset:67638*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67638*0 + 3*274*FLEN/8, x4, x1, x2)

inst_22547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000000000007f; valaddr_reg:x3; val_offset:67641*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67641*0 + 3*275*FLEN/8, x4, x1, x2)

inst_22548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600000000000ff; valaddr_reg:x3; val_offset:67644*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67644*0 + 3*276*FLEN/8, x4, x1, x2)

inst_22549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600000000001ff; valaddr_reg:x3; val_offset:67647*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67647*0 + 3*277*FLEN/8, x4, x1, x2)

inst_22550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600000000003ff; valaddr_reg:x3; val_offset:67650*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67650*0 + 3*278*FLEN/8, x4, x1, x2)

inst_22551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600000000007ff; valaddr_reg:x3; val_offset:67653*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67653*0 + 3*279*FLEN/8, x4, x1, x2)

inst_22552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000000000fff; valaddr_reg:x3; val_offset:67656*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67656*0 + 3*280*FLEN/8, x4, x1, x2)

inst_22553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000000001fff; valaddr_reg:x3; val_offset:67659*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67659*0 + 3*281*FLEN/8, x4, x1, x2)

inst_22554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000000003fff; valaddr_reg:x3; val_offset:67662*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67662*0 + 3*282*FLEN/8, x4, x1, x2)

inst_22555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000000007fff; valaddr_reg:x3; val_offset:67665*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67665*0 + 3*283*FLEN/8, x4, x1, x2)

inst_22556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000000000ffff; valaddr_reg:x3; val_offset:67668*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67668*0 + 3*284*FLEN/8, x4, x1, x2)

inst_22557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000000001ffff; valaddr_reg:x3; val_offset:67671*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67671*0 + 3*285*FLEN/8, x4, x1, x2)

inst_22558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000000003ffff; valaddr_reg:x3; val_offset:67674*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67674*0 + 3*286*FLEN/8, x4, x1, x2)

inst_22559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000000007ffff; valaddr_reg:x3; val_offset:67677*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67677*0 + 3*287*FLEN/8, x4, x1, x2)

inst_22560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600000000fffff; valaddr_reg:x3; val_offset:67680*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67680*0 + 3*288*FLEN/8, x4, x1, x2)

inst_22561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600000001fffff; valaddr_reg:x3; val_offset:67683*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67683*0 + 3*289*FLEN/8, x4, x1, x2)

inst_22562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600000003fffff; valaddr_reg:x3; val_offset:67686*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67686*0 + 3*290*FLEN/8, x4, x1, x2)

inst_22563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600000007fffff; valaddr_reg:x3; val_offset:67689*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67689*0 + 3*291*FLEN/8, x4, x1, x2)

inst_22564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000000ffffff; valaddr_reg:x3; val_offset:67692*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67692*0 + 3*292*FLEN/8, x4, x1, x2)

inst_22565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000001ffffff; valaddr_reg:x3; val_offset:67695*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67695*0 + 3*293*FLEN/8, x4, x1, x2)

inst_22566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000003ffffff; valaddr_reg:x3; val_offset:67698*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67698*0 + 3*294*FLEN/8, x4, x1, x2)

inst_22567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000007ffffff; valaddr_reg:x3; val_offset:67701*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67701*0 + 3*295*FLEN/8, x4, x1, x2)

inst_22568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000000fffffff; valaddr_reg:x3; val_offset:67704*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67704*0 + 3*296*FLEN/8, x4, x1, x2)

inst_22569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000001fffffff; valaddr_reg:x3; val_offset:67707*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67707*0 + 3*297*FLEN/8, x4, x1, x2)

inst_22570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000003fffffff; valaddr_reg:x3; val_offset:67710*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67710*0 + 3*298*FLEN/8, x4, x1, x2)

inst_22571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000007fffffff; valaddr_reg:x3; val_offset:67713*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67713*0 + 3*299*FLEN/8, x4, x1, x2)

inst_22572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600000ffffffff; valaddr_reg:x3; val_offset:67716*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67716*0 + 3*300*FLEN/8, x4, x1, x2)

inst_22573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600001ffffffff; valaddr_reg:x3; val_offset:67719*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67719*0 + 3*301*FLEN/8, x4, x1, x2)

inst_22574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600003ffffffff; valaddr_reg:x3; val_offset:67722*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67722*0 + 3*302*FLEN/8, x4, x1, x2)

inst_22575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600007ffffffff; valaddr_reg:x3; val_offset:67725*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67725*0 + 3*303*FLEN/8, x4, x1, x2)

inst_22576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260000fffffffff; valaddr_reg:x3; val_offset:67728*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67728*0 + 3*304*FLEN/8, x4, x1, x2)

inst_22577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260001fffffffff; valaddr_reg:x3; val_offset:67731*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67731*0 + 3*305*FLEN/8, x4, x1, x2)

inst_22578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260003fffffffff; valaddr_reg:x3; val_offset:67734*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67734*0 + 3*306*FLEN/8, x4, x1, x2)

inst_22579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260007fffffffff; valaddr_reg:x3; val_offset:67737*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67737*0 + 3*307*FLEN/8, x4, x1, x2)

inst_22580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826000ffffffffff; valaddr_reg:x3; val_offset:67740*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67740*0 + 3*308*FLEN/8, x4, x1, x2)

inst_22581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826001ffffffffff; valaddr_reg:x3; val_offset:67743*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67743*0 + 3*309*FLEN/8, x4, x1, x2)

inst_22582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826003ffffffffff; valaddr_reg:x3; val_offset:67746*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67746*0 + 3*310*FLEN/8, x4, x1, x2)

inst_22583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826007ffffffffff; valaddr_reg:x3; val_offset:67749*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67749*0 + 3*311*FLEN/8, x4, x1, x2)

inst_22584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82600fffffffffff; valaddr_reg:x3; val_offset:67752*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67752*0 + 3*312*FLEN/8, x4, x1, x2)

inst_22585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82601fffffffffff; valaddr_reg:x3; val_offset:67755*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67755*0 + 3*313*FLEN/8, x4, x1, x2)

inst_22586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82603fffffffffff; valaddr_reg:x3; val_offset:67758*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67758*0 + 3*314*FLEN/8, x4, x1, x2)

inst_22587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x82607fffffffffff; valaddr_reg:x3; val_offset:67761*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67761*0 + 3*315*FLEN/8, x4, x1, x2)

inst_22588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8260ffffffffffff; valaddr_reg:x3; val_offset:67764*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67764*0 + 3*316*FLEN/8, x4, x1, x2)

inst_22589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8261ffffffffffff; valaddr_reg:x3; val_offset:67767*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67767*0 + 3*317*FLEN/8, x4, x1, x2)

inst_22590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8263ffffffffffff; valaddr_reg:x3; val_offset:67770*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67770*0 + 3*318*FLEN/8, x4, x1, x2)

inst_22591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8267ffffffffffff; valaddr_reg:x3; val_offset:67773*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67773*0 + 3*319*FLEN/8, x4, x1, x2)

inst_22592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x8268000000000000; valaddr_reg:x3; val_offset:67776*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67776*0 + 3*320*FLEN/8, x4, x1, x2)

inst_22593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826c000000000000; valaddr_reg:x3; val_offset:67779*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67779*0 + 3*321*FLEN/8, x4, x1, x2)

inst_22594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826e000000000000; valaddr_reg:x3; val_offset:67782*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67782*0 + 3*322*FLEN/8, x4, x1, x2)

inst_22595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826f000000000000; valaddr_reg:x3; val_offset:67785*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67785*0 + 3*323*FLEN/8, x4, x1, x2)

inst_22596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826f800000000000; valaddr_reg:x3; val_offset:67788*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67788*0 + 3*324*FLEN/8, x4, x1, x2)

inst_22597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fc00000000000; valaddr_reg:x3; val_offset:67791*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67791*0 + 3*325*FLEN/8, x4, x1, x2)

inst_22598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fe00000000000; valaddr_reg:x3; val_offset:67794*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67794*0 + 3*326*FLEN/8, x4, x1, x2)

inst_22599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ff00000000000; valaddr_reg:x3; val_offset:67797*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67797*0 + 3*327*FLEN/8, x4, x1, x2)

inst_22600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ff80000000000; valaddr_reg:x3; val_offset:67800*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67800*0 + 3*328*FLEN/8, x4, x1, x2)

inst_22601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffc0000000000; valaddr_reg:x3; val_offset:67803*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67803*0 + 3*329*FLEN/8, x4, x1, x2)

inst_22602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffe0000000000; valaddr_reg:x3; val_offset:67806*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67806*0 + 3*330*FLEN/8, x4, x1, x2)

inst_22603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fff0000000000; valaddr_reg:x3; val_offset:67809*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67809*0 + 3*331*FLEN/8, x4, x1, x2)

inst_22604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fff8000000000; valaddr_reg:x3; val_offset:67812*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67812*0 + 3*332*FLEN/8, x4, x1, x2)

inst_22605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffc000000000; valaddr_reg:x3; val_offset:67815*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67815*0 + 3*333*FLEN/8, x4, x1, x2)

inst_22606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffe000000000; valaddr_reg:x3; val_offset:67818*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67818*0 + 3*334*FLEN/8, x4, x1, x2)

inst_22607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffff000000000; valaddr_reg:x3; val_offset:67821*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67821*0 + 3*335*FLEN/8, x4, x1, x2)

inst_22608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffff800000000; valaddr_reg:x3; val_offset:67824*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67824*0 + 3*336*FLEN/8, x4, x1, x2)

inst_22609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffc00000000; valaddr_reg:x3; val_offset:67827*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67827*0 + 3*337*FLEN/8, x4, x1, x2)

inst_22610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffe00000000; valaddr_reg:x3; val_offset:67830*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67830*0 + 3*338*FLEN/8, x4, x1, x2)

inst_22611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffff00000000; valaddr_reg:x3; val_offset:67833*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67833*0 + 3*339*FLEN/8, x4, x1, x2)

inst_22612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffff80000000; valaddr_reg:x3; val_offset:67836*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67836*0 + 3*340*FLEN/8, x4, x1, x2)

inst_22613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffc0000000; valaddr_reg:x3; val_offset:67839*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67839*0 + 3*341*FLEN/8, x4, x1, x2)

inst_22614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffe0000000; valaddr_reg:x3; val_offset:67842*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67842*0 + 3*342*FLEN/8, x4, x1, x2)

inst_22615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffff0000000; valaddr_reg:x3; val_offset:67845*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67845*0 + 3*343*FLEN/8, x4, x1, x2)

inst_22616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffff8000000; valaddr_reg:x3; val_offset:67848*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67848*0 + 3*344*FLEN/8, x4, x1, x2)

inst_22617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffc000000; valaddr_reg:x3; val_offset:67851*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67851*0 + 3*345*FLEN/8, x4, x1, x2)

inst_22618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffe000000; valaddr_reg:x3; val_offset:67854*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67854*0 + 3*346*FLEN/8, x4, x1, x2)

inst_22619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffff000000; valaddr_reg:x3; val_offset:67857*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67857*0 + 3*347*FLEN/8, x4, x1, x2)

inst_22620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffff800000; valaddr_reg:x3; val_offset:67860*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67860*0 + 3*348*FLEN/8, x4, x1, x2)

inst_22621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffffc00000; valaddr_reg:x3; val_offset:67863*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67863*0 + 3*349*FLEN/8, x4, x1, x2)

inst_22622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffffe00000; valaddr_reg:x3; val_offset:67866*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67866*0 + 3*350*FLEN/8, x4, x1, x2)

inst_22623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffff00000; valaddr_reg:x3; val_offset:67869*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67869*0 + 3*351*FLEN/8, x4, x1, x2)

inst_22624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffff80000; valaddr_reg:x3; val_offset:67872*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67872*0 + 3*352*FLEN/8, x4, x1, x2)

inst_22625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffffc0000; valaddr_reg:x3; val_offset:67875*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67875*0 + 3*353*FLEN/8, x4, x1, x2)

inst_22626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffffe0000; valaddr_reg:x3; val_offset:67878*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67878*0 + 3*354*FLEN/8, x4, x1, x2)

inst_22627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffffff0000; valaddr_reg:x3; val_offset:67881*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67881*0 + 3*355*FLEN/8, x4, x1, x2)

inst_22628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffffff8000; valaddr_reg:x3; val_offset:67884*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67884*0 + 3*356*FLEN/8, x4, x1, x2)

inst_22629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffffffc000; valaddr_reg:x3; val_offset:67887*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67887*0 + 3*357*FLEN/8, x4, x1, x2)

inst_22630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffffffe000; valaddr_reg:x3; val_offset:67890*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67890*0 + 3*358*FLEN/8, x4, x1, x2)

inst_22631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffffff000; valaddr_reg:x3; val_offset:67893*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67893*0 + 3*359*FLEN/8, x4, x1, x2)

inst_22632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffffff800; valaddr_reg:x3; val_offset:67896*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67896*0 + 3*360*FLEN/8, x4, x1, x2)

inst_22633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffffffc00; valaddr_reg:x3; val_offset:67899*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67899*0 + 3*361*FLEN/8, x4, x1, x2)

inst_22634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffffffe00; valaddr_reg:x3; val_offset:67902*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67902*0 + 3*362*FLEN/8, x4, x1, x2)

inst_22635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffffffff00; valaddr_reg:x3; val_offset:67905*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67905*0 + 3*363*FLEN/8, x4, x1, x2)

inst_22636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffffffff80; valaddr_reg:x3; val_offset:67908*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67908*0 + 3*364*FLEN/8, x4, x1, x2)

inst_22637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffffffffc0; valaddr_reg:x3; val_offset:67911*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67911*0 + 3*365*FLEN/8, x4, x1, x2)

inst_22638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffffffffe0; valaddr_reg:x3; val_offset:67914*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67914*0 + 3*366*FLEN/8, x4, x1, x2)

inst_22639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffffffff0; valaddr_reg:x3; val_offset:67917*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67917*0 + 3*367*FLEN/8, x4, x1, x2)

inst_22640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffffffff8; valaddr_reg:x3; val_offset:67920*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67920*0 + 3*368*FLEN/8, x4, x1, x2)

inst_22641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffffffffc; valaddr_reg:x3; val_offset:67923*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67923*0 + 3*369*FLEN/8, x4, x1, x2)

inst_22642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826ffffffffffffe; valaddr_reg:x3; val_offset:67926*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67926*0 + 3*370*FLEN/8, x4, x1, x2)

inst_22643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9c06e7b6088c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89c06e7b6088c7; op2val:0x8000;
op3val:0x826fffffffffffff; valaddr_reg:x3; val_offset:67929*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67929*0 + 3*371*FLEN/8, x4, x1, x2)

inst_22644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:67932*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67932*0 + 3*372*FLEN/8, x4, x1, x2)

inst_22645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:67935*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67935*0 + 3*373*FLEN/8, x4, x1, x2)

inst_22646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:67938*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67938*0 + 3*374*FLEN/8, x4, x1, x2)

inst_22647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:67941*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67941*0 + 3*375*FLEN/8, x4, x1, x2)

inst_22648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:67944*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67944*0 + 3*376*FLEN/8, x4, x1, x2)

inst_22649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:67947*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67947*0 + 3*377*FLEN/8, x4, x1, x2)

inst_22650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:67950*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67950*0 + 3*378*FLEN/8, x4, x1, x2)

inst_22651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:67953*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67953*0 + 3*379*FLEN/8, x4, x1, x2)

inst_22652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:67956*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67956*0 + 3*380*FLEN/8, x4, x1, x2)

inst_22653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:67959*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67959*0 + 3*381*FLEN/8, x4, x1, x2)

inst_22654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:67962*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67962*0 + 3*382*FLEN/8, x4, x1, x2)

inst_22655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:67965*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67965*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_22656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:67968*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67968*0 + 3*384*FLEN/8, x4, x1, x2)

inst_22657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:67971*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67971*0 + 3*385*FLEN/8, x4, x1, x2)

inst_22658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:67974*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67974*0 + 3*386*FLEN/8, x4, x1, x2)

inst_22659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:67977*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67977*0 + 3*387*FLEN/8, x4, x1, x2)

inst_22660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:67980*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67980*0 + 3*388*FLEN/8, x4, x1, x2)

inst_22661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:67983*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67983*0 + 3*389*FLEN/8, x4, x1, x2)

inst_22662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:67986*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67986*0 + 3*390*FLEN/8, x4, x1, x2)

inst_22663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:67989*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67989*0 + 3*391*FLEN/8, x4, x1, x2)

inst_22664:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:67992*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67992*0 + 3*392*FLEN/8, x4, x1, x2)

inst_22665:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:67995*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67995*0 + 3*393*FLEN/8, x4, x1, x2)

inst_22666:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000000000000; valaddr_reg:x3; val_offset:67998*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 67998*0 + 3*394*FLEN/8, x4, x1, x2)

inst_22667:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000000000001; valaddr_reg:x3; val_offset:68001*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68001*0 + 3*395*FLEN/8, x4, x1, x2)

inst_22668:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000000000003; valaddr_reg:x3; val_offset:68004*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68004*0 + 3*396*FLEN/8, x4, x1, x2)

inst_22669:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000000000007; valaddr_reg:x3; val_offset:68007*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68007*0 + 3*397*FLEN/8, x4, x1, x2)

inst_22670:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000000000000f; valaddr_reg:x3; val_offset:68010*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68010*0 + 3*398*FLEN/8, x4, x1, x2)

inst_22671:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000000000001f; valaddr_reg:x3; val_offset:68013*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68013*0 + 3*399*FLEN/8, x4, x1, x2)

inst_22672:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000000000003f; valaddr_reg:x3; val_offset:68016*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68016*0 + 3*400*FLEN/8, x4, x1, x2)

inst_22673:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000000000007f; valaddr_reg:x3; val_offset:68019*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68019*0 + 3*401*FLEN/8, x4, x1, x2)

inst_22674:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00000000000ff; valaddr_reg:x3; val_offset:68022*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68022*0 + 3*402*FLEN/8, x4, x1, x2)

inst_22675:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00000000001ff; valaddr_reg:x3; val_offset:68025*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68025*0 + 3*403*FLEN/8, x4, x1, x2)

inst_22676:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00000000003ff; valaddr_reg:x3; val_offset:68028*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68028*0 + 3*404*FLEN/8, x4, x1, x2)

inst_22677:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00000000007ff; valaddr_reg:x3; val_offset:68031*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68031*0 + 3*405*FLEN/8, x4, x1, x2)

inst_22678:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000000000fff; valaddr_reg:x3; val_offset:68034*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68034*0 + 3*406*FLEN/8, x4, x1, x2)

inst_22679:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000000001fff; valaddr_reg:x3; val_offset:68037*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68037*0 + 3*407*FLEN/8, x4, x1, x2)

inst_22680:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000000003fff; valaddr_reg:x3; val_offset:68040*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68040*0 + 3*408*FLEN/8, x4, x1, x2)

inst_22681:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000000007fff; valaddr_reg:x3; val_offset:68043*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68043*0 + 3*409*FLEN/8, x4, x1, x2)

inst_22682:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000000000ffff; valaddr_reg:x3; val_offset:68046*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68046*0 + 3*410*FLEN/8, x4, x1, x2)

inst_22683:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000000001ffff; valaddr_reg:x3; val_offset:68049*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68049*0 + 3*411*FLEN/8, x4, x1, x2)

inst_22684:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000000003ffff; valaddr_reg:x3; val_offset:68052*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68052*0 + 3*412*FLEN/8, x4, x1, x2)

inst_22685:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000000007ffff; valaddr_reg:x3; val_offset:68055*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68055*0 + 3*413*FLEN/8, x4, x1, x2)

inst_22686:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00000000fffff; valaddr_reg:x3; val_offset:68058*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68058*0 + 3*414*FLEN/8, x4, x1, x2)

inst_22687:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00000001fffff; valaddr_reg:x3; val_offset:68061*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68061*0 + 3*415*FLEN/8, x4, x1, x2)

inst_22688:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00000003fffff; valaddr_reg:x3; val_offset:68064*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68064*0 + 3*416*FLEN/8, x4, x1, x2)

inst_22689:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00000007fffff; valaddr_reg:x3; val_offset:68067*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68067*0 + 3*417*FLEN/8, x4, x1, x2)

inst_22690:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000000ffffff; valaddr_reg:x3; val_offset:68070*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68070*0 + 3*418*FLEN/8, x4, x1, x2)

inst_22691:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000001ffffff; valaddr_reg:x3; val_offset:68073*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68073*0 + 3*419*FLEN/8, x4, x1, x2)

inst_22692:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000003ffffff; valaddr_reg:x3; val_offset:68076*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68076*0 + 3*420*FLEN/8, x4, x1, x2)

inst_22693:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000007ffffff; valaddr_reg:x3; val_offset:68079*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68079*0 + 3*421*FLEN/8, x4, x1, x2)

inst_22694:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000000fffffff; valaddr_reg:x3; val_offset:68082*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68082*0 + 3*422*FLEN/8, x4, x1, x2)

inst_22695:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000001fffffff; valaddr_reg:x3; val_offset:68085*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68085*0 + 3*423*FLEN/8, x4, x1, x2)

inst_22696:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000003fffffff; valaddr_reg:x3; val_offset:68088*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68088*0 + 3*424*FLEN/8, x4, x1, x2)

inst_22697:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000007fffffff; valaddr_reg:x3; val_offset:68091*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68091*0 + 3*425*FLEN/8, x4, x1, x2)

inst_22698:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00000ffffffff; valaddr_reg:x3; val_offset:68094*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68094*0 + 3*426*FLEN/8, x4, x1, x2)

inst_22699:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00001ffffffff; valaddr_reg:x3; val_offset:68097*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68097*0 + 3*427*FLEN/8, x4, x1, x2)

inst_22700:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00003ffffffff; valaddr_reg:x3; val_offset:68100*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68100*0 + 3*428*FLEN/8, x4, x1, x2)

inst_22701:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00007ffffffff; valaddr_reg:x3; val_offset:68103*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68103*0 + 3*429*FLEN/8, x4, x1, x2)

inst_22702:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0000fffffffff; valaddr_reg:x3; val_offset:68106*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68106*0 + 3*430*FLEN/8, x4, x1, x2)

inst_22703:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0001fffffffff; valaddr_reg:x3; val_offset:68109*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68109*0 + 3*431*FLEN/8, x4, x1, x2)

inst_22704:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0003fffffffff; valaddr_reg:x3; val_offset:68112*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68112*0 + 3*432*FLEN/8, x4, x1, x2)

inst_22705:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0007fffffffff; valaddr_reg:x3; val_offset:68115*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68115*0 + 3*433*FLEN/8, x4, x1, x2)

inst_22706:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b000ffffffffff; valaddr_reg:x3; val_offset:68118*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68118*0 + 3*434*FLEN/8, x4, x1, x2)

inst_22707:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b001ffffffffff; valaddr_reg:x3; val_offset:68121*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68121*0 + 3*435*FLEN/8, x4, x1, x2)

inst_22708:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b003ffffffffff; valaddr_reg:x3; val_offset:68124*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68124*0 + 3*436*FLEN/8, x4, x1, x2)

inst_22709:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b007ffffffffff; valaddr_reg:x3; val_offset:68127*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68127*0 + 3*437*FLEN/8, x4, x1, x2)

inst_22710:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b00fffffffffff; valaddr_reg:x3; val_offset:68130*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68130*0 + 3*438*FLEN/8, x4, x1, x2)

inst_22711:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b01fffffffffff; valaddr_reg:x3; val_offset:68133*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68133*0 + 3*439*FLEN/8, x4, x1, x2)

inst_22712:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b03fffffffffff; valaddr_reg:x3; val_offset:68136*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68136*0 + 3*440*FLEN/8, x4, x1, x2)

inst_22713:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b07fffffffffff; valaddr_reg:x3; val_offset:68139*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68139*0 + 3*441*FLEN/8, x4, x1, x2)

inst_22714:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b0ffffffffffff; valaddr_reg:x3; val_offset:68142*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68142*0 + 3*442*FLEN/8, x4, x1, x2)

inst_22715:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b1ffffffffffff; valaddr_reg:x3; val_offset:68145*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68145*0 + 3*443*FLEN/8, x4, x1, x2)

inst_22716:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b3ffffffffffff; valaddr_reg:x3; val_offset:68148*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68148*0 + 3*444*FLEN/8, x4, x1, x2)

inst_22717:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b7ffffffffffff; valaddr_reg:x3; val_offset:68151*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68151*0 + 3*445*FLEN/8, x4, x1, x2)

inst_22718:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9b8000000000000; valaddr_reg:x3; val_offset:68154*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68154*0 + 3*446*FLEN/8, x4, x1, x2)

inst_22719:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bc000000000000; valaddr_reg:x3; val_offset:68157*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68157*0 + 3*447*FLEN/8, x4, x1, x2)

inst_22720:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9be000000000000; valaddr_reg:x3; val_offset:68160*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68160*0 + 3*448*FLEN/8, x4, x1, x2)

inst_22721:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bf000000000000; valaddr_reg:x3; val_offset:68163*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68163*0 + 3*449*FLEN/8, x4, x1, x2)

inst_22722:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bf800000000000; valaddr_reg:x3; val_offset:68166*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68166*0 + 3*450*FLEN/8, x4, x1, x2)

inst_22723:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfc00000000000; valaddr_reg:x3; val_offset:68169*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68169*0 + 3*451*FLEN/8, x4, x1, x2)

inst_22724:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfe00000000000; valaddr_reg:x3; val_offset:68172*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68172*0 + 3*452*FLEN/8, x4, x1, x2)

inst_22725:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bff00000000000; valaddr_reg:x3; val_offset:68175*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68175*0 + 3*453*FLEN/8, x4, x1, x2)

inst_22726:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bff80000000000; valaddr_reg:x3; val_offset:68178*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68178*0 + 3*454*FLEN/8, x4, x1, x2)

inst_22727:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffc0000000000; valaddr_reg:x3; val_offset:68181*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68181*0 + 3*455*FLEN/8, x4, x1, x2)

inst_22728:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffe0000000000; valaddr_reg:x3; val_offset:68184*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68184*0 + 3*456*FLEN/8, x4, x1, x2)

inst_22729:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfff0000000000; valaddr_reg:x3; val_offset:68187*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68187*0 + 3*457*FLEN/8, x4, x1, x2)

inst_22730:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfff8000000000; valaddr_reg:x3; val_offset:68190*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68190*0 + 3*458*FLEN/8, x4, x1, x2)

inst_22731:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffc000000000; valaddr_reg:x3; val_offset:68193*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68193*0 + 3*459*FLEN/8, x4, x1, x2)

inst_22732:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffe000000000; valaddr_reg:x3; val_offset:68196*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68196*0 + 3*460*FLEN/8, x4, x1, x2)

inst_22733:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffff000000000; valaddr_reg:x3; val_offset:68199*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68199*0 + 3*461*FLEN/8, x4, x1, x2)

inst_22734:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffff800000000; valaddr_reg:x3; val_offset:68202*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68202*0 + 3*462*FLEN/8, x4, x1, x2)

inst_22735:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffc00000000; valaddr_reg:x3; val_offset:68205*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68205*0 + 3*463*FLEN/8, x4, x1, x2)

inst_22736:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffe00000000; valaddr_reg:x3; val_offset:68208*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68208*0 + 3*464*FLEN/8, x4, x1, x2)

inst_22737:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffff00000000; valaddr_reg:x3; val_offset:68211*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68211*0 + 3*465*FLEN/8, x4, x1, x2)

inst_22738:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffff80000000; valaddr_reg:x3; val_offset:68214*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68214*0 + 3*466*FLEN/8, x4, x1, x2)

inst_22739:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffc0000000; valaddr_reg:x3; val_offset:68217*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68217*0 + 3*467*FLEN/8, x4, x1, x2)

inst_22740:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffe0000000; valaddr_reg:x3; val_offset:68220*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68220*0 + 3*468*FLEN/8, x4, x1, x2)

inst_22741:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffff0000000; valaddr_reg:x3; val_offset:68223*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68223*0 + 3*469*FLEN/8, x4, x1, x2)

inst_22742:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffff8000000; valaddr_reg:x3; val_offset:68226*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68226*0 + 3*470*FLEN/8, x4, x1, x2)

inst_22743:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffc000000; valaddr_reg:x3; val_offset:68229*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68229*0 + 3*471*FLEN/8, x4, x1, x2)

inst_22744:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffe000000; valaddr_reg:x3; val_offset:68232*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68232*0 + 3*472*FLEN/8, x4, x1, x2)

inst_22745:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffff000000; valaddr_reg:x3; val_offset:68235*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68235*0 + 3*473*FLEN/8, x4, x1, x2)

inst_22746:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffff800000; valaddr_reg:x3; val_offset:68238*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68238*0 + 3*474*FLEN/8, x4, x1, x2)

inst_22747:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffffc00000; valaddr_reg:x3; val_offset:68241*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68241*0 + 3*475*FLEN/8, x4, x1, x2)

inst_22748:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffffe00000; valaddr_reg:x3; val_offset:68244*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68244*0 + 3*476*FLEN/8, x4, x1, x2)

inst_22749:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffff00000; valaddr_reg:x3; val_offset:68247*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68247*0 + 3*477*FLEN/8, x4, x1, x2)

inst_22750:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffff80000; valaddr_reg:x3; val_offset:68250*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68250*0 + 3*478*FLEN/8, x4, x1, x2)

inst_22751:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffffc0000; valaddr_reg:x3; val_offset:68253*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68253*0 + 3*479*FLEN/8, x4, x1, x2)

inst_22752:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffffe0000; valaddr_reg:x3; val_offset:68256*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68256*0 + 3*480*FLEN/8, x4, x1, x2)

inst_22753:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffffff0000; valaddr_reg:x3; val_offset:68259*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68259*0 + 3*481*FLEN/8, x4, x1, x2)

inst_22754:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffffff8000; valaddr_reg:x3; val_offset:68262*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68262*0 + 3*482*FLEN/8, x4, x1, x2)

inst_22755:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffffffc000; valaddr_reg:x3; val_offset:68265*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68265*0 + 3*483*FLEN/8, x4, x1, x2)

inst_22756:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffffffe000; valaddr_reg:x3; val_offset:68268*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68268*0 + 3*484*FLEN/8, x4, x1, x2)

inst_22757:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffffff000; valaddr_reg:x3; val_offset:68271*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68271*0 + 3*485*FLEN/8, x4, x1, x2)

inst_22758:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffffff800; valaddr_reg:x3; val_offset:68274*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68274*0 + 3*486*FLEN/8, x4, x1, x2)

inst_22759:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffffffc00; valaddr_reg:x3; val_offset:68277*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68277*0 + 3*487*FLEN/8, x4, x1, x2)

inst_22760:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffffffe00; valaddr_reg:x3; val_offset:68280*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68280*0 + 3*488*FLEN/8, x4, x1, x2)

inst_22761:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffffffff00; valaddr_reg:x3; val_offset:68283*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68283*0 + 3*489*FLEN/8, x4, x1, x2)

inst_22762:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffffffff80; valaddr_reg:x3; val_offset:68286*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68286*0 + 3*490*FLEN/8, x4, x1, x2)

inst_22763:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffffffffc0; valaddr_reg:x3; val_offset:68289*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68289*0 + 3*491*FLEN/8, x4, x1, x2)

inst_22764:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffffffffe0; valaddr_reg:x3; val_offset:68292*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68292*0 + 3*492*FLEN/8, x4, x1, x2)

inst_22765:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffffffff0; valaddr_reg:x3; val_offset:68295*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68295*0 + 3*493*FLEN/8, x4, x1, x2)

inst_22766:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffffffff8; valaddr_reg:x3; val_offset:68298*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68298*0 + 3*494*FLEN/8, x4, x1, x2)

inst_22767:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffffffffc; valaddr_reg:x3; val_offset:68301*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68301*0 + 3*495*FLEN/8, x4, x1, x2)

inst_22768:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bffffffffffffe; valaddr_reg:x3; val_offset:68304*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68304*0 + 3*496*FLEN/8, x4, x1, x2)

inst_22769:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9cebc74053b17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x39b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89cebc74053b17; op2val:0x8000;
op3val:0xb9bfffffffffffff; valaddr_reg:x3; val_offset:68307*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68307*0 + 3*497*FLEN/8, x4, x1, x2)

inst_22770:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000000000000; valaddr_reg:x3; val_offset:68310*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68310*0 + 3*498*FLEN/8, x4, x1, x2)

inst_22771:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000000000001; valaddr_reg:x3; val_offset:68313*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68313*0 + 3*499*FLEN/8, x4, x1, x2)

inst_22772:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000000000003; valaddr_reg:x3; val_offset:68316*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68316*0 + 3*500*FLEN/8, x4, x1, x2)

inst_22773:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000000000007; valaddr_reg:x3; val_offset:68319*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68319*0 + 3*501*FLEN/8, x4, x1, x2)

inst_22774:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000000000000f; valaddr_reg:x3; val_offset:68322*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68322*0 + 3*502*FLEN/8, x4, x1, x2)

inst_22775:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000000000001f; valaddr_reg:x3; val_offset:68325*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68325*0 + 3*503*FLEN/8, x4, x1, x2)

inst_22776:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000000000003f; valaddr_reg:x3; val_offset:68328*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68328*0 + 3*504*FLEN/8, x4, x1, x2)

inst_22777:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000000000007f; valaddr_reg:x3; val_offset:68331*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68331*0 + 3*505*FLEN/8, x4, x1, x2)

inst_22778:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00000000000ff; valaddr_reg:x3; val_offset:68334*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68334*0 + 3*506*FLEN/8, x4, x1, x2)

inst_22779:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00000000001ff; valaddr_reg:x3; val_offset:68337*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68337*0 + 3*507*FLEN/8, x4, x1, x2)

inst_22780:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00000000003ff; valaddr_reg:x3; val_offset:68340*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68340*0 + 3*508*FLEN/8, x4, x1, x2)

inst_22781:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00000000007ff; valaddr_reg:x3; val_offset:68343*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68343*0 + 3*509*FLEN/8, x4, x1, x2)

inst_22782:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000000000fff; valaddr_reg:x3; val_offset:68346*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68346*0 + 3*510*FLEN/8, x4, x1, x2)

inst_22783:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000000001fff; valaddr_reg:x3; val_offset:68349*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68349*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_22784:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000000003fff; valaddr_reg:x3; val_offset:68352*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68352*0 + 3*512*FLEN/8, x4, x1, x2)

inst_22785:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000000007fff; valaddr_reg:x3; val_offset:68355*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68355*0 + 3*513*FLEN/8, x4, x1, x2)

inst_22786:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000000000ffff; valaddr_reg:x3; val_offset:68358*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68358*0 + 3*514*FLEN/8, x4, x1, x2)

inst_22787:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000000001ffff; valaddr_reg:x3; val_offset:68361*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68361*0 + 3*515*FLEN/8, x4, x1, x2)

inst_22788:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000000003ffff; valaddr_reg:x3; val_offset:68364*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68364*0 + 3*516*FLEN/8, x4, x1, x2)

inst_22789:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000000007ffff; valaddr_reg:x3; val_offset:68367*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68367*0 + 3*517*FLEN/8, x4, x1, x2)

inst_22790:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00000000fffff; valaddr_reg:x3; val_offset:68370*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68370*0 + 3*518*FLEN/8, x4, x1, x2)

inst_22791:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00000001fffff; valaddr_reg:x3; val_offset:68373*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68373*0 + 3*519*FLEN/8, x4, x1, x2)

inst_22792:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00000003fffff; valaddr_reg:x3; val_offset:68376*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68376*0 + 3*520*FLEN/8, x4, x1, x2)

inst_22793:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00000007fffff; valaddr_reg:x3; val_offset:68379*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68379*0 + 3*521*FLEN/8, x4, x1, x2)

inst_22794:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000000ffffff; valaddr_reg:x3; val_offset:68382*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68382*0 + 3*522*FLEN/8, x4, x1, x2)

inst_22795:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000001ffffff; valaddr_reg:x3; val_offset:68385*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68385*0 + 3*523*FLEN/8, x4, x1, x2)

inst_22796:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000003ffffff; valaddr_reg:x3; val_offset:68388*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68388*0 + 3*524*FLEN/8, x4, x1, x2)

inst_22797:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000007ffffff; valaddr_reg:x3; val_offset:68391*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68391*0 + 3*525*FLEN/8, x4, x1, x2)

inst_22798:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000000fffffff; valaddr_reg:x3; val_offset:68394*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68394*0 + 3*526*FLEN/8, x4, x1, x2)

inst_22799:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000001fffffff; valaddr_reg:x3; val_offset:68397*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68397*0 + 3*527*FLEN/8, x4, x1, x2)

inst_22800:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000003fffffff; valaddr_reg:x3; val_offset:68400*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68400*0 + 3*528*FLEN/8, x4, x1, x2)

inst_22801:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000007fffffff; valaddr_reg:x3; val_offset:68403*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68403*0 + 3*529*FLEN/8, x4, x1, x2)

inst_22802:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00000ffffffff; valaddr_reg:x3; val_offset:68406*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68406*0 + 3*530*FLEN/8, x4, x1, x2)

inst_22803:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00001ffffffff; valaddr_reg:x3; val_offset:68409*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68409*0 + 3*531*FLEN/8, x4, x1, x2)

inst_22804:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00003ffffffff; valaddr_reg:x3; val_offset:68412*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68412*0 + 3*532*FLEN/8, x4, x1, x2)

inst_22805:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00007ffffffff; valaddr_reg:x3; val_offset:68415*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68415*0 + 3*533*FLEN/8, x4, x1, x2)

inst_22806:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0000fffffffff; valaddr_reg:x3; val_offset:68418*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68418*0 + 3*534*FLEN/8, x4, x1, x2)

inst_22807:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0001fffffffff; valaddr_reg:x3; val_offset:68421*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68421*0 + 3*535*FLEN/8, x4, x1, x2)

inst_22808:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0003fffffffff; valaddr_reg:x3; val_offset:68424*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68424*0 + 3*536*FLEN/8, x4, x1, x2)

inst_22809:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0007fffffffff; valaddr_reg:x3; val_offset:68427*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68427*0 + 3*537*FLEN/8, x4, x1, x2)

inst_22810:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb000ffffffffff; valaddr_reg:x3; val_offset:68430*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68430*0 + 3*538*FLEN/8, x4, x1, x2)

inst_22811:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb001ffffffffff; valaddr_reg:x3; val_offset:68433*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68433*0 + 3*539*FLEN/8, x4, x1, x2)

inst_22812:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb003ffffffffff; valaddr_reg:x3; val_offset:68436*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68436*0 + 3*540*FLEN/8, x4, x1, x2)

inst_22813:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb007ffffffffff; valaddr_reg:x3; val_offset:68439*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68439*0 + 3*541*FLEN/8, x4, x1, x2)

inst_22814:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb00fffffffffff; valaddr_reg:x3; val_offset:68442*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68442*0 + 3*542*FLEN/8, x4, x1, x2)

inst_22815:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb01fffffffffff; valaddr_reg:x3; val_offset:68445*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68445*0 + 3*543*FLEN/8, x4, x1, x2)

inst_22816:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb03fffffffffff; valaddr_reg:x3; val_offset:68448*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68448*0 + 3*544*FLEN/8, x4, x1, x2)

inst_22817:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb07fffffffffff; valaddr_reg:x3; val_offset:68451*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68451*0 + 3*545*FLEN/8, x4, x1, x2)

inst_22818:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb0ffffffffffff; valaddr_reg:x3; val_offset:68454*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68454*0 + 3*546*FLEN/8, x4, x1, x2)

inst_22819:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb1ffffffffffff; valaddr_reg:x3; val_offset:68457*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68457*0 + 3*547*FLEN/8, x4, x1, x2)

inst_22820:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb3ffffffffffff; valaddr_reg:x3; val_offset:68460*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68460*0 + 3*548*FLEN/8, x4, x1, x2)

inst_22821:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb7ffffffffffff; valaddr_reg:x3; val_offset:68463*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68463*0 + 3*549*FLEN/8, x4, x1, x2)

inst_22822:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcb8000000000000; valaddr_reg:x3; val_offset:68466*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68466*0 + 3*550*FLEN/8, x4, x1, x2)

inst_22823:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbc000000000000; valaddr_reg:x3; val_offset:68469*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68469*0 + 3*551*FLEN/8, x4, x1, x2)

inst_22824:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbe000000000000; valaddr_reg:x3; val_offset:68472*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68472*0 + 3*552*FLEN/8, x4, x1, x2)

inst_22825:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbf000000000000; valaddr_reg:x3; val_offset:68475*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68475*0 + 3*553*FLEN/8, x4, x1, x2)

inst_22826:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbf800000000000; valaddr_reg:x3; val_offset:68478*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68478*0 + 3*554*FLEN/8, x4, x1, x2)

inst_22827:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfc00000000000; valaddr_reg:x3; val_offset:68481*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68481*0 + 3*555*FLEN/8, x4, x1, x2)

inst_22828:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfe00000000000; valaddr_reg:x3; val_offset:68484*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68484*0 + 3*556*FLEN/8, x4, x1, x2)

inst_22829:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbff00000000000; valaddr_reg:x3; val_offset:68487*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68487*0 + 3*557*FLEN/8, x4, x1, x2)

inst_22830:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbff80000000000; valaddr_reg:x3; val_offset:68490*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68490*0 + 3*558*FLEN/8, x4, x1, x2)

inst_22831:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffc0000000000; valaddr_reg:x3; val_offset:68493*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68493*0 + 3*559*FLEN/8, x4, x1, x2)

inst_22832:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffe0000000000; valaddr_reg:x3; val_offset:68496*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68496*0 + 3*560*FLEN/8, x4, x1, x2)

inst_22833:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfff0000000000; valaddr_reg:x3; val_offset:68499*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68499*0 + 3*561*FLEN/8, x4, x1, x2)

inst_22834:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfff8000000000; valaddr_reg:x3; val_offset:68502*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68502*0 + 3*562*FLEN/8, x4, x1, x2)

inst_22835:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffc000000000; valaddr_reg:x3; val_offset:68505*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68505*0 + 3*563*FLEN/8, x4, x1, x2)

inst_22836:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffe000000000; valaddr_reg:x3; val_offset:68508*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68508*0 + 3*564*FLEN/8, x4, x1, x2)

inst_22837:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffff000000000; valaddr_reg:x3; val_offset:68511*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68511*0 + 3*565*FLEN/8, x4, x1, x2)

inst_22838:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffff800000000; valaddr_reg:x3; val_offset:68514*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68514*0 + 3*566*FLEN/8, x4, x1, x2)

inst_22839:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffc00000000; valaddr_reg:x3; val_offset:68517*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68517*0 + 3*567*FLEN/8, x4, x1, x2)

inst_22840:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffe00000000; valaddr_reg:x3; val_offset:68520*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68520*0 + 3*568*FLEN/8, x4, x1, x2)

inst_22841:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffff00000000; valaddr_reg:x3; val_offset:68523*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68523*0 + 3*569*FLEN/8, x4, x1, x2)

inst_22842:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffff80000000; valaddr_reg:x3; val_offset:68526*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68526*0 + 3*570*FLEN/8, x4, x1, x2)

inst_22843:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffc0000000; valaddr_reg:x3; val_offset:68529*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68529*0 + 3*571*FLEN/8, x4, x1, x2)

inst_22844:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffe0000000; valaddr_reg:x3; val_offset:68532*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68532*0 + 3*572*FLEN/8, x4, x1, x2)

inst_22845:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffff0000000; valaddr_reg:x3; val_offset:68535*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68535*0 + 3*573*FLEN/8, x4, x1, x2)

inst_22846:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffff8000000; valaddr_reg:x3; val_offset:68538*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68538*0 + 3*574*FLEN/8, x4, x1, x2)

inst_22847:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffc000000; valaddr_reg:x3; val_offset:68541*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68541*0 + 3*575*FLEN/8, x4, x1, x2)

inst_22848:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffe000000; valaddr_reg:x3; val_offset:68544*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68544*0 + 3*576*FLEN/8, x4, x1, x2)

inst_22849:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffff000000; valaddr_reg:x3; val_offset:68547*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68547*0 + 3*577*FLEN/8, x4, x1, x2)

inst_22850:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffff800000; valaddr_reg:x3; val_offset:68550*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68550*0 + 3*578*FLEN/8, x4, x1, x2)

inst_22851:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffffc00000; valaddr_reg:x3; val_offset:68553*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68553*0 + 3*579*FLEN/8, x4, x1, x2)

inst_22852:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffffe00000; valaddr_reg:x3; val_offset:68556*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68556*0 + 3*580*FLEN/8, x4, x1, x2)

inst_22853:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffff00000; valaddr_reg:x3; val_offset:68559*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68559*0 + 3*581*FLEN/8, x4, x1, x2)

inst_22854:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffff80000; valaddr_reg:x3; val_offset:68562*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68562*0 + 3*582*FLEN/8, x4, x1, x2)

inst_22855:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffffc0000; valaddr_reg:x3; val_offset:68565*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68565*0 + 3*583*FLEN/8, x4, x1, x2)

inst_22856:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffffe0000; valaddr_reg:x3; val_offset:68568*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68568*0 + 3*584*FLEN/8, x4, x1, x2)

inst_22857:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffffff0000; valaddr_reg:x3; val_offset:68571*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68571*0 + 3*585*FLEN/8, x4, x1, x2)

inst_22858:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffffff8000; valaddr_reg:x3; val_offset:68574*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68574*0 + 3*586*FLEN/8, x4, x1, x2)

inst_22859:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffffffc000; valaddr_reg:x3; val_offset:68577*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68577*0 + 3*587*FLEN/8, x4, x1, x2)

inst_22860:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffffffe000; valaddr_reg:x3; val_offset:68580*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68580*0 + 3*588*FLEN/8, x4, x1, x2)

inst_22861:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffffff000; valaddr_reg:x3; val_offset:68583*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68583*0 + 3*589*FLEN/8, x4, x1, x2)

inst_22862:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffffff800; valaddr_reg:x3; val_offset:68586*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68586*0 + 3*590*FLEN/8, x4, x1, x2)

inst_22863:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffffffc00; valaddr_reg:x3; val_offset:68589*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68589*0 + 3*591*FLEN/8, x4, x1, x2)

inst_22864:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffffffe00; valaddr_reg:x3; val_offset:68592*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68592*0 + 3*592*FLEN/8, x4, x1, x2)

inst_22865:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffffffff00; valaddr_reg:x3; val_offset:68595*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68595*0 + 3*593*FLEN/8, x4, x1, x2)

inst_22866:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffffffff80; valaddr_reg:x3; val_offset:68598*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68598*0 + 3*594*FLEN/8, x4, x1, x2)

inst_22867:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffffffffc0; valaddr_reg:x3; val_offset:68601*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68601*0 + 3*595*FLEN/8, x4, x1, x2)

inst_22868:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffffffffe0; valaddr_reg:x3; val_offset:68604*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68604*0 + 3*596*FLEN/8, x4, x1, x2)

inst_22869:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffffffff0; valaddr_reg:x3; val_offset:68607*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68607*0 + 3*597*FLEN/8, x4, x1, x2)

inst_22870:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffffffff8; valaddr_reg:x3; val_offset:68610*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68610*0 + 3*598*FLEN/8, x4, x1, x2)

inst_22871:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffffffffc; valaddr_reg:x3; val_offset:68613*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68613*0 + 3*599*FLEN/8, x4, x1, x2)

inst_22872:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbffffffffffffe; valaddr_reg:x3; val_offset:68616*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68616*0 + 3*600*FLEN/8, x4, x1, x2)

inst_22873:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbcbfffffffffffff; valaddr_reg:x3; val_offset:68619*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68619*0 + 3*601*FLEN/8, x4, x1, x2)

inst_22874:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:68622*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68622*0 + 3*602*FLEN/8, x4, x1, x2)

inst_22875:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:68625*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68625*0 + 3*603*FLEN/8, x4, x1, x2)

inst_22876:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:68628*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68628*0 + 3*604*FLEN/8, x4, x1, x2)

inst_22877:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:68631*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68631*0 + 3*605*FLEN/8, x4, x1, x2)

inst_22878:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:68634*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68634*0 + 3*606*FLEN/8, x4, x1, x2)

inst_22879:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:68637*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68637*0 + 3*607*FLEN/8, x4, x1, x2)

inst_22880:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:68640*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68640*0 + 3*608*FLEN/8, x4, x1, x2)

inst_22881:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:68643*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68643*0 + 3*609*FLEN/8, x4, x1, x2)

inst_22882:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:68646*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68646*0 + 3*610*FLEN/8, x4, x1, x2)

inst_22883:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:68649*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68649*0 + 3*611*FLEN/8, x4, x1, x2)

inst_22884:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:68652*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68652*0 + 3*612*FLEN/8, x4, x1, x2)

inst_22885:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:68655*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68655*0 + 3*613*FLEN/8, x4, x1, x2)

inst_22886:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:68658*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68658*0 + 3*614*FLEN/8, x4, x1, x2)

inst_22887:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:68661*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68661*0 + 3*615*FLEN/8, x4, x1, x2)

inst_22888:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:68664*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68664*0 + 3*616*FLEN/8, x4, x1, x2)

inst_22889:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:68667*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68667*0 + 3*617*FLEN/8, x4, x1, x2)

inst_22890:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:68670*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68670*0 + 3*618*FLEN/8, x4, x1, x2)

inst_22891:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:68673*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68673*0 + 3*619*FLEN/8, x4, x1, x2)

inst_22892:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:68676*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68676*0 + 3*620*FLEN/8, x4, x1, x2)

inst_22893:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:68679*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68679*0 + 3*621*FLEN/8, x4, x1, x2)

inst_22894:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:68682*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68682*0 + 3*622*FLEN/8, x4, x1, x2)

inst_22895:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x9dad9e8af588f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x3cd8669ba7527 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f89dad9e8af588f; op2val:0x9fe3cd8669ba7527;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:68685*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68685*0 + 3*623*FLEN/8, x4, x1, x2)

inst_22896:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:68688*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68688*0 + 3*624*FLEN/8, x4, x1, x2)

inst_22897:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:68691*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68691*0 + 3*625*FLEN/8, x4, x1, x2)

inst_22898:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:68694*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68694*0 + 3*626*FLEN/8, x4, x1, x2)

inst_22899:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:68697*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68697*0 + 3*627*FLEN/8, x4, x1, x2)

inst_22900:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:68700*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68700*0 + 3*628*FLEN/8, x4, x1, x2)

inst_22901:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:68703*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68703*0 + 3*629*FLEN/8, x4, x1, x2)

inst_22902:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:68706*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68706*0 + 3*630*FLEN/8, x4, x1, x2)

inst_22903:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:68709*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68709*0 + 3*631*FLEN/8, x4, x1, x2)

inst_22904:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:68712*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68712*0 + 3*632*FLEN/8, x4, x1, x2)

inst_22905:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:68715*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68715*0 + 3*633*FLEN/8, x4, x1, x2)

inst_22906:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:68718*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68718*0 + 3*634*FLEN/8, x4, x1, x2)

inst_22907:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:68721*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68721*0 + 3*635*FLEN/8, x4, x1, x2)

inst_22908:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:68724*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68724*0 + 3*636*FLEN/8, x4, x1, x2)

inst_22909:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:68727*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68727*0 + 3*637*FLEN/8, x4, x1, x2)

inst_22910:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:68730*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68730*0 + 3*638*FLEN/8, x4, x1, x2)

inst_22911:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:68733*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68733*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_22912:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:68736*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68736*0 + 3*640*FLEN/8, x4, x1, x2)

inst_22913:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:68739*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68739*0 + 3*641*FLEN/8, x4, x1, x2)

inst_22914:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:68742*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68742*0 + 3*642*FLEN/8, x4, x1, x2)

inst_22915:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:68745*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68745*0 + 3*643*FLEN/8, x4, x1, x2)

inst_22916:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:68748*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68748*0 + 3*644*FLEN/8, x4, x1, x2)

inst_22917:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:68751*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68751*0 + 3*645*FLEN/8, x4, x1, x2)

inst_22918:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000000000000; valaddr_reg:x3; val_offset:68754*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68754*0 + 3*646*FLEN/8, x4, x1, x2)

inst_22919:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000000000001; valaddr_reg:x3; val_offset:68757*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68757*0 + 3*647*FLEN/8, x4, x1, x2)

inst_22920:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000000000003; valaddr_reg:x3; val_offset:68760*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68760*0 + 3*648*FLEN/8, x4, x1, x2)

inst_22921:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000000000007; valaddr_reg:x3; val_offset:68763*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68763*0 + 3*649*FLEN/8, x4, x1, x2)

inst_22922:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000000000000f; valaddr_reg:x3; val_offset:68766*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68766*0 + 3*650*FLEN/8, x4, x1, x2)

inst_22923:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000000000001f; valaddr_reg:x3; val_offset:68769*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68769*0 + 3*651*FLEN/8, x4, x1, x2)

inst_22924:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000000000003f; valaddr_reg:x3; val_offset:68772*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68772*0 + 3*652*FLEN/8, x4, x1, x2)

inst_22925:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000000000007f; valaddr_reg:x3; val_offset:68775*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68775*0 + 3*653*FLEN/8, x4, x1, x2)

inst_22926:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00000000000ff; valaddr_reg:x3; val_offset:68778*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68778*0 + 3*654*FLEN/8, x4, x1, x2)

inst_22927:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00000000001ff; valaddr_reg:x3; val_offset:68781*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68781*0 + 3*655*FLEN/8, x4, x1, x2)

inst_22928:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00000000003ff; valaddr_reg:x3; val_offset:68784*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68784*0 + 3*656*FLEN/8, x4, x1, x2)

inst_22929:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00000000007ff; valaddr_reg:x3; val_offset:68787*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68787*0 + 3*657*FLEN/8, x4, x1, x2)

inst_22930:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000000000fff; valaddr_reg:x3; val_offset:68790*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68790*0 + 3*658*FLEN/8, x4, x1, x2)

inst_22931:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000000001fff; valaddr_reg:x3; val_offset:68793*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68793*0 + 3*659*FLEN/8, x4, x1, x2)

inst_22932:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000000003fff; valaddr_reg:x3; val_offset:68796*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68796*0 + 3*660*FLEN/8, x4, x1, x2)

inst_22933:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000000007fff; valaddr_reg:x3; val_offset:68799*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68799*0 + 3*661*FLEN/8, x4, x1, x2)

inst_22934:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000000000ffff; valaddr_reg:x3; val_offset:68802*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68802*0 + 3*662*FLEN/8, x4, x1, x2)

inst_22935:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000000001ffff; valaddr_reg:x3; val_offset:68805*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68805*0 + 3*663*FLEN/8, x4, x1, x2)

inst_22936:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000000003ffff; valaddr_reg:x3; val_offset:68808*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68808*0 + 3*664*FLEN/8, x4, x1, x2)

inst_22937:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000000007ffff; valaddr_reg:x3; val_offset:68811*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68811*0 + 3*665*FLEN/8, x4, x1, x2)

inst_22938:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00000000fffff; valaddr_reg:x3; val_offset:68814*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68814*0 + 3*666*FLEN/8, x4, x1, x2)

inst_22939:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00000001fffff; valaddr_reg:x3; val_offset:68817*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68817*0 + 3*667*FLEN/8, x4, x1, x2)

inst_22940:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00000003fffff; valaddr_reg:x3; val_offset:68820*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68820*0 + 3*668*FLEN/8, x4, x1, x2)

inst_22941:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00000007fffff; valaddr_reg:x3; val_offset:68823*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68823*0 + 3*669*FLEN/8, x4, x1, x2)

inst_22942:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000000ffffff; valaddr_reg:x3; val_offset:68826*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68826*0 + 3*670*FLEN/8, x4, x1, x2)

inst_22943:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000001ffffff; valaddr_reg:x3; val_offset:68829*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68829*0 + 3*671*FLEN/8, x4, x1, x2)

inst_22944:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000003ffffff; valaddr_reg:x3; val_offset:68832*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68832*0 + 3*672*FLEN/8, x4, x1, x2)

inst_22945:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000007ffffff; valaddr_reg:x3; val_offset:68835*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68835*0 + 3*673*FLEN/8, x4, x1, x2)

inst_22946:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000000fffffff; valaddr_reg:x3; val_offset:68838*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68838*0 + 3*674*FLEN/8, x4, x1, x2)

inst_22947:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000001fffffff; valaddr_reg:x3; val_offset:68841*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68841*0 + 3*675*FLEN/8, x4, x1, x2)

inst_22948:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000003fffffff; valaddr_reg:x3; val_offset:68844*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68844*0 + 3*676*FLEN/8, x4, x1, x2)

inst_22949:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000007fffffff; valaddr_reg:x3; val_offset:68847*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68847*0 + 3*677*FLEN/8, x4, x1, x2)

inst_22950:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00000ffffffff; valaddr_reg:x3; val_offset:68850*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68850*0 + 3*678*FLEN/8, x4, x1, x2)

inst_22951:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00001ffffffff; valaddr_reg:x3; val_offset:68853*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68853*0 + 3*679*FLEN/8, x4, x1, x2)

inst_22952:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00003ffffffff; valaddr_reg:x3; val_offset:68856*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68856*0 + 3*680*FLEN/8, x4, x1, x2)

inst_22953:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00007ffffffff; valaddr_reg:x3; val_offset:68859*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68859*0 + 3*681*FLEN/8, x4, x1, x2)

inst_22954:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0000fffffffff; valaddr_reg:x3; val_offset:68862*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68862*0 + 3*682*FLEN/8, x4, x1, x2)

inst_22955:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0001fffffffff; valaddr_reg:x3; val_offset:68865*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68865*0 + 3*683*FLEN/8, x4, x1, x2)

inst_22956:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0003fffffffff; valaddr_reg:x3; val_offset:68868*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68868*0 + 3*684*FLEN/8, x4, x1, x2)

inst_22957:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0007fffffffff; valaddr_reg:x3; val_offset:68871*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68871*0 + 3*685*FLEN/8, x4, x1, x2)

inst_22958:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b000ffffffffff; valaddr_reg:x3; val_offset:68874*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68874*0 + 3*686*FLEN/8, x4, x1, x2)

inst_22959:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b001ffffffffff; valaddr_reg:x3; val_offset:68877*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68877*0 + 3*687*FLEN/8, x4, x1, x2)

inst_22960:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b003ffffffffff; valaddr_reg:x3; val_offset:68880*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68880*0 + 3*688*FLEN/8, x4, x1, x2)

inst_22961:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b007ffffffffff; valaddr_reg:x3; val_offset:68883*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68883*0 + 3*689*FLEN/8, x4, x1, x2)

inst_22962:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b00fffffffffff; valaddr_reg:x3; val_offset:68886*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68886*0 + 3*690*FLEN/8, x4, x1, x2)

inst_22963:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b01fffffffffff; valaddr_reg:x3; val_offset:68889*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68889*0 + 3*691*FLEN/8, x4, x1, x2)

inst_22964:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b03fffffffffff; valaddr_reg:x3; val_offset:68892*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68892*0 + 3*692*FLEN/8, x4, x1, x2)

inst_22965:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b07fffffffffff; valaddr_reg:x3; val_offset:68895*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68895*0 + 3*693*FLEN/8, x4, x1, x2)

inst_22966:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b0ffffffffffff; valaddr_reg:x3; val_offset:68898*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68898*0 + 3*694*FLEN/8, x4, x1, x2)

inst_22967:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b1ffffffffffff; valaddr_reg:x3; val_offset:68901*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68901*0 + 3*695*FLEN/8, x4, x1, x2)

inst_22968:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b3ffffffffffff; valaddr_reg:x3; val_offset:68904*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68904*0 + 3*696*FLEN/8, x4, x1, x2)

inst_22969:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b7ffffffffffff; valaddr_reg:x3; val_offset:68907*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68907*0 + 3*697*FLEN/8, x4, x1, x2)

inst_22970:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3b8000000000000; valaddr_reg:x3; val_offset:68910*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68910*0 + 3*698*FLEN/8, x4, x1, x2)

inst_22971:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bc000000000000; valaddr_reg:x3; val_offset:68913*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68913*0 + 3*699*FLEN/8, x4, x1, x2)

inst_22972:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3be000000000000; valaddr_reg:x3; val_offset:68916*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68916*0 + 3*700*FLEN/8, x4, x1, x2)

inst_22973:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bf000000000000; valaddr_reg:x3; val_offset:68919*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68919*0 + 3*701*FLEN/8, x4, x1, x2)

inst_22974:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bf800000000000; valaddr_reg:x3; val_offset:68922*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68922*0 + 3*702*FLEN/8, x4, x1, x2)

inst_22975:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfc00000000000; valaddr_reg:x3; val_offset:68925*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68925*0 + 3*703*FLEN/8, x4, x1, x2)

inst_22976:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfe00000000000; valaddr_reg:x3; val_offset:68928*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68928*0 + 3*704*FLEN/8, x4, x1, x2)

inst_22977:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bff00000000000; valaddr_reg:x3; val_offset:68931*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68931*0 + 3*705*FLEN/8, x4, x1, x2)

inst_22978:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bff80000000000; valaddr_reg:x3; val_offset:68934*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68934*0 + 3*706*FLEN/8, x4, x1, x2)

inst_22979:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffc0000000000; valaddr_reg:x3; val_offset:68937*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68937*0 + 3*707*FLEN/8, x4, x1, x2)

inst_22980:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffe0000000000; valaddr_reg:x3; val_offset:68940*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68940*0 + 3*708*FLEN/8, x4, x1, x2)

inst_22981:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfff0000000000; valaddr_reg:x3; val_offset:68943*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68943*0 + 3*709*FLEN/8, x4, x1, x2)

inst_22982:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfff8000000000; valaddr_reg:x3; val_offset:68946*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68946*0 + 3*710*FLEN/8, x4, x1, x2)

inst_22983:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffc000000000; valaddr_reg:x3; val_offset:68949*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68949*0 + 3*711*FLEN/8, x4, x1, x2)

inst_22984:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffe000000000; valaddr_reg:x3; val_offset:68952*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68952*0 + 3*712*FLEN/8, x4, x1, x2)

inst_22985:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffff000000000; valaddr_reg:x3; val_offset:68955*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68955*0 + 3*713*FLEN/8, x4, x1, x2)

inst_22986:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffff800000000; valaddr_reg:x3; val_offset:68958*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68958*0 + 3*714*FLEN/8, x4, x1, x2)

inst_22987:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffc00000000; valaddr_reg:x3; val_offset:68961*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68961*0 + 3*715*FLEN/8, x4, x1, x2)

inst_22988:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffe00000000; valaddr_reg:x3; val_offset:68964*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68964*0 + 3*716*FLEN/8, x4, x1, x2)

inst_22989:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffff00000000; valaddr_reg:x3; val_offset:68967*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68967*0 + 3*717*FLEN/8, x4, x1, x2)

inst_22990:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffff80000000; valaddr_reg:x3; val_offset:68970*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68970*0 + 3*718*FLEN/8, x4, x1, x2)

inst_22991:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffc0000000; valaddr_reg:x3; val_offset:68973*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68973*0 + 3*719*FLEN/8, x4, x1, x2)

inst_22992:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffe0000000; valaddr_reg:x3; val_offset:68976*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68976*0 + 3*720*FLEN/8, x4, x1, x2)

inst_22993:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffff0000000; valaddr_reg:x3; val_offset:68979*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68979*0 + 3*721*FLEN/8, x4, x1, x2)

inst_22994:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffff8000000; valaddr_reg:x3; val_offset:68982*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68982*0 + 3*722*FLEN/8, x4, x1, x2)

inst_22995:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffc000000; valaddr_reg:x3; val_offset:68985*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68985*0 + 3*723*FLEN/8, x4, x1, x2)

inst_22996:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffe000000; valaddr_reg:x3; val_offset:68988*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68988*0 + 3*724*FLEN/8, x4, x1, x2)

inst_22997:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffff000000; valaddr_reg:x3; val_offset:68991*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68991*0 + 3*725*FLEN/8, x4, x1, x2)

inst_22998:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffff800000; valaddr_reg:x3; val_offset:68994*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68994*0 + 3*726*FLEN/8, x4, x1, x2)

inst_22999:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffffc00000; valaddr_reg:x3; val_offset:68997*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 68997*0 + 3*727*FLEN/8, x4, x1, x2)

inst_23000:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffffe00000; valaddr_reg:x3; val_offset:69000*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69000*0 + 3*728*FLEN/8, x4, x1, x2)

inst_23001:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffff00000; valaddr_reg:x3; val_offset:69003*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69003*0 + 3*729*FLEN/8, x4, x1, x2)

inst_23002:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffff80000; valaddr_reg:x3; val_offset:69006*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69006*0 + 3*730*FLEN/8, x4, x1, x2)

inst_23003:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffffc0000; valaddr_reg:x3; val_offset:69009*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69009*0 + 3*731*FLEN/8, x4, x1, x2)

inst_23004:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffffe0000; valaddr_reg:x3; val_offset:69012*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69012*0 + 3*732*FLEN/8, x4, x1, x2)

inst_23005:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffffff0000; valaddr_reg:x3; val_offset:69015*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69015*0 + 3*733*FLEN/8, x4, x1, x2)

inst_23006:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffffff8000; valaddr_reg:x3; val_offset:69018*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69018*0 + 3*734*FLEN/8, x4, x1, x2)

inst_23007:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffffffc000; valaddr_reg:x3; val_offset:69021*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69021*0 + 3*735*FLEN/8, x4, x1, x2)

inst_23008:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffffffe000; valaddr_reg:x3; val_offset:69024*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69024*0 + 3*736*FLEN/8, x4, x1, x2)

inst_23009:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffffff000; valaddr_reg:x3; val_offset:69027*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69027*0 + 3*737*FLEN/8, x4, x1, x2)

inst_23010:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffffff800; valaddr_reg:x3; val_offset:69030*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69030*0 + 3*738*FLEN/8, x4, x1, x2)

inst_23011:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffffffc00; valaddr_reg:x3; val_offset:69033*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69033*0 + 3*739*FLEN/8, x4, x1, x2)

inst_23012:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffffffe00; valaddr_reg:x3; val_offset:69036*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69036*0 + 3*740*FLEN/8, x4, x1, x2)

inst_23013:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffffffff00; valaddr_reg:x3; val_offset:69039*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69039*0 + 3*741*FLEN/8, x4, x1, x2)

inst_23014:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffffffff80; valaddr_reg:x3; val_offset:69042*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69042*0 + 3*742*FLEN/8, x4, x1, x2)

inst_23015:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffffffffc0; valaddr_reg:x3; val_offset:69045*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69045*0 + 3*743*FLEN/8, x4, x1, x2)

inst_23016:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffffffffe0; valaddr_reg:x3; val_offset:69048*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69048*0 + 3*744*FLEN/8, x4, x1, x2)

inst_23017:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffffffff0; valaddr_reg:x3; val_offset:69051*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69051*0 + 3*745*FLEN/8, x4, x1, x2)

inst_23018:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffffffff8; valaddr_reg:x3; val_offset:69054*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69054*0 + 3*746*FLEN/8, x4, x1, x2)

inst_23019:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffffffffc; valaddr_reg:x3; val_offset:69057*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69057*0 + 3*747*FLEN/8, x4, x1, x2)

inst_23020:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bffffffffffffe; valaddr_reg:x3; val_offset:69060*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69060*0 + 3*748*FLEN/8, x4, x1, x2)

inst_23021:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa0284af6be1f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a0284af6be1f3; op2val:0x0;
op3val:0x3bfffffffffffff; valaddr_reg:x3; val_offset:69063*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69063*0 + 3*749*FLEN/8, x4, x1, x2)

inst_23022:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b0000000000000; valaddr_reg:x3; val_offset:69066*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69066*0 + 3*750*FLEN/8, x4, x1, x2)

inst_23023:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b0000000000001; valaddr_reg:x3; val_offset:69069*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69069*0 + 3*751*FLEN/8, x4, x1, x2)

inst_23024:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b0000000000003; valaddr_reg:x3; val_offset:69072*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69072*0 + 3*752*FLEN/8, x4, x1, x2)

inst_23025:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b0000000000007; valaddr_reg:x3; val_offset:69075*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69075*0 + 3*753*FLEN/8, x4, x1, x2)

inst_23026:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b000000000000f; valaddr_reg:x3; val_offset:69078*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69078*0 + 3*754*FLEN/8, x4, x1, x2)

inst_23027:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b000000000001f; valaddr_reg:x3; val_offset:69081*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69081*0 + 3*755*FLEN/8, x4, x1, x2)

inst_23028:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b000000000003f; valaddr_reg:x3; val_offset:69084*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69084*0 + 3*756*FLEN/8, x4, x1, x2)

inst_23029:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b000000000007f; valaddr_reg:x3; val_offset:69087*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69087*0 + 3*757*FLEN/8, x4, x1, x2)

inst_23030:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b00000000000ff; valaddr_reg:x3; val_offset:69090*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69090*0 + 3*758*FLEN/8, x4, x1, x2)

inst_23031:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b00000000001ff; valaddr_reg:x3; val_offset:69093*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69093*0 + 3*759*FLEN/8, x4, x1, x2)

inst_23032:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b00000000003ff; valaddr_reg:x3; val_offset:69096*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69096*0 + 3*760*FLEN/8, x4, x1, x2)

inst_23033:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b00000000007ff; valaddr_reg:x3; val_offset:69099*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69099*0 + 3*761*FLEN/8, x4, x1, x2)

inst_23034:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b0000000000fff; valaddr_reg:x3; val_offset:69102*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69102*0 + 3*762*FLEN/8, x4, x1, x2)

inst_23035:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b0000000001fff; valaddr_reg:x3; val_offset:69105*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69105*0 + 3*763*FLEN/8, x4, x1, x2)

inst_23036:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b0000000003fff; valaddr_reg:x3; val_offset:69108*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69108*0 + 3*764*FLEN/8, x4, x1, x2)

inst_23037:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b0000000007fff; valaddr_reg:x3; val_offset:69111*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69111*0 + 3*765*FLEN/8, x4, x1, x2)

inst_23038:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b000000000ffff; valaddr_reg:x3; val_offset:69114*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69114*0 + 3*766*FLEN/8, x4, x1, x2)

inst_23039:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa097e0f76fbf7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x3aa0d2dcccc4a and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a097e0f76fbf7; op2val:0x2053aa0d2dcccc4a;
op3val:0x38b000000001ffff; valaddr_reg:x3; val_offset:69117*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 69117*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993599551,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993599615,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993599743,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993599999,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993600511,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993601535,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993603583,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993607679,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993615871,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993632255,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993665023,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993730559,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680993861631,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680994123775,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680994648063,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680995696639,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309680997793791,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309681001988095,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309681010376703,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309681027153919,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309681060708351,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309681127817215,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309681262034943,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309681530470399,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309682067341311,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309683141083135,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309685288566783,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309689583534079,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309698173468671,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309715353337855,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309749713076223,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309818432552959,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524309955871506431,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524310230749413375,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524310780505227263,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524311880016855039,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524314079040110591,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524318477086621695,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524327273179643903,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524344865365688319,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524380049737777151,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524450418481954815,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524591155970310143,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13524872630947020799,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13525435580900442111,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13526561480807284735,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13526561480807284736,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13527687380714127360,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528250330667548672,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528531805644259328,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528672543132614656,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528742911876792320,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528778096248881152,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528795688434925568,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528804484527947776,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528808882574458880,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528811081597714432,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528812181109342208,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528812730865156096,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813005743063040,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813143182016512,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813211901493248,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813246261231616,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813263441100800,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813272031035392,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813276326002688,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813278473486336,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813279547228160,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280084099072,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280352534528,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280486752256,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280553861120,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280587415552,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280604192768,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280612581376,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280616775680,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280618872832,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280619921408,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620445696,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620707840,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620838912,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620904448,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620937216,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620953600,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620961792,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620965888,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620967936,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620968960,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620969472,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620969728,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620969856,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620969920,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620969952,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620969968,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620969976,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620969980,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620969982,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13528813280620969983,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6884129253509931947,64,FLEN)
NAN_BOXED(11521391470801647793,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214679552,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214679553,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214679555,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214679559,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214679567,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214679583,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214679615,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214679679,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214679807,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214680063,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214680575,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214681599,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214683647,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214687743,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214695935,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214712319,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214745087,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214810623,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832214941695,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832215203839,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832215728127,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832216776703,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832218873855,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832223068159,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832231456767,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832248233983,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832281788415,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832348897279,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832483115007,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052832751550463,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052833288421375,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052834362163199,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052836509646847,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052840804614143,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052849394548735,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052866574417919,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052900934156287,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445052969653633023,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445053107092586495,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445053381970493439,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445053931726307327,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445055031237935103,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445057230261190655,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445061628307701759,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445070424400723967,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445088016586768383,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445123200958857215,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445193569703034879,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445334307191390207,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4445615782168100863,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4446178732121522175,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4447304632028364799,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4447304632028364800,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4448430531935207424,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4448993481888628736,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449274956865339392,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449415694353694720,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449486063097872384,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449521247469961216,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449538839656005632,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449547635749027840,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449552033795538944,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449554232818794496,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449555332330422272,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449555882086236160,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556156964143104,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556294403096576,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556363122573312,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556397482311680,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556414662180864,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556423252115456,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556427547082752,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556429694566400,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556430768308224,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431305179136,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431573614592,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431707832320,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431774941184,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431808495616,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431825272832,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431833661440,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431837855744,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431839952896,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431841001472,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431841525760,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431841787904,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431841918976,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431841984512,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842017280,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842033664,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842041856,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842045952,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842048000,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842049024,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842049536,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842049792,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842049920,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842049984,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842050016,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842050032,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842050040,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842050044,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842050046,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4449556431842050047,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6884148937188080747,64,FLEN)
NAN_BOXED(2329528979676445176,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854656,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854657,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854659,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854663,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854671,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854687,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854719,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854783,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854911,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694855167,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694855679,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694856703,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694858751,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694862847,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694871039,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694887423,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694920191,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694985727,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695116799,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695378943,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695903231,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822696951807,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822699048959,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822703243263,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822711631871,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822728409087,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822761963519,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822829072383,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822963290111,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508823231725567,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508823768596479,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508824842338303,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508826989821951,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508831284789247,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508839874723839,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508857054593023,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508891414331391,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508960133808127,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509097572761599,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509372450668543,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509922206482431,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394511021718110207,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394513220741365759,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394517618787876863,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394526414880899071,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394544007066943487,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394579191439032319,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394649560183209983,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394790297671565311,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9395071772648275967,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9395634722601697279,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9396760622508539903,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9396760622508539904,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9397886522415382528,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398449472368803840,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398730947345514496,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398871684833869824,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398942053578047488,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398977237950136320,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398994830136180736,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399003626229202944,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399008024275714048,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399010223298969600,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399011322810597376,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399011872566411264,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012147444318208,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012284883271680,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012353602748416,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012387962486784,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012405142355968,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012413732290560,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012418027257856,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012420174741504,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012421248483328,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012421785354240,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422053789696,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422188007424,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422255116288,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422288670720,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422305447936,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422313836544,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422318030848,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422320128000,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321176576,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321700864,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321963008,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322094080,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322159616,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322192384,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322208768,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322216960,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322221056,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322223104,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224128,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224640,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224896,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225024,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225088,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225120,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225136,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225144,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225148,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225150,64,FLEN)
NAN_BOXED(6884245086161373383,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225151,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917743616,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917743617,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917743619,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917743623,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917743631,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917743647,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917743679,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917743743,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917743871,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917744127,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917744639,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917745663,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917747711,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917751807,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917759999,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917776383,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917809151,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492917874687,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492918005759,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492918267903,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492918792191,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492919840767,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492921937919,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492926132223,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492934520831,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492951298047,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194492984852479,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194493051961343,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194493186179071,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194493454614527,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194493991485439,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194495065227263,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194497212710911,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194501507678207,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194510097612799,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194527277481983,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194561637220351,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194630356697087,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380194767795650559,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380195042673557503,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380195592429371391,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380196691940999167,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380198890964254719,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380203289010765823,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380212085103788031,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380229677289832447,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380264861661921279,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380335230406098943,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380475967894454271,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13380757442871164927,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13381320392824586239,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13382446292731428863,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13382446292731428864,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13383572192638271488,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384135142591692800,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384416617568403456,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384557355056758784,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384627723800936448,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384662908173025280,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384680500359069696,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384689296452091904,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384693694498603008,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384695893521858560,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384696993033486336,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384697542789300224,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384697817667207168,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384697955106160640,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698023825637376,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698058185375744,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698075365244928,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698083955179520,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698088250146816,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698090397630464,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698091471372288,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092008243200,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092276678656,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092410896384,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092478005248,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092511559680,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092528336896,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092536725504,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092540919808,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092543016960,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092544065536,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092544589824,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092544851968,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092544983040,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545048576,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545081344,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545097728,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545105920,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545110016,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545112064,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545113088,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545113600,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545113856,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545113984,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545114048,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545114080,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545114096,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545114104,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545114108,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545114110,64,FLEN)
NAN_BOXED(6884260814208187159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(13384698092545114111,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031527424,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031527425,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031527427,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031527431,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031527439,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031527455,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031527487,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031527551,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031527679,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031527935,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031528447,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031529471,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031531519,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031535615,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031543807,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031560191,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031592959,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031658495,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275031789567,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275032051711,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275032575999,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275033624575,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275035721727,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275039916031,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275048304639,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275065081855,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275098636287,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275165745151,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275299962879,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367275568398335,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367276105269247,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367277179011071,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367279326494719,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367283621462015,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367292211396607,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367309391265791,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367343751004159,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367412470480895,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367549909434367,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596367824787341311,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596368374543155199,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596369474054782975,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596371673078038527,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596376071124549631,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596384867217571839,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596402459403616255,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596437643775705087,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596508012519882751,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596648750008238079,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13596930224984948735,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13597493174938370047,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13598619074845212671,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13598619074845212672,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13599744974752055296,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600307924705476608,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600589399682187264,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600730137170542592,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600800505914720256,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600835690286809088,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600853282472853504,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600862078565875712,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600866476612386816,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600868675635642368,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600869775147270144,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870324903084032,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870599780990976,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870737219944448,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870805939421184,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870840299159552,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870857479028736,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870866068963328,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870870363930624,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870872511414272,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870873585156096,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874122027008,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874390462464,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874524680192,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874591789056,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874625343488,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874642120704,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874650509312,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874654703616,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874656800768,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874657849344,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658373632,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658635776,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658766848,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658832384,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658865152,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658881536,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658889728,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658893824,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658895872,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658896896,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658897408,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658897664,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658897792,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658897856,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658897888,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658897904,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658897912,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658897916,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658897918,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13600870874658897919,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6884274134859077775,64,FLEN)
NAN_BOXED(11521278248926999847,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859264,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859265,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859267,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859271,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859279,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859295,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859327,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859391,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859519,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859775,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014860287,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014861311,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014863359,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014867455,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014875647,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014892031,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014924799,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014990335,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015121407,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015383551,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015907839,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378016956415,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378019053567,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378023247871,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378031636479,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378048413695,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378081968127,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378149076991,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378283294719,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378551730175,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712379088601087,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712380162342911,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712382309826559,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712386604793855,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712395194728447,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712412374597631,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712446734335999,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712515453812735,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712652892766207,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712927770673151,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265713477526487039,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265714577038114815,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265716776061370367,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265721174107881471,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265729970200903679,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265747562386948095,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265782746759036927,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265853115503214591,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265993852991569919,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266275327968280575,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266838277921701887,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544511,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544512,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269090077735387136,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269653027688808448,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269934502665519104,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270075240153874432,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270145608898052096,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270180793270140928,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270198385456185344,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270207181549207552,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270211579595718656,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270213778618974208,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270214878130601984,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215427886415872,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215702764322816,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215840203276288,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215908922753024,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215943282491392,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215960462360576,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215969052295168,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215973347262464,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215975494746112,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215976568487936,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977105358848,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977373794304,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977508012032,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977575120896,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977608675328,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977625452544,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977633841152,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977638035456,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977640132608,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641181184,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641705472,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641967616,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642098688,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642164224,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642196992,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642213376,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642221568,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642225664,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642227712,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642228736,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229248,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229504,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229632,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229696,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229728,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229744,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229752,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229756,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229758,64,FLEN)
NAN_BOXED(6884317749291246067,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229759,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025039872,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025039873,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025039875,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025039879,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025039887,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025039903,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025039935,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025039999,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025040127,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025040383,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025040895,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025041919,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025043967,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025048063,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025056255,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025072639,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025105407,64,FLEN)
NAN_BOXED(6884325417419209719,64,FLEN)
NAN_BOXED(2329392405860371530,64,FLEN)
NAN_BOXED(4084764862025170943,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
