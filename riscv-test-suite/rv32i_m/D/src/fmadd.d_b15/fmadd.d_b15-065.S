
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_49152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffffffff80; valaddr_reg:x3; val_offset:147456*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147456*0 + 3*0*FLEN/8, x4, x1, x2)

inst_49153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffffffffc0; valaddr_reg:x3; val_offset:147459*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147459*0 + 3*1*FLEN/8, x4, x1, x2)

inst_49154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffffffffe0; valaddr_reg:x3; val_offset:147462*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147462*0 + 3*2*FLEN/8, x4, x1, x2)

inst_49155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffffffff0; valaddr_reg:x3; val_offset:147465*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147465*0 + 3*3*FLEN/8, x4, x1, x2)

inst_49156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffffffff8; valaddr_reg:x3; val_offset:147468*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147468*0 + 3*4*FLEN/8, x4, x1, x2)

inst_49157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffffffffc; valaddr_reg:x3; val_offset:147471*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147471*0 + 3*5*FLEN/8, x4, x1, x2)

inst_49158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffffffffe; valaddr_reg:x3; val_offset:147474*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147474*0 + 3*6*FLEN/8, x4, x1, x2)

inst_49159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffffffffff; valaddr_reg:x3; val_offset:147477*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147477*0 + 3*7*FLEN/8, x4, x1, x2)

inst_49160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:147480*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147480*0 + 3*8*FLEN/8, x4, x1, x2)

inst_49161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:147483*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147483*0 + 3*9*FLEN/8, x4, x1, x2)

inst_49162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:147486*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147486*0 + 3*10*FLEN/8, x4, x1, x2)

inst_49163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:147489*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147489*0 + 3*11*FLEN/8, x4, x1, x2)

inst_49164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:147492*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147492*0 + 3*12*FLEN/8, x4, x1, x2)

inst_49165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:147495*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147495*0 + 3*13*FLEN/8, x4, x1, x2)

inst_49166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:147498*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147498*0 + 3*14*FLEN/8, x4, x1, x2)

inst_49167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:147501*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147501*0 + 3*15*FLEN/8, x4, x1, x2)

inst_49168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:147504*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147504*0 + 3*16*FLEN/8, x4, x1, x2)

inst_49169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:147507*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147507*0 + 3*17*FLEN/8, x4, x1, x2)

inst_49170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:147510*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147510*0 + 3*18*FLEN/8, x4, x1, x2)

inst_49171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:147513*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147513*0 + 3*19*FLEN/8, x4, x1, x2)

inst_49172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:147516*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147516*0 + 3*20*FLEN/8, x4, x1, x2)

inst_49173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:147519*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147519*0 + 3*21*FLEN/8, x4, x1, x2)

inst_49174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:147522*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147522*0 + 3*22*FLEN/8, x4, x1, x2)

inst_49175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:147525*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147525*0 + 3*23*FLEN/8, x4, x1, x2)

inst_49176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:147528*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147528*0 + 3*24*FLEN/8, x4, x1, x2)

inst_49177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:147531*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147531*0 + 3*25*FLEN/8, x4, x1, x2)

inst_49178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:147534*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147534*0 + 3*26*FLEN/8, x4, x1, x2)

inst_49179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:147537*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147537*0 + 3*27*FLEN/8, x4, x1, x2)

inst_49180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:147540*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147540*0 + 3*28*FLEN/8, x4, x1, x2)

inst_49181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:147543*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147543*0 + 3*29*FLEN/8, x4, x1, x2)

inst_49182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:147546*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147546*0 + 3*30*FLEN/8, x4, x1, x2)

inst_49183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:147549*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147549*0 + 3*31*FLEN/8, x4, x1, x2)

inst_49184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:147552*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147552*0 + 3*32*FLEN/8, x4, x1, x2)

inst_49185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:147555*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147555*0 + 3*33*FLEN/8, x4, x1, x2)

inst_49186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:147558*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147558*0 + 3*34*FLEN/8, x4, x1, x2)

inst_49187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:147561*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147561*0 + 3*35*FLEN/8, x4, x1, x2)

inst_49188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:147564*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147564*0 + 3*36*FLEN/8, x4, x1, x2)

inst_49189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:147567*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147567*0 + 3*37*FLEN/8, x4, x1, x2)

inst_49190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:147570*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147570*0 + 3*38*FLEN/8, x4, x1, x2)

inst_49191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:147573*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147573*0 + 3*39*FLEN/8, x4, x1, x2)

inst_49192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:147576*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147576*0 + 3*40*FLEN/8, x4, x1, x2)

inst_49193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:147579*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147579*0 + 3*41*FLEN/8, x4, x1, x2)

inst_49194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:147582*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147582*0 + 3*42*FLEN/8, x4, x1, x2)

inst_49195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:147585*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147585*0 + 3*43*FLEN/8, x4, x1, x2)

inst_49196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:147588*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147588*0 + 3*44*FLEN/8, x4, x1, x2)

inst_49197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:147591*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147591*0 + 3*45*FLEN/8, x4, x1, x2)

inst_49198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:147594*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147594*0 + 3*46*FLEN/8, x4, x1, x2)

inst_49199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:147597*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147597*0 + 3*47*FLEN/8, x4, x1, x2)

inst_49200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:147600*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147600*0 + 3*48*FLEN/8, x4, x1, x2)

inst_49201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:147603*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147603*0 + 3*49*FLEN/8, x4, x1, x2)

inst_49202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:147606*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147606*0 + 3*50*FLEN/8, x4, x1, x2)

inst_49203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:147609*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147609*0 + 3*51*FLEN/8, x4, x1, x2)

inst_49204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000000000000; valaddr_reg:x3; val_offset:147612*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147612*0 + 3*52*FLEN/8, x4, x1, x2)

inst_49205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000000000001; valaddr_reg:x3; val_offset:147615*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147615*0 + 3*53*FLEN/8, x4, x1, x2)

inst_49206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000000000003; valaddr_reg:x3; val_offset:147618*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147618*0 + 3*54*FLEN/8, x4, x1, x2)

inst_49207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000000000007; valaddr_reg:x3; val_offset:147621*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147621*0 + 3*55*FLEN/8, x4, x1, x2)

inst_49208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000000000000f; valaddr_reg:x3; val_offset:147624*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147624*0 + 3*56*FLEN/8, x4, x1, x2)

inst_49209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000000000001f; valaddr_reg:x3; val_offset:147627*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147627*0 + 3*57*FLEN/8, x4, x1, x2)

inst_49210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000000000003f; valaddr_reg:x3; val_offset:147630*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147630*0 + 3*58*FLEN/8, x4, x1, x2)

inst_49211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000000000007f; valaddr_reg:x3; val_offset:147633*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147633*0 + 3*59*FLEN/8, x4, x1, x2)

inst_49212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900000000000ff; valaddr_reg:x3; val_offset:147636*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147636*0 + 3*60*FLEN/8, x4, x1, x2)

inst_49213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900000000001ff; valaddr_reg:x3; val_offset:147639*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147639*0 + 3*61*FLEN/8, x4, x1, x2)

inst_49214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900000000003ff; valaddr_reg:x3; val_offset:147642*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147642*0 + 3*62*FLEN/8, x4, x1, x2)

inst_49215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900000000007ff; valaddr_reg:x3; val_offset:147645*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147645*0 + 3*63*FLEN/8, x4, x1, x2)

inst_49216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000000000fff; valaddr_reg:x3; val_offset:147648*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147648*0 + 3*64*FLEN/8, x4, x1, x2)

inst_49217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000000001fff; valaddr_reg:x3; val_offset:147651*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147651*0 + 3*65*FLEN/8, x4, x1, x2)

inst_49218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000000003fff; valaddr_reg:x3; val_offset:147654*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147654*0 + 3*66*FLEN/8, x4, x1, x2)

inst_49219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000000007fff; valaddr_reg:x3; val_offset:147657*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147657*0 + 3*67*FLEN/8, x4, x1, x2)

inst_49220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000000000ffff; valaddr_reg:x3; val_offset:147660*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147660*0 + 3*68*FLEN/8, x4, x1, x2)

inst_49221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000000001ffff; valaddr_reg:x3; val_offset:147663*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147663*0 + 3*69*FLEN/8, x4, x1, x2)

inst_49222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000000003ffff; valaddr_reg:x3; val_offset:147666*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147666*0 + 3*70*FLEN/8, x4, x1, x2)

inst_49223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000000007ffff; valaddr_reg:x3; val_offset:147669*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147669*0 + 3*71*FLEN/8, x4, x1, x2)

inst_49224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900000000fffff; valaddr_reg:x3; val_offset:147672*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147672*0 + 3*72*FLEN/8, x4, x1, x2)

inst_49225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900000001fffff; valaddr_reg:x3; val_offset:147675*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147675*0 + 3*73*FLEN/8, x4, x1, x2)

inst_49226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900000003fffff; valaddr_reg:x3; val_offset:147678*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147678*0 + 3*74*FLEN/8, x4, x1, x2)

inst_49227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900000007fffff; valaddr_reg:x3; val_offset:147681*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147681*0 + 3*75*FLEN/8, x4, x1, x2)

inst_49228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000000ffffff; valaddr_reg:x3; val_offset:147684*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147684*0 + 3*76*FLEN/8, x4, x1, x2)

inst_49229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000001ffffff; valaddr_reg:x3; val_offset:147687*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147687*0 + 3*77*FLEN/8, x4, x1, x2)

inst_49230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000003ffffff; valaddr_reg:x3; val_offset:147690*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147690*0 + 3*78*FLEN/8, x4, x1, x2)

inst_49231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000007ffffff; valaddr_reg:x3; val_offset:147693*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147693*0 + 3*79*FLEN/8, x4, x1, x2)

inst_49232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000000fffffff; valaddr_reg:x3; val_offset:147696*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147696*0 + 3*80*FLEN/8, x4, x1, x2)

inst_49233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000001fffffff; valaddr_reg:x3; val_offset:147699*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147699*0 + 3*81*FLEN/8, x4, x1, x2)

inst_49234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000003fffffff; valaddr_reg:x3; val_offset:147702*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147702*0 + 3*82*FLEN/8, x4, x1, x2)

inst_49235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000007fffffff; valaddr_reg:x3; val_offset:147705*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147705*0 + 3*83*FLEN/8, x4, x1, x2)

inst_49236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900000ffffffff; valaddr_reg:x3; val_offset:147708*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147708*0 + 3*84*FLEN/8, x4, x1, x2)

inst_49237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900001ffffffff; valaddr_reg:x3; val_offset:147711*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147711*0 + 3*85*FLEN/8, x4, x1, x2)

inst_49238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900003ffffffff; valaddr_reg:x3; val_offset:147714*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147714*0 + 3*86*FLEN/8, x4, x1, x2)

inst_49239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900007ffffffff; valaddr_reg:x3; val_offset:147717*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147717*0 + 3*87*FLEN/8, x4, x1, x2)

inst_49240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290000fffffffff; valaddr_reg:x3; val_offset:147720*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147720*0 + 3*88*FLEN/8, x4, x1, x2)

inst_49241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290001fffffffff; valaddr_reg:x3; val_offset:147723*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147723*0 + 3*89*FLEN/8, x4, x1, x2)

inst_49242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290003fffffffff; valaddr_reg:x3; val_offset:147726*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147726*0 + 3*90*FLEN/8, x4, x1, x2)

inst_49243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290007fffffffff; valaddr_reg:x3; val_offset:147729*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147729*0 + 3*91*FLEN/8, x4, x1, x2)

inst_49244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29000ffffffffff; valaddr_reg:x3; val_offset:147732*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147732*0 + 3*92*FLEN/8, x4, x1, x2)

inst_49245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29001ffffffffff; valaddr_reg:x3; val_offset:147735*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147735*0 + 3*93*FLEN/8, x4, x1, x2)

inst_49246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29003ffffffffff; valaddr_reg:x3; val_offset:147738*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147738*0 + 3*94*FLEN/8, x4, x1, x2)

inst_49247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29007ffffffffff; valaddr_reg:x3; val_offset:147741*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147741*0 + 3*95*FLEN/8, x4, x1, x2)

inst_49248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2900fffffffffff; valaddr_reg:x3; val_offset:147744*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147744*0 + 3*96*FLEN/8, x4, x1, x2)

inst_49249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2901fffffffffff; valaddr_reg:x3; val_offset:147747*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147747*0 + 3*97*FLEN/8, x4, x1, x2)

inst_49250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2903fffffffffff; valaddr_reg:x3; val_offset:147750*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147750*0 + 3*98*FLEN/8, x4, x1, x2)

inst_49251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x2907fffffffffff; valaddr_reg:x3; val_offset:147753*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147753*0 + 3*99*FLEN/8, x4, x1, x2)

inst_49252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x290ffffffffffff; valaddr_reg:x3; val_offset:147756*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147756*0 + 3*100*FLEN/8, x4, x1, x2)

inst_49253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x291ffffffffffff; valaddr_reg:x3; val_offset:147759*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147759*0 + 3*101*FLEN/8, x4, x1, x2)

inst_49254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x293ffffffffffff; valaddr_reg:x3; val_offset:147762*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147762*0 + 3*102*FLEN/8, x4, x1, x2)

inst_49255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x297ffffffffffff; valaddr_reg:x3; val_offset:147765*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147765*0 + 3*103*FLEN/8, x4, x1, x2)

inst_49256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x298000000000000; valaddr_reg:x3; val_offset:147768*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147768*0 + 3*104*FLEN/8, x4, x1, x2)

inst_49257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29c000000000000; valaddr_reg:x3; val_offset:147771*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147771*0 + 3*105*FLEN/8, x4, x1, x2)

inst_49258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29e000000000000; valaddr_reg:x3; val_offset:147774*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147774*0 + 3*106*FLEN/8, x4, x1, x2)

inst_49259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29f000000000000; valaddr_reg:x3; val_offset:147777*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147777*0 + 3*107*FLEN/8, x4, x1, x2)

inst_49260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29f800000000000; valaddr_reg:x3; val_offset:147780*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147780*0 + 3*108*FLEN/8, x4, x1, x2)

inst_49261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fc00000000000; valaddr_reg:x3; val_offset:147783*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147783*0 + 3*109*FLEN/8, x4, x1, x2)

inst_49262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fe00000000000; valaddr_reg:x3; val_offset:147786*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147786*0 + 3*110*FLEN/8, x4, x1, x2)

inst_49263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ff00000000000; valaddr_reg:x3; val_offset:147789*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147789*0 + 3*111*FLEN/8, x4, x1, x2)

inst_49264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ff80000000000; valaddr_reg:x3; val_offset:147792*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147792*0 + 3*112*FLEN/8, x4, x1, x2)

inst_49265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffc0000000000; valaddr_reg:x3; val_offset:147795*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147795*0 + 3*113*FLEN/8, x4, x1, x2)

inst_49266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffe0000000000; valaddr_reg:x3; val_offset:147798*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147798*0 + 3*114*FLEN/8, x4, x1, x2)

inst_49267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fff0000000000; valaddr_reg:x3; val_offset:147801*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147801*0 + 3*115*FLEN/8, x4, x1, x2)

inst_49268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fff8000000000; valaddr_reg:x3; val_offset:147804*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147804*0 + 3*116*FLEN/8, x4, x1, x2)

inst_49269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffc000000000; valaddr_reg:x3; val_offset:147807*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147807*0 + 3*117*FLEN/8, x4, x1, x2)

inst_49270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffe000000000; valaddr_reg:x3; val_offset:147810*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147810*0 + 3*118*FLEN/8, x4, x1, x2)

inst_49271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffff000000000; valaddr_reg:x3; val_offset:147813*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147813*0 + 3*119*FLEN/8, x4, x1, x2)

inst_49272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffff800000000; valaddr_reg:x3; val_offset:147816*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147816*0 + 3*120*FLEN/8, x4, x1, x2)

inst_49273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffc00000000; valaddr_reg:x3; val_offset:147819*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147819*0 + 3*121*FLEN/8, x4, x1, x2)

inst_49274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffe00000000; valaddr_reg:x3; val_offset:147822*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147822*0 + 3*122*FLEN/8, x4, x1, x2)

inst_49275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffff00000000; valaddr_reg:x3; val_offset:147825*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147825*0 + 3*123*FLEN/8, x4, x1, x2)

inst_49276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffff80000000; valaddr_reg:x3; val_offset:147828*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147828*0 + 3*124*FLEN/8, x4, x1, x2)

inst_49277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffc0000000; valaddr_reg:x3; val_offset:147831*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147831*0 + 3*125*FLEN/8, x4, x1, x2)

inst_49278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffe0000000; valaddr_reg:x3; val_offset:147834*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147834*0 + 3*126*FLEN/8, x4, x1, x2)

inst_49279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffff0000000; valaddr_reg:x3; val_offset:147837*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147837*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_49280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffff8000000; valaddr_reg:x3; val_offset:147840*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147840*0 + 3*128*FLEN/8, x4, x1, x2)

inst_49281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffc000000; valaddr_reg:x3; val_offset:147843*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147843*0 + 3*129*FLEN/8, x4, x1, x2)

inst_49282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffe000000; valaddr_reg:x3; val_offset:147846*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147846*0 + 3*130*FLEN/8, x4, x1, x2)

inst_49283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffff000000; valaddr_reg:x3; val_offset:147849*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147849*0 + 3*131*FLEN/8, x4, x1, x2)

inst_49284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffff800000; valaddr_reg:x3; val_offset:147852*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147852*0 + 3*132*FLEN/8, x4, x1, x2)

inst_49285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffffc00000; valaddr_reg:x3; val_offset:147855*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147855*0 + 3*133*FLEN/8, x4, x1, x2)

inst_49286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffffe00000; valaddr_reg:x3; val_offset:147858*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147858*0 + 3*134*FLEN/8, x4, x1, x2)

inst_49287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffff00000; valaddr_reg:x3; val_offset:147861*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147861*0 + 3*135*FLEN/8, x4, x1, x2)

inst_49288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffff80000; valaddr_reg:x3; val_offset:147864*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147864*0 + 3*136*FLEN/8, x4, x1, x2)

inst_49289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffffc0000; valaddr_reg:x3; val_offset:147867*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147867*0 + 3*137*FLEN/8, x4, x1, x2)

inst_49290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffffe0000; valaddr_reg:x3; val_offset:147870*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147870*0 + 3*138*FLEN/8, x4, x1, x2)

inst_49291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffffff0000; valaddr_reg:x3; val_offset:147873*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147873*0 + 3*139*FLEN/8, x4, x1, x2)

inst_49292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffffff8000; valaddr_reg:x3; val_offset:147876*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147876*0 + 3*140*FLEN/8, x4, x1, x2)

inst_49293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffffffc000; valaddr_reg:x3; val_offset:147879*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147879*0 + 3*141*FLEN/8, x4, x1, x2)

inst_49294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffffffe000; valaddr_reg:x3; val_offset:147882*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147882*0 + 3*142*FLEN/8, x4, x1, x2)

inst_49295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffffff000; valaddr_reg:x3; val_offset:147885*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147885*0 + 3*143*FLEN/8, x4, x1, x2)

inst_49296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffffff800; valaddr_reg:x3; val_offset:147888*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147888*0 + 3*144*FLEN/8, x4, x1, x2)

inst_49297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffffffc00; valaddr_reg:x3; val_offset:147891*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147891*0 + 3*145*FLEN/8, x4, x1, x2)

inst_49298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffffffe00; valaddr_reg:x3; val_offset:147894*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147894*0 + 3*146*FLEN/8, x4, x1, x2)

inst_49299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffffffff00; valaddr_reg:x3; val_offset:147897*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147897*0 + 3*147*FLEN/8, x4, x1, x2)

inst_49300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffffffff80; valaddr_reg:x3; val_offset:147900*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147900*0 + 3*148*FLEN/8, x4, x1, x2)

inst_49301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffffffffc0; valaddr_reg:x3; val_offset:147903*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147903*0 + 3*149*FLEN/8, x4, x1, x2)

inst_49302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffffffffe0; valaddr_reg:x3; val_offset:147906*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147906*0 + 3*150*FLEN/8, x4, x1, x2)

inst_49303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffffffff0; valaddr_reg:x3; val_offset:147909*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147909*0 + 3*151*FLEN/8, x4, x1, x2)

inst_49304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffffffff8; valaddr_reg:x3; val_offset:147912*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147912*0 + 3*152*FLEN/8, x4, x1, x2)

inst_49305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffffffffc; valaddr_reg:x3; val_offset:147915*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147915*0 + 3*153*FLEN/8, x4, x1, x2)

inst_49306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29ffffffffffffe; valaddr_reg:x3; val_offset:147918*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147918*0 + 3*154*FLEN/8, x4, x1, x2)

inst_49307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe711709b92de7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e711709b92de7; op2val:0x0;
op3val:0x29fffffffffffff; valaddr_reg:x3; val_offset:147921*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147921*0 + 3*155*FLEN/8, x4, x1, x2)

inst_49308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:147924*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147924*0 + 3*156*FLEN/8, x4, x1, x2)

inst_49309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:147927*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147927*0 + 3*157*FLEN/8, x4, x1, x2)

inst_49310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:147930*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147930*0 + 3*158*FLEN/8, x4, x1, x2)

inst_49311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:147933*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147933*0 + 3*159*FLEN/8, x4, x1, x2)

inst_49312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:147936*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147936*0 + 3*160*FLEN/8, x4, x1, x2)

inst_49313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:147939*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147939*0 + 3*161*FLEN/8, x4, x1, x2)

inst_49314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:147942*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147942*0 + 3*162*FLEN/8, x4, x1, x2)

inst_49315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:147945*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147945*0 + 3*163*FLEN/8, x4, x1, x2)

inst_49316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:147948*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147948*0 + 3*164*FLEN/8, x4, x1, x2)

inst_49317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:147951*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147951*0 + 3*165*FLEN/8, x4, x1, x2)

inst_49318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:147954*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147954*0 + 3*166*FLEN/8, x4, x1, x2)

inst_49319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:147957*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147957*0 + 3*167*FLEN/8, x4, x1, x2)

inst_49320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:147960*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147960*0 + 3*168*FLEN/8, x4, x1, x2)

inst_49321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:147963*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147963*0 + 3*169*FLEN/8, x4, x1, x2)

inst_49322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:147966*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147966*0 + 3*170*FLEN/8, x4, x1, x2)

inst_49323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:147969*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147969*0 + 3*171*FLEN/8, x4, x1, x2)

inst_49324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:147972*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147972*0 + 3*172*FLEN/8, x4, x1, x2)

inst_49325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:147975*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147975*0 + 3*173*FLEN/8, x4, x1, x2)

inst_49326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:147978*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147978*0 + 3*174*FLEN/8, x4, x1, x2)

inst_49327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:147981*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147981*0 + 3*175*FLEN/8, x4, x1, x2)

inst_49328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:147984*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147984*0 + 3*176*FLEN/8, x4, x1, x2)

inst_49329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:147987*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147987*0 + 3*177*FLEN/8, x4, x1, x2)

inst_49330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000000000000; valaddr_reg:x3; val_offset:147990*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147990*0 + 3*178*FLEN/8, x4, x1, x2)

inst_49331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000000000001; valaddr_reg:x3; val_offset:147993*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147993*0 + 3*179*FLEN/8, x4, x1, x2)

inst_49332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000000000003; valaddr_reg:x3; val_offset:147996*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147996*0 + 3*180*FLEN/8, x4, x1, x2)

inst_49333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000000000007; valaddr_reg:x3; val_offset:147999*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147999*0 + 3*181*FLEN/8, x4, x1, x2)

inst_49334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000000000000f; valaddr_reg:x3; val_offset:148002*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148002*0 + 3*182*FLEN/8, x4, x1, x2)

inst_49335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000000000001f; valaddr_reg:x3; val_offset:148005*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148005*0 + 3*183*FLEN/8, x4, x1, x2)

inst_49336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000000000003f; valaddr_reg:x3; val_offset:148008*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148008*0 + 3*184*FLEN/8, x4, x1, x2)

inst_49337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000000000007f; valaddr_reg:x3; val_offset:148011*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148011*0 + 3*185*FLEN/8, x4, x1, x2)

inst_49338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400000000000ff; valaddr_reg:x3; val_offset:148014*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148014*0 + 3*186*FLEN/8, x4, x1, x2)

inst_49339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400000000001ff; valaddr_reg:x3; val_offset:148017*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148017*0 + 3*187*FLEN/8, x4, x1, x2)

inst_49340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400000000003ff; valaddr_reg:x3; val_offset:148020*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148020*0 + 3*188*FLEN/8, x4, x1, x2)

inst_49341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400000000007ff; valaddr_reg:x3; val_offset:148023*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148023*0 + 3*189*FLEN/8, x4, x1, x2)

inst_49342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000000000fff; valaddr_reg:x3; val_offset:148026*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148026*0 + 3*190*FLEN/8, x4, x1, x2)

inst_49343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000000001fff; valaddr_reg:x3; val_offset:148029*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148029*0 + 3*191*FLEN/8, x4, x1, x2)

inst_49344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000000003fff; valaddr_reg:x3; val_offset:148032*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148032*0 + 3*192*FLEN/8, x4, x1, x2)

inst_49345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000000007fff; valaddr_reg:x3; val_offset:148035*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148035*0 + 3*193*FLEN/8, x4, x1, x2)

inst_49346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000000000ffff; valaddr_reg:x3; val_offset:148038*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148038*0 + 3*194*FLEN/8, x4, x1, x2)

inst_49347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000000001ffff; valaddr_reg:x3; val_offset:148041*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148041*0 + 3*195*FLEN/8, x4, x1, x2)

inst_49348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000000003ffff; valaddr_reg:x3; val_offset:148044*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148044*0 + 3*196*FLEN/8, x4, x1, x2)

inst_49349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000000007ffff; valaddr_reg:x3; val_offset:148047*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148047*0 + 3*197*FLEN/8, x4, x1, x2)

inst_49350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400000000fffff; valaddr_reg:x3; val_offset:148050*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148050*0 + 3*198*FLEN/8, x4, x1, x2)

inst_49351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400000001fffff; valaddr_reg:x3; val_offset:148053*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148053*0 + 3*199*FLEN/8, x4, x1, x2)

inst_49352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400000003fffff; valaddr_reg:x3; val_offset:148056*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148056*0 + 3*200*FLEN/8, x4, x1, x2)

inst_49353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400000007fffff; valaddr_reg:x3; val_offset:148059*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148059*0 + 3*201*FLEN/8, x4, x1, x2)

inst_49354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000000ffffff; valaddr_reg:x3; val_offset:148062*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148062*0 + 3*202*FLEN/8, x4, x1, x2)

inst_49355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000001ffffff; valaddr_reg:x3; val_offset:148065*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148065*0 + 3*203*FLEN/8, x4, x1, x2)

inst_49356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000003ffffff; valaddr_reg:x3; val_offset:148068*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148068*0 + 3*204*FLEN/8, x4, x1, x2)

inst_49357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000007ffffff; valaddr_reg:x3; val_offset:148071*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148071*0 + 3*205*FLEN/8, x4, x1, x2)

inst_49358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000000fffffff; valaddr_reg:x3; val_offset:148074*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148074*0 + 3*206*FLEN/8, x4, x1, x2)

inst_49359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000001fffffff; valaddr_reg:x3; val_offset:148077*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148077*0 + 3*207*FLEN/8, x4, x1, x2)

inst_49360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000003fffffff; valaddr_reg:x3; val_offset:148080*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148080*0 + 3*208*FLEN/8, x4, x1, x2)

inst_49361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000007fffffff; valaddr_reg:x3; val_offset:148083*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148083*0 + 3*209*FLEN/8, x4, x1, x2)

inst_49362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400000ffffffff; valaddr_reg:x3; val_offset:148086*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148086*0 + 3*210*FLEN/8, x4, x1, x2)

inst_49363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400001ffffffff; valaddr_reg:x3; val_offset:148089*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148089*0 + 3*211*FLEN/8, x4, x1, x2)

inst_49364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400003ffffffff; valaddr_reg:x3; val_offset:148092*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148092*0 + 3*212*FLEN/8, x4, x1, x2)

inst_49365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400007ffffffff; valaddr_reg:x3; val_offset:148095*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148095*0 + 3*213*FLEN/8, x4, x1, x2)

inst_49366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040000fffffffff; valaddr_reg:x3; val_offset:148098*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148098*0 + 3*214*FLEN/8, x4, x1, x2)

inst_49367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040001fffffffff; valaddr_reg:x3; val_offset:148101*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148101*0 + 3*215*FLEN/8, x4, x1, x2)

inst_49368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040003fffffffff; valaddr_reg:x3; val_offset:148104*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148104*0 + 3*216*FLEN/8, x4, x1, x2)

inst_49369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040007fffffffff; valaddr_reg:x3; val_offset:148107*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148107*0 + 3*217*FLEN/8, x4, x1, x2)

inst_49370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804000ffffffffff; valaddr_reg:x3; val_offset:148110*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148110*0 + 3*218*FLEN/8, x4, x1, x2)

inst_49371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804001ffffffffff; valaddr_reg:x3; val_offset:148113*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148113*0 + 3*219*FLEN/8, x4, x1, x2)

inst_49372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804003ffffffffff; valaddr_reg:x3; val_offset:148116*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148116*0 + 3*220*FLEN/8, x4, x1, x2)

inst_49373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804007ffffffffff; valaddr_reg:x3; val_offset:148119*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148119*0 + 3*221*FLEN/8, x4, x1, x2)

inst_49374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80400fffffffffff; valaddr_reg:x3; val_offset:148122*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148122*0 + 3*222*FLEN/8, x4, x1, x2)

inst_49375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80401fffffffffff; valaddr_reg:x3; val_offset:148125*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148125*0 + 3*223*FLEN/8, x4, x1, x2)

inst_49376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80403fffffffffff; valaddr_reg:x3; val_offset:148128*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148128*0 + 3*224*FLEN/8, x4, x1, x2)

inst_49377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x80407fffffffffff; valaddr_reg:x3; val_offset:148131*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148131*0 + 3*225*FLEN/8, x4, x1, x2)

inst_49378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8040ffffffffffff; valaddr_reg:x3; val_offset:148134*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148134*0 + 3*226*FLEN/8, x4, x1, x2)

inst_49379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8041ffffffffffff; valaddr_reg:x3; val_offset:148137*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148137*0 + 3*227*FLEN/8, x4, x1, x2)

inst_49380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8043ffffffffffff; valaddr_reg:x3; val_offset:148140*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148140*0 + 3*228*FLEN/8, x4, x1, x2)

inst_49381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8047ffffffffffff; valaddr_reg:x3; val_offset:148143*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148143*0 + 3*229*FLEN/8, x4, x1, x2)

inst_49382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x8048000000000000; valaddr_reg:x3; val_offset:148146*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148146*0 + 3*230*FLEN/8, x4, x1, x2)

inst_49383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804c000000000000; valaddr_reg:x3; val_offset:148149*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148149*0 + 3*231*FLEN/8, x4, x1, x2)

inst_49384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804e000000000000; valaddr_reg:x3; val_offset:148152*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148152*0 + 3*232*FLEN/8, x4, x1, x2)

inst_49385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804f000000000000; valaddr_reg:x3; val_offset:148155*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148155*0 + 3*233*FLEN/8, x4, x1, x2)

inst_49386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804f800000000000; valaddr_reg:x3; val_offset:148158*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148158*0 + 3*234*FLEN/8, x4, x1, x2)

inst_49387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fc00000000000; valaddr_reg:x3; val_offset:148161*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148161*0 + 3*235*FLEN/8, x4, x1, x2)

inst_49388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fe00000000000; valaddr_reg:x3; val_offset:148164*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148164*0 + 3*236*FLEN/8, x4, x1, x2)

inst_49389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ff00000000000; valaddr_reg:x3; val_offset:148167*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148167*0 + 3*237*FLEN/8, x4, x1, x2)

inst_49390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ff80000000000; valaddr_reg:x3; val_offset:148170*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148170*0 + 3*238*FLEN/8, x4, x1, x2)

inst_49391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffc0000000000; valaddr_reg:x3; val_offset:148173*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148173*0 + 3*239*FLEN/8, x4, x1, x2)

inst_49392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffe0000000000; valaddr_reg:x3; val_offset:148176*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148176*0 + 3*240*FLEN/8, x4, x1, x2)

inst_49393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fff0000000000; valaddr_reg:x3; val_offset:148179*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148179*0 + 3*241*FLEN/8, x4, x1, x2)

inst_49394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fff8000000000; valaddr_reg:x3; val_offset:148182*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148182*0 + 3*242*FLEN/8, x4, x1, x2)

inst_49395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffc000000000; valaddr_reg:x3; val_offset:148185*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148185*0 + 3*243*FLEN/8, x4, x1, x2)

inst_49396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffe000000000; valaddr_reg:x3; val_offset:148188*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148188*0 + 3*244*FLEN/8, x4, x1, x2)

inst_49397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffff000000000; valaddr_reg:x3; val_offset:148191*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148191*0 + 3*245*FLEN/8, x4, x1, x2)

inst_49398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffff800000000; valaddr_reg:x3; val_offset:148194*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148194*0 + 3*246*FLEN/8, x4, x1, x2)

inst_49399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffc00000000; valaddr_reg:x3; val_offset:148197*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148197*0 + 3*247*FLEN/8, x4, x1, x2)

inst_49400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffe00000000; valaddr_reg:x3; val_offset:148200*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148200*0 + 3*248*FLEN/8, x4, x1, x2)

inst_49401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffff00000000; valaddr_reg:x3; val_offset:148203*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148203*0 + 3*249*FLEN/8, x4, x1, x2)

inst_49402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffff80000000; valaddr_reg:x3; val_offset:148206*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148206*0 + 3*250*FLEN/8, x4, x1, x2)

inst_49403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffc0000000; valaddr_reg:x3; val_offset:148209*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148209*0 + 3*251*FLEN/8, x4, x1, x2)

inst_49404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffe0000000; valaddr_reg:x3; val_offset:148212*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148212*0 + 3*252*FLEN/8, x4, x1, x2)

inst_49405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffff0000000; valaddr_reg:x3; val_offset:148215*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148215*0 + 3*253*FLEN/8, x4, x1, x2)

inst_49406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffff8000000; valaddr_reg:x3; val_offset:148218*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148218*0 + 3*254*FLEN/8, x4, x1, x2)

inst_49407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffc000000; valaddr_reg:x3; val_offset:148221*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148221*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_49408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffe000000; valaddr_reg:x3; val_offset:148224*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148224*0 + 3*256*FLEN/8, x4, x1, x2)

inst_49409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffff000000; valaddr_reg:x3; val_offset:148227*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148227*0 + 3*257*FLEN/8, x4, x1, x2)

inst_49410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffff800000; valaddr_reg:x3; val_offset:148230*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148230*0 + 3*258*FLEN/8, x4, x1, x2)

inst_49411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffffc00000; valaddr_reg:x3; val_offset:148233*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148233*0 + 3*259*FLEN/8, x4, x1, x2)

inst_49412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffffe00000; valaddr_reg:x3; val_offset:148236*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148236*0 + 3*260*FLEN/8, x4, x1, x2)

inst_49413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffff00000; valaddr_reg:x3; val_offset:148239*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148239*0 + 3*261*FLEN/8, x4, x1, x2)

inst_49414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffff80000; valaddr_reg:x3; val_offset:148242*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148242*0 + 3*262*FLEN/8, x4, x1, x2)

inst_49415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffffc0000; valaddr_reg:x3; val_offset:148245*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148245*0 + 3*263*FLEN/8, x4, x1, x2)

inst_49416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffffe0000; valaddr_reg:x3; val_offset:148248*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148248*0 + 3*264*FLEN/8, x4, x1, x2)

inst_49417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffffff0000; valaddr_reg:x3; val_offset:148251*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148251*0 + 3*265*FLEN/8, x4, x1, x2)

inst_49418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffffff8000; valaddr_reg:x3; val_offset:148254*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148254*0 + 3*266*FLEN/8, x4, x1, x2)

inst_49419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffffffc000; valaddr_reg:x3; val_offset:148257*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148257*0 + 3*267*FLEN/8, x4, x1, x2)

inst_49420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffffffe000; valaddr_reg:x3; val_offset:148260*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148260*0 + 3*268*FLEN/8, x4, x1, x2)

inst_49421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffffff000; valaddr_reg:x3; val_offset:148263*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148263*0 + 3*269*FLEN/8, x4, x1, x2)

inst_49422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffffff800; valaddr_reg:x3; val_offset:148266*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148266*0 + 3*270*FLEN/8, x4, x1, x2)

inst_49423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffffffc00; valaddr_reg:x3; val_offset:148269*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148269*0 + 3*271*FLEN/8, x4, x1, x2)

inst_49424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffffffe00; valaddr_reg:x3; val_offset:148272*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148272*0 + 3*272*FLEN/8, x4, x1, x2)

inst_49425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffffffff00; valaddr_reg:x3; val_offset:148275*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148275*0 + 3*273*FLEN/8, x4, x1, x2)

inst_49426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffffffff80; valaddr_reg:x3; val_offset:148278*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148278*0 + 3*274*FLEN/8, x4, x1, x2)

inst_49427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffffffffc0; valaddr_reg:x3; val_offset:148281*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148281*0 + 3*275*FLEN/8, x4, x1, x2)

inst_49428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffffffffe0; valaddr_reg:x3; val_offset:148284*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148284*0 + 3*276*FLEN/8, x4, x1, x2)

inst_49429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffffffff0; valaddr_reg:x3; val_offset:148287*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148287*0 + 3*277*FLEN/8, x4, x1, x2)

inst_49430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffffffff8; valaddr_reg:x3; val_offset:148290*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148290*0 + 3*278*FLEN/8, x4, x1, x2)

inst_49431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffffffffc; valaddr_reg:x3; val_offset:148293*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148293*0 + 3*279*FLEN/8, x4, x1, x2)

inst_49432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804ffffffffffffe; valaddr_reg:x3; val_offset:148296*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148296*0 + 3*280*FLEN/8, x4, x1, x2)

inst_49433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7f7bd88d7c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7f7bd88d7c8f; op2val:0x8000;
op3val:0x804fffffffffffff; valaddr_reg:x3; val_offset:148299*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148299*0 + 3*281*FLEN/8, x4, x1, x2)

inst_49434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:148302*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148302*0 + 3*282*FLEN/8, x4, x1, x2)

inst_49435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:148305*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148305*0 + 3*283*FLEN/8, x4, x1, x2)

inst_49436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:148308*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148308*0 + 3*284*FLEN/8, x4, x1, x2)

inst_49437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:148311*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148311*0 + 3*285*FLEN/8, x4, x1, x2)

inst_49438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:148314*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148314*0 + 3*286*FLEN/8, x4, x1, x2)

inst_49439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:148317*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148317*0 + 3*287*FLEN/8, x4, x1, x2)

inst_49440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:148320*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148320*0 + 3*288*FLEN/8, x4, x1, x2)

inst_49441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:148323*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148323*0 + 3*289*FLEN/8, x4, x1, x2)

inst_49442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:148326*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148326*0 + 3*290*FLEN/8, x4, x1, x2)

inst_49443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:148329*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148329*0 + 3*291*FLEN/8, x4, x1, x2)

inst_49444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:148332*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148332*0 + 3*292*FLEN/8, x4, x1, x2)

inst_49445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:148335*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148335*0 + 3*293*FLEN/8, x4, x1, x2)

inst_49446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:148338*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148338*0 + 3*294*FLEN/8, x4, x1, x2)

inst_49447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:148341*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148341*0 + 3*295*FLEN/8, x4, x1, x2)

inst_49448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:148344*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148344*0 + 3*296*FLEN/8, x4, x1, x2)

inst_49449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:148347*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148347*0 + 3*297*FLEN/8, x4, x1, x2)

inst_49450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:148350*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148350*0 + 3*298*FLEN/8, x4, x1, x2)

inst_49451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:148353*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148353*0 + 3*299*FLEN/8, x4, x1, x2)

inst_49452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:148356*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148356*0 + 3*300*FLEN/8, x4, x1, x2)

inst_49453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:148359*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148359*0 + 3*301*FLEN/8, x4, x1, x2)

inst_49454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:148362*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148362*0 + 3*302*FLEN/8, x4, x1, x2)

inst_49455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:148365*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148365*0 + 3*303*FLEN/8, x4, x1, x2)

inst_49456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000000000000; valaddr_reg:x3; val_offset:148368*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148368*0 + 3*304*FLEN/8, x4, x1, x2)

inst_49457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000000000001; valaddr_reg:x3; val_offset:148371*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148371*0 + 3*305*FLEN/8, x4, x1, x2)

inst_49458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000000000003; valaddr_reg:x3; val_offset:148374*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148374*0 + 3*306*FLEN/8, x4, x1, x2)

inst_49459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000000000007; valaddr_reg:x3; val_offset:148377*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148377*0 + 3*307*FLEN/8, x4, x1, x2)

inst_49460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000000000000f; valaddr_reg:x3; val_offset:148380*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148380*0 + 3*308*FLEN/8, x4, x1, x2)

inst_49461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000000000001f; valaddr_reg:x3; val_offset:148383*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148383*0 + 3*309*FLEN/8, x4, x1, x2)

inst_49462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000000000003f; valaddr_reg:x3; val_offset:148386*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148386*0 + 3*310*FLEN/8, x4, x1, x2)

inst_49463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000000000007f; valaddr_reg:x3; val_offset:148389*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148389*0 + 3*311*FLEN/8, x4, x1, x2)

inst_49464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200000000000ff; valaddr_reg:x3; val_offset:148392*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148392*0 + 3*312*FLEN/8, x4, x1, x2)

inst_49465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200000000001ff; valaddr_reg:x3; val_offset:148395*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148395*0 + 3*313*FLEN/8, x4, x1, x2)

inst_49466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200000000003ff; valaddr_reg:x3; val_offset:148398*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148398*0 + 3*314*FLEN/8, x4, x1, x2)

inst_49467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200000000007ff; valaddr_reg:x3; val_offset:148401*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148401*0 + 3*315*FLEN/8, x4, x1, x2)

inst_49468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000000000fff; valaddr_reg:x3; val_offset:148404*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148404*0 + 3*316*FLEN/8, x4, x1, x2)

inst_49469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000000001fff; valaddr_reg:x3; val_offset:148407*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148407*0 + 3*317*FLEN/8, x4, x1, x2)

inst_49470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000000003fff; valaddr_reg:x3; val_offset:148410*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148410*0 + 3*318*FLEN/8, x4, x1, x2)

inst_49471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000000007fff; valaddr_reg:x3; val_offset:148413*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148413*0 + 3*319*FLEN/8, x4, x1, x2)

inst_49472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000000000ffff; valaddr_reg:x3; val_offset:148416*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148416*0 + 3*320*FLEN/8, x4, x1, x2)

inst_49473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000000001ffff; valaddr_reg:x3; val_offset:148419*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148419*0 + 3*321*FLEN/8, x4, x1, x2)

inst_49474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000000003ffff; valaddr_reg:x3; val_offset:148422*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148422*0 + 3*322*FLEN/8, x4, x1, x2)

inst_49475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000000007ffff; valaddr_reg:x3; val_offset:148425*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148425*0 + 3*323*FLEN/8, x4, x1, x2)

inst_49476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200000000fffff; valaddr_reg:x3; val_offset:148428*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148428*0 + 3*324*FLEN/8, x4, x1, x2)

inst_49477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200000001fffff; valaddr_reg:x3; val_offset:148431*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148431*0 + 3*325*FLEN/8, x4, x1, x2)

inst_49478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200000003fffff; valaddr_reg:x3; val_offset:148434*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148434*0 + 3*326*FLEN/8, x4, x1, x2)

inst_49479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200000007fffff; valaddr_reg:x3; val_offset:148437*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148437*0 + 3*327*FLEN/8, x4, x1, x2)

inst_49480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000000ffffff; valaddr_reg:x3; val_offset:148440*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148440*0 + 3*328*FLEN/8, x4, x1, x2)

inst_49481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000001ffffff; valaddr_reg:x3; val_offset:148443*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148443*0 + 3*329*FLEN/8, x4, x1, x2)

inst_49482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000003ffffff; valaddr_reg:x3; val_offset:148446*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148446*0 + 3*330*FLEN/8, x4, x1, x2)

inst_49483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000007ffffff; valaddr_reg:x3; val_offset:148449*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148449*0 + 3*331*FLEN/8, x4, x1, x2)

inst_49484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000000fffffff; valaddr_reg:x3; val_offset:148452*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148452*0 + 3*332*FLEN/8, x4, x1, x2)

inst_49485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000001fffffff; valaddr_reg:x3; val_offset:148455*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148455*0 + 3*333*FLEN/8, x4, x1, x2)

inst_49486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000003fffffff; valaddr_reg:x3; val_offset:148458*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148458*0 + 3*334*FLEN/8, x4, x1, x2)

inst_49487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000007fffffff; valaddr_reg:x3; val_offset:148461*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148461*0 + 3*335*FLEN/8, x4, x1, x2)

inst_49488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200000ffffffff; valaddr_reg:x3; val_offset:148464*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148464*0 + 3*336*FLEN/8, x4, x1, x2)

inst_49489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200001ffffffff; valaddr_reg:x3; val_offset:148467*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148467*0 + 3*337*FLEN/8, x4, x1, x2)

inst_49490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200003ffffffff; valaddr_reg:x3; val_offset:148470*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148470*0 + 3*338*FLEN/8, x4, x1, x2)

inst_49491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200007ffffffff; valaddr_reg:x3; val_offset:148473*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148473*0 + 3*339*FLEN/8, x4, x1, x2)

inst_49492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220000fffffffff; valaddr_reg:x3; val_offset:148476*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148476*0 + 3*340*FLEN/8, x4, x1, x2)

inst_49493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220001fffffffff; valaddr_reg:x3; val_offset:148479*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148479*0 + 3*341*FLEN/8, x4, x1, x2)

inst_49494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220003fffffffff; valaddr_reg:x3; val_offset:148482*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148482*0 + 3*342*FLEN/8, x4, x1, x2)

inst_49495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220007fffffffff; valaddr_reg:x3; val_offset:148485*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148485*0 + 3*343*FLEN/8, x4, x1, x2)

inst_49496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822000ffffffffff; valaddr_reg:x3; val_offset:148488*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148488*0 + 3*344*FLEN/8, x4, x1, x2)

inst_49497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822001ffffffffff; valaddr_reg:x3; val_offset:148491*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148491*0 + 3*345*FLEN/8, x4, x1, x2)

inst_49498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822003ffffffffff; valaddr_reg:x3; val_offset:148494*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148494*0 + 3*346*FLEN/8, x4, x1, x2)

inst_49499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822007ffffffffff; valaddr_reg:x3; val_offset:148497*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148497*0 + 3*347*FLEN/8, x4, x1, x2)

inst_49500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82200fffffffffff; valaddr_reg:x3; val_offset:148500*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148500*0 + 3*348*FLEN/8, x4, x1, x2)

inst_49501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82201fffffffffff; valaddr_reg:x3; val_offset:148503*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148503*0 + 3*349*FLEN/8, x4, x1, x2)

inst_49502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82203fffffffffff; valaddr_reg:x3; val_offset:148506*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148506*0 + 3*350*FLEN/8, x4, x1, x2)

inst_49503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x82207fffffffffff; valaddr_reg:x3; val_offset:148509*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148509*0 + 3*351*FLEN/8, x4, x1, x2)

inst_49504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8220ffffffffffff; valaddr_reg:x3; val_offset:148512*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148512*0 + 3*352*FLEN/8, x4, x1, x2)

inst_49505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8221ffffffffffff; valaddr_reg:x3; val_offset:148515*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148515*0 + 3*353*FLEN/8, x4, x1, x2)

inst_49506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8223ffffffffffff; valaddr_reg:x3; val_offset:148518*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148518*0 + 3*354*FLEN/8, x4, x1, x2)

inst_49507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8227ffffffffffff; valaddr_reg:x3; val_offset:148521*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148521*0 + 3*355*FLEN/8, x4, x1, x2)

inst_49508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x8228000000000000; valaddr_reg:x3; val_offset:148524*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148524*0 + 3*356*FLEN/8, x4, x1, x2)

inst_49509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822c000000000000; valaddr_reg:x3; val_offset:148527*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148527*0 + 3*357*FLEN/8, x4, x1, x2)

inst_49510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822e000000000000; valaddr_reg:x3; val_offset:148530*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148530*0 + 3*358*FLEN/8, x4, x1, x2)

inst_49511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822f000000000000; valaddr_reg:x3; val_offset:148533*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148533*0 + 3*359*FLEN/8, x4, x1, x2)

inst_49512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822f800000000000; valaddr_reg:x3; val_offset:148536*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148536*0 + 3*360*FLEN/8, x4, x1, x2)

inst_49513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fc00000000000; valaddr_reg:x3; val_offset:148539*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148539*0 + 3*361*FLEN/8, x4, x1, x2)

inst_49514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fe00000000000; valaddr_reg:x3; val_offset:148542*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148542*0 + 3*362*FLEN/8, x4, x1, x2)

inst_49515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ff00000000000; valaddr_reg:x3; val_offset:148545*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148545*0 + 3*363*FLEN/8, x4, x1, x2)

inst_49516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ff80000000000; valaddr_reg:x3; val_offset:148548*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148548*0 + 3*364*FLEN/8, x4, x1, x2)

inst_49517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffc0000000000; valaddr_reg:x3; val_offset:148551*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148551*0 + 3*365*FLEN/8, x4, x1, x2)

inst_49518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffe0000000000; valaddr_reg:x3; val_offset:148554*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148554*0 + 3*366*FLEN/8, x4, x1, x2)

inst_49519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fff0000000000; valaddr_reg:x3; val_offset:148557*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148557*0 + 3*367*FLEN/8, x4, x1, x2)

inst_49520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fff8000000000; valaddr_reg:x3; val_offset:148560*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148560*0 + 3*368*FLEN/8, x4, x1, x2)

inst_49521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffc000000000; valaddr_reg:x3; val_offset:148563*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148563*0 + 3*369*FLEN/8, x4, x1, x2)

inst_49522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffe000000000; valaddr_reg:x3; val_offset:148566*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148566*0 + 3*370*FLEN/8, x4, x1, x2)

inst_49523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffff000000000; valaddr_reg:x3; val_offset:148569*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148569*0 + 3*371*FLEN/8, x4, x1, x2)

inst_49524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffff800000000; valaddr_reg:x3; val_offset:148572*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148572*0 + 3*372*FLEN/8, x4, x1, x2)

inst_49525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffc00000000; valaddr_reg:x3; val_offset:148575*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148575*0 + 3*373*FLEN/8, x4, x1, x2)

inst_49526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffe00000000; valaddr_reg:x3; val_offset:148578*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148578*0 + 3*374*FLEN/8, x4, x1, x2)

inst_49527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffff00000000; valaddr_reg:x3; val_offset:148581*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148581*0 + 3*375*FLEN/8, x4, x1, x2)

inst_49528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffff80000000; valaddr_reg:x3; val_offset:148584*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148584*0 + 3*376*FLEN/8, x4, x1, x2)

inst_49529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffc0000000; valaddr_reg:x3; val_offset:148587*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148587*0 + 3*377*FLEN/8, x4, x1, x2)

inst_49530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffe0000000; valaddr_reg:x3; val_offset:148590*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148590*0 + 3*378*FLEN/8, x4, x1, x2)

inst_49531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffff0000000; valaddr_reg:x3; val_offset:148593*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148593*0 + 3*379*FLEN/8, x4, x1, x2)

inst_49532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffff8000000; valaddr_reg:x3; val_offset:148596*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148596*0 + 3*380*FLEN/8, x4, x1, x2)

inst_49533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffc000000; valaddr_reg:x3; val_offset:148599*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148599*0 + 3*381*FLEN/8, x4, x1, x2)

inst_49534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffe000000; valaddr_reg:x3; val_offset:148602*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148602*0 + 3*382*FLEN/8, x4, x1, x2)

inst_49535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffff000000; valaddr_reg:x3; val_offset:148605*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148605*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_49536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffff800000; valaddr_reg:x3; val_offset:148608*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148608*0 + 3*384*FLEN/8, x4, x1, x2)

inst_49537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffffc00000; valaddr_reg:x3; val_offset:148611*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148611*0 + 3*385*FLEN/8, x4, x1, x2)

inst_49538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffffe00000; valaddr_reg:x3; val_offset:148614*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148614*0 + 3*386*FLEN/8, x4, x1, x2)

inst_49539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffff00000; valaddr_reg:x3; val_offset:148617*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148617*0 + 3*387*FLEN/8, x4, x1, x2)

inst_49540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffff80000; valaddr_reg:x3; val_offset:148620*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148620*0 + 3*388*FLEN/8, x4, x1, x2)

inst_49541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffffc0000; valaddr_reg:x3; val_offset:148623*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148623*0 + 3*389*FLEN/8, x4, x1, x2)

inst_49542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffffe0000; valaddr_reg:x3; val_offset:148626*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148626*0 + 3*390*FLEN/8, x4, x1, x2)

inst_49543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffffff0000; valaddr_reg:x3; val_offset:148629*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148629*0 + 3*391*FLEN/8, x4, x1, x2)

inst_49544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffffff8000; valaddr_reg:x3; val_offset:148632*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148632*0 + 3*392*FLEN/8, x4, x1, x2)

inst_49545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffffffc000; valaddr_reg:x3; val_offset:148635*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148635*0 + 3*393*FLEN/8, x4, x1, x2)

inst_49546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffffffe000; valaddr_reg:x3; val_offset:148638*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148638*0 + 3*394*FLEN/8, x4, x1, x2)

inst_49547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffffff000; valaddr_reg:x3; val_offset:148641*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148641*0 + 3*395*FLEN/8, x4, x1, x2)

inst_49548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffffff800; valaddr_reg:x3; val_offset:148644*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148644*0 + 3*396*FLEN/8, x4, x1, x2)

inst_49549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffffffc00; valaddr_reg:x3; val_offset:148647*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148647*0 + 3*397*FLEN/8, x4, x1, x2)

inst_49550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffffffe00; valaddr_reg:x3; val_offset:148650*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148650*0 + 3*398*FLEN/8, x4, x1, x2)

inst_49551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffffffff00; valaddr_reg:x3; val_offset:148653*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148653*0 + 3*399*FLEN/8, x4, x1, x2)

inst_49552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffffffff80; valaddr_reg:x3; val_offset:148656*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148656*0 + 3*400*FLEN/8, x4, x1, x2)

inst_49553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffffffffc0; valaddr_reg:x3; val_offset:148659*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148659*0 + 3*401*FLEN/8, x4, x1, x2)

inst_49554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffffffffe0; valaddr_reg:x3; val_offset:148662*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148662*0 + 3*402*FLEN/8, x4, x1, x2)

inst_49555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffffffff0; valaddr_reg:x3; val_offset:148665*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148665*0 + 3*403*FLEN/8, x4, x1, x2)

inst_49556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffffffff8; valaddr_reg:x3; val_offset:148668*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148668*0 + 3*404*FLEN/8, x4, x1, x2)

inst_49557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffffffffc; valaddr_reg:x3; val_offset:148671*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148671*0 + 3*405*FLEN/8, x4, x1, x2)

inst_49558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822ffffffffffffe; valaddr_reg:x3; val_offset:148674*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148674*0 + 3*406*FLEN/8, x4, x1, x2)

inst_49559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe8280abe92e75 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e8280abe92e75; op2val:0x8000;
op3val:0x822fffffffffffff; valaddr_reg:x3; val_offset:148677*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148677*0 + 3*407*FLEN/8, x4, x1, x2)

inst_49560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000000000000; valaddr_reg:x3; val_offset:148680*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148680*0 + 3*408*FLEN/8, x4, x1, x2)

inst_49561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000000000001; valaddr_reg:x3; val_offset:148683*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148683*0 + 3*409*FLEN/8, x4, x1, x2)

inst_49562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000000000003; valaddr_reg:x3; val_offset:148686*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148686*0 + 3*410*FLEN/8, x4, x1, x2)

inst_49563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000000000007; valaddr_reg:x3; val_offset:148689*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148689*0 + 3*411*FLEN/8, x4, x1, x2)

inst_49564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000000000000f; valaddr_reg:x3; val_offset:148692*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148692*0 + 3*412*FLEN/8, x4, x1, x2)

inst_49565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000000000001f; valaddr_reg:x3; val_offset:148695*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148695*0 + 3*413*FLEN/8, x4, x1, x2)

inst_49566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000000000003f; valaddr_reg:x3; val_offset:148698*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148698*0 + 3*414*FLEN/8, x4, x1, x2)

inst_49567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000000000007f; valaddr_reg:x3; val_offset:148701*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148701*0 + 3*415*FLEN/8, x4, x1, x2)

inst_49568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200000000000ff; valaddr_reg:x3; val_offset:148704*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148704*0 + 3*416*FLEN/8, x4, x1, x2)

inst_49569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200000000001ff; valaddr_reg:x3; val_offset:148707*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148707*0 + 3*417*FLEN/8, x4, x1, x2)

inst_49570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200000000003ff; valaddr_reg:x3; val_offset:148710*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148710*0 + 3*418*FLEN/8, x4, x1, x2)

inst_49571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200000000007ff; valaddr_reg:x3; val_offset:148713*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148713*0 + 3*419*FLEN/8, x4, x1, x2)

inst_49572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000000000fff; valaddr_reg:x3; val_offset:148716*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148716*0 + 3*420*FLEN/8, x4, x1, x2)

inst_49573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000000001fff; valaddr_reg:x3; val_offset:148719*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148719*0 + 3*421*FLEN/8, x4, x1, x2)

inst_49574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000000003fff; valaddr_reg:x3; val_offset:148722*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148722*0 + 3*422*FLEN/8, x4, x1, x2)

inst_49575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000000007fff; valaddr_reg:x3; val_offset:148725*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148725*0 + 3*423*FLEN/8, x4, x1, x2)

inst_49576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000000000ffff; valaddr_reg:x3; val_offset:148728*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148728*0 + 3*424*FLEN/8, x4, x1, x2)

inst_49577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000000001ffff; valaddr_reg:x3; val_offset:148731*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148731*0 + 3*425*FLEN/8, x4, x1, x2)

inst_49578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000000003ffff; valaddr_reg:x3; val_offset:148734*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148734*0 + 3*426*FLEN/8, x4, x1, x2)

inst_49579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000000007ffff; valaddr_reg:x3; val_offset:148737*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148737*0 + 3*427*FLEN/8, x4, x1, x2)

inst_49580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200000000fffff; valaddr_reg:x3; val_offset:148740*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148740*0 + 3*428*FLEN/8, x4, x1, x2)

inst_49581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200000001fffff; valaddr_reg:x3; val_offset:148743*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148743*0 + 3*429*FLEN/8, x4, x1, x2)

inst_49582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200000003fffff; valaddr_reg:x3; val_offset:148746*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148746*0 + 3*430*FLEN/8, x4, x1, x2)

inst_49583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200000007fffff; valaddr_reg:x3; val_offset:148749*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148749*0 + 3*431*FLEN/8, x4, x1, x2)

inst_49584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000000ffffff; valaddr_reg:x3; val_offset:148752*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148752*0 + 3*432*FLEN/8, x4, x1, x2)

inst_49585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000001ffffff; valaddr_reg:x3; val_offset:148755*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148755*0 + 3*433*FLEN/8, x4, x1, x2)

inst_49586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000003ffffff; valaddr_reg:x3; val_offset:148758*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148758*0 + 3*434*FLEN/8, x4, x1, x2)

inst_49587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000007ffffff; valaddr_reg:x3; val_offset:148761*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148761*0 + 3*435*FLEN/8, x4, x1, x2)

inst_49588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000000fffffff; valaddr_reg:x3; val_offset:148764*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148764*0 + 3*436*FLEN/8, x4, x1, x2)

inst_49589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000001fffffff; valaddr_reg:x3; val_offset:148767*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148767*0 + 3*437*FLEN/8, x4, x1, x2)

inst_49590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000003fffffff; valaddr_reg:x3; val_offset:148770*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148770*0 + 3*438*FLEN/8, x4, x1, x2)

inst_49591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000007fffffff; valaddr_reg:x3; val_offset:148773*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148773*0 + 3*439*FLEN/8, x4, x1, x2)

inst_49592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200000ffffffff; valaddr_reg:x3; val_offset:148776*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148776*0 + 3*440*FLEN/8, x4, x1, x2)

inst_49593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200001ffffffff; valaddr_reg:x3; val_offset:148779*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148779*0 + 3*441*FLEN/8, x4, x1, x2)

inst_49594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200003ffffffff; valaddr_reg:x3; val_offset:148782*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148782*0 + 3*442*FLEN/8, x4, x1, x2)

inst_49595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200007ffffffff; valaddr_reg:x3; val_offset:148785*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148785*0 + 3*443*FLEN/8, x4, x1, x2)

inst_49596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820000fffffffff; valaddr_reg:x3; val_offset:148788*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148788*0 + 3*444*FLEN/8, x4, x1, x2)

inst_49597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820001fffffffff; valaddr_reg:x3; val_offset:148791*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148791*0 + 3*445*FLEN/8, x4, x1, x2)

inst_49598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820003fffffffff; valaddr_reg:x3; val_offset:148794*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148794*0 + 3*446*FLEN/8, x4, x1, x2)

inst_49599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820007fffffffff; valaddr_reg:x3; val_offset:148797*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148797*0 + 3*447*FLEN/8, x4, x1, x2)

inst_49600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82000ffffffffff; valaddr_reg:x3; val_offset:148800*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148800*0 + 3*448*FLEN/8, x4, x1, x2)

inst_49601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82001ffffffffff; valaddr_reg:x3; val_offset:148803*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148803*0 + 3*449*FLEN/8, x4, x1, x2)

inst_49602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82003ffffffffff; valaddr_reg:x3; val_offset:148806*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148806*0 + 3*450*FLEN/8, x4, x1, x2)

inst_49603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82007ffffffffff; valaddr_reg:x3; val_offset:148809*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148809*0 + 3*451*FLEN/8, x4, x1, x2)

inst_49604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8200fffffffffff; valaddr_reg:x3; val_offset:148812*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148812*0 + 3*452*FLEN/8, x4, x1, x2)

inst_49605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8201fffffffffff; valaddr_reg:x3; val_offset:148815*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148815*0 + 3*453*FLEN/8, x4, x1, x2)

inst_49606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8203fffffffffff; valaddr_reg:x3; val_offset:148818*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148818*0 + 3*454*FLEN/8, x4, x1, x2)

inst_49607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb8207fffffffffff; valaddr_reg:x3; val_offset:148821*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148821*0 + 3*455*FLEN/8, x4, x1, x2)

inst_49608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb820ffffffffffff; valaddr_reg:x3; val_offset:148824*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148824*0 + 3*456*FLEN/8, x4, x1, x2)

inst_49609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb821ffffffffffff; valaddr_reg:x3; val_offset:148827*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148827*0 + 3*457*FLEN/8, x4, x1, x2)

inst_49610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb823ffffffffffff; valaddr_reg:x3; val_offset:148830*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148830*0 + 3*458*FLEN/8, x4, x1, x2)

inst_49611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb827ffffffffffff; valaddr_reg:x3; val_offset:148833*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148833*0 + 3*459*FLEN/8, x4, x1, x2)

inst_49612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb828000000000000; valaddr_reg:x3; val_offset:148836*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148836*0 + 3*460*FLEN/8, x4, x1, x2)

inst_49613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82c000000000000; valaddr_reg:x3; val_offset:148839*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148839*0 + 3*461*FLEN/8, x4, x1, x2)

inst_49614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82e000000000000; valaddr_reg:x3; val_offset:148842*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148842*0 + 3*462*FLEN/8, x4, x1, x2)

inst_49615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82f000000000000; valaddr_reg:x3; val_offset:148845*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148845*0 + 3*463*FLEN/8, x4, x1, x2)

inst_49616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82f800000000000; valaddr_reg:x3; val_offset:148848*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148848*0 + 3*464*FLEN/8, x4, x1, x2)

inst_49617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fc00000000000; valaddr_reg:x3; val_offset:148851*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148851*0 + 3*465*FLEN/8, x4, x1, x2)

inst_49618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fe00000000000; valaddr_reg:x3; val_offset:148854*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148854*0 + 3*466*FLEN/8, x4, x1, x2)

inst_49619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ff00000000000; valaddr_reg:x3; val_offset:148857*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148857*0 + 3*467*FLEN/8, x4, x1, x2)

inst_49620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ff80000000000; valaddr_reg:x3; val_offset:148860*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148860*0 + 3*468*FLEN/8, x4, x1, x2)

inst_49621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffc0000000000; valaddr_reg:x3; val_offset:148863*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148863*0 + 3*469*FLEN/8, x4, x1, x2)

inst_49622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffe0000000000; valaddr_reg:x3; val_offset:148866*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148866*0 + 3*470*FLEN/8, x4, x1, x2)

inst_49623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fff0000000000; valaddr_reg:x3; val_offset:148869*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148869*0 + 3*471*FLEN/8, x4, x1, x2)

inst_49624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fff8000000000; valaddr_reg:x3; val_offset:148872*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148872*0 + 3*472*FLEN/8, x4, x1, x2)

inst_49625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffc000000000; valaddr_reg:x3; val_offset:148875*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148875*0 + 3*473*FLEN/8, x4, x1, x2)

inst_49626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffe000000000; valaddr_reg:x3; val_offset:148878*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148878*0 + 3*474*FLEN/8, x4, x1, x2)

inst_49627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffff000000000; valaddr_reg:x3; val_offset:148881*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148881*0 + 3*475*FLEN/8, x4, x1, x2)

inst_49628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffff800000000; valaddr_reg:x3; val_offset:148884*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148884*0 + 3*476*FLEN/8, x4, x1, x2)

inst_49629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffc00000000; valaddr_reg:x3; val_offset:148887*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148887*0 + 3*477*FLEN/8, x4, x1, x2)

inst_49630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffe00000000; valaddr_reg:x3; val_offset:148890*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148890*0 + 3*478*FLEN/8, x4, x1, x2)

inst_49631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffff00000000; valaddr_reg:x3; val_offset:148893*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148893*0 + 3*479*FLEN/8, x4, x1, x2)

inst_49632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffff80000000; valaddr_reg:x3; val_offset:148896*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148896*0 + 3*480*FLEN/8, x4, x1, x2)

inst_49633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffc0000000; valaddr_reg:x3; val_offset:148899*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148899*0 + 3*481*FLEN/8, x4, x1, x2)

inst_49634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffe0000000; valaddr_reg:x3; val_offset:148902*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148902*0 + 3*482*FLEN/8, x4, x1, x2)

inst_49635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffff0000000; valaddr_reg:x3; val_offset:148905*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148905*0 + 3*483*FLEN/8, x4, x1, x2)

inst_49636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffff8000000; valaddr_reg:x3; val_offset:148908*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148908*0 + 3*484*FLEN/8, x4, x1, x2)

inst_49637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffc000000; valaddr_reg:x3; val_offset:148911*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148911*0 + 3*485*FLEN/8, x4, x1, x2)

inst_49638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffe000000; valaddr_reg:x3; val_offset:148914*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148914*0 + 3*486*FLEN/8, x4, x1, x2)

inst_49639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffff000000; valaddr_reg:x3; val_offset:148917*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148917*0 + 3*487*FLEN/8, x4, x1, x2)

inst_49640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffff800000; valaddr_reg:x3; val_offset:148920*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148920*0 + 3*488*FLEN/8, x4, x1, x2)

inst_49641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffffc00000; valaddr_reg:x3; val_offset:148923*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148923*0 + 3*489*FLEN/8, x4, x1, x2)

inst_49642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffffe00000; valaddr_reg:x3; val_offset:148926*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148926*0 + 3*490*FLEN/8, x4, x1, x2)

inst_49643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffff00000; valaddr_reg:x3; val_offset:148929*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148929*0 + 3*491*FLEN/8, x4, x1, x2)

inst_49644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffff80000; valaddr_reg:x3; val_offset:148932*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148932*0 + 3*492*FLEN/8, x4, x1, x2)

inst_49645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffffc0000; valaddr_reg:x3; val_offset:148935*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148935*0 + 3*493*FLEN/8, x4, x1, x2)

inst_49646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffffe0000; valaddr_reg:x3; val_offset:148938*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148938*0 + 3*494*FLEN/8, x4, x1, x2)

inst_49647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffffff0000; valaddr_reg:x3; val_offset:148941*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148941*0 + 3*495*FLEN/8, x4, x1, x2)

inst_49648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffffff8000; valaddr_reg:x3; val_offset:148944*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148944*0 + 3*496*FLEN/8, x4, x1, x2)

inst_49649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffffffc000; valaddr_reg:x3; val_offset:148947*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148947*0 + 3*497*FLEN/8, x4, x1, x2)

inst_49650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffffffe000; valaddr_reg:x3; val_offset:148950*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148950*0 + 3*498*FLEN/8, x4, x1, x2)

inst_49651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffffff000; valaddr_reg:x3; val_offset:148953*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148953*0 + 3*499*FLEN/8, x4, x1, x2)

inst_49652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffffff800; valaddr_reg:x3; val_offset:148956*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148956*0 + 3*500*FLEN/8, x4, x1, x2)

inst_49653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffffffc00; valaddr_reg:x3; val_offset:148959*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148959*0 + 3*501*FLEN/8, x4, x1, x2)

inst_49654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffffffe00; valaddr_reg:x3; val_offset:148962*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148962*0 + 3*502*FLEN/8, x4, x1, x2)

inst_49655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffffffff00; valaddr_reg:x3; val_offset:148965*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148965*0 + 3*503*FLEN/8, x4, x1, x2)

inst_49656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffffffff80; valaddr_reg:x3; val_offset:148968*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148968*0 + 3*504*FLEN/8, x4, x1, x2)

inst_49657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffffffffc0; valaddr_reg:x3; val_offset:148971*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148971*0 + 3*505*FLEN/8, x4, x1, x2)

inst_49658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffffffffe0; valaddr_reg:x3; val_offset:148974*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148974*0 + 3*506*FLEN/8, x4, x1, x2)

inst_49659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffffffff0; valaddr_reg:x3; val_offset:148977*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148977*0 + 3*507*FLEN/8, x4, x1, x2)

inst_49660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffffffff8; valaddr_reg:x3; val_offset:148980*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148980*0 + 3*508*FLEN/8, x4, x1, x2)

inst_49661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffffffffc; valaddr_reg:x3; val_offset:148983*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148983*0 + 3*509*FLEN/8, x4, x1, x2)

inst_49662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82ffffffffffffe; valaddr_reg:x3; val_offset:148986*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148986*0 + 3*510*FLEN/8, x4, x1, x2)

inst_49663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xb82fffffffffffff; valaddr_reg:x3; val_offset:148989*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148989*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_49664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:148992*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148992*0 + 3*512*FLEN/8, x4, x1, x2)

inst_49665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:148995*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148995*0 + 3*513*FLEN/8, x4, x1, x2)

inst_49666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:148998*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 148998*0 + 3*514*FLEN/8, x4, x1, x2)

inst_49667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:149001*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149001*0 + 3*515*FLEN/8, x4, x1, x2)

inst_49668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:149004*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149004*0 + 3*516*FLEN/8, x4, x1, x2)

inst_49669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:149007*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149007*0 + 3*517*FLEN/8, x4, x1, x2)

inst_49670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:149010*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149010*0 + 3*518*FLEN/8, x4, x1, x2)

inst_49671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:149013*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149013*0 + 3*519*FLEN/8, x4, x1, x2)

inst_49672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:149016*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149016*0 + 3*520*FLEN/8, x4, x1, x2)

inst_49673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:149019*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149019*0 + 3*521*FLEN/8, x4, x1, x2)

inst_49674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:149022*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149022*0 + 3*522*FLEN/8, x4, x1, x2)

inst_49675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:149025*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149025*0 + 3*523*FLEN/8, x4, x1, x2)

inst_49676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:149028*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149028*0 + 3*524*FLEN/8, x4, x1, x2)

inst_49677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:149031*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149031*0 + 3*525*FLEN/8, x4, x1, x2)

inst_49678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:149034*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149034*0 + 3*526*FLEN/8, x4, x1, x2)

inst_49679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:149037*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149037*0 + 3*527*FLEN/8, x4, x1, x2)

inst_49680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:149040*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149040*0 + 3*528*FLEN/8, x4, x1, x2)

inst_49681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:149043*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149043*0 + 3*529*FLEN/8, x4, x1, x2)

inst_49682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:149046*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149046*0 + 3*530*FLEN/8, x4, x1, x2)

inst_49683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:149049*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149049*0 + 3*531*FLEN/8, x4, x1, x2)

inst_49684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:149052*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149052*0 + 3*532*FLEN/8, x4, x1, x2)

inst_49685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe989c8dd81bc5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0bbf072a89b47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e989c8dd81bc5; op2val:0x9fd0bbf072a89b47;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:149055*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149055*0 + 3*533*FLEN/8, x4, x1, x2)

inst_49686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000000000000; valaddr_reg:x3; val_offset:149058*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149058*0 + 3*534*FLEN/8, x4, x1, x2)

inst_49687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000000000001; valaddr_reg:x3; val_offset:149061*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149061*0 + 3*535*FLEN/8, x4, x1, x2)

inst_49688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000000000003; valaddr_reg:x3; val_offset:149064*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149064*0 + 3*536*FLEN/8, x4, x1, x2)

inst_49689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000000000007; valaddr_reg:x3; val_offset:149067*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149067*0 + 3*537*FLEN/8, x4, x1, x2)

inst_49690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000000000000f; valaddr_reg:x3; val_offset:149070*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149070*0 + 3*538*FLEN/8, x4, x1, x2)

inst_49691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000000000001f; valaddr_reg:x3; val_offset:149073*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149073*0 + 3*539*FLEN/8, x4, x1, x2)

inst_49692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000000000003f; valaddr_reg:x3; val_offset:149076*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149076*0 + 3*540*FLEN/8, x4, x1, x2)

inst_49693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000000000007f; valaddr_reg:x3; val_offset:149079*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149079*0 + 3*541*FLEN/8, x4, x1, x2)

inst_49694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100000000000ff; valaddr_reg:x3; val_offset:149082*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149082*0 + 3*542*FLEN/8, x4, x1, x2)

inst_49695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100000000001ff; valaddr_reg:x3; val_offset:149085*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149085*0 + 3*543*FLEN/8, x4, x1, x2)

inst_49696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100000000003ff; valaddr_reg:x3; val_offset:149088*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149088*0 + 3*544*FLEN/8, x4, x1, x2)

inst_49697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100000000007ff; valaddr_reg:x3; val_offset:149091*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149091*0 + 3*545*FLEN/8, x4, x1, x2)

inst_49698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000000000fff; valaddr_reg:x3; val_offset:149094*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149094*0 + 3*546*FLEN/8, x4, x1, x2)

inst_49699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000000001fff; valaddr_reg:x3; val_offset:149097*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149097*0 + 3*547*FLEN/8, x4, x1, x2)

inst_49700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000000003fff; valaddr_reg:x3; val_offset:149100*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149100*0 + 3*548*FLEN/8, x4, x1, x2)

inst_49701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000000007fff; valaddr_reg:x3; val_offset:149103*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149103*0 + 3*549*FLEN/8, x4, x1, x2)

inst_49702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000000000ffff; valaddr_reg:x3; val_offset:149106*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149106*0 + 3*550*FLEN/8, x4, x1, x2)

inst_49703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000000001ffff; valaddr_reg:x3; val_offset:149109*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149109*0 + 3*551*FLEN/8, x4, x1, x2)

inst_49704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000000003ffff; valaddr_reg:x3; val_offset:149112*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149112*0 + 3*552*FLEN/8, x4, x1, x2)

inst_49705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000000007ffff; valaddr_reg:x3; val_offset:149115*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149115*0 + 3*553*FLEN/8, x4, x1, x2)

inst_49706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100000000fffff; valaddr_reg:x3; val_offset:149118*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149118*0 + 3*554*FLEN/8, x4, x1, x2)

inst_49707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100000001fffff; valaddr_reg:x3; val_offset:149121*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149121*0 + 3*555*FLEN/8, x4, x1, x2)

inst_49708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100000003fffff; valaddr_reg:x3; val_offset:149124*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149124*0 + 3*556*FLEN/8, x4, x1, x2)

inst_49709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100000007fffff; valaddr_reg:x3; val_offset:149127*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149127*0 + 3*557*FLEN/8, x4, x1, x2)

inst_49710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000000ffffff; valaddr_reg:x3; val_offset:149130*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149130*0 + 3*558*FLEN/8, x4, x1, x2)

inst_49711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000001ffffff; valaddr_reg:x3; val_offset:149133*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149133*0 + 3*559*FLEN/8, x4, x1, x2)

inst_49712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000003ffffff; valaddr_reg:x3; val_offset:149136*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149136*0 + 3*560*FLEN/8, x4, x1, x2)

inst_49713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000007ffffff; valaddr_reg:x3; val_offset:149139*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149139*0 + 3*561*FLEN/8, x4, x1, x2)

inst_49714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000000fffffff; valaddr_reg:x3; val_offset:149142*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149142*0 + 3*562*FLEN/8, x4, x1, x2)

inst_49715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000001fffffff; valaddr_reg:x3; val_offset:149145*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149145*0 + 3*563*FLEN/8, x4, x1, x2)

inst_49716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000003fffffff; valaddr_reg:x3; val_offset:149148*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149148*0 + 3*564*FLEN/8, x4, x1, x2)

inst_49717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000007fffffff; valaddr_reg:x3; val_offset:149151*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149151*0 + 3*565*FLEN/8, x4, x1, x2)

inst_49718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100000ffffffff; valaddr_reg:x3; val_offset:149154*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149154*0 + 3*566*FLEN/8, x4, x1, x2)

inst_49719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100001ffffffff; valaddr_reg:x3; val_offset:149157*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149157*0 + 3*567*FLEN/8, x4, x1, x2)

inst_49720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100003ffffffff; valaddr_reg:x3; val_offset:149160*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149160*0 + 3*568*FLEN/8, x4, x1, x2)

inst_49721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100007ffffffff; valaddr_reg:x3; val_offset:149163*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149163*0 + 3*569*FLEN/8, x4, x1, x2)

inst_49722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910000fffffffff; valaddr_reg:x3; val_offset:149166*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149166*0 + 3*570*FLEN/8, x4, x1, x2)

inst_49723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910001fffffffff; valaddr_reg:x3; val_offset:149169*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149169*0 + 3*571*FLEN/8, x4, x1, x2)

inst_49724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910003fffffffff; valaddr_reg:x3; val_offset:149172*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149172*0 + 3*572*FLEN/8, x4, x1, x2)

inst_49725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910007fffffffff; valaddr_reg:x3; val_offset:149175*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149175*0 + 3*573*FLEN/8, x4, x1, x2)

inst_49726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91000ffffffffff; valaddr_reg:x3; val_offset:149178*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149178*0 + 3*574*FLEN/8, x4, x1, x2)

inst_49727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91001ffffffffff; valaddr_reg:x3; val_offset:149181*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149181*0 + 3*575*FLEN/8, x4, x1, x2)

inst_49728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91003ffffffffff; valaddr_reg:x3; val_offset:149184*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149184*0 + 3*576*FLEN/8, x4, x1, x2)

inst_49729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91007ffffffffff; valaddr_reg:x3; val_offset:149187*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149187*0 + 3*577*FLEN/8, x4, x1, x2)

inst_49730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9100fffffffffff; valaddr_reg:x3; val_offset:149190*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149190*0 + 3*578*FLEN/8, x4, x1, x2)

inst_49731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9101fffffffffff; valaddr_reg:x3; val_offset:149193*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149193*0 + 3*579*FLEN/8, x4, x1, x2)

inst_49732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9103fffffffffff; valaddr_reg:x3; val_offset:149196*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149196*0 + 3*580*FLEN/8, x4, x1, x2)

inst_49733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb9107fffffffffff; valaddr_reg:x3; val_offset:149199*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149199*0 + 3*581*FLEN/8, x4, x1, x2)

inst_49734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb910ffffffffffff; valaddr_reg:x3; val_offset:149202*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149202*0 + 3*582*FLEN/8, x4, x1, x2)

inst_49735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb911ffffffffffff; valaddr_reg:x3; val_offset:149205*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149205*0 + 3*583*FLEN/8, x4, x1, x2)

inst_49736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb913ffffffffffff; valaddr_reg:x3; val_offset:149208*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149208*0 + 3*584*FLEN/8, x4, x1, x2)

inst_49737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb917ffffffffffff; valaddr_reg:x3; val_offset:149211*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149211*0 + 3*585*FLEN/8, x4, x1, x2)

inst_49738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb918000000000000; valaddr_reg:x3; val_offset:149214*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149214*0 + 3*586*FLEN/8, x4, x1, x2)

inst_49739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91c000000000000; valaddr_reg:x3; val_offset:149217*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149217*0 + 3*587*FLEN/8, x4, x1, x2)

inst_49740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91e000000000000; valaddr_reg:x3; val_offset:149220*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149220*0 + 3*588*FLEN/8, x4, x1, x2)

inst_49741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91f000000000000; valaddr_reg:x3; val_offset:149223*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149223*0 + 3*589*FLEN/8, x4, x1, x2)

inst_49742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91f800000000000; valaddr_reg:x3; val_offset:149226*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149226*0 + 3*590*FLEN/8, x4, x1, x2)

inst_49743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fc00000000000; valaddr_reg:x3; val_offset:149229*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149229*0 + 3*591*FLEN/8, x4, x1, x2)

inst_49744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fe00000000000; valaddr_reg:x3; val_offset:149232*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149232*0 + 3*592*FLEN/8, x4, x1, x2)

inst_49745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ff00000000000; valaddr_reg:x3; val_offset:149235*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149235*0 + 3*593*FLEN/8, x4, x1, x2)

inst_49746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ff80000000000; valaddr_reg:x3; val_offset:149238*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149238*0 + 3*594*FLEN/8, x4, x1, x2)

inst_49747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffc0000000000; valaddr_reg:x3; val_offset:149241*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149241*0 + 3*595*FLEN/8, x4, x1, x2)

inst_49748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffe0000000000; valaddr_reg:x3; val_offset:149244*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149244*0 + 3*596*FLEN/8, x4, x1, x2)

inst_49749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fff0000000000; valaddr_reg:x3; val_offset:149247*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149247*0 + 3*597*FLEN/8, x4, x1, x2)

inst_49750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fff8000000000; valaddr_reg:x3; val_offset:149250*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149250*0 + 3*598*FLEN/8, x4, x1, x2)

inst_49751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffc000000000; valaddr_reg:x3; val_offset:149253*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149253*0 + 3*599*FLEN/8, x4, x1, x2)

inst_49752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffe000000000; valaddr_reg:x3; val_offset:149256*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149256*0 + 3*600*FLEN/8, x4, x1, x2)

inst_49753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffff000000000; valaddr_reg:x3; val_offset:149259*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149259*0 + 3*601*FLEN/8, x4, x1, x2)

inst_49754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffff800000000; valaddr_reg:x3; val_offset:149262*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149262*0 + 3*602*FLEN/8, x4, x1, x2)

inst_49755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffc00000000; valaddr_reg:x3; val_offset:149265*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149265*0 + 3*603*FLEN/8, x4, x1, x2)

inst_49756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffe00000000; valaddr_reg:x3; val_offset:149268*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149268*0 + 3*604*FLEN/8, x4, x1, x2)

inst_49757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffff00000000; valaddr_reg:x3; val_offset:149271*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149271*0 + 3*605*FLEN/8, x4, x1, x2)

inst_49758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffff80000000; valaddr_reg:x3; val_offset:149274*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149274*0 + 3*606*FLEN/8, x4, x1, x2)

inst_49759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffc0000000; valaddr_reg:x3; val_offset:149277*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149277*0 + 3*607*FLEN/8, x4, x1, x2)

inst_49760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffe0000000; valaddr_reg:x3; val_offset:149280*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149280*0 + 3*608*FLEN/8, x4, x1, x2)

inst_49761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffff0000000; valaddr_reg:x3; val_offset:149283*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149283*0 + 3*609*FLEN/8, x4, x1, x2)

inst_49762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffff8000000; valaddr_reg:x3; val_offset:149286*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149286*0 + 3*610*FLEN/8, x4, x1, x2)

inst_49763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffc000000; valaddr_reg:x3; val_offset:149289*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149289*0 + 3*611*FLEN/8, x4, x1, x2)

inst_49764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffe000000; valaddr_reg:x3; val_offset:149292*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149292*0 + 3*612*FLEN/8, x4, x1, x2)

inst_49765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffff000000; valaddr_reg:x3; val_offset:149295*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149295*0 + 3*613*FLEN/8, x4, x1, x2)

inst_49766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffff800000; valaddr_reg:x3; val_offset:149298*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149298*0 + 3*614*FLEN/8, x4, x1, x2)

inst_49767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffffc00000; valaddr_reg:x3; val_offset:149301*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149301*0 + 3*615*FLEN/8, x4, x1, x2)

inst_49768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffffe00000; valaddr_reg:x3; val_offset:149304*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149304*0 + 3*616*FLEN/8, x4, x1, x2)

inst_49769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffff00000; valaddr_reg:x3; val_offset:149307*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149307*0 + 3*617*FLEN/8, x4, x1, x2)

inst_49770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffff80000; valaddr_reg:x3; val_offset:149310*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149310*0 + 3*618*FLEN/8, x4, x1, x2)

inst_49771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffffc0000; valaddr_reg:x3; val_offset:149313*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149313*0 + 3*619*FLEN/8, x4, x1, x2)

inst_49772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffffe0000; valaddr_reg:x3; val_offset:149316*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149316*0 + 3*620*FLEN/8, x4, x1, x2)

inst_49773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffffff0000; valaddr_reg:x3; val_offset:149319*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149319*0 + 3*621*FLEN/8, x4, x1, x2)

inst_49774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffffff8000; valaddr_reg:x3; val_offset:149322*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149322*0 + 3*622*FLEN/8, x4, x1, x2)

inst_49775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffffffc000; valaddr_reg:x3; val_offset:149325*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149325*0 + 3*623*FLEN/8, x4, x1, x2)

inst_49776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffffffe000; valaddr_reg:x3; val_offset:149328*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149328*0 + 3*624*FLEN/8, x4, x1, x2)

inst_49777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffffff000; valaddr_reg:x3; val_offset:149331*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149331*0 + 3*625*FLEN/8, x4, x1, x2)

inst_49778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffffff800; valaddr_reg:x3; val_offset:149334*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149334*0 + 3*626*FLEN/8, x4, x1, x2)

inst_49779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffffffc00; valaddr_reg:x3; val_offset:149337*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149337*0 + 3*627*FLEN/8, x4, x1, x2)

inst_49780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffffffe00; valaddr_reg:x3; val_offset:149340*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149340*0 + 3*628*FLEN/8, x4, x1, x2)

inst_49781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffffffff00; valaddr_reg:x3; val_offset:149343*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149343*0 + 3*629*FLEN/8, x4, x1, x2)

inst_49782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffffffff80; valaddr_reg:x3; val_offset:149346*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149346*0 + 3*630*FLEN/8, x4, x1, x2)

inst_49783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffffffffc0; valaddr_reg:x3; val_offset:149349*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149349*0 + 3*631*FLEN/8, x4, x1, x2)

inst_49784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffffffffe0; valaddr_reg:x3; val_offset:149352*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149352*0 + 3*632*FLEN/8, x4, x1, x2)

inst_49785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffffffff0; valaddr_reg:x3; val_offset:149355*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149355*0 + 3*633*FLEN/8, x4, x1, x2)

inst_49786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffffffff8; valaddr_reg:x3; val_offset:149358*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149358*0 + 3*634*FLEN/8, x4, x1, x2)

inst_49787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffffffffc; valaddr_reg:x3; val_offset:149361*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149361*0 + 3*635*FLEN/8, x4, x1, x2)

inst_49788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91ffffffffffffe; valaddr_reg:x3; val_offset:149364*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149364*0 + 3*636*FLEN/8, x4, x1, x2)

inst_49789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x391 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xb91fffffffffffff; valaddr_reg:x3; val_offset:149367*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149367*0 + 3*637*FLEN/8, x4, x1, x2)

inst_49790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:149370*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149370*0 + 3*638*FLEN/8, x4, x1, x2)

inst_49791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:149373*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149373*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_49792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:149376*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149376*0 + 3*640*FLEN/8, x4, x1, x2)

inst_49793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:149379*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149379*0 + 3*641*FLEN/8, x4, x1, x2)

inst_49794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:149382*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149382*0 + 3*642*FLEN/8, x4, x1, x2)

inst_49795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:149385*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149385*0 + 3*643*FLEN/8, x4, x1, x2)

inst_49796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:149388*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149388*0 + 3*644*FLEN/8, x4, x1, x2)

inst_49797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:149391*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149391*0 + 3*645*FLEN/8, x4, x1, x2)

inst_49798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:149394*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149394*0 + 3*646*FLEN/8, x4, x1, x2)

inst_49799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:149397*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149397*0 + 3*647*FLEN/8, x4, x1, x2)

inst_49800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:149400*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149400*0 + 3*648*FLEN/8, x4, x1, x2)

inst_49801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:149403*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149403*0 + 3*649*FLEN/8, x4, x1, x2)

inst_49802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:149406*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149406*0 + 3*650*FLEN/8, x4, x1, x2)

inst_49803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:149409*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149409*0 + 3*651*FLEN/8, x4, x1, x2)

inst_49804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:149412*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149412*0 + 3*652*FLEN/8, x4, x1, x2)

inst_49805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:149415*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149415*0 + 3*653*FLEN/8, x4, x1, x2)

inst_49806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:149418*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149418*0 + 3*654*FLEN/8, x4, x1, x2)

inst_49807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:149421*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149421*0 + 3*655*FLEN/8, x4, x1, x2)

inst_49808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:149424*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149424*0 + 3*656*FLEN/8, x4, x1, x2)

inst_49809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:149427*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149427*0 + 3*657*FLEN/8, x4, x1, x2)

inst_49810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:149430*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149430*0 + 3*658*FLEN/8, x4, x1, x2)

inst_49811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xea95a80ed95a1 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0b2cd4e787f53 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ea95a80ed95a1; op2val:0x9fd0b2cd4e787f53;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:149433*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149433*0 + 3*659*FLEN/8, x4, x1, x2)

inst_49812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:149436*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149436*0 + 3*660*FLEN/8, x4, x1, x2)

inst_49813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:149439*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149439*0 + 3*661*FLEN/8, x4, x1, x2)

inst_49814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:149442*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149442*0 + 3*662*FLEN/8, x4, x1, x2)

inst_49815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:149445*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149445*0 + 3*663*FLEN/8, x4, x1, x2)

inst_49816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:149448*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149448*0 + 3*664*FLEN/8, x4, x1, x2)

inst_49817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:149451*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149451*0 + 3*665*FLEN/8, x4, x1, x2)

inst_49818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:149454*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149454*0 + 3*666*FLEN/8, x4, x1, x2)

inst_49819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:149457*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149457*0 + 3*667*FLEN/8, x4, x1, x2)

inst_49820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:149460*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149460*0 + 3*668*FLEN/8, x4, x1, x2)

inst_49821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:149463*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149463*0 + 3*669*FLEN/8, x4, x1, x2)

inst_49822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:149466*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149466*0 + 3*670*FLEN/8, x4, x1, x2)

inst_49823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:149469*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149469*0 + 3*671*FLEN/8, x4, x1, x2)

inst_49824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:149472*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149472*0 + 3*672*FLEN/8, x4, x1, x2)

inst_49825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:149475*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149475*0 + 3*673*FLEN/8, x4, x1, x2)

inst_49826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:149478*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149478*0 + 3*674*FLEN/8, x4, x1, x2)

inst_49827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:149481*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149481*0 + 3*675*FLEN/8, x4, x1, x2)

inst_49828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:149484*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149484*0 + 3*676*FLEN/8, x4, x1, x2)

inst_49829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:149487*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149487*0 + 3*677*FLEN/8, x4, x1, x2)

inst_49830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:149490*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149490*0 + 3*678*FLEN/8, x4, x1, x2)

inst_49831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:149493*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149493*0 + 3*679*FLEN/8, x4, x1, x2)

inst_49832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:149496*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149496*0 + 3*680*FLEN/8, x4, x1, x2)

inst_49833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:149499*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149499*0 + 3*681*FLEN/8, x4, x1, x2)

inst_49834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000000000000; valaddr_reg:x3; val_offset:149502*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149502*0 + 3*682*FLEN/8, x4, x1, x2)

inst_49835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000000000001; valaddr_reg:x3; val_offset:149505*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149505*0 + 3*683*FLEN/8, x4, x1, x2)

inst_49836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000000000003; valaddr_reg:x3; val_offset:149508*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149508*0 + 3*684*FLEN/8, x4, x1, x2)

inst_49837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000000000007; valaddr_reg:x3; val_offset:149511*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149511*0 + 3*685*FLEN/8, x4, x1, x2)

inst_49838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000000000000f; valaddr_reg:x3; val_offset:149514*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149514*0 + 3*686*FLEN/8, x4, x1, x2)

inst_49839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000000000001f; valaddr_reg:x3; val_offset:149517*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149517*0 + 3*687*FLEN/8, x4, x1, x2)

inst_49840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000000000003f; valaddr_reg:x3; val_offset:149520*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149520*0 + 3*688*FLEN/8, x4, x1, x2)

inst_49841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000000000007f; valaddr_reg:x3; val_offset:149523*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149523*0 + 3*689*FLEN/8, x4, x1, x2)

inst_49842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00000000000ff; valaddr_reg:x3; val_offset:149526*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149526*0 + 3*690*FLEN/8, x4, x1, x2)

inst_49843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00000000001ff; valaddr_reg:x3; val_offset:149529*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149529*0 + 3*691*FLEN/8, x4, x1, x2)

inst_49844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00000000003ff; valaddr_reg:x3; val_offset:149532*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149532*0 + 3*692*FLEN/8, x4, x1, x2)

inst_49845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00000000007ff; valaddr_reg:x3; val_offset:149535*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149535*0 + 3*693*FLEN/8, x4, x1, x2)

inst_49846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000000000fff; valaddr_reg:x3; val_offset:149538*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149538*0 + 3*694*FLEN/8, x4, x1, x2)

inst_49847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000000001fff; valaddr_reg:x3; val_offset:149541*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149541*0 + 3*695*FLEN/8, x4, x1, x2)

inst_49848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000000003fff; valaddr_reg:x3; val_offset:149544*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149544*0 + 3*696*FLEN/8, x4, x1, x2)

inst_49849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000000007fff; valaddr_reg:x3; val_offset:149547*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149547*0 + 3*697*FLEN/8, x4, x1, x2)

inst_49850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000000000ffff; valaddr_reg:x3; val_offset:149550*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149550*0 + 3*698*FLEN/8, x4, x1, x2)

inst_49851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000000001ffff; valaddr_reg:x3; val_offset:149553*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149553*0 + 3*699*FLEN/8, x4, x1, x2)

inst_49852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000000003ffff; valaddr_reg:x3; val_offset:149556*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149556*0 + 3*700*FLEN/8, x4, x1, x2)

inst_49853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000000007ffff; valaddr_reg:x3; val_offset:149559*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149559*0 + 3*701*FLEN/8, x4, x1, x2)

inst_49854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00000000fffff; valaddr_reg:x3; val_offset:149562*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149562*0 + 3*702*FLEN/8, x4, x1, x2)

inst_49855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00000001fffff; valaddr_reg:x3; val_offset:149565*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149565*0 + 3*703*FLEN/8, x4, x1, x2)

inst_49856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00000003fffff; valaddr_reg:x3; val_offset:149568*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149568*0 + 3*704*FLEN/8, x4, x1, x2)

inst_49857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00000007fffff; valaddr_reg:x3; val_offset:149571*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149571*0 + 3*705*FLEN/8, x4, x1, x2)

inst_49858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000000ffffff; valaddr_reg:x3; val_offset:149574*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149574*0 + 3*706*FLEN/8, x4, x1, x2)

inst_49859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000001ffffff; valaddr_reg:x3; val_offset:149577*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149577*0 + 3*707*FLEN/8, x4, x1, x2)

inst_49860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000003ffffff; valaddr_reg:x3; val_offset:149580*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149580*0 + 3*708*FLEN/8, x4, x1, x2)

inst_49861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000007ffffff; valaddr_reg:x3; val_offset:149583*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149583*0 + 3*709*FLEN/8, x4, x1, x2)

inst_49862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000000fffffff; valaddr_reg:x3; val_offset:149586*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149586*0 + 3*710*FLEN/8, x4, x1, x2)

inst_49863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000001fffffff; valaddr_reg:x3; val_offset:149589*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149589*0 + 3*711*FLEN/8, x4, x1, x2)

inst_49864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000003fffffff; valaddr_reg:x3; val_offset:149592*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149592*0 + 3*712*FLEN/8, x4, x1, x2)

inst_49865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000007fffffff; valaddr_reg:x3; val_offset:149595*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149595*0 + 3*713*FLEN/8, x4, x1, x2)

inst_49866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00000ffffffff; valaddr_reg:x3; val_offset:149598*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149598*0 + 3*714*FLEN/8, x4, x1, x2)

inst_49867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00001ffffffff; valaddr_reg:x3; val_offset:149601*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149601*0 + 3*715*FLEN/8, x4, x1, x2)

inst_49868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00003ffffffff; valaddr_reg:x3; val_offset:149604*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149604*0 + 3*716*FLEN/8, x4, x1, x2)

inst_49869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00007ffffffff; valaddr_reg:x3; val_offset:149607*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149607*0 + 3*717*FLEN/8, x4, x1, x2)

inst_49870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0000fffffffff; valaddr_reg:x3; val_offset:149610*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149610*0 + 3*718*FLEN/8, x4, x1, x2)

inst_49871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0001fffffffff; valaddr_reg:x3; val_offset:149613*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149613*0 + 3*719*FLEN/8, x4, x1, x2)

inst_49872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0003fffffffff; valaddr_reg:x3; val_offset:149616*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149616*0 + 3*720*FLEN/8, x4, x1, x2)

inst_49873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0007fffffffff; valaddr_reg:x3; val_offset:149619*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149619*0 + 3*721*FLEN/8, x4, x1, x2)

inst_49874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb000ffffffffff; valaddr_reg:x3; val_offset:149622*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149622*0 + 3*722*FLEN/8, x4, x1, x2)

inst_49875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb001ffffffffff; valaddr_reg:x3; val_offset:149625*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149625*0 + 3*723*FLEN/8, x4, x1, x2)

inst_49876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb003ffffffffff; valaddr_reg:x3; val_offset:149628*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149628*0 + 3*724*FLEN/8, x4, x1, x2)

inst_49877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb007ffffffffff; valaddr_reg:x3; val_offset:149631*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149631*0 + 3*725*FLEN/8, x4, x1, x2)

inst_49878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb00fffffffffff; valaddr_reg:x3; val_offset:149634*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149634*0 + 3*726*FLEN/8, x4, x1, x2)

inst_49879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb01fffffffffff; valaddr_reg:x3; val_offset:149637*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149637*0 + 3*727*FLEN/8, x4, x1, x2)

inst_49880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb03fffffffffff; valaddr_reg:x3; val_offset:149640*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149640*0 + 3*728*FLEN/8, x4, x1, x2)

inst_49881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb07fffffffffff; valaddr_reg:x3; val_offset:149643*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149643*0 + 3*729*FLEN/8, x4, x1, x2)

inst_49882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb0ffffffffffff; valaddr_reg:x3; val_offset:149646*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149646*0 + 3*730*FLEN/8, x4, x1, x2)

inst_49883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb1ffffffffffff; valaddr_reg:x3; val_offset:149649*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149649*0 + 3*731*FLEN/8, x4, x1, x2)

inst_49884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb3ffffffffffff; valaddr_reg:x3; val_offset:149652*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149652*0 + 3*732*FLEN/8, x4, x1, x2)

inst_49885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb7ffffffffffff; valaddr_reg:x3; val_offset:149655*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149655*0 + 3*733*FLEN/8, x4, x1, x2)

inst_49886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xb8000000000000; valaddr_reg:x3; val_offset:149658*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149658*0 + 3*734*FLEN/8, x4, x1, x2)

inst_49887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbc000000000000; valaddr_reg:x3; val_offset:149661*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149661*0 + 3*735*FLEN/8, x4, x1, x2)

inst_49888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbe000000000000; valaddr_reg:x3; val_offset:149664*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149664*0 + 3*736*FLEN/8, x4, x1, x2)

inst_49889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbf000000000000; valaddr_reg:x3; val_offset:149667*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149667*0 + 3*737*FLEN/8, x4, x1, x2)

inst_49890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbf800000000000; valaddr_reg:x3; val_offset:149670*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149670*0 + 3*738*FLEN/8, x4, x1, x2)

inst_49891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfc00000000000; valaddr_reg:x3; val_offset:149673*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149673*0 + 3*739*FLEN/8, x4, x1, x2)

inst_49892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfe00000000000; valaddr_reg:x3; val_offset:149676*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149676*0 + 3*740*FLEN/8, x4, x1, x2)

inst_49893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbff00000000000; valaddr_reg:x3; val_offset:149679*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149679*0 + 3*741*FLEN/8, x4, x1, x2)

inst_49894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbff80000000000; valaddr_reg:x3; val_offset:149682*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149682*0 + 3*742*FLEN/8, x4, x1, x2)

inst_49895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffc0000000000; valaddr_reg:x3; val_offset:149685*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149685*0 + 3*743*FLEN/8, x4, x1, x2)

inst_49896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffe0000000000; valaddr_reg:x3; val_offset:149688*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149688*0 + 3*744*FLEN/8, x4, x1, x2)

inst_49897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfff0000000000; valaddr_reg:x3; val_offset:149691*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149691*0 + 3*745*FLEN/8, x4, x1, x2)

inst_49898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfff8000000000; valaddr_reg:x3; val_offset:149694*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149694*0 + 3*746*FLEN/8, x4, x1, x2)

inst_49899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffc000000000; valaddr_reg:x3; val_offset:149697*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149697*0 + 3*747*FLEN/8, x4, x1, x2)

inst_49900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffe000000000; valaddr_reg:x3; val_offset:149700*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149700*0 + 3*748*FLEN/8, x4, x1, x2)

inst_49901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffff000000000; valaddr_reg:x3; val_offset:149703*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149703*0 + 3*749*FLEN/8, x4, x1, x2)

inst_49902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffff800000000; valaddr_reg:x3; val_offset:149706*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149706*0 + 3*750*FLEN/8, x4, x1, x2)

inst_49903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffc00000000; valaddr_reg:x3; val_offset:149709*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149709*0 + 3*751*FLEN/8, x4, x1, x2)

inst_49904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffe00000000; valaddr_reg:x3; val_offset:149712*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149712*0 + 3*752*FLEN/8, x4, x1, x2)

inst_49905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffff00000000; valaddr_reg:x3; val_offset:149715*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149715*0 + 3*753*FLEN/8, x4, x1, x2)

inst_49906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffff80000000; valaddr_reg:x3; val_offset:149718*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149718*0 + 3*754*FLEN/8, x4, x1, x2)

inst_49907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffc0000000; valaddr_reg:x3; val_offset:149721*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149721*0 + 3*755*FLEN/8, x4, x1, x2)

inst_49908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffe0000000; valaddr_reg:x3; val_offset:149724*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149724*0 + 3*756*FLEN/8, x4, x1, x2)

inst_49909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffff0000000; valaddr_reg:x3; val_offset:149727*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149727*0 + 3*757*FLEN/8, x4, x1, x2)

inst_49910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffff8000000; valaddr_reg:x3; val_offset:149730*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149730*0 + 3*758*FLEN/8, x4, x1, x2)

inst_49911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffc000000; valaddr_reg:x3; val_offset:149733*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149733*0 + 3*759*FLEN/8, x4, x1, x2)

inst_49912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffe000000; valaddr_reg:x3; val_offset:149736*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149736*0 + 3*760*FLEN/8, x4, x1, x2)

inst_49913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffff000000; valaddr_reg:x3; val_offset:149739*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149739*0 + 3*761*FLEN/8, x4, x1, x2)

inst_49914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffff800000; valaddr_reg:x3; val_offset:149742*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149742*0 + 3*762*FLEN/8, x4, x1, x2)

inst_49915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffffc00000; valaddr_reg:x3; val_offset:149745*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149745*0 + 3*763*FLEN/8, x4, x1, x2)

inst_49916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbfffffffe00000; valaddr_reg:x3; val_offset:149748*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149748*0 + 3*764*FLEN/8, x4, x1, x2)

inst_49917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffff00000; valaddr_reg:x3; val_offset:149751*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149751*0 + 3*765*FLEN/8, x4, x1, x2)

inst_49918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffff80000; valaddr_reg:x3; val_offset:149754*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149754*0 + 3*766*FLEN/8, x4, x1, x2)

inst_49919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xece1e1357ca25 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ece1e1357ca25; op2val:0x0;
op3val:0xbffffffffc0000; valaddr_reg:x3; val_offset:149757*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149757*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351531904,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351531968,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351532000,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351532016,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351532024,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351532028,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351532030,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351532031,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190336,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190337,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190339,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190343,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190351,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190367,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190399,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190463,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190591,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190847,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722191359,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722192383,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722194431,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722198527,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722206719,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722223103,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722255871,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722321407,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722452479,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722714623,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584723238911,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584724287487,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584726384639,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584730578943,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584738967551,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584755744767,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584789299199,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584856408063,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584990625791,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585259061247,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585795932159,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647586869673983,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647589017157631,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647593312124927,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647601902059519,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647619081928703,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647653441667071,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647722161143807,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647859600097279,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648134478004223,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648684233818111,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184649783745445887,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184651982768701439,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184656380815212543,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184665176908234751,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184682769094279167,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184717953466367999,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184788322210545663,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184929059698900991,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185210534675611647,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185773484629032959,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875583,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875584,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188025284442718208,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188588234396139520,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188869709372850176,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189010446861205504,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189080815605383168,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189115999977472000,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189133592163516416,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189142388256538624,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189146786303049728,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189148985326305280,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150084837933056,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150634593746944,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150909471653888,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151046910607360,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151115630084096,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151149989822464,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151167169691648,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151175759626240,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151180054593536,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151182202077184,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183275819008,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183812689920,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184081125376,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184215343104,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184282451968,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184316006400,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184332783616,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184341172224,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184345366528,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184347463680,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184348512256,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349036544,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349298688,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349429760,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349495296,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349528064,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349544448,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349552640,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349556736,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349558784,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349559808,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560320,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560576,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560704,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560768,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560800,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560816,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560824,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560828,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560830,64,FLEN)
NAN_BOXED(6890068823684754919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560831,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257792,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257793,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257795,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257799,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257807,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257823,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257855,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257919,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364258047,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364258303,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364258815,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364259839,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364261887,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364265983,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364274175,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364290559,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364323327,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364388863,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364519935,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364782079,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435365306367,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435366354943,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435368452095,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435372646399,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435381035007,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435397812223,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435431366655,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435498475519,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435632693247,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435901128703,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386436437999615,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386437511741439,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386439659225087,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386443954192383,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386452544126975,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386469723996159,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386504083734527,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386572803211263,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386710242164735,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386985120071679,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241387534875885567,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241388634387513343,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241390833410768895,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241395231457279999,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241404027550302207,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241421619736346623,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241456804108435455,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241527172852613119,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241667910340968447,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241949385317679103,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9242512335271100415,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9243638235177943039,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9243638235177943040,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9244764135084785664,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245327085038206976,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245608560014917632,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245749297503272960,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245819666247450624,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245854850619539456,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245872442805583872,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245881238898606080,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245885636945117184,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245887835968372736,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245888935480000512,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245889485235814400,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245889760113721344,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245889897552674816,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245889966272151552,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890000631889920,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890017811759104,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890026401693696,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890030696660992,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890032844144640,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890033917886464,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034454757376,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034723192832,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034857410560,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034924519424,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034958073856,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034974851072,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034983239680,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034987433984,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034989531136,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034990579712,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991104000,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991366144,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991497216,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991562752,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991595520,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991611904,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991620096,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991624192,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991626240,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991627264,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991627776,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628032,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628160,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628224,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628256,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628272,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628280,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628284,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628286,64,FLEN)
NAN_BOXED(6890084649814293647,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628287,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372672,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372673,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372675,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372679,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372687,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372703,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372735,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372799,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372927,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185373183,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185373695,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185374719,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185376767,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185380863,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185389055,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185405439,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185438207,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185503743,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185634815,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185896959,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424186421247,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424187469823,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424189566975,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424193761279,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424202149887,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424218927103,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424252481535,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424319590399,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424453808127,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424722243583,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494425259114495,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494426332856319,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494428480339967,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494432775307263,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494441365241855,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494458545111039,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494492904849407,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494561624326143,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494699063279615,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494973941186559,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376495523697000447,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376496623208628223,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376498822231883775,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376503220278394879,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376512016371417087,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376529608557461503,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376564792929550335,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376635161673727999,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376775899162083327,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9377057374138793983,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9377620324092215295,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9378746223999057919,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9378746223999057920,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9379872123905900544,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380435073859321856,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380716548836032512,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380857286324387840,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380927655068565504,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380962839440654336,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380980431626698752,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380989227719720960,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380993625766232064,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380995824789487616,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380996924301115392,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997474056929280,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997748934836224,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997886373789696,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997955093266432,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997989453004800,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998006632873984,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998015222808576,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998019517775872,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998021665259520,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998022739001344,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023275872256,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023544307712,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023678525440,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023745634304,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023779188736,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023795965952,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023804354560,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023808548864,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023810646016,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023811694592,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812218880,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812481024,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812612096,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812677632,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812710400,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812726784,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812734976,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812739072,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812741120,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742144,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742656,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742912,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743040,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743104,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743136,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743152,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743160,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743164,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743166,64,FLEN)
NAN_BOXED(6890087969075048053,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743167,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233481216,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233481217,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233481219,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233481223,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233481231,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233481247,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233481279,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233481343,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233481471,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233481727,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233482239,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233483263,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233485311,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233489407,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233497599,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233513983,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233546751,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233612287,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502233743359,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502234005503,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502234529791,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502235578367,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502237675519,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502241869823,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502250258431,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502267035647,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502300590079,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502367698943,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502501916671,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604502770352127,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604503307223039,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604504380964863,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604506528448511,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604510823415807,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604519413350399,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604536593219583,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604570952957951,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604639672434687,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267604777111388159,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267605051989295103,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267605601745108991,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267606701256736767,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267608900279992319,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267613298326503423,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267622094419525631,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267639686605570047,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267674870977658879,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267745239721836543,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13267885977210191871,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13268167452186902527,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13268730402140323839,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13269856302047166463,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13269856302047166464,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13270982201954009088,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13271545151907430400,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13271826626884141056,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13271967364372496384,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272037733116674048,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272072917488762880,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272090509674807296,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272099305767829504,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272103703814340608,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272105902837596160,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272107002349223936,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272107552105037824,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272107826982944768,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272107964421898240,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108033141374976,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108067501113344,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108084680982528,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108093270917120,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108097565884416,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108099713368064,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108100787109888,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101323980800,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101592416256,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101726633984,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101793742848,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101827297280,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101844074496,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101852463104,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101856657408,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101858754560,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101859803136,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860327424,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860589568,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860720640,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860786176,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860818944,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860835328,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860843520,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860847616,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860849664,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860850688,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860851200,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860851456,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860851584,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860851648,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860851680,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860851696,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860851704,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860851708,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860851710,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13272108101860851711,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890112278085508037,64,FLEN)
NAN_BOXED(11515910888576555847,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644038656,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644038657,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644038659,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644038663,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644038671,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644038687,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644038719,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644038783,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644038911,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644039167,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644039679,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644040703,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644042751,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644046847,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644055039,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644071423,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644104191,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644169727,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644300799,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496644562943,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496645087231,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496646135807,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496648232959,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496652427263,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496660815871,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496677593087,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496711147519,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496778256383,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158496912474111,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158497180909567,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158497717780479,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158498791522303,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158500939005951,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158505233973247,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158513823907839,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158531003777023,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158565363515391,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158634082992127,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335158771521945599,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335159046399852543,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335159596155666431,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335160695667294207,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335162894690549759,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335167292737060863,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335176088830083071,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335193681016127487,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335228865388216319,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335299234132393983,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335439971620749311,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13335721446597459967,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13336284396550881279,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13337410296457723903,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13337410296457723904,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13338536196364566528,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339099146317987840,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339380621294698496,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339521358783053824,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339591727527231488,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339626911899320320,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339644504085364736,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339653300178386944,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339657698224898048,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339659897248153600,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339660996759781376,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339661546515595264,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339661821393502208,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339661958832455680,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662027551932416,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662061911670784,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662079091539968,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662087681474560,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662091976441856,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662094123925504,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662095197667328,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662095734538240,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096002973696,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096137191424,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096204300288,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096237854720,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096254631936,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096263020544,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096267214848,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096269312000,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096270360576,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096270884864,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271147008,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271278080,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271343616,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271376384,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271392768,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271400960,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271405056,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271407104,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271408128,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271408640,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271408896,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271409024,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271409088,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271409120,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271409136,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271409144,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271409148,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271409150,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13339662096271409151,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890130686098642337,64,FLEN)
NAN_BOXED(11515900842040917843,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075456,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075457,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075459,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075463,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075471,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075487,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075519,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075583,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075711,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075967,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901076479,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901077503,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901079551,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901083647,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901091839,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901108223,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901140991,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901206527,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901337599,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901599743,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595902124031,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595903172607,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595905269759,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595909464063,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595917852671,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595934629887,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595968184319,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596035293183,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596169510911,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596437946367,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596974817279,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539598048559103,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539600196042751,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539604491010047,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539613080944639,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539630260813823,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539664620552191,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539733340028927,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539870778982399,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49540145656889343,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49540695412703231,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49541794924331007,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49543993947586559,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49548391994097663,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49557188087119871,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49574780273164287,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49609964645253119,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49680333389430783,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49821070877786111,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(50102545854496767,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(50665495807918079,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(51791395714760703,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(51791395714760704,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(52917295621603328,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53480245575024640,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53761720551735296,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53902458040090624,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53972826784268288,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54008011156357120,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54025603342401536,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54034399435423744,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54038797481934848,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54040996505190400,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042096016818176,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042645772632064,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042920650539008,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043058089492480,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043126808969216,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043161168707584,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043178348576768,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043186938511360,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043191233478656,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043193380962304,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043194454704128,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043194991575040,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195260010496,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195394228224,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195461337088,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195494891520,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195511668736,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195520057344,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195524251648,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195526348800,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195527397376,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195527921664,64,FLEN)
NAN_BOXED(6890171108492298789,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528183808,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
