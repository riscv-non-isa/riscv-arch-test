
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_58368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000000000000; valaddr_reg:x3; val_offset:175104*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175104*0 + 3*0*FLEN/8, x4, x1, x2)

inst_58369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000000000001; valaddr_reg:x3; val_offset:175107*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175107*0 + 3*1*FLEN/8, x4, x1, x2)

inst_58370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000000000003; valaddr_reg:x3; val_offset:175110*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175110*0 + 3*2*FLEN/8, x4, x1, x2)

inst_58371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000000000007; valaddr_reg:x3; val_offset:175113*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175113*0 + 3*3*FLEN/8, x4, x1, x2)

inst_58372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000000000000f; valaddr_reg:x3; val_offset:175116*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175116*0 + 3*4*FLEN/8, x4, x1, x2)

inst_58373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000000000001f; valaddr_reg:x3; val_offset:175119*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175119*0 + 3*5*FLEN/8, x4, x1, x2)

inst_58374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000000000003f; valaddr_reg:x3; val_offset:175122*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175122*0 + 3*6*FLEN/8, x4, x1, x2)

inst_58375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000000000007f; valaddr_reg:x3; val_offset:175125*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175125*0 + 3*7*FLEN/8, x4, x1, x2)

inst_58376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00000000000ff; valaddr_reg:x3; val_offset:175128*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175128*0 + 3*8*FLEN/8, x4, x1, x2)

inst_58377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00000000001ff; valaddr_reg:x3; val_offset:175131*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175131*0 + 3*9*FLEN/8, x4, x1, x2)

inst_58378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00000000003ff; valaddr_reg:x3; val_offset:175134*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175134*0 + 3*10*FLEN/8, x4, x1, x2)

inst_58379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00000000007ff; valaddr_reg:x3; val_offset:175137*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175137*0 + 3*11*FLEN/8, x4, x1, x2)

inst_58380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000000000fff; valaddr_reg:x3; val_offset:175140*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175140*0 + 3*12*FLEN/8, x4, x1, x2)

inst_58381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000000001fff; valaddr_reg:x3; val_offset:175143*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175143*0 + 3*13*FLEN/8, x4, x1, x2)

inst_58382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000000003fff; valaddr_reg:x3; val_offset:175146*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175146*0 + 3*14*FLEN/8, x4, x1, x2)

inst_58383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000000007fff; valaddr_reg:x3; val_offset:175149*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175149*0 + 3*15*FLEN/8, x4, x1, x2)

inst_58384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000000000ffff; valaddr_reg:x3; val_offset:175152*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175152*0 + 3*16*FLEN/8, x4, x1, x2)

inst_58385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000000001ffff; valaddr_reg:x3; val_offset:175155*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175155*0 + 3*17*FLEN/8, x4, x1, x2)

inst_58386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000000003ffff; valaddr_reg:x3; val_offset:175158*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175158*0 + 3*18*FLEN/8, x4, x1, x2)

inst_58387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000000007ffff; valaddr_reg:x3; val_offset:175161*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175161*0 + 3*19*FLEN/8, x4, x1, x2)

inst_58388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00000000fffff; valaddr_reg:x3; val_offset:175164*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175164*0 + 3*20*FLEN/8, x4, x1, x2)

inst_58389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00000001fffff; valaddr_reg:x3; val_offset:175167*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175167*0 + 3*21*FLEN/8, x4, x1, x2)

inst_58390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00000003fffff; valaddr_reg:x3; val_offset:175170*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175170*0 + 3*22*FLEN/8, x4, x1, x2)

inst_58391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00000007fffff; valaddr_reg:x3; val_offset:175173*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175173*0 + 3*23*FLEN/8, x4, x1, x2)

inst_58392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000000ffffff; valaddr_reg:x3; val_offset:175176*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175176*0 + 3*24*FLEN/8, x4, x1, x2)

inst_58393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000001ffffff; valaddr_reg:x3; val_offset:175179*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175179*0 + 3*25*FLEN/8, x4, x1, x2)

inst_58394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000003ffffff; valaddr_reg:x3; val_offset:175182*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175182*0 + 3*26*FLEN/8, x4, x1, x2)

inst_58395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000007ffffff; valaddr_reg:x3; val_offset:175185*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175185*0 + 3*27*FLEN/8, x4, x1, x2)

inst_58396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000000fffffff; valaddr_reg:x3; val_offset:175188*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175188*0 + 3*28*FLEN/8, x4, x1, x2)

inst_58397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000001fffffff; valaddr_reg:x3; val_offset:175191*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175191*0 + 3*29*FLEN/8, x4, x1, x2)

inst_58398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000003fffffff; valaddr_reg:x3; val_offset:175194*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175194*0 + 3*30*FLEN/8, x4, x1, x2)

inst_58399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000007fffffff; valaddr_reg:x3; val_offset:175197*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175197*0 + 3*31*FLEN/8, x4, x1, x2)

inst_58400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00000ffffffff; valaddr_reg:x3; val_offset:175200*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175200*0 + 3*32*FLEN/8, x4, x1, x2)

inst_58401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00001ffffffff; valaddr_reg:x3; val_offset:175203*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175203*0 + 3*33*FLEN/8, x4, x1, x2)

inst_58402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00003ffffffff; valaddr_reg:x3; val_offset:175206*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175206*0 + 3*34*FLEN/8, x4, x1, x2)

inst_58403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00007ffffffff; valaddr_reg:x3; val_offset:175209*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175209*0 + 3*35*FLEN/8, x4, x1, x2)

inst_58404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0000fffffffff; valaddr_reg:x3; val_offset:175212*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175212*0 + 3*36*FLEN/8, x4, x1, x2)

inst_58405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0001fffffffff; valaddr_reg:x3; val_offset:175215*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175215*0 + 3*37*FLEN/8, x4, x1, x2)

inst_58406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0003fffffffff; valaddr_reg:x3; val_offset:175218*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175218*0 + 3*38*FLEN/8, x4, x1, x2)

inst_58407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0007fffffffff; valaddr_reg:x3; val_offset:175221*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175221*0 + 3*39*FLEN/8, x4, x1, x2)

inst_58408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af000ffffffffff; valaddr_reg:x3; val_offset:175224*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175224*0 + 3*40*FLEN/8, x4, x1, x2)

inst_58409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af001ffffffffff; valaddr_reg:x3; val_offset:175227*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175227*0 + 3*41*FLEN/8, x4, x1, x2)

inst_58410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af003ffffffffff; valaddr_reg:x3; val_offset:175230*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175230*0 + 3*42*FLEN/8, x4, x1, x2)

inst_58411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af007ffffffffff; valaddr_reg:x3; val_offset:175233*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175233*0 + 3*43*FLEN/8, x4, x1, x2)

inst_58412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af00fffffffffff; valaddr_reg:x3; val_offset:175236*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175236*0 + 3*44*FLEN/8, x4, x1, x2)

inst_58413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af01fffffffffff; valaddr_reg:x3; val_offset:175239*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175239*0 + 3*45*FLEN/8, x4, x1, x2)

inst_58414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af03fffffffffff; valaddr_reg:x3; val_offset:175242*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175242*0 + 3*46*FLEN/8, x4, x1, x2)

inst_58415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af07fffffffffff; valaddr_reg:x3; val_offset:175245*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175245*0 + 3*47*FLEN/8, x4, x1, x2)

inst_58416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af0ffffffffffff; valaddr_reg:x3; val_offset:175248*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175248*0 + 3*48*FLEN/8, x4, x1, x2)

inst_58417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af1ffffffffffff; valaddr_reg:x3; val_offset:175251*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175251*0 + 3*49*FLEN/8, x4, x1, x2)

inst_58418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af3ffffffffffff; valaddr_reg:x3; val_offset:175254*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175254*0 + 3*50*FLEN/8, x4, x1, x2)

inst_58419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af7ffffffffffff; valaddr_reg:x3; val_offset:175257*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175257*0 + 3*51*FLEN/8, x4, x1, x2)

inst_58420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3af8000000000000; valaddr_reg:x3; val_offset:175260*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175260*0 + 3*52*FLEN/8, x4, x1, x2)

inst_58421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afc000000000000; valaddr_reg:x3; val_offset:175263*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175263*0 + 3*53*FLEN/8, x4, x1, x2)

inst_58422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afe000000000000; valaddr_reg:x3; val_offset:175266*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175266*0 + 3*54*FLEN/8, x4, x1, x2)

inst_58423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3aff000000000000; valaddr_reg:x3; val_offset:175269*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175269*0 + 3*55*FLEN/8, x4, x1, x2)

inst_58424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3aff800000000000; valaddr_reg:x3; val_offset:175272*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175272*0 + 3*56*FLEN/8, x4, x1, x2)

inst_58425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affc00000000000; valaddr_reg:x3; val_offset:175275*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175275*0 + 3*57*FLEN/8, x4, x1, x2)

inst_58426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affe00000000000; valaddr_reg:x3; val_offset:175278*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175278*0 + 3*58*FLEN/8, x4, x1, x2)

inst_58427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afff00000000000; valaddr_reg:x3; val_offset:175281*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175281*0 + 3*59*FLEN/8, x4, x1, x2)

inst_58428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afff80000000000; valaddr_reg:x3; val_offset:175284*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175284*0 + 3*60*FLEN/8, x4, x1, x2)

inst_58429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffc0000000000; valaddr_reg:x3; val_offset:175287*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175287*0 + 3*61*FLEN/8, x4, x1, x2)

inst_58430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffe0000000000; valaddr_reg:x3; val_offset:175290*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175290*0 + 3*62*FLEN/8, x4, x1, x2)

inst_58431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affff0000000000; valaddr_reg:x3; val_offset:175293*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175293*0 + 3*63*FLEN/8, x4, x1, x2)

inst_58432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affff8000000000; valaddr_reg:x3; val_offset:175296*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175296*0 + 3*64*FLEN/8, x4, x1, x2)

inst_58433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffc000000000; valaddr_reg:x3; val_offset:175299*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175299*0 + 3*65*FLEN/8, x4, x1, x2)

inst_58434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffe000000000; valaddr_reg:x3; val_offset:175302*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175302*0 + 3*66*FLEN/8, x4, x1, x2)

inst_58435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffff000000000; valaddr_reg:x3; val_offset:175305*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175305*0 + 3*67*FLEN/8, x4, x1, x2)

inst_58436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffff800000000; valaddr_reg:x3; val_offset:175308*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175308*0 + 3*68*FLEN/8, x4, x1, x2)

inst_58437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffc00000000; valaddr_reg:x3; val_offset:175311*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175311*0 + 3*69*FLEN/8, x4, x1, x2)

inst_58438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffe00000000; valaddr_reg:x3; val_offset:175314*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175314*0 + 3*70*FLEN/8, x4, x1, x2)

inst_58439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffff00000000; valaddr_reg:x3; val_offset:175317*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175317*0 + 3*71*FLEN/8, x4, x1, x2)

inst_58440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffff80000000; valaddr_reg:x3; val_offset:175320*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175320*0 + 3*72*FLEN/8, x4, x1, x2)

inst_58441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffc0000000; valaddr_reg:x3; val_offset:175323*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175323*0 + 3*73*FLEN/8, x4, x1, x2)

inst_58442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffe0000000; valaddr_reg:x3; val_offset:175326*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175326*0 + 3*74*FLEN/8, x4, x1, x2)

inst_58443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffff0000000; valaddr_reg:x3; val_offset:175329*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175329*0 + 3*75*FLEN/8, x4, x1, x2)

inst_58444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffff8000000; valaddr_reg:x3; val_offset:175332*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175332*0 + 3*76*FLEN/8, x4, x1, x2)

inst_58445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffc000000; valaddr_reg:x3; val_offset:175335*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175335*0 + 3*77*FLEN/8, x4, x1, x2)

inst_58446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffe000000; valaddr_reg:x3; val_offset:175338*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175338*0 + 3*78*FLEN/8, x4, x1, x2)

inst_58447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffff000000; valaddr_reg:x3; val_offset:175341*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175341*0 + 3*79*FLEN/8, x4, x1, x2)

inst_58448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffff800000; valaddr_reg:x3; val_offset:175344*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175344*0 + 3*80*FLEN/8, x4, x1, x2)

inst_58449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffffc00000; valaddr_reg:x3; val_offset:175347*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175347*0 + 3*81*FLEN/8, x4, x1, x2)

inst_58450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffffe00000; valaddr_reg:x3; val_offset:175350*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175350*0 + 3*82*FLEN/8, x4, x1, x2)

inst_58451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffff00000; valaddr_reg:x3; val_offset:175353*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175353*0 + 3*83*FLEN/8, x4, x1, x2)

inst_58452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffff80000; valaddr_reg:x3; val_offset:175356*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175356*0 + 3*84*FLEN/8, x4, x1, x2)

inst_58453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffffc0000; valaddr_reg:x3; val_offset:175359*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175359*0 + 3*85*FLEN/8, x4, x1, x2)

inst_58454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffffe0000; valaddr_reg:x3; val_offset:175362*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175362*0 + 3*86*FLEN/8, x4, x1, x2)

inst_58455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffffff0000; valaddr_reg:x3; val_offset:175365*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175365*0 + 3*87*FLEN/8, x4, x1, x2)

inst_58456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffffff8000; valaddr_reg:x3; val_offset:175368*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175368*0 + 3*88*FLEN/8, x4, x1, x2)

inst_58457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffffffc000; valaddr_reg:x3; val_offset:175371*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175371*0 + 3*89*FLEN/8, x4, x1, x2)

inst_58458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffffffe000; valaddr_reg:x3; val_offset:175374*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175374*0 + 3*90*FLEN/8, x4, x1, x2)

inst_58459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffffff000; valaddr_reg:x3; val_offset:175377*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175377*0 + 3*91*FLEN/8, x4, x1, x2)

inst_58460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffffff800; valaddr_reg:x3; val_offset:175380*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175380*0 + 3*92*FLEN/8, x4, x1, x2)

inst_58461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffffffc00; valaddr_reg:x3; val_offset:175383*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175383*0 + 3*93*FLEN/8, x4, x1, x2)

inst_58462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffffffe00; valaddr_reg:x3; val_offset:175386*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175386*0 + 3*94*FLEN/8, x4, x1, x2)

inst_58463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffffffff00; valaddr_reg:x3; val_offset:175389*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175389*0 + 3*95*FLEN/8, x4, x1, x2)

inst_58464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffffffff80; valaddr_reg:x3; val_offset:175392*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175392*0 + 3*96*FLEN/8, x4, x1, x2)

inst_58465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffffffffc0; valaddr_reg:x3; val_offset:175395*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175395*0 + 3*97*FLEN/8, x4, x1, x2)

inst_58466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffffffffe0; valaddr_reg:x3; val_offset:175398*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175398*0 + 3*98*FLEN/8, x4, x1, x2)

inst_58467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffffffff0; valaddr_reg:x3; val_offset:175401*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175401*0 + 3*99*FLEN/8, x4, x1, x2)

inst_58468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffffffff8; valaddr_reg:x3; val_offset:175404*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175404*0 + 3*100*FLEN/8, x4, x1, x2)

inst_58469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffffffffc; valaddr_reg:x3; val_offset:175407*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175407*0 + 3*101*FLEN/8, x4, x1, x2)

inst_58470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3afffffffffffffe; valaddr_reg:x3; val_offset:175410*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175410*0 + 3*102*FLEN/8, x4, x1, x2)

inst_58471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3af and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3affffffffffffff; valaddr_reg:x3; val_offset:175413*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175413*0 + 3*103*FLEN/8, x4, x1, x2)

inst_58472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:175416*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175416*0 + 3*104*FLEN/8, x4, x1, x2)

inst_58473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:175419*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175419*0 + 3*105*FLEN/8, x4, x1, x2)

inst_58474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:175422*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175422*0 + 3*106*FLEN/8, x4, x1, x2)

inst_58475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:175425*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175425*0 + 3*107*FLEN/8, x4, x1, x2)

inst_58476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:175428*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175428*0 + 3*108*FLEN/8, x4, x1, x2)

inst_58477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:175431*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175431*0 + 3*109*FLEN/8, x4, x1, x2)

inst_58478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:175434*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175434*0 + 3*110*FLEN/8, x4, x1, x2)

inst_58479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:175437*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175437*0 + 3*111*FLEN/8, x4, x1, x2)

inst_58480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:175440*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175440*0 + 3*112*FLEN/8, x4, x1, x2)

inst_58481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:175443*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175443*0 + 3*113*FLEN/8, x4, x1, x2)

inst_58482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:175446*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175446*0 + 3*114*FLEN/8, x4, x1, x2)

inst_58483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:175449*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175449*0 + 3*115*FLEN/8, x4, x1, x2)

inst_58484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:175452*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175452*0 + 3*116*FLEN/8, x4, x1, x2)

inst_58485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:175455*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175455*0 + 3*117*FLEN/8, x4, x1, x2)

inst_58486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:175458*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175458*0 + 3*118*FLEN/8, x4, x1, x2)

inst_58487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:175461*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175461*0 + 3*119*FLEN/8, x4, x1, x2)

inst_58488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:175464*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175464*0 + 3*120*FLEN/8, x4, x1, x2)

inst_58489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:175467*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175467*0 + 3*121*FLEN/8, x4, x1, x2)

inst_58490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:175470*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175470*0 + 3*122*FLEN/8, x4, x1, x2)

inst_58491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:175473*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175473*0 + 3*123*FLEN/8, x4, x1, x2)

inst_58492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:175476*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175476*0 + 3*124*FLEN/8, x4, x1, x2)

inst_58493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x306c630c4ecc9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xae8ee95df6a37 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa306c630c4ecc9; op2val:0x203ae8ee95df6a37;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:175479*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175479*0 + 3*125*FLEN/8, x4, x1, x2)

inst_58494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:175482*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175482*0 + 3*126*FLEN/8, x4, x1, x2)

inst_58495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:175485*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175485*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_58496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:175488*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175488*0 + 3*128*FLEN/8, x4, x1, x2)

inst_58497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:175491*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175491*0 + 3*129*FLEN/8, x4, x1, x2)

inst_58498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:175494*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175494*0 + 3*130*FLEN/8, x4, x1, x2)

inst_58499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:175497*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175497*0 + 3*131*FLEN/8, x4, x1, x2)

inst_58500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:175500*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175500*0 + 3*132*FLEN/8, x4, x1, x2)

inst_58501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:175503*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175503*0 + 3*133*FLEN/8, x4, x1, x2)

inst_58502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:175506*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175506*0 + 3*134*FLEN/8, x4, x1, x2)

inst_58503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:175509*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175509*0 + 3*135*FLEN/8, x4, x1, x2)

inst_58504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:175512*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175512*0 + 3*136*FLEN/8, x4, x1, x2)

inst_58505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:175515*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175515*0 + 3*137*FLEN/8, x4, x1, x2)

inst_58506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:175518*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175518*0 + 3*138*FLEN/8, x4, x1, x2)

inst_58507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:175521*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175521*0 + 3*139*FLEN/8, x4, x1, x2)

inst_58508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:175524*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175524*0 + 3*140*FLEN/8, x4, x1, x2)

inst_58509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:175527*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175527*0 + 3*141*FLEN/8, x4, x1, x2)

inst_58510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:175530*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175530*0 + 3*142*FLEN/8, x4, x1, x2)

inst_58511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:175533*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175533*0 + 3*143*FLEN/8, x4, x1, x2)

inst_58512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:175536*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175536*0 + 3*144*FLEN/8, x4, x1, x2)

inst_58513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:175539*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175539*0 + 3*145*FLEN/8, x4, x1, x2)

inst_58514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:175542*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175542*0 + 3*146*FLEN/8, x4, x1, x2)

inst_58515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:175545*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175545*0 + 3*147*FLEN/8, x4, x1, x2)

inst_58516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000000000000; valaddr_reg:x3; val_offset:175548*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175548*0 + 3*148*FLEN/8, x4, x1, x2)

inst_58517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000000000001; valaddr_reg:x3; val_offset:175551*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175551*0 + 3*149*FLEN/8, x4, x1, x2)

inst_58518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000000000003; valaddr_reg:x3; val_offset:175554*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175554*0 + 3*150*FLEN/8, x4, x1, x2)

inst_58519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000000000007; valaddr_reg:x3; val_offset:175557*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175557*0 + 3*151*FLEN/8, x4, x1, x2)

inst_58520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000000000000f; valaddr_reg:x3; val_offset:175560*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175560*0 + 3*152*FLEN/8, x4, x1, x2)

inst_58521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000000000001f; valaddr_reg:x3; val_offset:175563*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175563*0 + 3*153*FLEN/8, x4, x1, x2)

inst_58522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000000000003f; valaddr_reg:x3; val_offset:175566*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175566*0 + 3*154*FLEN/8, x4, x1, x2)

inst_58523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000000000007f; valaddr_reg:x3; val_offset:175569*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175569*0 + 3*155*FLEN/8, x4, x1, x2)

inst_58524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200000000000ff; valaddr_reg:x3; val_offset:175572*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175572*0 + 3*156*FLEN/8, x4, x1, x2)

inst_58525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200000000001ff; valaddr_reg:x3; val_offset:175575*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175575*0 + 3*157*FLEN/8, x4, x1, x2)

inst_58526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200000000003ff; valaddr_reg:x3; val_offset:175578*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175578*0 + 3*158*FLEN/8, x4, x1, x2)

inst_58527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200000000007ff; valaddr_reg:x3; val_offset:175581*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175581*0 + 3*159*FLEN/8, x4, x1, x2)

inst_58528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000000000fff; valaddr_reg:x3; val_offset:175584*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175584*0 + 3*160*FLEN/8, x4, x1, x2)

inst_58529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000000001fff; valaddr_reg:x3; val_offset:175587*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175587*0 + 3*161*FLEN/8, x4, x1, x2)

inst_58530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000000003fff; valaddr_reg:x3; val_offset:175590*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175590*0 + 3*162*FLEN/8, x4, x1, x2)

inst_58531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000000007fff; valaddr_reg:x3; val_offset:175593*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175593*0 + 3*163*FLEN/8, x4, x1, x2)

inst_58532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000000000ffff; valaddr_reg:x3; val_offset:175596*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175596*0 + 3*164*FLEN/8, x4, x1, x2)

inst_58533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000000001ffff; valaddr_reg:x3; val_offset:175599*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175599*0 + 3*165*FLEN/8, x4, x1, x2)

inst_58534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000000003ffff; valaddr_reg:x3; val_offset:175602*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175602*0 + 3*166*FLEN/8, x4, x1, x2)

inst_58535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000000007ffff; valaddr_reg:x3; val_offset:175605*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175605*0 + 3*167*FLEN/8, x4, x1, x2)

inst_58536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200000000fffff; valaddr_reg:x3; val_offset:175608*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175608*0 + 3*168*FLEN/8, x4, x1, x2)

inst_58537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200000001fffff; valaddr_reg:x3; val_offset:175611*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175611*0 + 3*169*FLEN/8, x4, x1, x2)

inst_58538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200000003fffff; valaddr_reg:x3; val_offset:175614*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175614*0 + 3*170*FLEN/8, x4, x1, x2)

inst_58539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200000007fffff; valaddr_reg:x3; val_offset:175617*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175617*0 + 3*171*FLEN/8, x4, x1, x2)

inst_58540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000000ffffff; valaddr_reg:x3; val_offset:175620*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175620*0 + 3*172*FLEN/8, x4, x1, x2)

inst_58541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000001ffffff; valaddr_reg:x3; val_offset:175623*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175623*0 + 3*173*FLEN/8, x4, x1, x2)

inst_58542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000003ffffff; valaddr_reg:x3; val_offset:175626*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175626*0 + 3*174*FLEN/8, x4, x1, x2)

inst_58543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000007ffffff; valaddr_reg:x3; val_offset:175629*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175629*0 + 3*175*FLEN/8, x4, x1, x2)

inst_58544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000000fffffff; valaddr_reg:x3; val_offset:175632*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175632*0 + 3*176*FLEN/8, x4, x1, x2)

inst_58545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000001fffffff; valaddr_reg:x3; val_offset:175635*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175635*0 + 3*177*FLEN/8, x4, x1, x2)

inst_58546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000003fffffff; valaddr_reg:x3; val_offset:175638*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175638*0 + 3*178*FLEN/8, x4, x1, x2)

inst_58547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000007fffffff; valaddr_reg:x3; val_offset:175641*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175641*0 + 3*179*FLEN/8, x4, x1, x2)

inst_58548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200000ffffffff; valaddr_reg:x3; val_offset:175644*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175644*0 + 3*180*FLEN/8, x4, x1, x2)

inst_58549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200001ffffffff; valaddr_reg:x3; val_offset:175647*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175647*0 + 3*181*FLEN/8, x4, x1, x2)

inst_58550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200003ffffffff; valaddr_reg:x3; val_offset:175650*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175650*0 + 3*182*FLEN/8, x4, x1, x2)

inst_58551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200007ffffffff; valaddr_reg:x3; val_offset:175653*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175653*0 + 3*183*FLEN/8, x4, x1, x2)

inst_58552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020000fffffffff; valaddr_reg:x3; val_offset:175656*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175656*0 + 3*184*FLEN/8, x4, x1, x2)

inst_58553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020001fffffffff; valaddr_reg:x3; val_offset:175659*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175659*0 + 3*185*FLEN/8, x4, x1, x2)

inst_58554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020003fffffffff; valaddr_reg:x3; val_offset:175662*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175662*0 + 3*186*FLEN/8, x4, x1, x2)

inst_58555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020007fffffffff; valaddr_reg:x3; val_offset:175665*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175665*0 + 3*187*FLEN/8, x4, x1, x2)

inst_58556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802000ffffffffff; valaddr_reg:x3; val_offset:175668*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175668*0 + 3*188*FLEN/8, x4, x1, x2)

inst_58557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802001ffffffffff; valaddr_reg:x3; val_offset:175671*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175671*0 + 3*189*FLEN/8, x4, x1, x2)

inst_58558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802003ffffffffff; valaddr_reg:x3; val_offset:175674*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175674*0 + 3*190*FLEN/8, x4, x1, x2)

inst_58559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802007ffffffffff; valaddr_reg:x3; val_offset:175677*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175677*0 + 3*191*FLEN/8, x4, x1, x2)

inst_58560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80200fffffffffff; valaddr_reg:x3; val_offset:175680*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175680*0 + 3*192*FLEN/8, x4, x1, x2)

inst_58561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80201fffffffffff; valaddr_reg:x3; val_offset:175683*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175683*0 + 3*193*FLEN/8, x4, x1, x2)

inst_58562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80203fffffffffff; valaddr_reg:x3; val_offset:175686*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175686*0 + 3*194*FLEN/8, x4, x1, x2)

inst_58563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x80207fffffffffff; valaddr_reg:x3; val_offset:175689*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175689*0 + 3*195*FLEN/8, x4, x1, x2)

inst_58564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8020ffffffffffff; valaddr_reg:x3; val_offset:175692*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175692*0 + 3*196*FLEN/8, x4, x1, x2)

inst_58565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8021ffffffffffff; valaddr_reg:x3; val_offset:175695*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175695*0 + 3*197*FLEN/8, x4, x1, x2)

inst_58566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8023ffffffffffff; valaddr_reg:x3; val_offset:175698*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175698*0 + 3*198*FLEN/8, x4, x1, x2)

inst_58567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8027ffffffffffff; valaddr_reg:x3; val_offset:175701*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175701*0 + 3*199*FLEN/8, x4, x1, x2)

inst_58568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x8028000000000000; valaddr_reg:x3; val_offset:175704*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175704*0 + 3*200*FLEN/8, x4, x1, x2)

inst_58569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802c000000000000; valaddr_reg:x3; val_offset:175707*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175707*0 + 3*201*FLEN/8, x4, x1, x2)

inst_58570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802e000000000000; valaddr_reg:x3; val_offset:175710*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175710*0 + 3*202*FLEN/8, x4, x1, x2)

inst_58571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802f000000000000; valaddr_reg:x3; val_offset:175713*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175713*0 + 3*203*FLEN/8, x4, x1, x2)

inst_58572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802f800000000000; valaddr_reg:x3; val_offset:175716*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175716*0 + 3*204*FLEN/8, x4, x1, x2)

inst_58573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fc00000000000; valaddr_reg:x3; val_offset:175719*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175719*0 + 3*205*FLEN/8, x4, x1, x2)

inst_58574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fe00000000000; valaddr_reg:x3; val_offset:175722*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175722*0 + 3*206*FLEN/8, x4, x1, x2)

inst_58575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ff00000000000; valaddr_reg:x3; val_offset:175725*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175725*0 + 3*207*FLEN/8, x4, x1, x2)

inst_58576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ff80000000000; valaddr_reg:x3; val_offset:175728*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175728*0 + 3*208*FLEN/8, x4, x1, x2)

inst_58577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffc0000000000; valaddr_reg:x3; val_offset:175731*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175731*0 + 3*209*FLEN/8, x4, x1, x2)

inst_58578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffe0000000000; valaddr_reg:x3; val_offset:175734*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175734*0 + 3*210*FLEN/8, x4, x1, x2)

inst_58579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fff0000000000; valaddr_reg:x3; val_offset:175737*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175737*0 + 3*211*FLEN/8, x4, x1, x2)

inst_58580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fff8000000000; valaddr_reg:x3; val_offset:175740*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175740*0 + 3*212*FLEN/8, x4, x1, x2)

inst_58581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffc000000000; valaddr_reg:x3; val_offset:175743*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175743*0 + 3*213*FLEN/8, x4, x1, x2)

inst_58582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffe000000000; valaddr_reg:x3; val_offset:175746*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175746*0 + 3*214*FLEN/8, x4, x1, x2)

inst_58583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffff000000000; valaddr_reg:x3; val_offset:175749*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175749*0 + 3*215*FLEN/8, x4, x1, x2)

inst_58584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffff800000000; valaddr_reg:x3; val_offset:175752*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175752*0 + 3*216*FLEN/8, x4, x1, x2)

inst_58585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffc00000000; valaddr_reg:x3; val_offset:175755*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175755*0 + 3*217*FLEN/8, x4, x1, x2)

inst_58586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffe00000000; valaddr_reg:x3; val_offset:175758*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175758*0 + 3*218*FLEN/8, x4, x1, x2)

inst_58587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffff00000000; valaddr_reg:x3; val_offset:175761*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175761*0 + 3*219*FLEN/8, x4, x1, x2)

inst_58588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffff80000000; valaddr_reg:x3; val_offset:175764*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175764*0 + 3*220*FLEN/8, x4, x1, x2)

inst_58589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffc0000000; valaddr_reg:x3; val_offset:175767*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175767*0 + 3*221*FLEN/8, x4, x1, x2)

inst_58590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffe0000000; valaddr_reg:x3; val_offset:175770*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175770*0 + 3*222*FLEN/8, x4, x1, x2)

inst_58591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffff0000000; valaddr_reg:x3; val_offset:175773*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175773*0 + 3*223*FLEN/8, x4, x1, x2)

inst_58592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffff8000000; valaddr_reg:x3; val_offset:175776*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175776*0 + 3*224*FLEN/8, x4, x1, x2)

inst_58593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffc000000; valaddr_reg:x3; val_offset:175779*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175779*0 + 3*225*FLEN/8, x4, x1, x2)

inst_58594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffe000000; valaddr_reg:x3; val_offset:175782*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175782*0 + 3*226*FLEN/8, x4, x1, x2)

inst_58595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffff000000; valaddr_reg:x3; val_offset:175785*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175785*0 + 3*227*FLEN/8, x4, x1, x2)

inst_58596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffff800000; valaddr_reg:x3; val_offset:175788*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175788*0 + 3*228*FLEN/8, x4, x1, x2)

inst_58597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffffc00000; valaddr_reg:x3; val_offset:175791*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175791*0 + 3*229*FLEN/8, x4, x1, x2)

inst_58598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffffe00000; valaddr_reg:x3; val_offset:175794*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175794*0 + 3*230*FLEN/8, x4, x1, x2)

inst_58599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffff00000; valaddr_reg:x3; val_offset:175797*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175797*0 + 3*231*FLEN/8, x4, x1, x2)

inst_58600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffff80000; valaddr_reg:x3; val_offset:175800*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175800*0 + 3*232*FLEN/8, x4, x1, x2)

inst_58601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffffc0000; valaddr_reg:x3; val_offset:175803*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175803*0 + 3*233*FLEN/8, x4, x1, x2)

inst_58602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffffe0000; valaddr_reg:x3; val_offset:175806*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175806*0 + 3*234*FLEN/8, x4, x1, x2)

inst_58603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffffff0000; valaddr_reg:x3; val_offset:175809*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175809*0 + 3*235*FLEN/8, x4, x1, x2)

inst_58604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffffff8000; valaddr_reg:x3; val_offset:175812*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175812*0 + 3*236*FLEN/8, x4, x1, x2)

inst_58605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffffffc000; valaddr_reg:x3; val_offset:175815*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175815*0 + 3*237*FLEN/8, x4, x1, x2)

inst_58606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffffffe000; valaddr_reg:x3; val_offset:175818*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175818*0 + 3*238*FLEN/8, x4, x1, x2)

inst_58607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffffff000; valaddr_reg:x3; val_offset:175821*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175821*0 + 3*239*FLEN/8, x4, x1, x2)

inst_58608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffffff800; valaddr_reg:x3; val_offset:175824*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175824*0 + 3*240*FLEN/8, x4, x1, x2)

inst_58609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffffffc00; valaddr_reg:x3; val_offset:175827*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175827*0 + 3*241*FLEN/8, x4, x1, x2)

inst_58610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffffffe00; valaddr_reg:x3; val_offset:175830*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175830*0 + 3*242*FLEN/8, x4, x1, x2)

inst_58611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffffffff00; valaddr_reg:x3; val_offset:175833*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175833*0 + 3*243*FLEN/8, x4, x1, x2)

inst_58612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffffffff80; valaddr_reg:x3; val_offset:175836*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175836*0 + 3*244*FLEN/8, x4, x1, x2)

inst_58613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffffffffc0; valaddr_reg:x3; val_offset:175839*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175839*0 + 3*245*FLEN/8, x4, x1, x2)

inst_58614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffffffffe0; valaddr_reg:x3; val_offset:175842*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175842*0 + 3*246*FLEN/8, x4, x1, x2)

inst_58615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffffffff0; valaddr_reg:x3; val_offset:175845*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175845*0 + 3*247*FLEN/8, x4, x1, x2)

inst_58616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffffffff8; valaddr_reg:x3; val_offset:175848*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175848*0 + 3*248*FLEN/8, x4, x1, x2)

inst_58617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffffffffc; valaddr_reg:x3; val_offset:175851*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175851*0 + 3*249*FLEN/8, x4, x1, x2)

inst_58618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802ffffffffffffe; valaddr_reg:x3; val_offset:175854*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175854*0 + 3*250*FLEN/8, x4, x1, x2)

inst_58619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30d9918574e31 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x002 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa30d9918574e31; op2val:0x8000;
op3val:0x802fffffffffffff; valaddr_reg:x3; val_offset:175857*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175857*0 + 3*251*FLEN/8, x4, x1, x2)

inst_58620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000000000000; valaddr_reg:x3; val_offset:175860*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175860*0 + 3*252*FLEN/8, x4, x1, x2)

inst_58621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000000000001; valaddr_reg:x3; val_offset:175863*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175863*0 + 3*253*FLEN/8, x4, x1, x2)

inst_58622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000000000003; valaddr_reg:x3; val_offset:175866*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175866*0 + 3*254*FLEN/8, x4, x1, x2)

inst_58623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000000000007; valaddr_reg:x3; val_offset:175869*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175869*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_58624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000000000000f; valaddr_reg:x3; val_offset:175872*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175872*0 + 3*256*FLEN/8, x4, x1, x2)

inst_58625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000000000001f; valaddr_reg:x3; val_offset:175875*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175875*0 + 3*257*FLEN/8, x4, x1, x2)

inst_58626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000000000003f; valaddr_reg:x3; val_offset:175878*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175878*0 + 3*258*FLEN/8, x4, x1, x2)

inst_58627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000000000007f; valaddr_reg:x3; val_offset:175881*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175881*0 + 3*259*FLEN/8, x4, x1, x2)

inst_58628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200000000000ff; valaddr_reg:x3; val_offset:175884*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175884*0 + 3*260*FLEN/8, x4, x1, x2)

inst_58629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200000000001ff; valaddr_reg:x3; val_offset:175887*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175887*0 + 3*261*FLEN/8, x4, x1, x2)

inst_58630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200000000003ff; valaddr_reg:x3; val_offset:175890*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175890*0 + 3*262*FLEN/8, x4, x1, x2)

inst_58631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200000000007ff; valaddr_reg:x3; val_offset:175893*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175893*0 + 3*263*FLEN/8, x4, x1, x2)

inst_58632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000000000fff; valaddr_reg:x3; val_offset:175896*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175896*0 + 3*264*FLEN/8, x4, x1, x2)

inst_58633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000000001fff; valaddr_reg:x3; val_offset:175899*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175899*0 + 3*265*FLEN/8, x4, x1, x2)

inst_58634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000000003fff; valaddr_reg:x3; val_offset:175902*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175902*0 + 3*266*FLEN/8, x4, x1, x2)

inst_58635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000000007fff; valaddr_reg:x3; val_offset:175905*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175905*0 + 3*267*FLEN/8, x4, x1, x2)

inst_58636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000000000ffff; valaddr_reg:x3; val_offset:175908*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175908*0 + 3*268*FLEN/8, x4, x1, x2)

inst_58637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000000001ffff; valaddr_reg:x3; val_offset:175911*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175911*0 + 3*269*FLEN/8, x4, x1, x2)

inst_58638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000000003ffff; valaddr_reg:x3; val_offset:175914*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175914*0 + 3*270*FLEN/8, x4, x1, x2)

inst_58639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000000007ffff; valaddr_reg:x3; val_offset:175917*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175917*0 + 3*271*FLEN/8, x4, x1, x2)

inst_58640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200000000fffff; valaddr_reg:x3; val_offset:175920*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175920*0 + 3*272*FLEN/8, x4, x1, x2)

inst_58641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200000001fffff; valaddr_reg:x3; val_offset:175923*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175923*0 + 3*273*FLEN/8, x4, x1, x2)

inst_58642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200000003fffff; valaddr_reg:x3; val_offset:175926*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175926*0 + 3*274*FLEN/8, x4, x1, x2)

inst_58643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200000007fffff; valaddr_reg:x3; val_offset:175929*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175929*0 + 3*275*FLEN/8, x4, x1, x2)

inst_58644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000000ffffff; valaddr_reg:x3; val_offset:175932*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175932*0 + 3*276*FLEN/8, x4, x1, x2)

inst_58645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000001ffffff; valaddr_reg:x3; val_offset:175935*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175935*0 + 3*277*FLEN/8, x4, x1, x2)

inst_58646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000003ffffff; valaddr_reg:x3; val_offset:175938*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175938*0 + 3*278*FLEN/8, x4, x1, x2)

inst_58647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000007ffffff; valaddr_reg:x3; val_offset:175941*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175941*0 + 3*279*FLEN/8, x4, x1, x2)

inst_58648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000000fffffff; valaddr_reg:x3; val_offset:175944*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175944*0 + 3*280*FLEN/8, x4, x1, x2)

inst_58649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000001fffffff; valaddr_reg:x3; val_offset:175947*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175947*0 + 3*281*FLEN/8, x4, x1, x2)

inst_58650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000003fffffff; valaddr_reg:x3; val_offset:175950*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175950*0 + 3*282*FLEN/8, x4, x1, x2)

inst_58651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000007fffffff; valaddr_reg:x3; val_offset:175953*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175953*0 + 3*283*FLEN/8, x4, x1, x2)

inst_58652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200000ffffffff; valaddr_reg:x3; val_offset:175956*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175956*0 + 3*284*FLEN/8, x4, x1, x2)

inst_58653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200001ffffffff; valaddr_reg:x3; val_offset:175959*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175959*0 + 3*285*FLEN/8, x4, x1, x2)

inst_58654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200003ffffffff; valaddr_reg:x3; val_offset:175962*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175962*0 + 3*286*FLEN/8, x4, x1, x2)

inst_58655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200007ffffffff; valaddr_reg:x3; val_offset:175965*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175965*0 + 3*287*FLEN/8, x4, x1, x2)

inst_58656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820000fffffffff; valaddr_reg:x3; val_offset:175968*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175968*0 + 3*288*FLEN/8, x4, x1, x2)

inst_58657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820001fffffffff; valaddr_reg:x3; val_offset:175971*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175971*0 + 3*289*FLEN/8, x4, x1, x2)

inst_58658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820003fffffffff; valaddr_reg:x3; val_offset:175974*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175974*0 + 3*290*FLEN/8, x4, x1, x2)

inst_58659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820007fffffffff; valaddr_reg:x3; val_offset:175977*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175977*0 + 3*291*FLEN/8, x4, x1, x2)

inst_58660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382000ffffffffff; valaddr_reg:x3; val_offset:175980*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175980*0 + 3*292*FLEN/8, x4, x1, x2)

inst_58661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382001ffffffffff; valaddr_reg:x3; val_offset:175983*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175983*0 + 3*293*FLEN/8, x4, x1, x2)

inst_58662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382003ffffffffff; valaddr_reg:x3; val_offset:175986*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175986*0 + 3*294*FLEN/8, x4, x1, x2)

inst_58663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382007ffffffffff; valaddr_reg:x3; val_offset:175989*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175989*0 + 3*295*FLEN/8, x4, x1, x2)

inst_58664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38200fffffffffff; valaddr_reg:x3; val_offset:175992*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175992*0 + 3*296*FLEN/8, x4, x1, x2)

inst_58665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38201fffffffffff; valaddr_reg:x3; val_offset:175995*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175995*0 + 3*297*FLEN/8, x4, x1, x2)

inst_58666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38203fffffffffff; valaddr_reg:x3; val_offset:175998*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175998*0 + 3*298*FLEN/8, x4, x1, x2)

inst_58667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x38207fffffffffff; valaddr_reg:x3; val_offset:176001*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176001*0 + 3*299*FLEN/8, x4, x1, x2)

inst_58668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3820ffffffffffff; valaddr_reg:x3; val_offset:176004*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176004*0 + 3*300*FLEN/8, x4, x1, x2)

inst_58669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3821ffffffffffff; valaddr_reg:x3; val_offset:176007*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176007*0 + 3*301*FLEN/8, x4, x1, x2)

inst_58670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3823ffffffffffff; valaddr_reg:x3; val_offset:176010*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176010*0 + 3*302*FLEN/8, x4, x1, x2)

inst_58671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3827ffffffffffff; valaddr_reg:x3; val_offset:176013*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176013*0 + 3*303*FLEN/8, x4, x1, x2)

inst_58672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3828000000000000; valaddr_reg:x3; val_offset:176016*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176016*0 + 3*304*FLEN/8, x4, x1, x2)

inst_58673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382c000000000000; valaddr_reg:x3; val_offset:176019*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176019*0 + 3*305*FLEN/8, x4, x1, x2)

inst_58674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382e000000000000; valaddr_reg:x3; val_offset:176022*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176022*0 + 3*306*FLEN/8, x4, x1, x2)

inst_58675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382f000000000000; valaddr_reg:x3; val_offset:176025*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176025*0 + 3*307*FLEN/8, x4, x1, x2)

inst_58676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382f800000000000; valaddr_reg:x3; val_offset:176028*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176028*0 + 3*308*FLEN/8, x4, x1, x2)

inst_58677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fc00000000000; valaddr_reg:x3; val_offset:176031*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176031*0 + 3*309*FLEN/8, x4, x1, x2)

inst_58678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fe00000000000; valaddr_reg:x3; val_offset:176034*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176034*0 + 3*310*FLEN/8, x4, x1, x2)

inst_58679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ff00000000000; valaddr_reg:x3; val_offset:176037*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176037*0 + 3*311*FLEN/8, x4, x1, x2)

inst_58680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ff80000000000; valaddr_reg:x3; val_offset:176040*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176040*0 + 3*312*FLEN/8, x4, x1, x2)

inst_58681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffc0000000000; valaddr_reg:x3; val_offset:176043*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176043*0 + 3*313*FLEN/8, x4, x1, x2)

inst_58682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffe0000000000; valaddr_reg:x3; val_offset:176046*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176046*0 + 3*314*FLEN/8, x4, x1, x2)

inst_58683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fff0000000000; valaddr_reg:x3; val_offset:176049*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176049*0 + 3*315*FLEN/8, x4, x1, x2)

inst_58684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fff8000000000; valaddr_reg:x3; val_offset:176052*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176052*0 + 3*316*FLEN/8, x4, x1, x2)

inst_58685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffc000000000; valaddr_reg:x3; val_offset:176055*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176055*0 + 3*317*FLEN/8, x4, x1, x2)

inst_58686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffe000000000; valaddr_reg:x3; val_offset:176058*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176058*0 + 3*318*FLEN/8, x4, x1, x2)

inst_58687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffff000000000; valaddr_reg:x3; val_offset:176061*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176061*0 + 3*319*FLEN/8, x4, x1, x2)

inst_58688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffff800000000; valaddr_reg:x3; val_offset:176064*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176064*0 + 3*320*FLEN/8, x4, x1, x2)

inst_58689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffc00000000; valaddr_reg:x3; val_offset:176067*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176067*0 + 3*321*FLEN/8, x4, x1, x2)

inst_58690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffe00000000; valaddr_reg:x3; val_offset:176070*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176070*0 + 3*322*FLEN/8, x4, x1, x2)

inst_58691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffff00000000; valaddr_reg:x3; val_offset:176073*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176073*0 + 3*323*FLEN/8, x4, x1, x2)

inst_58692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffff80000000; valaddr_reg:x3; val_offset:176076*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176076*0 + 3*324*FLEN/8, x4, x1, x2)

inst_58693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffc0000000; valaddr_reg:x3; val_offset:176079*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176079*0 + 3*325*FLEN/8, x4, x1, x2)

inst_58694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffe0000000; valaddr_reg:x3; val_offset:176082*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176082*0 + 3*326*FLEN/8, x4, x1, x2)

inst_58695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffff0000000; valaddr_reg:x3; val_offset:176085*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176085*0 + 3*327*FLEN/8, x4, x1, x2)

inst_58696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffff8000000; valaddr_reg:x3; val_offset:176088*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176088*0 + 3*328*FLEN/8, x4, x1, x2)

inst_58697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffc000000; valaddr_reg:x3; val_offset:176091*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176091*0 + 3*329*FLEN/8, x4, x1, x2)

inst_58698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffe000000; valaddr_reg:x3; val_offset:176094*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176094*0 + 3*330*FLEN/8, x4, x1, x2)

inst_58699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffff000000; valaddr_reg:x3; val_offset:176097*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176097*0 + 3*331*FLEN/8, x4, x1, x2)

inst_58700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffff800000; valaddr_reg:x3; val_offset:176100*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176100*0 + 3*332*FLEN/8, x4, x1, x2)

inst_58701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffffc00000; valaddr_reg:x3; val_offset:176103*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176103*0 + 3*333*FLEN/8, x4, x1, x2)

inst_58702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffffe00000; valaddr_reg:x3; val_offset:176106*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176106*0 + 3*334*FLEN/8, x4, x1, x2)

inst_58703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffff00000; valaddr_reg:x3; val_offset:176109*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176109*0 + 3*335*FLEN/8, x4, x1, x2)

inst_58704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffff80000; valaddr_reg:x3; val_offset:176112*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176112*0 + 3*336*FLEN/8, x4, x1, x2)

inst_58705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffffc0000; valaddr_reg:x3; val_offset:176115*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176115*0 + 3*337*FLEN/8, x4, x1, x2)

inst_58706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffffe0000; valaddr_reg:x3; val_offset:176118*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176118*0 + 3*338*FLEN/8, x4, x1, x2)

inst_58707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffffff0000; valaddr_reg:x3; val_offset:176121*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176121*0 + 3*339*FLEN/8, x4, x1, x2)

inst_58708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffffff8000; valaddr_reg:x3; val_offset:176124*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176124*0 + 3*340*FLEN/8, x4, x1, x2)

inst_58709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffffffc000; valaddr_reg:x3; val_offset:176127*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176127*0 + 3*341*FLEN/8, x4, x1, x2)

inst_58710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffffffe000; valaddr_reg:x3; val_offset:176130*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176130*0 + 3*342*FLEN/8, x4, x1, x2)

inst_58711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffffff000; valaddr_reg:x3; val_offset:176133*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176133*0 + 3*343*FLEN/8, x4, x1, x2)

inst_58712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffffff800; valaddr_reg:x3; val_offset:176136*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176136*0 + 3*344*FLEN/8, x4, x1, x2)

inst_58713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffffffc00; valaddr_reg:x3; val_offset:176139*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176139*0 + 3*345*FLEN/8, x4, x1, x2)

inst_58714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffffffe00; valaddr_reg:x3; val_offset:176142*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176142*0 + 3*346*FLEN/8, x4, x1, x2)

inst_58715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffffffff00; valaddr_reg:x3; val_offset:176145*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176145*0 + 3*347*FLEN/8, x4, x1, x2)

inst_58716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffffffff80; valaddr_reg:x3; val_offset:176148*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176148*0 + 3*348*FLEN/8, x4, x1, x2)

inst_58717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffffffffc0; valaddr_reg:x3; val_offset:176151*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176151*0 + 3*349*FLEN/8, x4, x1, x2)

inst_58718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffffffffe0; valaddr_reg:x3; val_offset:176154*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176154*0 + 3*350*FLEN/8, x4, x1, x2)

inst_58719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffffffff0; valaddr_reg:x3; val_offset:176157*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176157*0 + 3*351*FLEN/8, x4, x1, x2)

inst_58720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffffffff8; valaddr_reg:x3; val_offset:176160*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176160*0 + 3*352*FLEN/8, x4, x1, x2)

inst_58721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffffffffc; valaddr_reg:x3; val_offset:176163*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176163*0 + 3*353*FLEN/8, x4, x1, x2)

inst_58722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382ffffffffffffe; valaddr_reg:x3; val_offset:176166*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176166*0 + 3*354*FLEN/8, x4, x1, x2)

inst_58723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x382 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x382fffffffffffff; valaddr_reg:x3; val_offset:176169*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176169*0 + 3*355*FLEN/8, x4, x1, x2)

inst_58724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:176172*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176172*0 + 3*356*FLEN/8, x4, x1, x2)

inst_58725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:176175*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176175*0 + 3*357*FLEN/8, x4, x1, x2)

inst_58726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:176178*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176178*0 + 3*358*FLEN/8, x4, x1, x2)

inst_58727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:176181*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176181*0 + 3*359*FLEN/8, x4, x1, x2)

inst_58728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:176184*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176184*0 + 3*360*FLEN/8, x4, x1, x2)

inst_58729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:176187*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176187*0 + 3*361*FLEN/8, x4, x1, x2)

inst_58730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:176190*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176190*0 + 3*362*FLEN/8, x4, x1, x2)

inst_58731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:176193*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176193*0 + 3*363*FLEN/8, x4, x1, x2)

inst_58732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:176196*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176196*0 + 3*364*FLEN/8, x4, x1, x2)

inst_58733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:176199*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176199*0 + 3*365*FLEN/8, x4, x1, x2)

inst_58734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:176202*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176202*0 + 3*366*FLEN/8, x4, x1, x2)

inst_58735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:176205*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176205*0 + 3*367*FLEN/8, x4, x1, x2)

inst_58736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:176208*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176208*0 + 3*368*FLEN/8, x4, x1, x2)

inst_58737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:176211*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176211*0 + 3*369*FLEN/8, x4, x1, x2)

inst_58738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:176214*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176214*0 + 3*370*FLEN/8, x4, x1, x2)

inst_58739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:176217*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176217*0 + 3*371*FLEN/8, x4, x1, x2)

inst_58740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:176220*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176220*0 + 3*372*FLEN/8, x4, x1, x2)

inst_58741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:176223*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176223*0 + 3*373*FLEN/8, x4, x1, x2)

inst_58742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:176226*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176226*0 + 3*374*FLEN/8, x4, x1, x2)

inst_58743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:176229*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176229*0 + 3*375*FLEN/8, x4, x1, x2)

inst_58744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:176232*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176232*0 + 3*376*FLEN/8, x4, x1, x2)

inst_58745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x316678c6757e4 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xad2e568080c93 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa316678c6757e4; op2val:0x203ad2e568080c93;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:176235*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176235*0 + 3*377*FLEN/8, x4, x1, x2)

inst_58746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:176238*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176238*0 + 3*378*FLEN/8, x4, x1, x2)

inst_58747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:176241*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176241*0 + 3*379*FLEN/8, x4, x1, x2)

inst_58748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:176244*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176244*0 + 3*380*FLEN/8, x4, x1, x2)

inst_58749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:176247*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176247*0 + 3*381*FLEN/8, x4, x1, x2)

inst_58750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:176250*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176250*0 + 3*382*FLEN/8, x4, x1, x2)

inst_58751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:176253*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176253*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_58752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:176256*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176256*0 + 3*384*FLEN/8, x4, x1, x2)

inst_58753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:176259*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176259*0 + 3*385*FLEN/8, x4, x1, x2)

inst_58754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:176262*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176262*0 + 3*386*FLEN/8, x4, x1, x2)

inst_58755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:176265*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176265*0 + 3*387*FLEN/8, x4, x1, x2)

inst_58756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:176268*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176268*0 + 3*388*FLEN/8, x4, x1, x2)

inst_58757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:176271*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176271*0 + 3*389*FLEN/8, x4, x1, x2)

inst_58758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:176274*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176274*0 + 3*390*FLEN/8, x4, x1, x2)

inst_58759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:176277*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176277*0 + 3*391*FLEN/8, x4, x1, x2)

inst_58760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:176280*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176280*0 + 3*392*FLEN/8, x4, x1, x2)

inst_58761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:176283*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176283*0 + 3*393*FLEN/8, x4, x1, x2)

inst_58762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:176286*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176286*0 + 3*394*FLEN/8, x4, x1, x2)

inst_58763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:176289*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176289*0 + 3*395*FLEN/8, x4, x1, x2)

inst_58764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:176292*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176292*0 + 3*396*FLEN/8, x4, x1, x2)

inst_58765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:176295*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176295*0 + 3*397*FLEN/8, x4, x1, x2)

inst_58766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:176298*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176298*0 + 3*398*FLEN/8, x4, x1, x2)

inst_58767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:176301*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176301*0 + 3*399*FLEN/8, x4, x1, x2)

inst_58768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000000000000; valaddr_reg:x3; val_offset:176304*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176304*0 + 3*400*FLEN/8, x4, x1, x2)

inst_58769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000000000001; valaddr_reg:x3; val_offset:176307*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176307*0 + 3*401*FLEN/8, x4, x1, x2)

inst_58770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000000000003; valaddr_reg:x3; val_offset:176310*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176310*0 + 3*402*FLEN/8, x4, x1, x2)

inst_58771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000000000007; valaddr_reg:x3; val_offset:176313*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176313*0 + 3*403*FLEN/8, x4, x1, x2)

inst_58772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000000000000f; valaddr_reg:x3; val_offset:176316*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176316*0 + 3*404*FLEN/8, x4, x1, x2)

inst_58773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000000000001f; valaddr_reg:x3; val_offset:176319*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176319*0 + 3*405*FLEN/8, x4, x1, x2)

inst_58774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000000000003f; valaddr_reg:x3; val_offset:176322*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176322*0 + 3*406*FLEN/8, x4, x1, x2)

inst_58775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000000000007f; valaddr_reg:x3; val_offset:176325*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176325*0 + 3*407*FLEN/8, x4, x1, x2)

inst_58776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900000000000ff; valaddr_reg:x3; val_offset:176328*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176328*0 + 3*408*FLEN/8, x4, x1, x2)

inst_58777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900000000001ff; valaddr_reg:x3; val_offset:176331*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176331*0 + 3*409*FLEN/8, x4, x1, x2)

inst_58778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900000000003ff; valaddr_reg:x3; val_offset:176334*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176334*0 + 3*410*FLEN/8, x4, x1, x2)

inst_58779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900000000007ff; valaddr_reg:x3; val_offset:176337*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176337*0 + 3*411*FLEN/8, x4, x1, x2)

inst_58780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000000000fff; valaddr_reg:x3; val_offset:176340*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176340*0 + 3*412*FLEN/8, x4, x1, x2)

inst_58781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000000001fff; valaddr_reg:x3; val_offset:176343*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176343*0 + 3*413*FLEN/8, x4, x1, x2)

inst_58782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000000003fff; valaddr_reg:x3; val_offset:176346*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176346*0 + 3*414*FLEN/8, x4, x1, x2)

inst_58783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000000007fff; valaddr_reg:x3; val_offset:176349*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176349*0 + 3*415*FLEN/8, x4, x1, x2)

inst_58784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000000000ffff; valaddr_reg:x3; val_offset:176352*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176352*0 + 3*416*FLEN/8, x4, x1, x2)

inst_58785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000000001ffff; valaddr_reg:x3; val_offset:176355*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176355*0 + 3*417*FLEN/8, x4, x1, x2)

inst_58786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000000003ffff; valaddr_reg:x3; val_offset:176358*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176358*0 + 3*418*FLEN/8, x4, x1, x2)

inst_58787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000000007ffff; valaddr_reg:x3; val_offset:176361*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176361*0 + 3*419*FLEN/8, x4, x1, x2)

inst_58788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900000000fffff; valaddr_reg:x3; val_offset:176364*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176364*0 + 3*420*FLEN/8, x4, x1, x2)

inst_58789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900000001fffff; valaddr_reg:x3; val_offset:176367*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176367*0 + 3*421*FLEN/8, x4, x1, x2)

inst_58790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900000003fffff; valaddr_reg:x3; val_offset:176370*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176370*0 + 3*422*FLEN/8, x4, x1, x2)

inst_58791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900000007fffff; valaddr_reg:x3; val_offset:176373*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176373*0 + 3*423*FLEN/8, x4, x1, x2)

inst_58792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000000ffffff; valaddr_reg:x3; val_offset:176376*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176376*0 + 3*424*FLEN/8, x4, x1, x2)

inst_58793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000001ffffff; valaddr_reg:x3; val_offset:176379*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176379*0 + 3*425*FLEN/8, x4, x1, x2)

inst_58794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000003ffffff; valaddr_reg:x3; val_offset:176382*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176382*0 + 3*426*FLEN/8, x4, x1, x2)

inst_58795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000007ffffff; valaddr_reg:x3; val_offset:176385*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176385*0 + 3*427*FLEN/8, x4, x1, x2)

inst_58796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000000fffffff; valaddr_reg:x3; val_offset:176388*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176388*0 + 3*428*FLEN/8, x4, x1, x2)

inst_58797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000001fffffff; valaddr_reg:x3; val_offset:176391*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176391*0 + 3*429*FLEN/8, x4, x1, x2)

inst_58798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000003fffffff; valaddr_reg:x3; val_offset:176394*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176394*0 + 3*430*FLEN/8, x4, x1, x2)

inst_58799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000007fffffff; valaddr_reg:x3; val_offset:176397*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176397*0 + 3*431*FLEN/8, x4, x1, x2)

inst_58800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900000ffffffff; valaddr_reg:x3; val_offset:176400*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176400*0 + 3*432*FLEN/8, x4, x1, x2)

inst_58801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900001ffffffff; valaddr_reg:x3; val_offset:176403*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176403*0 + 3*433*FLEN/8, x4, x1, x2)

inst_58802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900003ffffffff; valaddr_reg:x3; val_offset:176406*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176406*0 + 3*434*FLEN/8, x4, x1, x2)

inst_58803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900007ffffffff; valaddr_reg:x3; val_offset:176409*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176409*0 + 3*435*FLEN/8, x4, x1, x2)

inst_58804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190000fffffffff; valaddr_reg:x3; val_offset:176412*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176412*0 + 3*436*FLEN/8, x4, x1, x2)

inst_58805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190001fffffffff; valaddr_reg:x3; val_offset:176415*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176415*0 + 3*437*FLEN/8, x4, x1, x2)

inst_58806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190003fffffffff; valaddr_reg:x3; val_offset:176418*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176418*0 + 3*438*FLEN/8, x4, x1, x2)

inst_58807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190007fffffffff; valaddr_reg:x3; val_offset:176421*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176421*0 + 3*439*FLEN/8, x4, x1, x2)

inst_58808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19000ffffffffff; valaddr_reg:x3; val_offset:176424*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176424*0 + 3*440*FLEN/8, x4, x1, x2)

inst_58809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19001ffffffffff; valaddr_reg:x3; val_offset:176427*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176427*0 + 3*441*FLEN/8, x4, x1, x2)

inst_58810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19003ffffffffff; valaddr_reg:x3; val_offset:176430*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176430*0 + 3*442*FLEN/8, x4, x1, x2)

inst_58811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19007ffffffffff; valaddr_reg:x3; val_offset:176433*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176433*0 + 3*443*FLEN/8, x4, x1, x2)

inst_58812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1900fffffffffff; valaddr_reg:x3; val_offset:176436*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176436*0 + 3*444*FLEN/8, x4, x1, x2)

inst_58813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1901fffffffffff; valaddr_reg:x3; val_offset:176439*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176439*0 + 3*445*FLEN/8, x4, x1, x2)

inst_58814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1903fffffffffff; valaddr_reg:x3; val_offset:176442*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176442*0 + 3*446*FLEN/8, x4, x1, x2)

inst_58815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x1907fffffffffff; valaddr_reg:x3; val_offset:176445*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176445*0 + 3*447*FLEN/8, x4, x1, x2)

inst_58816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x190ffffffffffff; valaddr_reg:x3; val_offset:176448*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176448*0 + 3*448*FLEN/8, x4, x1, x2)

inst_58817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x191ffffffffffff; valaddr_reg:x3; val_offset:176451*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176451*0 + 3*449*FLEN/8, x4, x1, x2)

inst_58818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x193ffffffffffff; valaddr_reg:x3; val_offset:176454*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176454*0 + 3*450*FLEN/8, x4, x1, x2)

inst_58819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x197ffffffffffff; valaddr_reg:x3; val_offset:176457*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176457*0 + 3*451*FLEN/8, x4, x1, x2)

inst_58820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x198000000000000; valaddr_reg:x3; val_offset:176460*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176460*0 + 3*452*FLEN/8, x4, x1, x2)

inst_58821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19c000000000000; valaddr_reg:x3; val_offset:176463*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176463*0 + 3*453*FLEN/8, x4, x1, x2)

inst_58822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19e000000000000; valaddr_reg:x3; val_offset:176466*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176466*0 + 3*454*FLEN/8, x4, x1, x2)

inst_58823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19f000000000000; valaddr_reg:x3; val_offset:176469*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176469*0 + 3*455*FLEN/8, x4, x1, x2)

inst_58824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19f800000000000; valaddr_reg:x3; val_offset:176472*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176472*0 + 3*456*FLEN/8, x4, x1, x2)

inst_58825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fc00000000000; valaddr_reg:x3; val_offset:176475*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176475*0 + 3*457*FLEN/8, x4, x1, x2)

inst_58826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fe00000000000; valaddr_reg:x3; val_offset:176478*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176478*0 + 3*458*FLEN/8, x4, x1, x2)

inst_58827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ff00000000000; valaddr_reg:x3; val_offset:176481*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176481*0 + 3*459*FLEN/8, x4, x1, x2)

inst_58828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ff80000000000; valaddr_reg:x3; val_offset:176484*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176484*0 + 3*460*FLEN/8, x4, x1, x2)

inst_58829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffc0000000000; valaddr_reg:x3; val_offset:176487*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176487*0 + 3*461*FLEN/8, x4, x1, x2)

inst_58830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffe0000000000; valaddr_reg:x3; val_offset:176490*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176490*0 + 3*462*FLEN/8, x4, x1, x2)

inst_58831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fff0000000000; valaddr_reg:x3; val_offset:176493*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176493*0 + 3*463*FLEN/8, x4, x1, x2)

inst_58832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fff8000000000; valaddr_reg:x3; val_offset:176496*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176496*0 + 3*464*FLEN/8, x4, x1, x2)

inst_58833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffc000000000; valaddr_reg:x3; val_offset:176499*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176499*0 + 3*465*FLEN/8, x4, x1, x2)

inst_58834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffe000000000; valaddr_reg:x3; val_offset:176502*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176502*0 + 3*466*FLEN/8, x4, x1, x2)

inst_58835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffff000000000; valaddr_reg:x3; val_offset:176505*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176505*0 + 3*467*FLEN/8, x4, x1, x2)

inst_58836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffff800000000; valaddr_reg:x3; val_offset:176508*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176508*0 + 3*468*FLEN/8, x4, x1, x2)

inst_58837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffc00000000; valaddr_reg:x3; val_offset:176511*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176511*0 + 3*469*FLEN/8, x4, x1, x2)

inst_58838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffe00000000; valaddr_reg:x3; val_offset:176514*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176514*0 + 3*470*FLEN/8, x4, x1, x2)

inst_58839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffff00000000; valaddr_reg:x3; val_offset:176517*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176517*0 + 3*471*FLEN/8, x4, x1, x2)

inst_58840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffff80000000; valaddr_reg:x3; val_offset:176520*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176520*0 + 3*472*FLEN/8, x4, x1, x2)

inst_58841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffc0000000; valaddr_reg:x3; val_offset:176523*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176523*0 + 3*473*FLEN/8, x4, x1, x2)

inst_58842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffe0000000; valaddr_reg:x3; val_offset:176526*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176526*0 + 3*474*FLEN/8, x4, x1, x2)

inst_58843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffff0000000; valaddr_reg:x3; val_offset:176529*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176529*0 + 3*475*FLEN/8, x4, x1, x2)

inst_58844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffff8000000; valaddr_reg:x3; val_offset:176532*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176532*0 + 3*476*FLEN/8, x4, x1, x2)

inst_58845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffc000000; valaddr_reg:x3; val_offset:176535*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176535*0 + 3*477*FLEN/8, x4, x1, x2)

inst_58846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffe000000; valaddr_reg:x3; val_offset:176538*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176538*0 + 3*478*FLEN/8, x4, x1, x2)

inst_58847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffff000000; valaddr_reg:x3; val_offset:176541*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176541*0 + 3*479*FLEN/8, x4, x1, x2)

inst_58848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffff800000; valaddr_reg:x3; val_offset:176544*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176544*0 + 3*480*FLEN/8, x4, x1, x2)

inst_58849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffffc00000; valaddr_reg:x3; val_offset:176547*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176547*0 + 3*481*FLEN/8, x4, x1, x2)

inst_58850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffffe00000; valaddr_reg:x3; val_offset:176550*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176550*0 + 3*482*FLEN/8, x4, x1, x2)

inst_58851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffff00000; valaddr_reg:x3; val_offset:176553*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176553*0 + 3*483*FLEN/8, x4, x1, x2)

inst_58852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffff80000; valaddr_reg:x3; val_offset:176556*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176556*0 + 3*484*FLEN/8, x4, x1, x2)

inst_58853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffffc0000; valaddr_reg:x3; val_offset:176559*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176559*0 + 3*485*FLEN/8, x4, x1, x2)

inst_58854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffffe0000; valaddr_reg:x3; val_offset:176562*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176562*0 + 3*486*FLEN/8, x4, x1, x2)

inst_58855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffffff0000; valaddr_reg:x3; val_offset:176565*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176565*0 + 3*487*FLEN/8, x4, x1, x2)

inst_58856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffffff8000; valaddr_reg:x3; val_offset:176568*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176568*0 + 3*488*FLEN/8, x4, x1, x2)

inst_58857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffffffc000; valaddr_reg:x3; val_offset:176571*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176571*0 + 3*489*FLEN/8, x4, x1, x2)

inst_58858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffffffe000; valaddr_reg:x3; val_offset:176574*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176574*0 + 3*490*FLEN/8, x4, x1, x2)

inst_58859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffffff000; valaddr_reg:x3; val_offset:176577*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176577*0 + 3*491*FLEN/8, x4, x1, x2)

inst_58860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffffff800; valaddr_reg:x3; val_offset:176580*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176580*0 + 3*492*FLEN/8, x4, x1, x2)

inst_58861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffffffc00; valaddr_reg:x3; val_offset:176583*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176583*0 + 3*493*FLEN/8, x4, x1, x2)

inst_58862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffffffe00; valaddr_reg:x3; val_offset:176586*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176586*0 + 3*494*FLEN/8, x4, x1, x2)

inst_58863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffffffff00; valaddr_reg:x3; val_offset:176589*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176589*0 + 3*495*FLEN/8, x4, x1, x2)

inst_58864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffffffff80; valaddr_reg:x3; val_offset:176592*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176592*0 + 3*496*FLEN/8, x4, x1, x2)

inst_58865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffffffffc0; valaddr_reg:x3; val_offset:176595*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176595*0 + 3*497*FLEN/8, x4, x1, x2)

inst_58866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffffffffe0; valaddr_reg:x3; val_offset:176598*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176598*0 + 3*498*FLEN/8, x4, x1, x2)

inst_58867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffffffff0; valaddr_reg:x3; val_offset:176601*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176601*0 + 3*499*FLEN/8, x4, x1, x2)

inst_58868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffffffff8; valaddr_reg:x3; val_offset:176604*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176604*0 + 3*500*FLEN/8, x4, x1, x2)

inst_58869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffffffffc; valaddr_reg:x3; val_offset:176607*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176607*0 + 3*501*FLEN/8, x4, x1, x2)

inst_58870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19ffffffffffffe; valaddr_reg:x3; val_offset:176610*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176610*0 + 3*502*FLEN/8, x4, x1, x2)

inst_58871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x32546967837d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa32546967837d0; op2val:0x0;
op3val:0x19fffffffffffff; valaddr_reg:x3; val_offset:176613*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176613*0 + 3*503*FLEN/8, x4, x1, x2)

inst_58872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000000000000; valaddr_reg:x3; val_offset:176616*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176616*0 + 3*504*FLEN/8, x4, x1, x2)

inst_58873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000000000001; valaddr_reg:x3; val_offset:176619*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176619*0 + 3*505*FLEN/8, x4, x1, x2)

inst_58874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000000000003; valaddr_reg:x3; val_offset:176622*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176622*0 + 3*506*FLEN/8, x4, x1, x2)

inst_58875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000000000007; valaddr_reg:x3; val_offset:176625*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176625*0 + 3*507*FLEN/8, x4, x1, x2)

inst_58876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000000000000f; valaddr_reg:x3; val_offset:176628*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176628*0 + 3*508*FLEN/8, x4, x1, x2)

inst_58877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000000000001f; valaddr_reg:x3; val_offset:176631*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176631*0 + 3*509*FLEN/8, x4, x1, x2)

inst_58878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000000000003f; valaddr_reg:x3; val_offset:176634*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176634*0 + 3*510*FLEN/8, x4, x1, x2)

inst_58879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000000000007f; valaddr_reg:x3; val_offset:176637*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176637*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_58880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300000000000ff; valaddr_reg:x3; val_offset:176640*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176640*0 + 3*512*FLEN/8, x4, x1, x2)

inst_58881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300000000001ff; valaddr_reg:x3; val_offset:176643*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176643*0 + 3*513*FLEN/8, x4, x1, x2)

inst_58882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300000000003ff; valaddr_reg:x3; val_offset:176646*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176646*0 + 3*514*FLEN/8, x4, x1, x2)

inst_58883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300000000007ff; valaddr_reg:x3; val_offset:176649*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176649*0 + 3*515*FLEN/8, x4, x1, x2)

inst_58884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000000000fff; valaddr_reg:x3; val_offset:176652*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176652*0 + 3*516*FLEN/8, x4, x1, x2)

inst_58885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000000001fff; valaddr_reg:x3; val_offset:176655*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176655*0 + 3*517*FLEN/8, x4, x1, x2)

inst_58886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000000003fff; valaddr_reg:x3; val_offset:176658*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176658*0 + 3*518*FLEN/8, x4, x1, x2)

inst_58887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000000007fff; valaddr_reg:x3; val_offset:176661*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176661*0 + 3*519*FLEN/8, x4, x1, x2)

inst_58888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000000000ffff; valaddr_reg:x3; val_offset:176664*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176664*0 + 3*520*FLEN/8, x4, x1, x2)

inst_58889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000000001ffff; valaddr_reg:x3; val_offset:176667*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176667*0 + 3*521*FLEN/8, x4, x1, x2)

inst_58890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000000003ffff; valaddr_reg:x3; val_offset:176670*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176670*0 + 3*522*FLEN/8, x4, x1, x2)

inst_58891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000000007ffff; valaddr_reg:x3; val_offset:176673*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176673*0 + 3*523*FLEN/8, x4, x1, x2)

inst_58892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300000000fffff; valaddr_reg:x3; val_offset:176676*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176676*0 + 3*524*FLEN/8, x4, x1, x2)

inst_58893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300000001fffff; valaddr_reg:x3; val_offset:176679*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176679*0 + 3*525*FLEN/8, x4, x1, x2)

inst_58894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300000003fffff; valaddr_reg:x3; val_offset:176682*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176682*0 + 3*526*FLEN/8, x4, x1, x2)

inst_58895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300000007fffff; valaddr_reg:x3; val_offset:176685*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176685*0 + 3*527*FLEN/8, x4, x1, x2)

inst_58896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000000ffffff; valaddr_reg:x3; val_offset:176688*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176688*0 + 3*528*FLEN/8, x4, x1, x2)

inst_58897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000001ffffff; valaddr_reg:x3; val_offset:176691*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176691*0 + 3*529*FLEN/8, x4, x1, x2)

inst_58898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000003ffffff; valaddr_reg:x3; val_offset:176694*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176694*0 + 3*530*FLEN/8, x4, x1, x2)

inst_58899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000007ffffff; valaddr_reg:x3; val_offset:176697*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176697*0 + 3*531*FLEN/8, x4, x1, x2)

inst_58900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000000fffffff; valaddr_reg:x3; val_offset:176700*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176700*0 + 3*532*FLEN/8, x4, x1, x2)

inst_58901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000001fffffff; valaddr_reg:x3; val_offset:176703*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176703*0 + 3*533*FLEN/8, x4, x1, x2)

inst_58902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000003fffffff; valaddr_reg:x3; val_offset:176706*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176706*0 + 3*534*FLEN/8, x4, x1, x2)

inst_58903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000007fffffff; valaddr_reg:x3; val_offset:176709*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176709*0 + 3*535*FLEN/8, x4, x1, x2)

inst_58904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300000ffffffff; valaddr_reg:x3; val_offset:176712*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176712*0 + 3*536*FLEN/8, x4, x1, x2)

inst_58905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300001ffffffff; valaddr_reg:x3; val_offset:176715*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176715*0 + 3*537*FLEN/8, x4, x1, x2)

inst_58906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300003ffffffff; valaddr_reg:x3; val_offset:176718*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176718*0 + 3*538*FLEN/8, x4, x1, x2)

inst_58907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300007ffffffff; valaddr_reg:x3; val_offset:176721*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176721*0 + 3*539*FLEN/8, x4, x1, x2)

inst_58908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30000fffffffff; valaddr_reg:x3; val_offset:176724*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176724*0 + 3*540*FLEN/8, x4, x1, x2)

inst_58909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30001fffffffff; valaddr_reg:x3; val_offset:176727*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176727*0 + 3*541*FLEN/8, x4, x1, x2)

inst_58910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30003fffffffff; valaddr_reg:x3; val_offset:176730*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176730*0 + 3*542*FLEN/8, x4, x1, x2)

inst_58911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30007fffffffff; valaddr_reg:x3; val_offset:176733*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176733*0 + 3*543*FLEN/8, x4, x1, x2)

inst_58912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3000ffffffffff; valaddr_reg:x3; val_offset:176736*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176736*0 + 3*544*FLEN/8, x4, x1, x2)

inst_58913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3001ffffffffff; valaddr_reg:x3; val_offset:176739*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176739*0 + 3*545*FLEN/8, x4, x1, x2)

inst_58914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3003ffffffffff; valaddr_reg:x3; val_offset:176742*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176742*0 + 3*546*FLEN/8, x4, x1, x2)

inst_58915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3007ffffffffff; valaddr_reg:x3; val_offset:176745*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176745*0 + 3*547*FLEN/8, x4, x1, x2)

inst_58916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf300fffffffffff; valaddr_reg:x3; val_offset:176748*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176748*0 + 3*548*FLEN/8, x4, x1, x2)

inst_58917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf301fffffffffff; valaddr_reg:x3; val_offset:176751*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176751*0 + 3*549*FLEN/8, x4, x1, x2)

inst_58918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf303fffffffffff; valaddr_reg:x3; val_offset:176754*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176754*0 + 3*550*FLEN/8, x4, x1, x2)

inst_58919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf307fffffffffff; valaddr_reg:x3; val_offset:176757*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176757*0 + 3*551*FLEN/8, x4, x1, x2)

inst_58920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf30ffffffffffff; valaddr_reg:x3; val_offset:176760*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176760*0 + 3*552*FLEN/8, x4, x1, x2)

inst_58921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf31ffffffffffff; valaddr_reg:x3; val_offset:176763*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176763*0 + 3*553*FLEN/8, x4, x1, x2)

inst_58922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf33ffffffffffff; valaddr_reg:x3; val_offset:176766*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176766*0 + 3*554*FLEN/8, x4, x1, x2)

inst_58923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf37ffffffffffff; valaddr_reg:x3; val_offset:176769*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176769*0 + 3*555*FLEN/8, x4, x1, x2)

inst_58924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf38000000000000; valaddr_reg:x3; val_offset:176772*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176772*0 + 3*556*FLEN/8, x4, x1, x2)

inst_58925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3c000000000000; valaddr_reg:x3; val_offset:176775*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176775*0 + 3*557*FLEN/8, x4, x1, x2)

inst_58926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3e000000000000; valaddr_reg:x3; val_offset:176778*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176778*0 + 3*558*FLEN/8, x4, x1, x2)

inst_58927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3f000000000000; valaddr_reg:x3; val_offset:176781*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176781*0 + 3*559*FLEN/8, x4, x1, x2)

inst_58928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3f800000000000; valaddr_reg:x3; val_offset:176784*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176784*0 + 3*560*FLEN/8, x4, x1, x2)

inst_58929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fc00000000000; valaddr_reg:x3; val_offset:176787*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176787*0 + 3*561*FLEN/8, x4, x1, x2)

inst_58930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fe00000000000; valaddr_reg:x3; val_offset:176790*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176790*0 + 3*562*FLEN/8, x4, x1, x2)

inst_58931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ff00000000000; valaddr_reg:x3; val_offset:176793*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176793*0 + 3*563*FLEN/8, x4, x1, x2)

inst_58932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ff80000000000; valaddr_reg:x3; val_offset:176796*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176796*0 + 3*564*FLEN/8, x4, x1, x2)

inst_58933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffc0000000000; valaddr_reg:x3; val_offset:176799*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176799*0 + 3*565*FLEN/8, x4, x1, x2)

inst_58934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffe0000000000; valaddr_reg:x3; val_offset:176802*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176802*0 + 3*566*FLEN/8, x4, x1, x2)

inst_58935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fff0000000000; valaddr_reg:x3; val_offset:176805*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176805*0 + 3*567*FLEN/8, x4, x1, x2)

inst_58936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fff8000000000; valaddr_reg:x3; val_offset:176808*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176808*0 + 3*568*FLEN/8, x4, x1, x2)

inst_58937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffc000000000; valaddr_reg:x3; val_offset:176811*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176811*0 + 3*569*FLEN/8, x4, x1, x2)

inst_58938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffe000000000; valaddr_reg:x3; val_offset:176814*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176814*0 + 3*570*FLEN/8, x4, x1, x2)

inst_58939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffff000000000; valaddr_reg:x3; val_offset:176817*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176817*0 + 3*571*FLEN/8, x4, x1, x2)

inst_58940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffff800000000; valaddr_reg:x3; val_offset:176820*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176820*0 + 3*572*FLEN/8, x4, x1, x2)

inst_58941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffc00000000; valaddr_reg:x3; val_offset:176823*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176823*0 + 3*573*FLEN/8, x4, x1, x2)

inst_58942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffe00000000; valaddr_reg:x3; val_offset:176826*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176826*0 + 3*574*FLEN/8, x4, x1, x2)

inst_58943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffff00000000; valaddr_reg:x3; val_offset:176829*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176829*0 + 3*575*FLEN/8, x4, x1, x2)

inst_58944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffff80000000; valaddr_reg:x3; val_offset:176832*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176832*0 + 3*576*FLEN/8, x4, x1, x2)

inst_58945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffc0000000; valaddr_reg:x3; val_offset:176835*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176835*0 + 3*577*FLEN/8, x4, x1, x2)

inst_58946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffe0000000; valaddr_reg:x3; val_offset:176838*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176838*0 + 3*578*FLEN/8, x4, x1, x2)

inst_58947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffff0000000; valaddr_reg:x3; val_offset:176841*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176841*0 + 3*579*FLEN/8, x4, x1, x2)

inst_58948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffff8000000; valaddr_reg:x3; val_offset:176844*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176844*0 + 3*580*FLEN/8, x4, x1, x2)

inst_58949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffc000000; valaddr_reg:x3; val_offset:176847*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176847*0 + 3*581*FLEN/8, x4, x1, x2)

inst_58950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffe000000; valaddr_reg:x3; val_offset:176850*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176850*0 + 3*582*FLEN/8, x4, x1, x2)

inst_58951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffff000000; valaddr_reg:x3; val_offset:176853*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176853*0 + 3*583*FLEN/8, x4, x1, x2)

inst_58952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffff800000; valaddr_reg:x3; val_offset:176856*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176856*0 + 3*584*FLEN/8, x4, x1, x2)

inst_58953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffffc00000; valaddr_reg:x3; val_offset:176859*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176859*0 + 3*585*FLEN/8, x4, x1, x2)

inst_58954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffffe00000; valaddr_reg:x3; val_offset:176862*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176862*0 + 3*586*FLEN/8, x4, x1, x2)

inst_58955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffff00000; valaddr_reg:x3; val_offset:176865*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176865*0 + 3*587*FLEN/8, x4, x1, x2)

inst_58956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffff80000; valaddr_reg:x3; val_offset:176868*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176868*0 + 3*588*FLEN/8, x4, x1, x2)

inst_58957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffffc0000; valaddr_reg:x3; val_offset:176871*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176871*0 + 3*589*FLEN/8, x4, x1, x2)

inst_58958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffffe0000; valaddr_reg:x3; val_offset:176874*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176874*0 + 3*590*FLEN/8, x4, x1, x2)

inst_58959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffffff0000; valaddr_reg:x3; val_offset:176877*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176877*0 + 3*591*FLEN/8, x4, x1, x2)

inst_58960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffffff8000; valaddr_reg:x3; val_offset:176880*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176880*0 + 3*592*FLEN/8, x4, x1, x2)

inst_58961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffffffc000; valaddr_reg:x3; val_offset:176883*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176883*0 + 3*593*FLEN/8, x4, x1, x2)

inst_58962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffffffe000; valaddr_reg:x3; val_offset:176886*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176886*0 + 3*594*FLEN/8, x4, x1, x2)

inst_58963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffffff000; valaddr_reg:x3; val_offset:176889*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176889*0 + 3*595*FLEN/8, x4, x1, x2)

inst_58964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffffff800; valaddr_reg:x3; val_offset:176892*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176892*0 + 3*596*FLEN/8, x4, x1, x2)

inst_58965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffffffc00; valaddr_reg:x3; val_offset:176895*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176895*0 + 3*597*FLEN/8, x4, x1, x2)

inst_58966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffffffe00; valaddr_reg:x3; val_offset:176898*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176898*0 + 3*598*FLEN/8, x4, x1, x2)

inst_58967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffffffff00; valaddr_reg:x3; val_offset:176901*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176901*0 + 3*599*FLEN/8, x4, x1, x2)

inst_58968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffffffff80; valaddr_reg:x3; val_offset:176904*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176904*0 + 3*600*FLEN/8, x4, x1, x2)

inst_58969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffffffffc0; valaddr_reg:x3; val_offset:176907*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176907*0 + 3*601*FLEN/8, x4, x1, x2)

inst_58970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffffffffe0; valaddr_reg:x3; val_offset:176910*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176910*0 + 3*602*FLEN/8, x4, x1, x2)

inst_58971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffffffff0; valaddr_reg:x3; val_offset:176913*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176913*0 + 3*603*FLEN/8, x4, x1, x2)

inst_58972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffffffff8; valaddr_reg:x3; val_offset:176916*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176916*0 + 3*604*FLEN/8, x4, x1, x2)

inst_58973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffffffffc; valaddr_reg:x3; val_offset:176919*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176919*0 + 3*605*FLEN/8, x4, x1, x2)

inst_58974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3ffffffffffffe; valaddr_reg:x3; val_offset:176922*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176922*0 + 3*606*FLEN/8, x4, x1, x2)

inst_58975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f3 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf3fffffffffffff; valaddr_reg:x3; val_offset:176925*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176925*0 + 3*607*FLEN/8, x4, x1, x2)

inst_58976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:176928*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176928*0 + 3*608*FLEN/8, x4, x1, x2)

inst_58977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:176931*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176931*0 + 3*609*FLEN/8, x4, x1, x2)

inst_58978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:176934*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176934*0 + 3*610*FLEN/8, x4, x1, x2)

inst_58979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:176937*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176937*0 + 3*611*FLEN/8, x4, x1, x2)

inst_58980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:176940*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176940*0 + 3*612*FLEN/8, x4, x1, x2)

inst_58981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:176943*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176943*0 + 3*613*FLEN/8, x4, x1, x2)

inst_58982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:176946*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176946*0 + 3*614*FLEN/8, x4, x1, x2)

inst_58983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:176949*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176949*0 + 3*615*FLEN/8, x4, x1, x2)

inst_58984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:176952*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176952*0 + 3*616*FLEN/8, x4, x1, x2)

inst_58985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:176955*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176955*0 + 3*617*FLEN/8, x4, x1, x2)

inst_58986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:176958*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176958*0 + 3*618*FLEN/8, x4, x1, x2)

inst_58987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:176961*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176961*0 + 3*619*FLEN/8, x4, x1, x2)

inst_58988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:176964*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176964*0 + 3*620*FLEN/8, x4, x1, x2)

inst_58989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:176967*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176967*0 + 3*621*FLEN/8, x4, x1, x2)

inst_58990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:176970*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176970*0 + 3*622*FLEN/8, x4, x1, x2)

inst_58991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:176973*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176973*0 + 3*623*FLEN/8, x4, x1, x2)

inst_58992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:176976*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176976*0 + 3*624*FLEN/8, x4, x1, x2)

inst_58993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:176979*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176979*0 + 3*625*FLEN/8, x4, x1, x2)

inst_58994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:176982*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176982*0 + 3*626*FLEN/8, x4, x1, x2)

inst_58995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:176985*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176985*0 + 3*627*FLEN/8, x4, x1, x2)

inst_58996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:176988*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176988*0 + 3*628*FLEN/8, x4, x1, x2)

inst_58997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xaba784283afa2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa327d919abde6a; op2val:0x9fcaba784283afa2;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:176991*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176991*0 + 3*629*FLEN/8, x4, x1, x2)

inst_58998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:176994*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176994*0 + 3*630*FLEN/8, x4, x1, x2)

inst_58999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:176997*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 176997*0 + 3*631*FLEN/8, x4, x1, x2)

inst_59000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:177000*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177000*0 + 3*632*FLEN/8, x4, x1, x2)

inst_59001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:177003*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177003*0 + 3*633*FLEN/8, x4, x1, x2)

inst_59002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:177006*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177006*0 + 3*634*FLEN/8, x4, x1, x2)

inst_59003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:177009*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177009*0 + 3*635*FLEN/8, x4, x1, x2)

inst_59004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:177012*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177012*0 + 3*636*FLEN/8, x4, x1, x2)

inst_59005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:177015*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177015*0 + 3*637*FLEN/8, x4, x1, x2)

inst_59006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:177018*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177018*0 + 3*638*FLEN/8, x4, x1, x2)

inst_59007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:177021*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177021*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_59008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:177024*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177024*0 + 3*640*FLEN/8, x4, x1, x2)

inst_59009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:177027*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177027*0 + 3*641*FLEN/8, x4, x1, x2)

inst_59010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:177030*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177030*0 + 3*642*FLEN/8, x4, x1, x2)

inst_59011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:177033*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177033*0 + 3*643*FLEN/8, x4, x1, x2)

inst_59012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:177036*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177036*0 + 3*644*FLEN/8, x4, x1, x2)

inst_59013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:177039*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177039*0 + 3*645*FLEN/8, x4, x1, x2)

inst_59014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:177042*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177042*0 + 3*646*FLEN/8, x4, x1, x2)

inst_59015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:177045*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177045*0 + 3*647*FLEN/8, x4, x1, x2)

inst_59016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:177048*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177048*0 + 3*648*FLEN/8, x4, x1, x2)

inst_59017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:177051*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177051*0 + 3*649*FLEN/8, x4, x1, x2)

inst_59018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:177054*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177054*0 + 3*650*FLEN/8, x4, x1, x2)

inst_59019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:177057*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177057*0 + 3*651*FLEN/8, x4, x1, x2)

inst_59020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000000000000; valaddr_reg:x3; val_offset:177060*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177060*0 + 3*652*FLEN/8, x4, x1, x2)

inst_59021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:177063*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177063*0 + 3*653*FLEN/8, x4, x1, x2)

inst_59022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:177066*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177066*0 + 3*654*FLEN/8, x4, x1, x2)

inst_59023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:177069*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177069*0 + 3*655*FLEN/8, x4, x1, x2)

inst_59024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:177072*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177072*0 + 3*656*FLEN/8, x4, x1, x2)

inst_59025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:177075*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177075*0 + 3*657*FLEN/8, x4, x1, x2)

inst_59026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:177078*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177078*0 + 3*658*FLEN/8, x4, x1, x2)

inst_59027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000000000007f; valaddr_reg:x3; val_offset:177081*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177081*0 + 3*659*FLEN/8, x4, x1, x2)

inst_59028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100000000000ff; valaddr_reg:x3; val_offset:177084*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177084*0 + 3*660*FLEN/8, x4, x1, x2)

inst_59029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100000000001ff; valaddr_reg:x3; val_offset:177087*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177087*0 + 3*661*FLEN/8, x4, x1, x2)

inst_59030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100000000003ff; valaddr_reg:x3; val_offset:177090*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177090*0 + 3*662*FLEN/8, x4, x1, x2)

inst_59031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100000000007ff; valaddr_reg:x3; val_offset:177093*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177093*0 + 3*663*FLEN/8, x4, x1, x2)

inst_59032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000000000fff; valaddr_reg:x3; val_offset:177096*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177096*0 + 3*664*FLEN/8, x4, x1, x2)

inst_59033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000000001fff; valaddr_reg:x3; val_offset:177099*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177099*0 + 3*665*FLEN/8, x4, x1, x2)

inst_59034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000000003fff; valaddr_reg:x3; val_offset:177102*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177102*0 + 3*666*FLEN/8, x4, x1, x2)

inst_59035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000000007fff; valaddr_reg:x3; val_offset:177105*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177105*0 + 3*667*FLEN/8, x4, x1, x2)

inst_59036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000000000ffff; valaddr_reg:x3; val_offset:177108*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177108*0 + 3*668*FLEN/8, x4, x1, x2)

inst_59037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000000001ffff; valaddr_reg:x3; val_offset:177111*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177111*0 + 3*669*FLEN/8, x4, x1, x2)

inst_59038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000000003ffff; valaddr_reg:x3; val_offset:177114*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177114*0 + 3*670*FLEN/8, x4, x1, x2)

inst_59039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000000007ffff; valaddr_reg:x3; val_offset:177117*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177117*0 + 3*671*FLEN/8, x4, x1, x2)

inst_59040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100000000fffff; valaddr_reg:x3; val_offset:177120*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177120*0 + 3*672*FLEN/8, x4, x1, x2)

inst_59041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100000001fffff; valaddr_reg:x3; val_offset:177123*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177123*0 + 3*673*FLEN/8, x4, x1, x2)

inst_59042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100000003fffff; valaddr_reg:x3; val_offset:177126*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177126*0 + 3*674*FLEN/8, x4, x1, x2)

inst_59043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100000007fffff; valaddr_reg:x3; val_offset:177129*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177129*0 + 3*675*FLEN/8, x4, x1, x2)

inst_59044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000000ffffff; valaddr_reg:x3; val_offset:177132*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177132*0 + 3*676*FLEN/8, x4, x1, x2)

inst_59045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000001ffffff; valaddr_reg:x3; val_offset:177135*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177135*0 + 3*677*FLEN/8, x4, x1, x2)

inst_59046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000003ffffff; valaddr_reg:x3; val_offset:177138*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177138*0 + 3*678*FLEN/8, x4, x1, x2)

inst_59047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000007ffffff; valaddr_reg:x3; val_offset:177141*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177141*0 + 3*679*FLEN/8, x4, x1, x2)

inst_59048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000000fffffff; valaddr_reg:x3; val_offset:177144*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177144*0 + 3*680*FLEN/8, x4, x1, x2)

inst_59049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000001fffffff; valaddr_reg:x3; val_offset:177147*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177147*0 + 3*681*FLEN/8, x4, x1, x2)

inst_59050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000003fffffff; valaddr_reg:x3; val_offset:177150*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177150*0 + 3*682*FLEN/8, x4, x1, x2)

inst_59051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000007fffffff; valaddr_reg:x3; val_offset:177153*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177153*0 + 3*683*FLEN/8, x4, x1, x2)

inst_59052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100000ffffffff; valaddr_reg:x3; val_offset:177156*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177156*0 + 3*684*FLEN/8, x4, x1, x2)

inst_59053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100001ffffffff; valaddr_reg:x3; val_offset:177159*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177159*0 + 3*685*FLEN/8, x4, x1, x2)

inst_59054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100003ffffffff; valaddr_reg:x3; val_offset:177162*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177162*0 + 3*686*FLEN/8, x4, x1, x2)

inst_59055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100007ffffffff; valaddr_reg:x3; val_offset:177165*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177165*0 + 3*687*FLEN/8, x4, x1, x2)

inst_59056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10000fffffffff; valaddr_reg:x3; val_offset:177168*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177168*0 + 3*688*FLEN/8, x4, x1, x2)

inst_59057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10001fffffffff; valaddr_reg:x3; val_offset:177171*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177171*0 + 3*689*FLEN/8, x4, x1, x2)

inst_59058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10003fffffffff; valaddr_reg:x3; val_offset:177174*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177174*0 + 3*690*FLEN/8, x4, x1, x2)

inst_59059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10007fffffffff; valaddr_reg:x3; val_offset:177177*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177177*0 + 3*691*FLEN/8, x4, x1, x2)

inst_59060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1000ffffffffff; valaddr_reg:x3; val_offset:177180*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177180*0 + 3*692*FLEN/8, x4, x1, x2)

inst_59061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1001ffffffffff; valaddr_reg:x3; val_offset:177183*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177183*0 + 3*693*FLEN/8, x4, x1, x2)

inst_59062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1003ffffffffff; valaddr_reg:x3; val_offset:177186*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177186*0 + 3*694*FLEN/8, x4, x1, x2)

inst_59063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1007ffffffffff; valaddr_reg:x3; val_offset:177189*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177189*0 + 3*695*FLEN/8, x4, x1, x2)

inst_59064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x100fffffffffff; valaddr_reg:x3; val_offset:177192*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177192*0 + 3*696*FLEN/8, x4, x1, x2)

inst_59065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x101fffffffffff; valaddr_reg:x3; val_offset:177195*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177195*0 + 3*697*FLEN/8, x4, x1, x2)

inst_59066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x103fffffffffff; valaddr_reg:x3; val_offset:177198*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177198*0 + 3*698*FLEN/8, x4, x1, x2)

inst_59067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x107fffffffffff; valaddr_reg:x3; val_offset:177201*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177201*0 + 3*699*FLEN/8, x4, x1, x2)

inst_59068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x10ffffffffffff; valaddr_reg:x3; val_offset:177204*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177204*0 + 3*700*FLEN/8, x4, x1, x2)

inst_59069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x11ffffffffffff; valaddr_reg:x3; val_offset:177207*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177207*0 + 3*701*FLEN/8, x4, x1, x2)

inst_59070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x13ffffffffffff; valaddr_reg:x3; val_offset:177210*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177210*0 + 3*702*FLEN/8, x4, x1, x2)

inst_59071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x17ffffffffffff; valaddr_reg:x3; val_offset:177213*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177213*0 + 3*703*FLEN/8, x4, x1, x2)

inst_59072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x18000000000000; valaddr_reg:x3; val_offset:177216*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177216*0 + 3*704*FLEN/8, x4, x1, x2)

inst_59073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1c000000000000; valaddr_reg:x3; val_offset:177219*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177219*0 + 3*705*FLEN/8, x4, x1, x2)

inst_59074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1e000000000000; valaddr_reg:x3; val_offset:177222*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177222*0 + 3*706*FLEN/8, x4, x1, x2)

inst_59075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1f000000000000; valaddr_reg:x3; val_offset:177225*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177225*0 + 3*707*FLEN/8, x4, x1, x2)

inst_59076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1f800000000000; valaddr_reg:x3; val_offset:177228*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177228*0 + 3*708*FLEN/8, x4, x1, x2)

inst_59077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fc00000000000; valaddr_reg:x3; val_offset:177231*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177231*0 + 3*709*FLEN/8, x4, x1, x2)

inst_59078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fe00000000000; valaddr_reg:x3; val_offset:177234*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177234*0 + 3*710*FLEN/8, x4, x1, x2)

inst_59079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ff00000000000; valaddr_reg:x3; val_offset:177237*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177237*0 + 3*711*FLEN/8, x4, x1, x2)

inst_59080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ff80000000000; valaddr_reg:x3; val_offset:177240*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177240*0 + 3*712*FLEN/8, x4, x1, x2)

inst_59081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffc0000000000; valaddr_reg:x3; val_offset:177243*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177243*0 + 3*713*FLEN/8, x4, x1, x2)

inst_59082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffe0000000000; valaddr_reg:x3; val_offset:177246*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177246*0 + 3*714*FLEN/8, x4, x1, x2)

inst_59083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fff0000000000; valaddr_reg:x3; val_offset:177249*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177249*0 + 3*715*FLEN/8, x4, x1, x2)

inst_59084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fff8000000000; valaddr_reg:x3; val_offset:177252*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177252*0 + 3*716*FLEN/8, x4, x1, x2)

inst_59085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffc000000000; valaddr_reg:x3; val_offset:177255*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177255*0 + 3*717*FLEN/8, x4, x1, x2)

inst_59086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffe000000000; valaddr_reg:x3; val_offset:177258*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177258*0 + 3*718*FLEN/8, x4, x1, x2)

inst_59087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffff000000000; valaddr_reg:x3; val_offset:177261*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177261*0 + 3*719*FLEN/8, x4, x1, x2)

inst_59088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffff800000000; valaddr_reg:x3; val_offset:177264*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177264*0 + 3*720*FLEN/8, x4, x1, x2)

inst_59089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffc00000000; valaddr_reg:x3; val_offset:177267*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177267*0 + 3*721*FLEN/8, x4, x1, x2)

inst_59090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffe00000000; valaddr_reg:x3; val_offset:177270*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177270*0 + 3*722*FLEN/8, x4, x1, x2)

inst_59091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffff00000000; valaddr_reg:x3; val_offset:177273*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177273*0 + 3*723*FLEN/8, x4, x1, x2)

inst_59092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffff80000000; valaddr_reg:x3; val_offset:177276*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177276*0 + 3*724*FLEN/8, x4, x1, x2)

inst_59093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffc0000000; valaddr_reg:x3; val_offset:177279*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177279*0 + 3*725*FLEN/8, x4, x1, x2)

inst_59094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffe0000000; valaddr_reg:x3; val_offset:177282*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177282*0 + 3*726*FLEN/8, x4, x1, x2)

inst_59095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffff0000000; valaddr_reg:x3; val_offset:177285*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177285*0 + 3*727*FLEN/8, x4, x1, x2)

inst_59096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffff8000000; valaddr_reg:x3; val_offset:177288*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177288*0 + 3*728*FLEN/8, x4, x1, x2)

inst_59097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffc000000; valaddr_reg:x3; val_offset:177291*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177291*0 + 3*729*FLEN/8, x4, x1, x2)

inst_59098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffe000000; valaddr_reg:x3; val_offset:177294*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177294*0 + 3*730*FLEN/8, x4, x1, x2)

inst_59099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffff000000; valaddr_reg:x3; val_offset:177297*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177297*0 + 3*731*FLEN/8, x4, x1, x2)

inst_59100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffff800000; valaddr_reg:x3; val_offset:177300*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177300*0 + 3*732*FLEN/8, x4, x1, x2)

inst_59101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffffc00000; valaddr_reg:x3; val_offset:177303*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177303*0 + 3*733*FLEN/8, x4, x1, x2)

inst_59102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffffe00000; valaddr_reg:x3; val_offset:177306*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177306*0 + 3*734*FLEN/8, x4, x1, x2)

inst_59103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffff00000; valaddr_reg:x3; val_offset:177309*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177309*0 + 3*735*FLEN/8, x4, x1, x2)

inst_59104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffff80000; valaddr_reg:x3; val_offset:177312*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177312*0 + 3*736*FLEN/8, x4, x1, x2)

inst_59105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffffc0000; valaddr_reg:x3; val_offset:177315*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177315*0 + 3*737*FLEN/8, x4, x1, x2)

inst_59106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffffe0000; valaddr_reg:x3; val_offset:177318*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177318*0 + 3*738*FLEN/8, x4, x1, x2)

inst_59107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffffff0000; valaddr_reg:x3; val_offset:177321*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177321*0 + 3*739*FLEN/8, x4, x1, x2)

inst_59108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffffff8000; valaddr_reg:x3; val_offset:177324*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177324*0 + 3*740*FLEN/8, x4, x1, x2)

inst_59109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffffffc000; valaddr_reg:x3; val_offset:177327*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177327*0 + 3*741*FLEN/8, x4, x1, x2)

inst_59110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffffffe000; valaddr_reg:x3; val_offset:177330*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177330*0 + 3*742*FLEN/8, x4, x1, x2)

inst_59111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffffff000; valaddr_reg:x3; val_offset:177333*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177333*0 + 3*743*FLEN/8, x4, x1, x2)

inst_59112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffffff800; valaddr_reg:x3; val_offset:177336*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177336*0 + 3*744*FLEN/8, x4, x1, x2)

inst_59113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffffffc00; valaddr_reg:x3; val_offset:177339*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177339*0 + 3*745*FLEN/8, x4, x1, x2)

inst_59114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffffffe00; valaddr_reg:x3; val_offset:177342*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177342*0 + 3*746*FLEN/8, x4, x1, x2)

inst_59115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffffffff00; valaddr_reg:x3; val_offset:177345*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177345*0 + 3*747*FLEN/8, x4, x1, x2)

inst_59116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffffffff80; valaddr_reg:x3; val_offset:177348*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177348*0 + 3*748*FLEN/8, x4, x1, x2)

inst_59117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:177351*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177351*0 + 3*749*FLEN/8, x4, x1, x2)

inst_59118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:177354*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177354*0 + 3*750*FLEN/8, x4, x1, x2)

inst_59119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:177357*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177357*0 + 3*751*FLEN/8, x4, x1, x2)

inst_59120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:177360*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177360*0 + 3*752*FLEN/8, x4, x1, x2)

inst_59121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:177363*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177363*0 + 3*753*FLEN/8, x4, x1, x2)

inst_59122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:177366*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177366*0 + 3*754*FLEN/8, x4, x1, x2)

inst_59123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x33d1904150af4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa33d1904150af4; op2val:0x0;
op3val:0x1fffffffffffff; valaddr_reg:x3; val_offset:177369*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177369*0 + 3*755*FLEN/8, x4, x1, x2)

inst_59124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x342c8239bd163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa342c8239bd163; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:177372*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177372*0 + 3*756*FLEN/8, x4, x1, x2)

inst_59125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x342c8239bd163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa342c8239bd163; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:177375*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177375*0 + 3*757*FLEN/8, x4, x1, x2)

inst_59126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x342c8239bd163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa342c8239bd163; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:177378*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177378*0 + 3*758*FLEN/8, x4, x1, x2)

inst_59127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x342c8239bd163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa342c8239bd163; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:177381*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177381*0 + 3*759*FLEN/8, x4, x1, x2)

inst_59128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x342c8239bd163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa342c8239bd163; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:177384*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177384*0 + 3*760*FLEN/8, x4, x1, x2)

inst_59129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x342c8239bd163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa342c8239bd163; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:177387*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177387*0 + 3*761*FLEN/8, x4, x1, x2)

inst_59130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x342c8239bd163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa342c8239bd163; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:177390*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177390*0 + 3*762*FLEN/8, x4, x1, x2)

inst_59131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x342c8239bd163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa342c8239bd163; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:177393*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177393*0 + 3*763*FLEN/8, x4, x1, x2)

inst_59132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x342c8239bd163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa342c8239bd163; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:177396*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177396*0 + 3*764*FLEN/8, x4, x1, x2)

inst_59133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x342c8239bd163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa342c8239bd163; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:177399*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177399*0 + 3*765*FLEN/8, x4, x1, x2)

inst_59134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x342c8239bd163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa342c8239bd163; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:177402*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177402*0 + 3*766*FLEN/8, x4, x1, x2)

inst_59135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x342c8239bd163 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa342c8239bd163; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:177405*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177405*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610377728,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610377729,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610377731,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610377735,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610377743,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610377759,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610377791,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610377855,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610377983,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610378239,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610378751,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610379775,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610381823,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610385919,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610394111,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610410495,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610443263,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610508799,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610639871,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448610902015,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448611426303,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448612474879,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448614572031,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448618766335,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448627154943,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448643932159,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448677486591,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448744595455,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894448878813183,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894449147248639,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894449684119551,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894450757861375,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894452905345023,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894457200312319,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894465790246911,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894482970116095,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894517329854463,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894586049331199,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894723488284671,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246894998366191615,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246895548122005503,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246896647633633279,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246898846656888831,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246903244703399935,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246912040796422143,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246929632982466559,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4246964817354555391,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4247035186098733055,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4247175923587088383,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4247457398563799039,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4248020348517220351,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4249146248424062975,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4249146248424062976,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4250272148330905600,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4250835098284326912,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251116573261037568,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251257310749392896,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251327679493570560,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251362863865659392,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251380456051703808,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251389252144726016,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251393650191237120,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251395849214492672,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251396948726120448,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251397498481934336,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251397773359841280,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251397910798794752,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251397979518271488,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398013878009856,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398031057879040,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398039647813632,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398043942780928,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398046090264576,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398047164006400,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398047700877312,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398047969312768,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048103530496,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048170639360,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048204193792,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048220971008,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048229359616,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048233553920,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048235651072,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048236699648,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237223936,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237486080,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237617152,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237682688,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237715456,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237731840,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237740032,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237744128,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237746176,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237747200,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237747712,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237747968,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237748096,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237748160,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237748192,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237748208,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237748216,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237748220,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237748222,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4251398048237748223,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891359303098494153,64,FLEN)
NAN_BOXED(2322424669277219383,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516800,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516801,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516803,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516807,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516815,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516831,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516863,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516927,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109517055,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109517311,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109517823,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109518847,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109520895,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109524991,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109533183,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109549567,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109582335,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109647871,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109778943,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236110041087,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236110565375,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236111613951,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236113711103,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236117905407,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236126294015,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236143071231,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236176625663,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236243734527,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236377952255,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236646387711,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379237183258623,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379238257000447,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379240404484095,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379244699451391,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379253289385983,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379270469255167,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379304828993535,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379373548470271,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379510987423743,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379785865330687,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232380335621144575,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232381435132772351,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232383634156027903,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232388032202539007,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232396828295561215,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232414420481605631,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232449604853694463,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232519973597872127,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232660711086227455,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232942186062938111,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9233505136016359423,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9234631035923202047,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9234631035923202048,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9235756935830044672,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236319885783465984,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236601360760176640,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236742098248531968,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236812466992709632,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236847651364798464,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236865243550842880,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236874039643865088,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236878437690376192,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236880636713631744,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236881736225259520,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882285981073408,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882560858980352,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882698297933824,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882767017410560,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882801377148928,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882818557018112,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882827146952704,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882831441920000,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882833589403648,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882834663145472,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835200016384,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835468451840,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835602669568,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835669778432,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835703332864,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835720110080,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835728498688,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835732692992,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835734790144,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835735838720,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736363008,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736625152,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736756224,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736821760,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736854528,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736870912,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736879104,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736883200,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736885248,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736886272,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736886784,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887040,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887168,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887232,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887264,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887280,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887288,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887292,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887294,64,FLEN)
NAN_BOXED(6891366805996523057,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887295,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378705408,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378705409,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378705411,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378705415,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378705423,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378705439,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378705471,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378705535,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378705663,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378705919,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378706431,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378707455,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378709503,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378713599,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378721791,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378738175,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378770943,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378836479,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465378967551,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465379229695,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465379753983,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465380802559,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465382899711,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465387094015,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465395482623,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465412259839,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465445814271,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465512923135,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465647140863,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232465915576319,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232466452447231,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232467526189055,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232469673672703,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232473968639999,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232482558574591,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232499738443775,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232534098182143,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232602817658879,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044232740256612351,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044233015134519295,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044233564890333183,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044234664401960959,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044236863425216511,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044241261471727615,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044250057564749823,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044267649750794239,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044302834122883071,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044373202867060735,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044513940355416063,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4044795415332126719,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4045358365285548031,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4046484265192390655,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4046484265192390656,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4047610165099233280,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048173115052654592,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048454590029365248,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048595327517720576,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048665696261898240,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048700880633987072,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048718472820031488,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048727268913053696,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048731666959564800,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048733865982820352,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048734965494448128,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048735515250262016,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048735790128168960,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048735927567122432,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048735996286599168,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736030646337536,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736047826206720,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736056416141312,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736060711108608,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736062858592256,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736063932334080,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736064469204992,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736064737640448,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736064871858176,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736064938967040,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736064972521472,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736064989298688,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736064997687296,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065001881600,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065003978752,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065005027328,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065005551616,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065005813760,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065005944832,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006010368,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006043136,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006059520,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006067712,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006071808,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006073856,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006074880,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006075392,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006075648,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006075776,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006075840,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006075872,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006075888,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006075896,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006075900,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006075902,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4048736065006075903,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891376488800016356,64,FLEN)
NAN_BOXED(2322400440597613715,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262400,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262401,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262403,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262407,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262415,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262431,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262463,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262527,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262655,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262911,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684263423,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684264447,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684266495,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684270591,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684278783,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684295167,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684327935,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684393471,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684524543,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684786687,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990685310975,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990686359551,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990688456703,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990692651007,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990701039615,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990717816831,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990751371263,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990818480127,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990952697855,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589991221133311,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589991758004223,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589992831746047,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589994979229695,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589999274196991,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590007864131583,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590025044000767,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590059403739135,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590128123215871,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590265562169343,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590540440076287,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112591090195890175,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112592189707517951,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112594388730773503,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112598786777284607,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112607582870306815,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112625175056351231,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112660359428440063,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112730728172617727,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112871465660973055,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(113152940637683711,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(113715890591105023,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(114841790497947647,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(114841790497947648,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(115967690404790272,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116530640358211584,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116812115334922240,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116952852823277568,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117023221567455232,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117058405939544064,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117075998125588480,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117084794218610688,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117089192265121792,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117091391288377344,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117092490800005120,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093040555819008,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093315433725952,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093452872679424,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093521592156160,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093555951894528,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093573131763712,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093581721698304,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093586016665600,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093588164149248,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093589237891072,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093589774761984,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590043197440,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590177415168,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590244524032,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590278078464,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590294855680,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590303244288,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590307438592,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590309535744,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590310584320,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311108608,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311370752,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311501824,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311567360,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311600128,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311616512,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311624704,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311628800,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311630848,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311631872,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632384,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632640,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632768,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632832,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632864,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632880,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632888,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632892,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632894,64,FLEN)
NAN_BOXED(6891392839909390288,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632895,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126347264,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126347265,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126347267,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126347271,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126347279,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126347295,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126347327,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126347391,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126347519,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126347775,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126348287,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126349311,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126351359,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126355455,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126363647,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126380031,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126412799,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126478335,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126609407,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260126871551,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260127395839,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260128444415,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260130541567,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260134735871,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260143124479,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260159901695,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260193456127,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260260564991,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260394782719,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511260663218175,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511261200089087,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511262273830911,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511264421314559,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511268716281855,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511277306216447,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511294486085631,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511328845823999,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511397565300735,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511535004254207,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776511809882161151,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776512359637975039,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776513459149602815,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776515658172858367,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776520056219369471,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776528852312391679,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776546444498436095,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776581628870524927,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776651997614702591,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13776792735103057919,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13777074210079768575,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13777637160033189887,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13778763059940032511,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13778763059940032512,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13779888959846875136,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13780451909800296448,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13780733384777007104,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13780874122265362432,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13780944491009540096,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13780979675381628928,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13780997267567673344,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781006063660695552,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781010461707206656,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781012660730462208,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781013760242089984,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014309997903872,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014584875810816,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014722314764288,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014791034241024,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014825393979392,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014842573848576,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014851163783168,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014855458750464,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014857606234112,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014858679975936,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859216846848,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859485282304,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859619500032,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859686608896,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859720163328,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859736940544,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859745329152,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859749523456,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859751620608,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859752669184,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753193472,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753455616,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753586688,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753652224,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753684992,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753701376,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753709568,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753713664,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753715712,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753716736,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753717248,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753717504,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753717632,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753717696,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753717728,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753717744,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753717752,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753717756,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753717758,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13781014859753717759,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891395668199071338,64,FLEN)
NAN_BOXED(11514220423000862626,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370496,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370623,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370751,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627371007,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627371519,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627372543,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627374591,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627378687,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627386879,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627403263,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627436031,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627501567,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627632639,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627894783,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599628419071,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599629467647,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599631564799,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599635759103,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599644147711,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599660924927,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599694479359,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599761588223,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599895805951,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503600164241407,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503600701112319,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503601774854143,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503603922337791,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503608217305087,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503616807239679,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503633987108863,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503668346847231,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503737066323967,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503874505277439,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4504149383184383,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4504699138998271,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4505798650626047,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4507997673881599,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4512395720392703,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4521191813414911,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4538783999459327,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4573968371548159,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4644337115725823,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4785074604081151,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5066549580791807,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5629499534213119,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6755399441055743,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6755399441055744,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7881299347898368,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8444249301319680,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8725724278030336,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8866461766385664,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8936830510563328,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8972014882652160,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8989607068696576,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8998403161718784,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9002801208229888,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9005000231485440,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006099743113216,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006649498927104,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006924376834048,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007061815787520,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007130535264256,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007164895002624,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007182074871808,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007190664806400,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007194959773696,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007197107257344,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198180999168,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198717870080,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198986305536,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199120523264,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199187632128,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199221186560,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199237963776,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199246352384,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199250546688,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199252643840,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199253692416,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254216704,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254478848,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254609920,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254675456,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254708224,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254724608,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254732800,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254736896,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254738944,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254739968,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740480,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740736,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740864,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891419032458955508,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740991,64,FLEN)
NAN_BOXED(6891425282165297507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891425282165297507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891425282165297507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891425282165297507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891425282165297507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891425282165297507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891425282165297507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891425282165297507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891425282165297507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891425282165297507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891425282165297507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891425282165297507,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
