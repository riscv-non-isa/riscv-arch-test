
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_45312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000fffffffff; valaddr_reg:x3; val_offset:135936*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135936*0 + 3*0*FLEN/8, x4, x1, x2)

inst_45313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0001fffffffff; valaddr_reg:x3; val_offset:135939*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135939*0 + 3*1*FLEN/8, x4, x1, x2)

inst_45314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0003fffffffff; valaddr_reg:x3; val_offset:135942*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135942*0 + 3*2*FLEN/8, x4, x1, x2)

inst_45315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0007fffffffff; valaddr_reg:x3; val_offset:135945*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135945*0 + 3*3*FLEN/8, x4, x1, x2)

inst_45316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000ffffffffff; valaddr_reg:x3; val_offset:135948*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135948*0 + 3*4*FLEN/8, x4, x1, x2)

inst_45317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa001ffffffffff; valaddr_reg:x3; val_offset:135951*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135951*0 + 3*5*FLEN/8, x4, x1, x2)

inst_45318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa003ffffffffff; valaddr_reg:x3; val_offset:135954*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135954*0 + 3*6*FLEN/8, x4, x1, x2)

inst_45319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa007ffffffffff; valaddr_reg:x3; val_offset:135957*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135957*0 + 3*7*FLEN/8, x4, x1, x2)

inst_45320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00fffffffffff; valaddr_reg:x3; val_offset:135960*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135960*0 + 3*8*FLEN/8, x4, x1, x2)

inst_45321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa01fffffffffff; valaddr_reg:x3; val_offset:135963*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135963*0 + 3*9*FLEN/8, x4, x1, x2)

inst_45322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa03fffffffffff; valaddr_reg:x3; val_offset:135966*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135966*0 + 3*10*FLEN/8, x4, x1, x2)

inst_45323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa07fffffffffff; valaddr_reg:x3; val_offset:135969*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135969*0 + 3*11*FLEN/8, x4, x1, x2)

inst_45324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0ffffffffffff; valaddr_reg:x3; val_offset:135972*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135972*0 + 3*12*FLEN/8, x4, x1, x2)

inst_45325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa1ffffffffffff; valaddr_reg:x3; val_offset:135975*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135975*0 + 3*13*FLEN/8, x4, x1, x2)

inst_45326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa3ffffffffffff; valaddr_reg:x3; val_offset:135978*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135978*0 + 3*14*FLEN/8, x4, x1, x2)

inst_45327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa7ffffffffffff; valaddr_reg:x3; val_offset:135981*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135981*0 + 3*15*FLEN/8, x4, x1, x2)

inst_45328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa8000000000000; valaddr_reg:x3; val_offset:135984*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135984*0 + 3*16*FLEN/8, x4, x1, x2)

inst_45329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fac000000000000; valaddr_reg:x3; val_offset:135987*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135987*0 + 3*17*FLEN/8, x4, x1, x2)

inst_45330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fae000000000000; valaddr_reg:x3; val_offset:135990*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135990*0 + 3*18*FLEN/8, x4, x1, x2)

inst_45331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faf000000000000; valaddr_reg:x3; val_offset:135993*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135993*0 + 3*19*FLEN/8, x4, x1, x2)

inst_45332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faf800000000000; valaddr_reg:x3; val_offset:135996*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135996*0 + 3*20*FLEN/8, x4, x1, x2)

inst_45333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafc00000000000; valaddr_reg:x3; val_offset:135999*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135999*0 + 3*21*FLEN/8, x4, x1, x2)

inst_45334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafe00000000000; valaddr_reg:x3; val_offset:136002*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136002*0 + 3*22*FLEN/8, x4, x1, x2)

inst_45335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faff00000000000; valaddr_reg:x3; val_offset:136005*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136005*0 + 3*23*FLEN/8, x4, x1, x2)

inst_45336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faff80000000000; valaddr_reg:x3; val_offset:136008*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136008*0 + 3*24*FLEN/8, x4, x1, x2)

inst_45337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffc0000000000; valaddr_reg:x3; val_offset:136011*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136011*0 + 3*25*FLEN/8, x4, x1, x2)

inst_45338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffe0000000000; valaddr_reg:x3; val_offset:136014*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136014*0 + 3*26*FLEN/8, x4, x1, x2)

inst_45339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafff0000000000; valaddr_reg:x3; val_offset:136017*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136017*0 + 3*27*FLEN/8, x4, x1, x2)

inst_45340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafff8000000000; valaddr_reg:x3; val_offset:136020*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136020*0 + 3*28*FLEN/8, x4, x1, x2)

inst_45341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffc000000000; valaddr_reg:x3; val_offset:136023*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136023*0 + 3*29*FLEN/8, x4, x1, x2)

inst_45342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffe000000000; valaddr_reg:x3; val_offset:136026*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136026*0 + 3*30*FLEN/8, x4, x1, x2)

inst_45343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffff000000000; valaddr_reg:x3; val_offset:136029*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136029*0 + 3*31*FLEN/8, x4, x1, x2)

inst_45344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffff800000000; valaddr_reg:x3; val_offset:136032*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136032*0 + 3*32*FLEN/8, x4, x1, x2)

inst_45345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffc00000000; valaddr_reg:x3; val_offset:136035*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136035*0 + 3*33*FLEN/8, x4, x1, x2)

inst_45346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffe00000000; valaddr_reg:x3; val_offset:136038*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136038*0 + 3*34*FLEN/8, x4, x1, x2)

inst_45347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffff00000000; valaddr_reg:x3; val_offset:136041*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136041*0 + 3*35*FLEN/8, x4, x1, x2)

inst_45348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffff80000000; valaddr_reg:x3; val_offset:136044*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136044*0 + 3*36*FLEN/8, x4, x1, x2)

inst_45349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffc0000000; valaddr_reg:x3; val_offset:136047*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136047*0 + 3*37*FLEN/8, x4, x1, x2)

inst_45350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffe0000000; valaddr_reg:x3; val_offset:136050*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136050*0 + 3*38*FLEN/8, x4, x1, x2)

inst_45351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffff0000000; valaddr_reg:x3; val_offset:136053*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136053*0 + 3*39*FLEN/8, x4, x1, x2)

inst_45352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffff8000000; valaddr_reg:x3; val_offset:136056*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136056*0 + 3*40*FLEN/8, x4, x1, x2)

inst_45353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffc000000; valaddr_reg:x3; val_offset:136059*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136059*0 + 3*41*FLEN/8, x4, x1, x2)

inst_45354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffe000000; valaddr_reg:x3; val_offset:136062*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136062*0 + 3*42*FLEN/8, x4, x1, x2)

inst_45355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffff000000; valaddr_reg:x3; val_offset:136065*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136065*0 + 3*43*FLEN/8, x4, x1, x2)

inst_45356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffff800000; valaddr_reg:x3; val_offset:136068*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136068*0 + 3*44*FLEN/8, x4, x1, x2)

inst_45357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffffc00000; valaddr_reg:x3; val_offset:136071*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136071*0 + 3*45*FLEN/8, x4, x1, x2)

inst_45358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffffe00000; valaddr_reg:x3; val_offset:136074*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136074*0 + 3*46*FLEN/8, x4, x1, x2)

inst_45359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffff00000; valaddr_reg:x3; val_offset:136077*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136077*0 + 3*47*FLEN/8, x4, x1, x2)

inst_45360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffff80000; valaddr_reg:x3; val_offset:136080*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136080*0 + 3*48*FLEN/8, x4, x1, x2)

inst_45361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffffc0000; valaddr_reg:x3; val_offset:136083*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136083*0 + 3*49*FLEN/8, x4, x1, x2)

inst_45362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffffe0000; valaddr_reg:x3; val_offset:136086*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136086*0 + 3*50*FLEN/8, x4, x1, x2)

inst_45363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffffff0000; valaddr_reg:x3; val_offset:136089*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136089*0 + 3*51*FLEN/8, x4, x1, x2)

inst_45364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffffff8000; valaddr_reg:x3; val_offset:136092*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136092*0 + 3*52*FLEN/8, x4, x1, x2)

inst_45365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffffffc000; valaddr_reg:x3; val_offset:136095*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136095*0 + 3*53*FLEN/8, x4, x1, x2)

inst_45366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffffffe000; valaddr_reg:x3; val_offset:136098*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136098*0 + 3*54*FLEN/8, x4, x1, x2)

inst_45367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffffff000; valaddr_reg:x3; val_offset:136101*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136101*0 + 3*55*FLEN/8, x4, x1, x2)

inst_45368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffffff800; valaddr_reg:x3; val_offset:136104*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136104*0 + 3*56*FLEN/8, x4, x1, x2)

inst_45369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffffffc00; valaddr_reg:x3; val_offset:136107*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136107*0 + 3*57*FLEN/8, x4, x1, x2)

inst_45370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffffffe00; valaddr_reg:x3; val_offset:136110*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136110*0 + 3*58*FLEN/8, x4, x1, x2)

inst_45371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffffffff00; valaddr_reg:x3; val_offset:136113*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136113*0 + 3*59*FLEN/8, x4, x1, x2)

inst_45372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffffffff80; valaddr_reg:x3; val_offset:136116*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136116*0 + 3*60*FLEN/8, x4, x1, x2)

inst_45373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffffffffc0; valaddr_reg:x3; val_offset:136119*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136119*0 + 3*61*FLEN/8, x4, x1, x2)

inst_45374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffffffffe0; valaddr_reg:x3; val_offset:136122*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136122*0 + 3*62*FLEN/8, x4, x1, x2)

inst_45375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffffffff0; valaddr_reg:x3; val_offset:136125*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136125*0 + 3*63*FLEN/8, x4, x1, x2)

inst_45376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffffffff8; valaddr_reg:x3; val_offset:136128*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136128*0 + 3*64*FLEN/8, x4, x1, x2)

inst_45377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffffffffc; valaddr_reg:x3; val_offset:136131*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136131*0 + 3*65*FLEN/8, x4, x1, x2)

inst_45378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3faffffffffffffe; valaddr_reg:x3; val_offset:136134*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136134*0 + 3*66*FLEN/8, x4, x1, x2)

inst_45379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fafffffffffffff; valaddr_reg:x3; val_offset:136137*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136137*0 + 3*67*FLEN/8, x4, x1, x2)

inst_45380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:136140*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136140*0 + 3*68*FLEN/8, x4, x1, x2)

inst_45381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:136143*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136143*0 + 3*69*FLEN/8, x4, x1, x2)

inst_45382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:136146*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136146*0 + 3*70*FLEN/8, x4, x1, x2)

inst_45383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:136149*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136149*0 + 3*71*FLEN/8, x4, x1, x2)

inst_45384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:136152*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136152*0 + 3*72*FLEN/8, x4, x1, x2)

inst_45385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:136155*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136155*0 + 3*73*FLEN/8, x4, x1, x2)

inst_45386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:136158*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136158*0 + 3*74*FLEN/8, x4, x1, x2)

inst_45387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:136161*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136161*0 + 3*75*FLEN/8, x4, x1, x2)

inst_45388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:136164*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136164*0 + 3*76*FLEN/8, x4, x1, x2)

inst_45389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:136167*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136167*0 + 3*77*FLEN/8, x4, x1, x2)

inst_45390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:136170*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136170*0 + 3*78*FLEN/8, x4, x1, x2)

inst_45391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:136173*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136173*0 + 3*79*FLEN/8, x4, x1, x2)

inst_45392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:136176*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136176*0 + 3*80*FLEN/8, x4, x1, x2)

inst_45393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:136179*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136179*0 + 3*81*FLEN/8, x4, x1, x2)

inst_45394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:136182*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136182*0 + 3*82*FLEN/8, x4, x1, x2)

inst_45395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:136185*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136185*0 + 3*83*FLEN/8, x4, x1, x2)

inst_45396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:136188*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136188*0 + 3*84*FLEN/8, x4, x1, x2)

inst_45397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:136191*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136191*0 + 3*85*FLEN/8, x4, x1, x2)

inst_45398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:136194*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136194*0 + 3*86*FLEN/8, x4, x1, x2)

inst_45399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:136197*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136197*0 + 3*87*FLEN/8, x4, x1, x2)

inst_45400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:136200*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136200*0 + 3*88*FLEN/8, x4, x1, x2)

inst_45401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:136203*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136203*0 + 3*89*FLEN/8, x4, x1, x2)

inst_45402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000000000000; valaddr_reg:x3; val_offset:136206*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136206*0 + 3*90*FLEN/8, x4, x1, x2)

inst_45403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000000000001; valaddr_reg:x3; val_offset:136209*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136209*0 + 3*91*FLEN/8, x4, x1, x2)

inst_45404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000000000003; valaddr_reg:x3; val_offset:136212*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136212*0 + 3*92*FLEN/8, x4, x1, x2)

inst_45405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000000000007; valaddr_reg:x3; val_offset:136215*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136215*0 + 3*93*FLEN/8, x4, x1, x2)

inst_45406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000000000000f; valaddr_reg:x3; val_offset:136218*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136218*0 + 3*94*FLEN/8, x4, x1, x2)

inst_45407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000000000001f; valaddr_reg:x3; val_offset:136221*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136221*0 + 3*95*FLEN/8, x4, x1, x2)

inst_45408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000000000003f; valaddr_reg:x3; val_offset:136224*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136224*0 + 3*96*FLEN/8, x4, x1, x2)

inst_45409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000000000007f; valaddr_reg:x3; val_offset:136227*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136227*0 + 3*97*FLEN/8, x4, x1, x2)

inst_45410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00000000000ff; valaddr_reg:x3; val_offset:136230*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136230*0 + 3*98*FLEN/8, x4, x1, x2)

inst_45411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00000000001ff; valaddr_reg:x3; val_offset:136233*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136233*0 + 3*99*FLEN/8, x4, x1, x2)

inst_45412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00000000003ff; valaddr_reg:x3; val_offset:136236*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136236*0 + 3*100*FLEN/8, x4, x1, x2)

inst_45413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00000000007ff; valaddr_reg:x3; val_offset:136239*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136239*0 + 3*101*FLEN/8, x4, x1, x2)

inst_45414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000000000fff; valaddr_reg:x3; val_offset:136242*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136242*0 + 3*102*FLEN/8, x4, x1, x2)

inst_45415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000000001fff; valaddr_reg:x3; val_offset:136245*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136245*0 + 3*103*FLEN/8, x4, x1, x2)

inst_45416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000000003fff; valaddr_reg:x3; val_offset:136248*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136248*0 + 3*104*FLEN/8, x4, x1, x2)

inst_45417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000000007fff; valaddr_reg:x3; val_offset:136251*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136251*0 + 3*105*FLEN/8, x4, x1, x2)

inst_45418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000000000ffff; valaddr_reg:x3; val_offset:136254*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136254*0 + 3*106*FLEN/8, x4, x1, x2)

inst_45419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000000001ffff; valaddr_reg:x3; val_offset:136257*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136257*0 + 3*107*FLEN/8, x4, x1, x2)

inst_45420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000000003ffff; valaddr_reg:x3; val_offset:136260*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136260*0 + 3*108*FLEN/8, x4, x1, x2)

inst_45421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000000007ffff; valaddr_reg:x3; val_offset:136263*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136263*0 + 3*109*FLEN/8, x4, x1, x2)

inst_45422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00000000fffff; valaddr_reg:x3; val_offset:136266*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136266*0 + 3*110*FLEN/8, x4, x1, x2)

inst_45423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00000001fffff; valaddr_reg:x3; val_offset:136269*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136269*0 + 3*111*FLEN/8, x4, x1, x2)

inst_45424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00000003fffff; valaddr_reg:x3; val_offset:136272*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136272*0 + 3*112*FLEN/8, x4, x1, x2)

inst_45425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00000007fffff; valaddr_reg:x3; val_offset:136275*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136275*0 + 3*113*FLEN/8, x4, x1, x2)

inst_45426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000000ffffff; valaddr_reg:x3; val_offset:136278*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136278*0 + 3*114*FLEN/8, x4, x1, x2)

inst_45427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000001ffffff; valaddr_reg:x3; val_offset:136281*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136281*0 + 3*115*FLEN/8, x4, x1, x2)

inst_45428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000003ffffff; valaddr_reg:x3; val_offset:136284*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136284*0 + 3*116*FLEN/8, x4, x1, x2)

inst_45429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000007ffffff; valaddr_reg:x3; val_offset:136287*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136287*0 + 3*117*FLEN/8, x4, x1, x2)

inst_45430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000000fffffff; valaddr_reg:x3; val_offset:136290*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136290*0 + 3*118*FLEN/8, x4, x1, x2)

inst_45431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000001fffffff; valaddr_reg:x3; val_offset:136293*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136293*0 + 3*119*FLEN/8, x4, x1, x2)

inst_45432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000003fffffff; valaddr_reg:x3; val_offset:136296*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136296*0 + 3*120*FLEN/8, x4, x1, x2)

inst_45433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000007fffffff; valaddr_reg:x3; val_offset:136299*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136299*0 + 3*121*FLEN/8, x4, x1, x2)

inst_45434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00000ffffffff; valaddr_reg:x3; val_offset:136302*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136302*0 + 3*122*FLEN/8, x4, x1, x2)

inst_45435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00001ffffffff; valaddr_reg:x3; val_offset:136305*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136305*0 + 3*123*FLEN/8, x4, x1, x2)

inst_45436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00003ffffffff; valaddr_reg:x3; val_offset:136308*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136308*0 + 3*124*FLEN/8, x4, x1, x2)

inst_45437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00007ffffffff; valaddr_reg:x3; val_offset:136311*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136311*0 + 3*125*FLEN/8, x4, x1, x2)

inst_45438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0000fffffffff; valaddr_reg:x3; val_offset:136314*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136314*0 + 3*126*FLEN/8, x4, x1, x2)

inst_45439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0001fffffffff; valaddr_reg:x3; val_offset:136317*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136317*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_45440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0003fffffffff; valaddr_reg:x3; val_offset:136320*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136320*0 + 3*128*FLEN/8, x4, x1, x2)

inst_45441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0007fffffffff; valaddr_reg:x3; val_offset:136323*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136323*0 + 3*129*FLEN/8, x4, x1, x2)

inst_45442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f000ffffffffff; valaddr_reg:x3; val_offset:136326*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136326*0 + 3*130*FLEN/8, x4, x1, x2)

inst_45443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f001ffffffffff; valaddr_reg:x3; val_offset:136329*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136329*0 + 3*131*FLEN/8, x4, x1, x2)

inst_45444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f003ffffffffff; valaddr_reg:x3; val_offset:136332*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136332*0 + 3*132*FLEN/8, x4, x1, x2)

inst_45445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f007ffffffffff; valaddr_reg:x3; val_offset:136335*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136335*0 + 3*133*FLEN/8, x4, x1, x2)

inst_45446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f00fffffffffff; valaddr_reg:x3; val_offset:136338*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136338*0 + 3*134*FLEN/8, x4, x1, x2)

inst_45447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f01fffffffffff; valaddr_reg:x3; val_offset:136341*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136341*0 + 3*135*FLEN/8, x4, x1, x2)

inst_45448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f03fffffffffff; valaddr_reg:x3; val_offset:136344*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136344*0 + 3*136*FLEN/8, x4, x1, x2)

inst_45449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f07fffffffffff; valaddr_reg:x3; val_offset:136347*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136347*0 + 3*137*FLEN/8, x4, x1, x2)

inst_45450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f0ffffffffffff; valaddr_reg:x3; val_offset:136350*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136350*0 + 3*138*FLEN/8, x4, x1, x2)

inst_45451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f1ffffffffffff; valaddr_reg:x3; val_offset:136353*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136353*0 + 3*139*FLEN/8, x4, x1, x2)

inst_45452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f3ffffffffffff; valaddr_reg:x3; val_offset:136356*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136356*0 + 3*140*FLEN/8, x4, x1, x2)

inst_45453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f7ffffffffffff; valaddr_reg:x3; val_offset:136359*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136359*0 + 3*141*FLEN/8, x4, x1, x2)

inst_45454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37f8000000000000; valaddr_reg:x3; val_offset:136362*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136362*0 + 3*142*FLEN/8, x4, x1, x2)

inst_45455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fc000000000000; valaddr_reg:x3; val_offset:136365*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136365*0 + 3*143*FLEN/8, x4, x1, x2)

inst_45456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fe000000000000; valaddr_reg:x3; val_offset:136368*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136368*0 + 3*144*FLEN/8, x4, x1, x2)

inst_45457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ff000000000000; valaddr_reg:x3; val_offset:136371*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136371*0 + 3*145*FLEN/8, x4, x1, x2)

inst_45458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ff800000000000; valaddr_reg:x3; val_offset:136374*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136374*0 + 3*146*FLEN/8, x4, x1, x2)

inst_45459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffc00000000000; valaddr_reg:x3; val_offset:136377*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136377*0 + 3*147*FLEN/8, x4, x1, x2)

inst_45460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffe00000000000; valaddr_reg:x3; val_offset:136380*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136380*0 + 3*148*FLEN/8, x4, x1, x2)

inst_45461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fff00000000000; valaddr_reg:x3; val_offset:136383*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136383*0 + 3*149*FLEN/8, x4, x1, x2)

inst_45462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fff80000000000; valaddr_reg:x3; val_offset:136386*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136386*0 + 3*150*FLEN/8, x4, x1, x2)

inst_45463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffc0000000000; valaddr_reg:x3; val_offset:136389*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136389*0 + 3*151*FLEN/8, x4, x1, x2)

inst_45464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffe0000000000; valaddr_reg:x3; val_offset:136392*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136392*0 + 3*152*FLEN/8, x4, x1, x2)

inst_45465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffff0000000000; valaddr_reg:x3; val_offset:136395*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136395*0 + 3*153*FLEN/8, x4, x1, x2)

inst_45466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffff8000000000; valaddr_reg:x3; val_offset:136398*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136398*0 + 3*154*FLEN/8, x4, x1, x2)

inst_45467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffc000000000; valaddr_reg:x3; val_offset:136401*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136401*0 + 3*155*FLEN/8, x4, x1, x2)

inst_45468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffe000000000; valaddr_reg:x3; val_offset:136404*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136404*0 + 3*156*FLEN/8, x4, x1, x2)

inst_45469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffff000000000; valaddr_reg:x3; val_offset:136407*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136407*0 + 3*157*FLEN/8, x4, x1, x2)

inst_45470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffff800000000; valaddr_reg:x3; val_offset:136410*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136410*0 + 3*158*FLEN/8, x4, x1, x2)

inst_45471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffc00000000; valaddr_reg:x3; val_offset:136413*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136413*0 + 3*159*FLEN/8, x4, x1, x2)

inst_45472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffe00000000; valaddr_reg:x3; val_offset:136416*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136416*0 + 3*160*FLEN/8, x4, x1, x2)

inst_45473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffff00000000; valaddr_reg:x3; val_offset:136419*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136419*0 + 3*161*FLEN/8, x4, x1, x2)

inst_45474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffff80000000; valaddr_reg:x3; val_offset:136422*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136422*0 + 3*162*FLEN/8, x4, x1, x2)

inst_45475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffc0000000; valaddr_reg:x3; val_offset:136425*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136425*0 + 3*163*FLEN/8, x4, x1, x2)

inst_45476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffe0000000; valaddr_reg:x3; val_offset:136428*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136428*0 + 3*164*FLEN/8, x4, x1, x2)

inst_45477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffff0000000; valaddr_reg:x3; val_offset:136431*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136431*0 + 3*165*FLEN/8, x4, x1, x2)

inst_45478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffff8000000; valaddr_reg:x3; val_offset:136434*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136434*0 + 3*166*FLEN/8, x4, x1, x2)

inst_45479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffc000000; valaddr_reg:x3; val_offset:136437*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136437*0 + 3*167*FLEN/8, x4, x1, x2)

inst_45480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffe000000; valaddr_reg:x3; val_offset:136440*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136440*0 + 3*168*FLEN/8, x4, x1, x2)

inst_45481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffff000000; valaddr_reg:x3; val_offset:136443*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136443*0 + 3*169*FLEN/8, x4, x1, x2)

inst_45482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffff800000; valaddr_reg:x3; val_offset:136446*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136446*0 + 3*170*FLEN/8, x4, x1, x2)

inst_45483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffffc00000; valaddr_reg:x3; val_offset:136449*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136449*0 + 3*171*FLEN/8, x4, x1, x2)

inst_45484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffffe00000; valaddr_reg:x3; val_offset:136452*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136452*0 + 3*172*FLEN/8, x4, x1, x2)

inst_45485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffff00000; valaddr_reg:x3; val_offset:136455*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136455*0 + 3*173*FLEN/8, x4, x1, x2)

inst_45486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffff80000; valaddr_reg:x3; val_offset:136458*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136458*0 + 3*174*FLEN/8, x4, x1, x2)

inst_45487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffffc0000; valaddr_reg:x3; val_offset:136461*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136461*0 + 3*175*FLEN/8, x4, x1, x2)

inst_45488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffffe0000; valaddr_reg:x3; val_offset:136464*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136464*0 + 3*176*FLEN/8, x4, x1, x2)

inst_45489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffffff0000; valaddr_reg:x3; val_offset:136467*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136467*0 + 3*177*FLEN/8, x4, x1, x2)

inst_45490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffffff8000; valaddr_reg:x3; val_offset:136470*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136470*0 + 3*178*FLEN/8, x4, x1, x2)

inst_45491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffffffc000; valaddr_reg:x3; val_offset:136473*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136473*0 + 3*179*FLEN/8, x4, x1, x2)

inst_45492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffffffe000; valaddr_reg:x3; val_offset:136476*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136476*0 + 3*180*FLEN/8, x4, x1, x2)

inst_45493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffffff000; valaddr_reg:x3; val_offset:136479*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136479*0 + 3*181*FLEN/8, x4, x1, x2)

inst_45494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffffff800; valaddr_reg:x3; val_offset:136482*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136482*0 + 3*182*FLEN/8, x4, x1, x2)

inst_45495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffffffc00; valaddr_reg:x3; val_offset:136485*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136485*0 + 3*183*FLEN/8, x4, x1, x2)

inst_45496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffffffe00; valaddr_reg:x3; val_offset:136488*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136488*0 + 3*184*FLEN/8, x4, x1, x2)

inst_45497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffffffff00; valaddr_reg:x3; val_offset:136491*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136491*0 + 3*185*FLEN/8, x4, x1, x2)

inst_45498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffffffff80; valaddr_reg:x3; val_offset:136494*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136494*0 + 3*186*FLEN/8, x4, x1, x2)

inst_45499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffffffffc0; valaddr_reg:x3; val_offset:136497*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136497*0 + 3*187*FLEN/8, x4, x1, x2)

inst_45500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffffffffe0; valaddr_reg:x3; val_offset:136500*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136500*0 + 3*188*FLEN/8, x4, x1, x2)

inst_45501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffffffff0; valaddr_reg:x3; val_offset:136503*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136503*0 + 3*189*FLEN/8, x4, x1, x2)

inst_45502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffffffff8; valaddr_reg:x3; val_offset:136506*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136506*0 + 3*190*FLEN/8, x4, x1, x2)

inst_45503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffffffffc; valaddr_reg:x3; val_offset:136509*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136509*0 + 3*191*FLEN/8, x4, x1, x2)

inst_45504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37fffffffffffffe; valaddr_reg:x3; val_offset:136512*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136512*0 + 3*192*FLEN/8, x4, x1, x2)

inst_45505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x37ffffffffffffff; valaddr_reg:x3; val_offset:136515*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136515*0 + 3*193*FLEN/8, x4, x1, x2)

inst_45506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:136518*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136518*0 + 3*194*FLEN/8, x4, x1, x2)

inst_45507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:136521*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136521*0 + 3*195*FLEN/8, x4, x1, x2)

inst_45508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:136524*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136524*0 + 3*196*FLEN/8, x4, x1, x2)

inst_45509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:136527*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136527*0 + 3*197*FLEN/8, x4, x1, x2)

inst_45510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:136530*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136530*0 + 3*198*FLEN/8, x4, x1, x2)

inst_45511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:136533*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136533*0 + 3*199*FLEN/8, x4, x1, x2)

inst_45512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:136536*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136536*0 + 3*200*FLEN/8, x4, x1, x2)

inst_45513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:136539*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136539*0 + 3*201*FLEN/8, x4, x1, x2)

inst_45514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:136542*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136542*0 + 3*202*FLEN/8, x4, x1, x2)

inst_45515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:136545*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136545*0 + 3*203*FLEN/8, x4, x1, x2)

inst_45516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:136548*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136548*0 + 3*204*FLEN/8, x4, x1, x2)

inst_45517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:136551*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136551*0 + 3*205*FLEN/8, x4, x1, x2)

inst_45518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:136554*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136554*0 + 3*206*FLEN/8, x4, x1, x2)

inst_45519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:136557*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136557*0 + 3*207*FLEN/8, x4, x1, x2)

inst_45520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:136560*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136560*0 + 3*208*FLEN/8, x4, x1, x2)

inst_45521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:136563*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136563*0 + 3*209*FLEN/8, x4, x1, x2)

inst_45522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:136566*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136566*0 + 3*210*FLEN/8, x4, x1, x2)

inst_45523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:136569*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136569*0 + 3*211*FLEN/8, x4, x1, x2)

inst_45524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:136572*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136572*0 + 3*212*FLEN/8, x4, x1, x2)

inst_45525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:136575*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136575*0 + 3*213*FLEN/8, x4, x1, x2)

inst_45526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:136578*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136578*0 + 3*214*FLEN/8, x4, x1, x2)

inst_45527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbe88c79714a81 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x258821c44f7c8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9be88c79714a81; op2val:0x204258821c44f7c8;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:136581*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136581*0 + 3*215*FLEN/8, x4, x1, x2)

inst_45528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:136584*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136584*0 + 3*216*FLEN/8, x4, x1, x2)

inst_45529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:136587*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136587*0 + 3*217*FLEN/8, x4, x1, x2)

inst_45530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:136590*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136590*0 + 3*218*FLEN/8, x4, x1, x2)

inst_45531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:136593*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136593*0 + 3*219*FLEN/8, x4, x1, x2)

inst_45532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:136596*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136596*0 + 3*220*FLEN/8, x4, x1, x2)

inst_45533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:136599*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136599*0 + 3*221*FLEN/8, x4, x1, x2)

inst_45534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:136602*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136602*0 + 3*222*FLEN/8, x4, x1, x2)

inst_45535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:136605*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136605*0 + 3*223*FLEN/8, x4, x1, x2)

inst_45536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:136608*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136608*0 + 3*224*FLEN/8, x4, x1, x2)

inst_45537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:136611*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136611*0 + 3*225*FLEN/8, x4, x1, x2)

inst_45538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:136614*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136614*0 + 3*226*FLEN/8, x4, x1, x2)

inst_45539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:136617*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136617*0 + 3*227*FLEN/8, x4, x1, x2)

inst_45540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:136620*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136620*0 + 3*228*FLEN/8, x4, x1, x2)

inst_45541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:136623*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136623*0 + 3*229*FLEN/8, x4, x1, x2)

inst_45542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:136626*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136626*0 + 3*230*FLEN/8, x4, x1, x2)

inst_45543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:136629*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136629*0 + 3*231*FLEN/8, x4, x1, x2)

inst_45544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:136632*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136632*0 + 3*232*FLEN/8, x4, x1, x2)

inst_45545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:136635*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136635*0 + 3*233*FLEN/8, x4, x1, x2)

inst_45546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:136638*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136638*0 + 3*234*FLEN/8, x4, x1, x2)

inst_45547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:136641*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136641*0 + 3*235*FLEN/8, x4, x1, x2)

inst_45548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:136644*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136644*0 + 3*236*FLEN/8, x4, x1, x2)

inst_45549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:136647*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136647*0 + 3*237*FLEN/8, x4, x1, x2)

inst_45550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000000000000; valaddr_reg:x3; val_offset:136650*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136650*0 + 3*238*FLEN/8, x4, x1, x2)

inst_45551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000000000001; valaddr_reg:x3; val_offset:136653*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136653*0 + 3*239*FLEN/8, x4, x1, x2)

inst_45552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000000000003; valaddr_reg:x3; val_offset:136656*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136656*0 + 3*240*FLEN/8, x4, x1, x2)

inst_45553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000000000007; valaddr_reg:x3; val_offset:136659*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136659*0 + 3*241*FLEN/8, x4, x1, x2)

inst_45554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000000000000f; valaddr_reg:x3; val_offset:136662*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136662*0 + 3*242*FLEN/8, x4, x1, x2)

inst_45555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000000000001f; valaddr_reg:x3; val_offset:136665*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136665*0 + 3*243*FLEN/8, x4, x1, x2)

inst_45556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000000000003f; valaddr_reg:x3; val_offset:136668*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136668*0 + 3*244*FLEN/8, x4, x1, x2)

inst_45557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000000000007f; valaddr_reg:x3; val_offset:136671*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136671*0 + 3*245*FLEN/8, x4, x1, x2)

inst_45558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00000000000ff; valaddr_reg:x3; val_offset:136674*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136674*0 + 3*246*FLEN/8, x4, x1, x2)

inst_45559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00000000001ff; valaddr_reg:x3; val_offset:136677*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136677*0 + 3*247*FLEN/8, x4, x1, x2)

inst_45560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00000000003ff; valaddr_reg:x3; val_offset:136680*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136680*0 + 3*248*FLEN/8, x4, x1, x2)

inst_45561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00000000007ff; valaddr_reg:x3; val_offset:136683*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136683*0 + 3*249*FLEN/8, x4, x1, x2)

inst_45562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000000000fff; valaddr_reg:x3; val_offset:136686*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136686*0 + 3*250*FLEN/8, x4, x1, x2)

inst_45563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000000001fff; valaddr_reg:x3; val_offset:136689*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136689*0 + 3*251*FLEN/8, x4, x1, x2)

inst_45564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000000003fff; valaddr_reg:x3; val_offset:136692*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136692*0 + 3*252*FLEN/8, x4, x1, x2)

inst_45565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000000007fff; valaddr_reg:x3; val_offset:136695*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136695*0 + 3*253*FLEN/8, x4, x1, x2)

inst_45566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000000000ffff; valaddr_reg:x3; val_offset:136698*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136698*0 + 3*254*FLEN/8, x4, x1, x2)

inst_45567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000000001ffff; valaddr_reg:x3; val_offset:136701*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136701*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_45568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000000003ffff; valaddr_reg:x3; val_offset:136704*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136704*0 + 3*256*FLEN/8, x4, x1, x2)

inst_45569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000000007ffff; valaddr_reg:x3; val_offset:136707*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136707*0 + 3*257*FLEN/8, x4, x1, x2)

inst_45570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00000000fffff; valaddr_reg:x3; val_offset:136710*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136710*0 + 3*258*FLEN/8, x4, x1, x2)

inst_45571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00000001fffff; valaddr_reg:x3; val_offset:136713*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136713*0 + 3*259*FLEN/8, x4, x1, x2)

inst_45572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00000003fffff; valaddr_reg:x3; val_offset:136716*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136716*0 + 3*260*FLEN/8, x4, x1, x2)

inst_45573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00000007fffff; valaddr_reg:x3; val_offset:136719*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136719*0 + 3*261*FLEN/8, x4, x1, x2)

inst_45574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000000ffffff; valaddr_reg:x3; val_offset:136722*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136722*0 + 3*262*FLEN/8, x4, x1, x2)

inst_45575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000001ffffff; valaddr_reg:x3; val_offset:136725*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136725*0 + 3*263*FLEN/8, x4, x1, x2)

inst_45576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000003ffffff; valaddr_reg:x3; val_offset:136728*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136728*0 + 3*264*FLEN/8, x4, x1, x2)

inst_45577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000007ffffff; valaddr_reg:x3; val_offset:136731*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136731*0 + 3*265*FLEN/8, x4, x1, x2)

inst_45578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000000fffffff; valaddr_reg:x3; val_offset:136734*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136734*0 + 3*266*FLEN/8, x4, x1, x2)

inst_45579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000001fffffff; valaddr_reg:x3; val_offset:136737*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136737*0 + 3*267*FLEN/8, x4, x1, x2)

inst_45580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000003fffffff; valaddr_reg:x3; val_offset:136740*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136740*0 + 3*268*FLEN/8, x4, x1, x2)

inst_45581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000007fffffff; valaddr_reg:x3; val_offset:136743*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136743*0 + 3*269*FLEN/8, x4, x1, x2)

inst_45582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00000ffffffff; valaddr_reg:x3; val_offset:136746*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136746*0 + 3*270*FLEN/8, x4, x1, x2)

inst_45583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00001ffffffff; valaddr_reg:x3; val_offset:136749*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136749*0 + 3*271*FLEN/8, x4, x1, x2)

inst_45584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00003ffffffff; valaddr_reg:x3; val_offset:136752*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136752*0 + 3*272*FLEN/8, x4, x1, x2)

inst_45585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00007ffffffff; valaddr_reg:x3; val_offset:136755*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136755*0 + 3*273*FLEN/8, x4, x1, x2)

inst_45586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0000fffffffff; valaddr_reg:x3; val_offset:136758*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136758*0 + 3*274*FLEN/8, x4, x1, x2)

inst_45587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0001fffffffff; valaddr_reg:x3; val_offset:136761*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136761*0 + 3*275*FLEN/8, x4, x1, x2)

inst_45588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0003fffffffff; valaddr_reg:x3; val_offset:136764*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136764*0 + 3*276*FLEN/8, x4, x1, x2)

inst_45589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0007fffffffff; valaddr_reg:x3; val_offset:136767*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136767*0 + 3*277*FLEN/8, x4, x1, x2)

inst_45590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe000ffffffffff; valaddr_reg:x3; val_offset:136770*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136770*0 + 3*278*FLEN/8, x4, x1, x2)

inst_45591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe001ffffffffff; valaddr_reg:x3; val_offset:136773*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136773*0 + 3*279*FLEN/8, x4, x1, x2)

inst_45592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe003ffffffffff; valaddr_reg:x3; val_offset:136776*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136776*0 + 3*280*FLEN/8, x4, x1, x2)

inst_45593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe007ffffffffff; valaddr_reg:x3; val_offset:136779*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136779*0 + 3*281*FLEN/8, x4, x1, x2)

inst_45594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe00fffffffffff; valaddr_reg:x3; val_offset:136782*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136782*0 + 3*282*FLEN/8, x4, x1, x2)

inst_45595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe01fffffffffff; valaddr_reg:x3; val_offset:136785*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136785*0 + 3*283*FLEN/8, x4, x1, x2)

inst_45596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe03fffffffffff; valaddr_reg:x3; val_offset:136788*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136788*0 + 3*284*FLEN/8, x4, x1, x2)

inst_45597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe07fffffffffff; valaddr_reg:x3; val_offset:136791*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136791*0 + 3*285*FLEN/8, x4, x1, x2)

inst_45598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe0ffffffffffff; valaddr_reg:x3; val_offset:136794*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136794*0 + 3*286*FLEN/8, x4, x1, x2)

inst_45599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe1ffffffffffff; valaddr_reg:x3; val_offset:136797*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136797*0 + 3*287*FLEN/8, x4, x1, x2)

inst_45600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe3ffffffffffff; valaddr_reg:x3; val_offset:136800*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136800*0 + 3*288*FLEN/8, x4, x1, x2)

inst_45601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe7ffffffffffff; valaddr_reg:x3; val_offset:136803*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136803*0 + 3*289*FLEN/8, x4, x1, x2)

inst_45602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xe8000000000000; valaddr_reg:x3; val_offset:136806*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136806*0 + 3*290*FLEN/8, x4, x1, x2)

inst_45603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xec000000000000; valaddr_reg:x3; val_offset:136809*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136809*0 + 3*291*FLEN/8, x4, x1, x2)

inst_45604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xee000000000000; valaddr_reg:x3; val_offset:136812*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136812*0 + 3*292*FLEN/8, x4, x1, x2)

inst_45605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xef000000000000; valaddr_reg:x3; val_offset:136815*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136815*0 + 3*293*FLEN/8, x4, x1, x2)

inst_45606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xef800000000000; valaddr_reg:x3; val_offset:136818*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136818*0 + 3*294*FLEN/8, x4, x1, x2)

inst_45607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefc00000000000; valaddr_reg:x3; val_offset:136821*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136821*0 + 3*295*FLEN/8, x4, x1, x2)

inst_45608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefe00000000000; valaddr_reg:x3; val_offset:136824*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136824*0 + 3*296*FLEN/8, x4, x1, x2)

inst_45609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeff00000000000; valaddr_reg:x3; val_offset:136827*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136827*0 + 3*297*FLEN/8, x4, x1, x2)

inst_45610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeff80000000000; valaddr_reg:x3; val_offset:136830*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136830*0 + 3*298*FLEN/8, x4, x1, x2)

inst_45611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffc0000000000; valaddr_reg:x3; val_offset:136833*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136833*0 + 3*299*FLEN/8, x4, x1, x2)

inst_45612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffe0000000000; valaddr_reg:x3; val_offset:136836*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136836*0 + 3*300*FLEN/8, x4, x1, x2)

inst_45613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefff0000000000; valaddr_reg:x3; val_offset:136839*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136839*0 + 3*301*FLEN/8, x4, x1, x2)

inst_45614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefff8000000000; valaddr_reg:x3; val_offset:136842*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136842*0 + 3*302*FLEN/8, x4, x1, x2)

inst_45615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffc000000000; valaddr_reg:x3; val_offset:136845*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136845*0 + 3*303*FLEN/8, x4, x1, x2)

inst_45616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffe000000000; valaddr_reg:x3; val_offset:136848*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136848*0 + 3*304*FLEN/8, x4, x1, x2)

inst_45617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffff000000000; valaddr_reg:x3; val_offset:136851*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136851*0 + 3*305*FLEN/8, x4, x1, x2)

inst_45618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffff800000000; valaddr_reg:x3; val_offset:136854*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136854*0 + 3*306*FLEN/8, x4, x1, x2)

inst_45619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffc00000000; valaddr_reg:x3; val_offset:136857*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136857*0 + 3*307*FLEN/8, x4, x1, x2)

inst_45620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffe00000000; valaddr_reg:x3; val_offset:136860*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136860*0 + 3*308*FLEN/8, x4, x1, x2)

inst_45621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffff00000000; valaddr_reg:x3; val_offset:136863*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136863*0 + 3*309*FLEN/8, x4, x1, x2)

inst_45622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffff80000000; valaddr_reg:x3; val_offset:136866*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136866*0 + 3*310*FLEN/8, x4, x1, x2)

inst_45623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffc0000000; valaddr_reg:x3; val_offset:136869*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136869*0 + 3*311*FLEN/8, x4, x1, x2)

inst_45624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffe0000000; valaddr_reg:x3; val_offset:136872*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136872*0 + 3*312*FLEN/8, x4, x1, x2)

inst_45625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffff0000000; valaddr_reg:x3; val_offset:136875*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136875*0 + 3*313*FLEN/8, x4, x1, x2)

inst_45626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffff8000000; valaddr_reg:x3; val_offset:136878*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136878*0 + 3*314*FLEN/8, x4, x1, x2)

inst_45627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffc000000; valaddr_reg:x3; val_offset:136881*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136881*0 + 3*315*FLEN/8, x4, x1, x2)

inst_45628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffe000000; valaddr_reg:x3; val_offset:136884*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136884*0 + 3*316*FLEN/8, x4, x1, x2)

inst_45629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffff000000; valaddr_reg:x3; val_offset:136887*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136887*0 + 3*317*FLEN/8, x4, x1, x2)

inst_45630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffff800000; valaddr_reg:x3; val_offset:136890*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136890*0 + 3*318*FLEN/8, x4, x1, x2)

inst_45631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffffc00000; valaddr_reg:x3; val_offset:136893*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136893*0 + 3*319*FLEN/8, x4, x1, x2)

inst_45632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffffe00000; valaddr_reg:x3; val_offset:136896*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136896*0 + 3*320*FLEN/8, x4, x1, x2)

inst_45633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffff00000; valaddr_reg:x3; val_offset:136899*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136899*0 + 3*321*FLEN/8, x4, x1, x2)

inst_45634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffff80000; valaddr_reg:x3; val_offset:136902*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136902*0 + 3*322*FLEN/8, x4, x1, x2)

inst_45635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffffc0000; valaddr_reg:x3; val_offset:136905*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136905*0 + 3*323*FLEN/8, x4, x1, x2)

inst_45636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffffe0000; valaddr_reg:x3; val_offset:136908*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136908*0 + 3*324*FLEN/8, x4, x1, x2)

inst_45637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffffff0000; valaddr_reg:x3; val_offset:136911*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136911*0 + 3*325*FLEN/8, x4, x1, x2)

inst_45638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffffff8000; valaddr_reg:x3; val_offset:136914*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136914*0 + 3*326*FLEN/8, x4, x1, x2)

inst_45639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffffffc000; valaddr_reg:x3; val_offset:136917*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136917*0 + 3*327*FLEN/8, x4, x1, x2)

inst_45640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffffffe000; valaddr_reg:x3; val_offset:136920*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136920*0 + 3*328*FLEN/8, x4, x1, x2)

inst_45641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffffff000; valaddr_reg:x3; val_offset:136923*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136923*0 + 3*329*FLEN/8, x4, x1, x2)

inst_45642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffffff800; valaddr_reg:x3; val_offset:136926*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136926*0 + 3*330*FLEN/8, x4, x1, x2)

inst_45643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffffffc00; valaddr_reg:x3; val_offset:136929*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136929*0 + 3*331*FLEN/8, x4, x1, x2)

inst_45644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffffffe00; valaddr_reg:x3; val_offset:136932*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136932*0 + 3*332*FLEN/8, x4, x1, x2)

inst_45645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffffffff00; valaddr_reg:x3; val_offset:136935*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136935*0 + 3*333*FLEN/8, x4, x1, x2)

inst_45646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffffffff80; valaddr_reg:x3; val_offset:136938*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136938*0 + 3*334*FLEN/8, x4, x1, x2)

inst_45647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffffffffc0; valaddr_reg:x3; val_offset:136941*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136941*0 + 3*335*FLEN/8, x4, x1, x2)

inst_45648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffffffffe0; valaddr_reg:x3; val_offset:136944*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136944*0 + 3*336*FLEN/8, x4, x1, x2)

inst_45649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffffffff0; valaddr_reg:x3; val_offset:136947*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136947*0 + 3*337*FLEN/8, x4, x1, x2)

inst_45650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffffffff8; valaddr_reg:x3; val_offset:136950*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136950*0 + 3*338*FLEN/8, x4, x1, x2)

inst_45651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffffffffc; valaddr_reg:x3; val_offset:136953*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136953*0 + 3*339*FLEN/8, x4, x1, x2)

inst_45652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xeffffffffffffe; valaddr_reg:x3; val_offset:136956*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136956*0 + 3*340*FLEN/8, x4, x1, x2)

inst_45653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc1d08778530e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c1d08778530e1; op2val:0x0;
op3val:0xefffffffffffff; valaddr_reg:x3; val_offset:136959*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136959*0 + 3*341*FLEN/8, x4, x1, x2)

inst_45654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:136962*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136962*0 + 3*342*FLEN/8, x4, x1, x2)

inst_45655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:136965*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136965*0 + 3*343*FLEN/8, x4, x1, x2)

inst_45656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:136968*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136968*0 + 3*344*FLEN/8, x4, x1, x2)

inst_45657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:136971*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136971*0 + 3*345*FLEN/8, x4, x1, x2)

inst_45658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:136974*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136974*0 + 3*346*FLEN/8, x4, x1, x2)

inst_45659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:136977*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136977*0 + 3*347*FLEN/8, x4, x1, x2)

inst_45660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:136980*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136980*0 + 3*348*FLEN/8, x4, x1, x2)

inst_45661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:136983*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136983*0 + 3*349*FLEN/8, x4, x1, x2)

inst_45662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:136986*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136986*0 + 3*350*FLEN/8, x4, x1, x2)

inst_45663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:136989*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136989*0 + 3*351*FLEN/8, x4, x1, x2)

inst_45664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:136992*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136992*0 + 3*352*FLEN/8, x4, x1, x2)

inst_45665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:136995*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136995*0 + 3*353*FLEN/8, x4, x1, x2)

inst_45666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:136998*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 136998*0 + 3*354*FLEN/8, x4, x1, x2)

inst_45667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:137001*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137001*0 + 3*355*FLEN/8, x4, x1, x2)

inst_45668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:137004*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137004*0 + 3*356*FLEN/8, x4, x1, x2)

inst_45669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:137007*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137007*0 + 3*357*FLEN/8, x4, x1, x2)

inst_45670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:137010*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137010*0 + 3*358*FLEN/8, x4, x1, x2)

inst_45671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:137013*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137013*0 + 3*359*FLEN/8, x4, x1, x2)

inst_45672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:137016*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137016*0 + 3*360*FLEN/8, x4, x1, x2)

inst_45673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:137019*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137019*0 + 3*361*FLEN/8, x4, x1, x2)

inst_45674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:137022*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137022*0 + 3*362*FLEN/8, x4, x1, x2)

inst_45675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:137025*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137025*0 + 3*363*FLEN/8, x4, x1, x2)

inst_45676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000000000000; valaddr_reg:x3; val_offset:137028*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137028*0 + 3*364*FLEN/8, x4, x1, x2)

inst_45677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000000000001; valaddr_reg:x3; val_offset:137031*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137031*0 + 3*365*FLEN/8, x4, x1, x2)

inst_45678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000000000003; valaddr_reg:x3; val_offset:137034*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137034*0 + 3*366*FLEN/8, x4, x1, x2)

inst_45679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000000000007; valaddr_reg:x3; val_offset:137037*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137037*0 + 3*367*FLEN/8, x4, x1, x2)

inst_45680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000000000000f; valaddr_reg:x3; val_offset:137040*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137040*0 + 3*368*FLEN/8, x4, x1, x2)

inst_45681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000000000001f; valaddr_reg:x3; val_offset:137043*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137043*0 + 3*369*FLEN/8, x4, x1, x2)

inst_45682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000000000003f; valaddr_reg:x3; val_offset:137046*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137046*0 + 3*370*FLEN/8, x4, x1, x2)

inst_45683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000000000007f; valaddr_reg:x3; val_offset:137049*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137049*0 + 3*371*FLEN/8, x4, x1, x2)

inst_45684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600000000000ff; valaddr_reg:x3; val_offset:137052*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137052*0 + 3*372*FLEN/8, x4, x1, x2)

inst_45685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600000000001ff; valaddr_reg:x3; val_offset:137055*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137055*0 + 3*373*FLEN/8, x4, x1, x2)

inst_45686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600000000003ff; valaddr_reg:x3; val_offset:137058*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137058*0 + 3*374*FLEN/8, x4, x1, x2)

inst_45687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600000000007ff; valaddr_reg:x3; val_offset:137061*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137061*0 + 3*375*FLEN/8, x4, x1, x2)

inst_45688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000000000fff; valaddr_reg:x3; val_offset:137064*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137064*0 + 3*376*FLEN/8, x4, x1, x2)

inst_45689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000000001fff; valaddr_reg:x3; val_offset:137067*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137067*0 + 3*377*FLEN/8, x4, x1, x2)

inst_45690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000000003fff; valaddr_reg:x3; val_offset:137070*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137070*0 + 3*378*FLEN/8, x4, x1, x2)

inst_45691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000000007fff; valaddr_reg:x3; val_offset:137073*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137073*0 + 3*379*FLEN/8, x4, x1, x2)

inst_45692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000000000ffff; valaddr_reg:x3; val_offset:137076*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137076*0 + 3*380*FLEN/8, x4, x1, x2)

inst_45693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000000001ffff; valaddr_reg:x3; val_offset:137079*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137079*0 + 3*381*FLEN/8, x4, x1, x2)

inst_45694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000000003ffff; valaddr_reg:x3; val_offset:137082*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137082*0 + 3*382*FLEN/8, x4, x1, x2)

inst_45695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000000007ffff; valaddr_reg:x3; val_offset:137085*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137085*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_45696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600000000fffff; valaddr_reg:x3; val_offset:137088*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137088*0 + 3*384*FLEN/8, x4, x1, x2)

inst_45697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600000001fffff; valaddr_reg:x3; val_offset:137091*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137091*0 + 3*385*FLEN/8, x4, x1, x2)

inst_45698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600000003fffff; valaddr_reg:x3; val_offset:137094*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137094*0 + 3*386*FLEN/8, x4, x1, x2)

inst_45699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600000007fffff; valaddr_reg:x3; val_offset:137097*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137097*0 + 3*387*FLEN/8, x4, x1, x2)

inst_45700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000000ffffff; valaddr_reg:x3; val_offset:137100*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137100*0 + 3*388*FLEN/8, x4, x1, x2)

inst_45701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000001ffffff; valaddr_reg:x3; val_offset:137103*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137103*0 + 3*389*FLEN/8, x4, x1, x2)

inst_45702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000003ffffff; valaddr_reg:x3; val_offset:137106*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137106*0 + 3*390*FLEN/8, x4, x1, x2)

inst_45703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000007ffffff; valaddr_reg:x3; val_offset:137109*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137109*0 + 3*391*FLEN/8, x4, x1, x2)

inst_45704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000000fffffff; valaddr_reg:x3; val_offset:137112*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137112*0 + 3*392*FLEN/8, x4, x1, x2)

inst_45705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000001fffffff; valaddr_reg:x3; val_offset:137115*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137115*0 + 3*393*FLEN/8, x4, x1, x2)

inst_45706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000003fffffff; valaddr_reg:x3; val_offset:137118*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137118*0 + 3*394*FLEN/8, x4, x1, x2)

inst_45707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000007fffffff; valaddr_reg:x3; val_offset:137121*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137121*0 + 3*395*FLEN/8, x4, x1, x2)

inst_45708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600000ffffffff; valaddr_reg:x3; val_offset:137124*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137124*0 + 3*396*FLEN/8, x4, x1, x2)

inst_45709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600001ffffffff; valaddr_reg:x3; val_offset:137127*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137127*0 + 3*397*FLEN/8, x4, x1, x2)

inst_45710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600003ffffffff; valaddr_reg:x3; val_offset:137130*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137130*0 + 3*398*FLEN/8, x4, x1, x2)

inst_45711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600007ffffffff; valaddr_reg:x3; val_offset:137133*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137133*0 + 3*399*FLEN/8, x4, x1, x2)

inst_45712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160000fffffffff; valaddr_reg:x3; val_offset:137136*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137136*0 + 3*400*FLEN/8, x4, x1, x2)

inst_45713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160001fffffffff; valaddr_reg:x3; val_offset:137139*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137139*0 + 3*401*FLEN/8, x4, x1, x2)

inst_45714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160003fffffffff; valaddr_reg:x3; val_offset:137142*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137142*0 + 3*402*FLEN/8, x4, x1, x2)

inst_45715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160007fffffffff; valaddr_reg:x3; val_offset:137145*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137145*0 + 3*403*FLEN/8, x4, x1, x2)

inst_45716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816000ffffffffff; valaddr_reg:x3; val_offset:137148*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137148*0 + 3*404*FLEN/8, x4, x1, x2)

inst_45717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816001ffffffffff; valaddr_reg:x3; val_offset:137151*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137151*0 + 3*405*FLEN/8, x4, x1, x2)

inst_45718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816003ffffffffff; valaddr_reg:x3; val_offset:137154*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137154*0 + 3*406*FLEN/8, x4, x1, x2)

inst_45719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816007ffffffffff; valaddr_reg:x3; val_offset:137157*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137157*0 + 3*407*FLEN/8, x4, x1, x2)

inst_45720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81600fffffffffff; valaddr_reg:x3; val_offset:137160*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137160*0 + 3*408*FLEN/8, x4, x1, x2)

inst_45721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81601fffffffffff; valaddr_reg:x3; val_offset:137163*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137163*0 + 3*409*FLEN/8, x4, x1, x2)

inst_45722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81603fffffffffff; valaddr_reg:x3; val_offset:137166*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137166*0 + 3*410*FLEN/8, x4, x1, x2)

inst_45723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x81607fffffffffff; valaddr_reg:x3; val_offset:137169*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137169*0 + 3*411*FLEN/8, x4, x1, x2)

inst_45724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8160ffffffffffff; valaddr_reg:x3; val_offset:137172*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137172*0 + 3*412*FLEN/8, x4, x1, x2)

inst_45725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8161ffffffffffff; valaddr_reg:x3; val_offset:137175*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137175*0 + 3*413*FLEN/8, x4, x1, x2)

inst_45726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8163ffffffffffff; valaddr_reg:x3; val_offset:137178*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137178*0 + 3*414*FLEN/8, x4, x1, x2)

inst_45727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8167ffffffffffff; valaddr_reg:x3; val_offset:137181*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137181*0 + 3*415*FLEN/8, x4, x1, x2)

inst_45728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x8168000000000000; valaddr_reg:x3; val_offset:137184*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137184*0 + 3*416*FLEN/8, x4, x1, x2)

inst_45729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816c000000000000; valaddr_reg:x3; val_offset:137187*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137187*0 + 3*417*FLEN/8, x4, x1, x2)

inst_45730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816e000000000000; valaddr_reg:x3; val_offset:137190*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137190*0 + 3*418*FLEN/8, x4, x1, x2)

inst_45731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816f000000000000; valaddr_reg:x3; val_offset:137193*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137193*0 + 3*419*FLEN/8, x4, x1, x2)

inst_45732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816f800000000000; valaddr_reg:x3; val_offset:137196*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137196*0 + 3*420*FLEN/8, x4, x1, x2)

inst_45733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fc00000000000; valaddr_reg:x3; val_offset:137199*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137199*0 + 3*421*FLEN/8, x4, x1, x2)

inst_45734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fe00000000000; valaddr_reg:x3; val_offset:137202*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137202*0 + 3*422*FLEN/8, x4, x1, x2)

inst_45735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ff00000000000; valaddr_reg:x3; val_offset:137205*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137205*0 + 3*423*FLEN/8, x4, x1, x2)

inst_45736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ff80000000000; valaddr_reg:x3; val_offset:137208*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137208*0 + 3*424*FLEN/8, x4, x1, x2)

inst_45737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffc0000000000; valaddr_reg:x3; val_offset:137211*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137211*0 + 3*425*FLEN/8, x4, x1, x2)

inst_45738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffe0000000000; valaddr_reg:x3; val_offset:137214*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137214*0 + 3*426*FLEN/8, x4, x1, x2)

inst_45739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fff0000000000; valaddr_reg:x3; val_offset:137217*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137217*0 + 3*427*FLEN/8, x4, x1, x2)

inst_45740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fff8000000000; valaddr_reg:x3; val_offset:137220*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137220*0 + 3*428*FLEN/8, x4, x1, x2)

inst_45741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffc000000000; valaddr_reg:x3; val_offset:137223*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137223*0 + 3*429*FLEN/8, x4, x1, x2)

inst_45742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffe000000000; valaddr_reg:x3; val_offset:137226*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137226*0 + 3*430*FLEN/8, x4, x1, x2)

inst_45743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffff000000000; valaddr_reg:x3; val_offset:137229*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137229*0 + 3*431*FLEN/8, x4, x1, x2)

inst_45744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffff800000000; valaddr_reg:x3; val_offset:137232*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137232*0 + 3*432*FLEN/8, x4, x1, x2)

inst_45745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffc00000000; valaddr_reg:x3; val_offset:137235*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137235*0 + 3*433*FLEN/8, x4, x1, x2)

inst_45746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffe00000000; valaddr_reg:x3; val_offset:137238*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137238*0 + 3*434*FLEN/8, x4, x1, x2)

inst_45747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffff00000000; valaddr_reg:x3; val_offset:137241*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137241*0 + 3*435*FLEN/8, x4, x1, x2)

inst_45748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffff80000000; valaddr_reg:x3; val_offset:137244*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137244*0 + 3*436*FLEN/8, x4, x1, x2)

inst_45749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffc0000000; valaddr_reg:x3; val_offset:137247*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137247*0 + 3*437*FLEN/8, x4, x1, x2)

inst_45750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffe0000000; valaddr_reg:x3; val_offset:137250*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137250*0 + 3*438*FLEN/8, x4, x1, x2)

inst_45751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffff0000000; valaddr_reg:x3; val_offset:137253*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137253*0 + 3*439*FLEN/8, x4, x1, x2)

inst_45752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffff8000000; valaddr_reg:x3; val_offset:137256*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137256*0 + 3*440*FLEN/8, x4, x1, x2)

inst_45753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffc000000; valaddr_reg:x3; val_offset:137259*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137259*0 + 3*441*FLEN/8, x4, x1, x2)

inst_45754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffe000000; valaddr_reg:x3; val_offset:137262*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137262*0 + 3*442*FLEN/8, x4, x1, x2)

inst_45755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffff000000; valaddr_reg:x3; val_offset:137265*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137265*0 + 3*443*FLEN/8, x4, x1, x2)

inst_45756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffff800000; valaddr_reg:x3; val_offset:137268*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137268*0 + 3*444*FLEN/8, x4, x1, x2)

inst_45757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffffc00000; valaddr_reg:x3; val_offset:137271*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137271*0 + 3*445*FLEN/8, x4, x1, x2)

inst_45758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffffe00000; valaddr_reg:x3; val_offset:137274*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137274*0 + 3*446*FLEN/8, x4, x1, x2)

inst_45759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffff00000; valaddr_reg:x3; val_offset:137277*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137277*0 + 3*447*FLEN/8, x4, x1, x2)

inst_45760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffff80000; valaddr_reg:x3; val_offset:137280*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137280*0 + 3*448*FLEN/8, x4, x1, x2)

inst_45761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffffc0000; valaddr_reg:x3; val_offset:137283*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137283*0 + 3*449*FLEN/8, x4, x1, x2)

inst_45762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffffe0000; valaddr_reg:x3; val_offset:137286*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137286*0 + 3*450*FLEN/8, x4, x1, x2)

inst_45763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffffff0000; valaddr_reg:x3; val_offset:137289*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137289*0 + 3*451*FLEN/8, x4, x1, x2)

inst_45764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffffff8000; valaddr_reg:x3; val_offset:137292*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137292*0 + 3*452*FLEN/8, x4, x1, x2)

inst_45765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffffffc000; valaddr_reg:x3; val_offset:137295*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137295*0 + 3*453*FLEN/8, x4, x1, x2)

inst_45766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffffffe000; valaddr_reg:x3; val_offset:137298*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137298*0 + 3*454*FLEN/8, x4, x1, x2)

inst_45767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffffff000; valaddr_reg:x3; val_offset:137301*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137301*0 + 3*455*FLEN/8, x4, x1, x2)

inst_45768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffffff800; valaddr_reg:x3; val_offset:137304*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137304*0 + 3*456*FLEN/8, x4, x1, x2)

inst_45769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffffffc00; valaddr_reg:x3; val_offset:137307*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137307*0 + 3*457*FLEN/8, x4, x1, x2)

inst_45770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffffffe00; valaddr_reg:x3; val_offset:137310*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137310*0 + 3*458*FLEN/8, x4, x1, x2)

inst_45771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffffffff00; valaddr_reg:x3; val_offset:137313*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137313*0 + 3*459*FLEN/8, x4, x1, x2)

inst_45772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffffffff80; valaddr_reg:x3; val_offset:137316*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137316*0 + 3*460*FLEN/8, x4, x1, x2)

inst_45773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffffffffc0; valaddr_reg:x3; val_offset:137319*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137319*0 + 3*461*FLEN/8, x4, x1, x2)

inst_45774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffffffffe0; valaddr_reg:x3; val_offset:137322*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137322*0 + 3*462*FLEN/8, x4, x1, x2)

inst_45775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffffffff0; valaddr_reg:x3; val_offset:137325*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137325*0 + 3*463*FLEN/8, x4, x1, x2)

inst_45776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffffffff8; valaddr_reg:x3; val_offset:137328*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137328*0 + 3*464*FLEN/8, x4, x1, x2)

inst_45777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffffffffc; valaddr_reg:x3; val_offset:137331*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137331*0 + 3*465*FLEN/8, x4, x1, x2)

inst_45778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816ffffffffffffe; valaddr_reg:x3; val_offset:137334*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137334*0 + 3*466*FLEN/8, x4, x1, x2)

inst_45779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc33712ce6ecf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c33712ce6ecf9; op2val:0x8000;
op3val:0x816fffffffffffff; valaddr_reg:x3; val_offset:137337*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137337*0 + 3*467*FLEN/8, x4, x1, x2)

inst_45780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:137340*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137340*0 + 3*468*FLEN/8, x4, x1, x2)

inst_45781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:137343*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137343*0 + 3*469*FLEN/8, x4, x1, x2)

inst_45782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:137346*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137346*0 + 3*470*FLEN/8, x4, x1, x2)

inst_45783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:137349*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137349*0 + 3*471*FLEN/8, x4, x1, x2)

inst_45784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:137352*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137352*0 + 3*472*FLEN/8, x4, x1, x2)

inst_45785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:137355*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137355*0 + 3*473*FLEN/8, x4, x1, x2)

inst_45786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:137358*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137358*0 + 3*474*FLEN/8, x4, x1, x2)

inst_45787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:137361*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137361*0 + 3*475*FLEN/8, x4, x1, x2)

inst_45788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:137364*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137364*0 + 3*476*FLEN/8, x4, x1, x2)

inst_45789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:137367*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137367*0 + 3*477*FLEN/8, x4, x1, x2)

inst_45790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:137370*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137370*0 + 3*478*FLEN/8, x4, x1, x2)

inst_45791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:137373*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137373*0 + 3*479*FLEN/8, x4, x1, x2)

inst_45792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:137376*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137376*0 + 3*480*FLEN/8, x4, x1, x2)

inst_45793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:137379*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137379*0 + 3*481*FLEN/8, x4, x1, x2)

inst_45794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:137382*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137382*0 + 3*482*FLEN/8, x4, x1, x2)

inst_45795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:137385*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137385*0 + 3*483*FLEN/8, x4, x1, x2)

inst_45796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:137388*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137388*0 + 3*484*FLEN/8, x4, x1, x2)

inst_45797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:137391*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137391*0 + 3*485*FLEN/8, x4, x1, x2)

inst_45798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:137394*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137394*0 + 3*486*FLEN/8, x4, x1, x2)

inst_45799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:137397*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137397*0 + 3*487*FLEN/8, x4, x1, x2)

inst_45800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:137400*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137400*0 + 3*488*FLEN/8, x4, x1, x2)

inst_45801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:137403*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137403*0 + 3*489*FLEN/8, x4, x1, x2)

inst_45802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000000000000; valaddr_reg:x3; val_offset:137406*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137406*0 + 3*490*FLEN/8, x4, x1, x2)

inst_45803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000000000001; valaddr_reg:x3; val_offset:137409*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137409*0 + 3*491*FLEN/8, x4, x1, x2)

inst_45804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000000000003; valaddr_reg:x3; val_offset:137412*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137412*0 + 3*492*FLEN/8, x4, x1, x2)

inst_45805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000000000007; valaddr_reg:x3; val_offset:137415*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137415*0 + 3*493*FLEN/8, x4, x1, x2)

inst_45806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000000000000f; valaddr_reg:x3; val_offset:137418*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137418*0 + 3*494*FLEN/8, x4, x1, x2)

inst_45807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000000000001f; valaddr_reg:x3; val_offset:137421*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137421*0 + 3*495*FLEN/8, x4, x1, x2)

inst_45808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000000000003f; valaddr_reg:x3; val_offset:137424*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137424*0 + 3*496*FLEN/8, x4, x1, x2)

inst_45809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000000000007f; valaddr_reg:x3; val_offset:137427*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137427*0 + 3*497*FLEN/8, x4, x1, x2)

inst_45810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300000000000ff; valaddr_reg:x3; val_offset:137430*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137430*0 + 3*498*FLEN/8, x4, x1, x2)

inst_45811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300000000001ff; valaddr_reg:x3; val_offset:137433*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137433*0 + 3*499*FLEN/8, x4, x1, x2)

inst_45812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300000000003ff; valaddr_reg:x3; val_offset:137436*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137436*0 + 3*500*FLEN/8, x4, x1, x2)

inst_45813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300000000007ff; valaddr_reg:x3; val_offset:137439*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137439*0 + 3*501*FLEN/8, x4, x1, x2)

inst_45814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000000000fff; valaddr_reg:x3; val_offset:137442*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137442*0 + 3*502*FLEN/8, x4, x1, x2)

inst_45815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000000001fff; valaddr_reg:x3; val_offset:137445*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137445*0 + 3*503*FLEN/8, x4, x1, x2)

inst_45816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000000003fff; valaddr_reg:x3; val_offset:137448*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137448*0 + 3*504*FLEN/8, x4, x1, x2)

inst_45817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000000007fff; valaddr_reg:x3; val_offset:137451*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137451*0 + 3*505*FLEN/8, x4, x1, x2)

inst_45818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000000000ffff; valaddr_reg:x3; val_offset:137454*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137454*0 + 3*506*FLEN/8, x4, x1, x2)

inst_45819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000000001ffff; valaddr_reg:x3; val_offset:137457*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137457*0 + 3*507*FLEN/8, x4, x1, x2)

inst_45820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000000003ffff; valaddr_reg:x3; val_offset:137460*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137460*0 + 3*508*FLEN/8, x4, x1, x2)

inst_45821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000000007ffff; valaddr_reg:x3; val_offset:137463*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137463*0 + 3*509*FLEN/8, x4, x1, x2)

inst_45822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300000000fffff; valaddr_reg:x3; val_offset:137466*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137466*0 + 3*510*FLEN/8, x4, x1, x2)

inst_45823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300000001fffff; valaddr_reg:x3; val_offset:137469*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137469*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_45824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300000003fffff; valaddr_reg:x3; val_offset:137472*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137472*0 + 3*512*FLEN/8, x4, x1, x2)

inst_45825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300000007fffff; valaddr_reg:x3; val_offset:137475*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137475*0 + 3*513*FLEN/8, x4, x1, x2)

inst_45826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000000ffffff; valaddr_reg:x3; val_offset:137478*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137478*0 + 3*514*FLEN/8, x4, x1, x2)

inst_45827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000001ffffff; valaddr_reg:x3; val_offset:137481*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137481*0 + 3*515*FLEN/8, x4, x1, x2)

inst_45828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000003ffffff; valaddr_reg:x3; val_offset:137484*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137484*0 + 3*516*FLEN/8, x4, x1, x2)

inst_45829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000007ffffff; valaddr_reg:x3; val_offset:137487*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137487*0 + 3*517*FLEN/8, x4, x1, x2)

inst_45830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000000fffffff; valaddr_reg:x3; val_offset:137490*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137490*0 + 3*518*FLEN/8, x4, x1, x2)

inst_45831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000001fffffff; valaddr_reg:x3; val_offset:137493*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137493*0 + 3*519*FLEN/8, x4, x1, x2)

inst_45832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000003fffffff; valaddr_reg:x3; val_offset:137496*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137496*0 + 3*520*FLEN/8, x4, x1, x2)

inst_45833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000007fffffff; valaddr_reg:x3; val_offset:137499*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137499*0 + 3*521*FLEN/8, x4, x1, x2)

inst_45834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300000ffffffff; valaddr_reg:x3; val_offset:137502*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137502*0 + 3*522*FLEN/8, x4, x1, x2)

inst_45835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300001ffffffff; valaddr_reg:x3; val_offset:137505*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137505*0 + 3*523*FLEN/8, x4, x1, x2)

inst_45836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300003ffffffff; valaddr_reg:x3; val_offset:137508*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137508*0 + 3*524*FLEN/8, x4, x1, x2)

inst_45837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300007ffffffff; valaddr_reg:x3; val_offset:137511*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137511*0 + 3*525*FLEN/8, x4, x1, x2)

inst_45838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130000fffffffff; valaddr_reg:x3; val_offset:137514*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137514*0 + 3*526*FLEN/8, x4, x1, x2)

inst_45839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130001fffffffff; valaddr_reg:x3; val_offset:137517*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137517*0 + 3*527*FLEN/8, x4, x1, x2)

inst_45840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130003fffffffff; valaddr_reg:x3; val_offset:137520*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137520*0 + 3*528*FLEN/8, x4, x1, x2)

inst_45841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130007fffffffff; valaddr_reg:x3; val_offset:137523*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137523*0 + 3*529*FLEN/8, x4, x1, x2)

inst_45842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13000ffffffffff; valaddr_reg:x3; val_offset:137526*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137526*0 + 3*530*FLEN/8, x4, x1, x2)

inst_45843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13001ffffffffff; valaddr_reg:x3; val_offset:137529*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137529*0 + 3*531*FLEN/8, x4, x1, x2)

inst_45844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13003ffffffffff; valaddr_reg:x3; val_offset:137532*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137532*0 + 3*532*FLEN/8, x4, x1, x2)

inst_45845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13007ffffffffff; valaddr_reg:x3; val_offset:137535*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137535*0 + 3*533*FLEN/8, x4, x1, x2)

inst_45846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1300fffffffffff; valaddr_reg:x3; val_offset:137538*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137538*0 + 3*534*FLEN/8, x4, x1, x2)

inst_45847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1301fffffffffff; valaddr_reg:x3; val_offset:137541*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137541*0 + 3*535*FLEN/8, x4, x1, x2)

inst_45848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1303fffffffffff; valaddr_reg:x3; val_offset:137544*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137544*0 + 3*536*FLEN/8, x4, x1, x2)

inst_45849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x1307fffffffffff; valaddr_reg:x3; val_offset:137547*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137547*0 + 3*537*FLEN/8, x4, x1, x2)

inst_45850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x130ffffffffffff; valaddr_reg:x3; val_offset:137550*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137550*0 + 3*538*FLEN/8, x4, x1, x2)

inst_45851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x131ffffffffffff; valaddr_reg:x3; val_offset:137553*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137553*0 + 3*539*FLEN/8, x4, x1, x2)

inst_45852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x133ffffffffffff; valaddr_reg:x3; val_offset:137556*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137556*0 + 3*540*FLEN/8, x4, x1, x2)

inst_45853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x137ffffffffffff; valaddr_reg:x3; val_offset:137559*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137559*0 + 3*541*FLEN/8, x4, x1, x2)

inst_45854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x138000000000000; valaddr_reg:x3; val_offset:137562*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137562*0 + 3*542*FLEN/8, x4, x1, x2)

inst_45855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13c000000000000; valaddr_reg:x3; val_offset:137565*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137565*0 + 3*543*FLEN/8, x4, x1, x2)

inst_45856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13e000000000000; valaddr_reg:x3; val_offset:137568*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137568*0 + 3*544*FLEN/8, x4, x1, x2)

inst_45857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13f000000000000; valaddr_reg:x3; val_offset:137571*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137571*0 + 3*545*FLEN/8, x4, x1, x2)

inst_45858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13f800000000000; valaddr_reg:x3; val_offset:137574*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137574*0 + 3*546*FLEN/8, x4, x1, x2)

inst_45859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fc00000000000; valaddr_reg:x3; val_offset:137577*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137577*0 + 3*547*FLEN/8, x4, x1, x2)

inst_45860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fe00000000000; valaddr_reg:x3; val_offset:137580*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137580*0 + 3*548*FLEN/8, x4, x1, x2)

inst_45861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ff00000000000; valaddr_reg:x3; val_offset:137583*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137583*0 + 3*549*FLEN/8, x4, x1, x2)

inst_45862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ff80000000000; valaddr_reg:x3; val_offset:137586*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137586*0 + 3*550*FLEN/8, x4, x1, x2)

inst_45863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffc0000000000; valaddr_reg:x3; val_offset:137589*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137589*0 + 3*551*FLEN/8, x4, x1, x2)

inst_45864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffe0000000000; valaddr_reg:x3; val_offset:137592*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137592*0 + 3*552*FLEN/8, x4, x1, x2)

inst_45865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fff0000000000; valaddr_reg:x3; val_offset:137595*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137595*0 + 3*553*FLEN/8, x4, x1, x2)

inst_45866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fff8000000000; valaddr_reg:x3; val_offset:137598*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137598*0 + 3*554*FLEN/8, x4, x1, x2)

inst_45867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffc000000000; valaddr_reg:x3; val_offset:137601*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137601*0 + 3*555*FLEN/8, x4, x1, x2)

inst_45868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffe000000000; valaddr_reg:x3; val_offset:137604*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137604*0 + 3*556*FLEN/8, x4, x1, x2)

inst_45869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffff000000000; valaddr_reg:x3; val_offset:137607*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137607*0 + 3*557*FLEN/8, x4, x1, x2)

inst_45870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffff800000000; valaddr_reg:x3; val_offset:137610*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137610*0 + 3*558*FLEN/8, x4, x1, x2)

inst_45871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffc00000000; valaddr_reg:x3; val_offset:137613*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137613*0 + 3*559*FLEN/8, x4, x1, x2)

inst_45872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffe00000000; valaddr_reg:x3; val_offset:137616*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137616*0 + 3*560*FLEN/8, x4, x1, x2)

inst_45873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffff00000000; valaddr_reg:x3; val_offset:137619*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137619*0 + 3*561*FLEN/8, x4, x1, x2)

inst_45874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffff80000000; valaddr_reg:x3; val_offset:137622*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137622*0 + 3*562*FLEN/8, x4, x1, x2)

inst_45875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffc0000000; valaddr_reg:x3; val_offset:137625*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137625*0 + 3*563*FLEN/8, x4, x1, x2)

inst_45876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffe0000000; valaddr_reg:x3; val_offset:137628*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137628*0 + 3*564*FLEN/8, x4, x1, x2)

inst_45877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffff0000000; valaddr_reg:x3; val_offset:137631*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137631*0 + 3*565*FLEN/8, x4, x1, x2)

inst_45878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffff8000000; valaddr_reg:x3; val_offset:137634*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137634*0 + 3*566*FLEN/8, x4, x1, x2)

inst_45879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffc000000; valaddr_reg:x3; val_offset:137637*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137637*0 + 3*567*FLEN/8, x4, x1, x2)

inst_45880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffe000000; valaddr_reg:x3; val_offset:137640*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137640*0 + 3*568*FLEN/8, x4, x1, x2)

inst_45881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffff000000; valaddr_reg:x3; val_offset:137643*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137643*0 + 3*569*FLEN/8, x4, x1, x2)

inst_45882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffff800000; valaddr_reg:x3; val_offset:137646*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137646*0 + 3*570*FLEN/8, x4, x1, x2)

inst_45883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffffc00000; valaddr_reg:x3; val_offset:137649*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137649*0 + 3*571*FLEN/8, x4, x1, x2)

inst_45884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffffe00000; valaddr_reg:x3; val_offset:137652*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137652*0 + 3*572*FLEN/8, x4, x1, x2)

inst_45885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffff00000; valaddr_reg:x3; val_offset:137655*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137655*0 + 3*573*FLEN/8, x4, x1, x2)

inst_45886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffff80000; valaddr_reg:x3; val_offset:137658*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137658*0 + 3*574*FLEN/8, x4, x1, x2)

inst_45887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffffc0000; valaddr_reg:x3; val_offset:137661*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137661*0 + 3*575*FLEN/8, x4, x1, x2)

inst_45888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffffe0000; valaddr_reg:x3; val_offset:137664*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137664*0 + 3*576*FLEN/8, x4, x1, x2)

inst_45889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffffff0000; valaddr_reg:x3; val_offset:137667*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137667*0 + 3*577*FLEN/8, x4, x1, x2)

inst_45890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffffff8000; valaddr_reg:x3; val_offset:137670*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137670*0 + 3*578*FLEN/8, x4, x1, x2)

inst_45891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffffffc000; valaddr_reg:x3; val_offset:137673*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137673*0 + 3*579*FLEN/8, x4, x1, x2)

inst_45892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffffffe000; valaddr_reg:x3; val_offset:137676*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137676*0 + 3*580*FLEN/8, x4, x1, x2)

inst_45893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffffff000; valaddr_reg:x3; val_offset:137679*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137679*0 + 3*581*FLEN/8, x4, x1, x2)

inst_45894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffffff800; valaddr_reg:x3; val_offset:137682*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137682*0 + 3*582*FLEN/8, x4, x1, x2)

inst_45895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffffffc00; valaddr_reg:x3; val_offset:137685*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137685*0 + 3*583*FLEN/8, x4, x1, x2)

inst_45896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffffffe00; valaddr_reg:x3; val_offset:137688*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137688*0 + 3*584*FLEN/8, x4, x1, x2)

inst_45897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffffffff00; valaddr_reg:x3; val_offset:137691*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137691*0 + 3*585*FLEN/8, x4, x1, x2)

inst_45898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffffffff80; valaddr_reg:x3; val_offset:137694*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137694*0 + 3*586*FLEN/8, x4, x1, x2)

inst_45899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffffffffc0; valaddr_reg:x3; val_offset:137697*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137697*0 + 3*587*FLEN/8, x4, x1, x2)

inst_45900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffffffffe0; valaddr_reg:x3; val_offset:137700*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137700*0 + 3*588*FLEN/8, x4, x1, x2)

inst_45901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffffffff0; valaddr_reg:x3; val_offset:137703*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137703*0 + 3*589*FLEN/8, x4, x1, x2)

inst_45902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffffffff8; valaddr_reg:x3; val_offset:137706*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137706*0 + 3*590*FLEN/8, x4, x1, x2)

inst_45903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffffffffc; valaddr_reg:x3; val_offset:137709*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137709*0 + 3*591*FLEN/8, x4, x1, x2)

inst_45904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13ffffffffffffe; valaddr_reg:x3; val_offset:137712*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137712*0 + 3*592*FLEN/8, x4, x1, x2)

inst_45905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc3e3761a1c5a5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c3e3761a1c5a5; op2val:0x0;
op3val:0x13fffffffffffff; valaddr_reg:x3; val_offset:137715*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137715*0 + 3*593*FLEN/8, x4, x1, x2)

inst_45906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:137718*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137718*0 + 3*594*FLEN/8, x4, x1, x2)

inst_45907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:137721*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137721*0 + 3*595*FLEN/8, x4, x1, x2)

inst_45908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:137724*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137724*0 + 3*596*FLEN/8, x4, x1, x2)

inst_45909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:137727*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137727*0 + 3*597*FLEN/8, x4, x1, x2)

inst_45910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:137730*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137730*0 + 3*598*FLEN/8, x4, x1, x2)

inst_45911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:137733*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137733*0 + 3*599*FLEN/8, x4, x1, x2)

inst_45912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:137736*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137736*0 + 3*600*FLEN/8, x4, x1, x2)

inst_45913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:137739*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137739*0 + 3*601*FLEN/8, x4, x1, x2)

inst_45914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:137742*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137742*0 + 3*602*FLEN/8, x4, x1, x2)

inst_45915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:137745*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137745*0 + 3*603*FLEN/8, x4, x1, x2)

inst_45916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:137748*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137748*0 + 3*604*FLEN/8, x4, x1, x2)

inst_45917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:137751*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137751*0 + 3*605*FLEN/8, x4, x1, x2)

inst_45918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:137754*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137754*0 + 3*606*FLEN/8, x4, x1, x2)

inst_45919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:137757*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137757*0 + 3*607*FLEN/8, x4, x1, x2)

inst_45920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:137760*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137760*0 + 3*608*FLEN/8, x4, x1, x2)

inst_45921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:137763*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137763*0 + 3*609*FLEN/8, x4, x1, x2)

inst_45922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:137766*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137766*0 + 3*610*FLEN/8, x4, x1, x2)

inst_45923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:137769*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137769*0 + 3*611*FLEN/8, x4, x1, x2)

inst_45924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:137772*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137772*0 + 3*612*FLEN/8, x4, x1, x2)

inst_45925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:137775*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137775*0 + 3*613*FLEN/8, x4, x1, x2)

inst_45926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:137778*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137778*0 + 3*614*FLEN/8, x4, x1, x2)

inst_45927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:137781*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137781*0 + 3*615*FLEN/8, x4, x1, x2)

inst_45928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000000000000; valaddr_reg:x3; val_offset:137784*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137784*0 + 3*616*FLEN/8, x4, x1, x2)

inst_45929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000000000001; valaddr_reg:x3; val_offset:137787*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137787*0 + 3*617*FLEN/8, x4, x1, x2)

inst_45930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000000000003; valaddr_reg:x3; val_offset:137790*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137790*0 + 3*618*FLEN/8, x4, x1, x2)

inst_45931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000000000007; valaddr_reg:x3; val_offset:137793*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137793*0 + 3*619*FLEN/8, x4, x1, x2)

inst_45932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000000000000f; valaddr_reg:x3; val_offset:137796*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137796*0 + 3*620*FLEN/8, x4, x1, x2)

inst_45933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000000000001f; valaddr_reg:x3; val_offset:137799*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137799*0 + 3*621*FLEN/8, x4, x1, x2)

inst_45934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000000000003f; valaddr_reg:x3; val_offset:137802*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137802*0 + 3*622*FLEN/8, x4, x1, x2)

inst_45935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000000000007f; valaddr_reg:x3; val_offset:137805*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137805*0 + 3*623*FLEN/8, x4, x1, x2)

inst_45936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800000000000ff; valaddr_reg:x3; val_offset:137808*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137808*0 + 3*624*FLEN/8, x4, x1, x2)

inst_45937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800000000001ff; valaddr_reg:x3; val_offset:137811*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137811*0 + 3*625*FLEN/8, x4, x1, x2)

inst_45938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800000000003ff; valaddr_reg:x3; val_offset:137814*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137814*0 + 3*626*FLEN/8, x4, x1, x2)

inst_45939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800000000007ff; valaddr_reg:x3; val_offset:137817*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137817*0 + 3*627*FLEN/8, x4, x1, x2)

inst_45940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000000000fff; valaddr_reg:x3; val_offset:137820*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137820*0 + 3*628*FLEN/8, x4, x1, x2)

inst_45941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000000001fff; valaddr_reg:x3; val_offset:137823*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137823*0 + 3*629*FLEN/8, x4, x1, x2)

inst_45942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000000003fff; valaddr_reg:x3; val_offset:137826*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137826*0 + 3*630*FLEN/8, x4, x1, x2)

inst_45943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000000007fff; valaddr_reg:x3; val_offset:137829*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137829*0 + 3*631*FLEN/8, x4, x1, x2)

inst_45944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000000000ffff; valaddr_reg:x3; val_offset:137832*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137832*0 + 3*632*FLEN/8, x4, x1, x2)

inst_45945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000000001ffff; valaddr_reg:x3; val_offset:137835*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137835*0 + 3*633*FLEN/8, x4, x1, x2)

inst_45946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000000003ffff; valaddr_reg:x3; val_offset:137838*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137838*0 + 3*634*FLEN/8, x4, x1, x2)

inst_45947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000000007ffff; valaddr_reg:x3; val_offset:137841*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137841*0 + 3*635*FLEN/8, x4, x1, x2)

inst_45948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800000000fffff; valaddr_reg:x3; val_offset:137844*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137844*0 + 3*636*FLEN/8, x4, x1, x2)

inst_45949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800000001fffff; valaddr_reg:x3; val_offset:137847*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137847*0 + 3*637*FLEN/8, x4, x1, x2)

inst_45950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800000003fffff; valaddr_reg:x3; val_offset:137850*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137850*0 + 3*638*FLEN/8, x4, x1, x2)

inst_45951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800000007fffff; valaddr_reg:x3; val_offset:137853*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137853*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_45952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000000ffffff; valaddr_reg:x3; val_offset:137856*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137856*0 + 3*640*FLEN/8, x4, x1, x2)

inst_45953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000001ffffff; valaddr_reg:x3; val_offset:137859*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137859*0 + 3*641*FLEN/8, x4, x1, x2)

inst_45954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000003ffffff; valaddr_reg:x3; val_offset:137862*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137862*0 + 3*642*FLEN/8, x4, x1, x2)

inst_45955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000007ffffff; valaddr_reg:x3; val_offset:137865*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137865*0 + 3*643*FLEN/8, x4, x1, x2)

inst_45956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000000fffffff; valaddr_reg:x3; val_offset:137868*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137868*0 + 3*644*FLEN/8, x4, x1, x2)

inst_45957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000001fffffff; valaddr_reg:x3; val_offset:137871*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137871*0 + 3*645*FLEN/8, x4, x1, x2)

inst_45958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000003fffffff; valaddr_reg:x3; val_offset:137874*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137874*0 + 3*646*FLEN/8, x4, x1, x2)

inst_45959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000007fffffff; valaddr_reg:x3; val_offset:137877*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137877*0 + 3*647*FLEN/8, x4, x1, x2)

inst_45960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800000ffffffff; valaddr_reg:x3; val_offset:137880*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137880*0 + 3*648*FLEN/8, x4, x1, x2)

inst_45961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800001ffffffff; valaddr_reg:x3; val_offset:137883*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137883*0 + 3*649*FLEN/8, x4, x1, x2)

inst_45962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800003ffffffff; valaddr_reg:x3; val_offset:137886*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137886*0 + 3*650*FLEN/8, x4, x1, x2)

inst_45963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800007ffffffff; valaddr_reg:x3; val_offset:137889*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137889*0 + 3*651*FLEN/8, x4, x1, x2)

inst_45964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280000fffffffff; valaddr_reg:x3; val_offset:137892*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137892*0 + 3*652*FLEN/8, x4, x1, x2)

inst_45965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280001fffffffff; valaddr_reg:x3; val_offset:137895*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137895*0 + 3*653*FLEN/8, x4, x1, x2)

inst_45966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280003fffffffff; valaddr_reg:x3; val_offset:137898*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137898*0 + 3*654*FLEN/8, x4, x1, x2)

inst_45967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280007fffffffff; valaddr_reg:x3; val_offset:137901*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137901*0 + 3*655*FLEN/8, x4, x1, x2)

inst_45968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828000ffffffffff; valaddr_reg:x3; val_offset:137904*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137904*0 + 3*656*FLEN/8, x4, x1, x2)

inst_45969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828001ffffffffff; valaddr_reg:x3; val_offset:137907*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137907*0 + 3*657*FLEN/8, x4, x1, x2)

inst_45970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828003ffffffffff; valaddr_reg:x3; val_offset:137910*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137910*0 + 3*658*FLEN/8, x4, x1, x2)

inst_45971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828007ffffffffff; valaddr_reg:x3; val_offset:137913*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137913*0 + 3*659*FLEN/8, x4, x1, x2)

inst_45972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82800fffffffffff; valaddr_reg:x3; val_offset:137916*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137916*0 + 3*660*FLEN/8, x4, x1, x2)

inst_45973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82801fffffffffff; valaddr_reg:x3; val_offset:137919*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137919*0 + 3*661*FLEN/8, x4, x1, x2)

inst_45974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82803fffffffffff; valaddr_reg:x3; val_offset:137922*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137922*0 + 3*662*FLEN/8, x4, x1, x2)

inst_45975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x82807fffffffffff; valaddr_reg:x3; val_offset:137925*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137925*0 + 3*663*FLEN/8, x4, x1, x2)

inst_45976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8280ffffffffffff; valaddr_reg:x3; val_offset:137928*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137928*0 + 3*664*FLEN/8, x4, x1, x2)

inst_45977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8281ffffffffffff; valaddr_reg:x3; val_offset:137931*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137931*0 + 3*665*FLEN/8, x4, x1, x2)

inst_45978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8283ffffffffffff; valaddr_reg:x3; val_offset:137934*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137934*0 + 3*666*FLEN/8, x4, x1, x2)

inst_45979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8287ffffffffffff; valaddr_reg:x3; val_offset:137937*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137937*0 + 3*667*FLEN/8, x4, x1, x2)

inst_45980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x8288000000000000; valaddr_reg:x3; val_offset:137940*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137940*0 + 3*668*FLEN/8, x4, x1, x2)

inst_45981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828c000000000000; valaddr_reg:x3; val_offset:137943*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137943*0 + 3*669*FLEN/8, x4, x1, x2)

inst_45982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828e000000000000; valaddr_reg:x3; val_offset:137946*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137946*0 + 3*670*FLEN/8, x4, x1, x2)

inst_45983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828f000000000000; valaddr_reg:x3; val_offset:137949*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137949*0 + 3*671*FLEN/8, x4, x1, x2)

inst_45984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828f800000000000; valaddr_reg:x3; val_offset:137952*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137952*0 + 3*672*FLEN/8, x4, x1, x2)

inst_45985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fc00000000000; valaddr_reg:x3; val_offset:137955*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137955*0 + 3*673*FLEN/8, x4, x1, x2)

inst_45986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fe00000000000; valaddr_reg:x3; val_offset:137958*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137958*0 + 3*674*FLEN/8, x4, x1, x2)

inst_45987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ff00000000000; valaddr_reg:x3; val_offset:137961*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137961*0 + 3*675*FLEN/8, x4, x1, x2)

inst_45988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ff80000000000; valaddr_reg:x3; val_offset:137964*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137964*0 + 3*676*FLEN/8, x4, x1, x2)

inst_45989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffc0000000000; valaddr_reg:x3; val_offset:137967*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137967*0 + 3*677*FLEN/8, x4, x1, x2)

inst_45990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffe0000000000; valaddr_reg:x3; val_offset:137970*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137970*0 + 3*678*FLEN/8, x4, x1, x2)

inst_45991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fff0000000000; valaddr_reg:x3; val_offset:137973*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137973*0 + 3*679*FLEN/8, x4, x1, x2)

inst_45992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fff8000000000; valaddr_reg:x3; val_offset:137976*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137976*0 + 3*680*FLEN/8, x4, x1, x2)

inst_45993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffc000000000; valaddr_reg:x3; val_offset:137979*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137979*0 + 3*681*FLEN/8, x4, x1, x2)

inst_45994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffe000000000; valaddr_reg:x3; val_offset:137982*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137982*0 + 3*682*FLEN/8, x4, x1, x2)

inst_45995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffff000000000; valaddr_reg:x3; val_offset:137985*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137985*0 + 3*683*FLEN/8, x4, x1, x2)

inst_45996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffff800000000; valaddr_reg:x3; val_offset:137988*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137988*0 + 3*684*FLEN/8, x4, x1, x2)

inst_45997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffc00000000; valaddr_reg:x3; val_offset:137991*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137991*0 + 3*685*FLEN/8, x4, x1, x2)

inst_45998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffe00000000; valaddr_reg:x3; val_offset:137994*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137994*0 + 3*686*FLEN/8, x4, x1, x2)

inst_45999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffff00000000; valaddr_reg:x3; val_offset:137997*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 137997*0 + 3*687*FLEN/8, x4, x1, x2)

inst_46000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffff80000000; valaddr_reg:x3; val_offset:138000*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138000*0 + 3*688*FLEN/8, x4, x1, x2)

inst_46001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffc0000000; valaddr_reg:x3; val_offset:138003*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138003*0 + 3*689*FLEN/8, x4, x1, x2)

inst_46002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffe0000000; valaddr_reg:x3; val_offset:138006*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138006*0 + 3*690*FLEN/8, x4, x1, x2)

inst_46003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffff0000000; valaddr_reg:x3; val_offset:138009*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138009*0 + 3*691*FLEN/8, x4, x1, x2)

inst_46004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffff8000000; valaddr_reg:x3; val_offset:138012*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138012*0 + 3*692*FLEN/8, x4, x1, x2)

inst_46005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffc000000; valaddr_reg:x3; val_offset:138015*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138015*0 + 3*693*FLEN/8, x4, x1, x2)

inst_46006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffe000000; valaddr_reg:x3; val_offset:138018*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138018*0 + 3*694*FLEN/8, x4, x1, x2)

inst_46007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffff000000; valaddr_reg:x3; val_offset:138021*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138021*0 + 3*695*FLEN/8, x4, x1, x2)

inst_46008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffff800000; valaddr_reg:x3; val_offset:138024*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138024*0 + 3*696*FLEN/8, x4, x1, x2)

inst_46009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffffc00000; valaddr_reg:x3; val_offset:138027*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138027*0 + 3*697*FLEN/8, x4, x1, x2)

inst_46010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffffe00000; valaddr_reg:x3; val_offset:138030*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138030*0 + 3*698*FLEN/8, x4, x1, x2)

inst_46011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffff00000; valaddr_reg:x3; val_offset:138033*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138033*0 + 3*699*FLEN/8, x4, x1, x2)

inst_46012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffff80000; valaddr_reg:x3; val_offset:138036*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138036*0 + 3*700*FLEN/8, x4, x1, x2)

inst_46013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffffc0000; valaddr_reg:x3; val_offset:138039*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138039*0 + 3*701*FLEN/8, x4, x1, x2)

inst_46014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffffe0000; valaddr_reg:x3; val_offset:138042*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138042*0 + 3*702*FLEN/8, x4, x1, x2)

inst_46015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffffff0000; valaddr_reg:x3; val_offset:138045*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138045*0 + 3*703*FLEN/8, x4, x1, x2)

inst_46016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffffff8000; valaddr_reg:x3; val_offset:138048*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138048*0 + 3*704*FLEN/8, x4, x1, x2)

inst_46017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffffffc000; valaddr_reg:x3; val_offset:138051*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138051*0 + 3*705*FLEN/8, x4, x1, x2)

inst_46018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffffffe000; valaddr_reg:x3; val_offset:138054*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138054*0 + 3*706*FLEN/8, x4, x1, x2)

inst_46019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffffff000; valaddr_reg:x3; val_offset:138057*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138057*0 + 3*707*FLEN/8, x4, x1, x2)

inst_46020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffffff800; valaddr_reg:x3; val_offset:138060*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138060*0 + 3*708*FLEN/8, x4, x1, x2)

inst_46021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffffffc00; valaddr_reg:x3; val_offset:138063*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138063*0 + 3*709*FLEN/8, x4, x1, x2)

inst_46022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffffffe00; valaddr_reg:x3; val_offset:138066*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138066*0 + 3*710*FLEN/8, x4, x1, x2)

inst_46023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffffffff00; valaddr_reg:x3; val_offset:138069*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138069*0 + 3*711*FLEN/8, x4, x1, x2)

inst_46024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffffffff80; valaddr_reg:x3; val_offset:138072*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138072*0 + 3*712*FLEN/8, x4, x1, x2)

inst_46025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffffffffc0; valaddr_reg:x3; val_offset:138075*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138075*0 + 3*713*FLEN/8, x4, x1, x2)

inst_46026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffffffffe0; valaddr_reg:x3; val_offset:138078*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138078*0 + 3*714*FLEN/8, x4, x1, x2)

inst_46027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffffffff0; valaddr_reg:x3; val_offset:138081*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138081*0 + 3*715*FLEN/8, x4, x1, x2)

inst_46028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffffffff8; valaddr_reg:x3; val_offset:138084*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138084*0 + 3*716*FLEN/8, x4, x1, x2)

inst_46029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffffffffc; valaddr_reg:x3; val_offset:138087*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138087*0 + 3*717*FLEN/8, x4, x1, x2)

inst_46030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828ffffffffffffe; valaddr_reg:x3; val_offset:138090*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138090*0 + 3*718*FLEN/8, x4, x1, x2)

inst_46031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc462edc1cbe9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x028 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c462edc1cbe9f; op2val:0x8000;
op3val:0x828fffffffffffff; valaddr_reg:x3; val_offset:138093*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138093*0 + 3*719*FLEN/8, x4, x1, x2)

inst_46032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:138096*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138096*0 + 3*720*FLEN/8, x4, x1, x2)

inst_46033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:138099*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138099*0 + 3*721*FLEN/8, x4, x1, x2)

inst_46034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:138102*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138102*0 + 3*722*FLEN/8, x4, x1, x2)

inst_46035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:138105*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138105*0 + 3*723*FLEN/8, x4, x1, x2)

inst_46036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:138108*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138108*0 + 3*724*FLEN/8, x4, x1, x2)

inst_46037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:138111*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138111*0 + 3*725*FLEN/8, x4, x1, x2)

inst_46038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:138114*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138114*0 + 3*726*FLEN/8, x4, x1, x2)

inst_46039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:138117*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138117*0 + 3*727*FLEN/8, x4, x1, x2)

inst_46040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:138120*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138120*0 + 3*728*FLEN/8, x4, x1, x2)

inst_46041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:138123*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138123*0 + 3*729*FLEN/8, x4, x1, x2)

inst_46042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:138126*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138126*0 + 3*730*FLEN/8, x4, x1, x2)

inst_46043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:138129*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138129*0 + 3*731*FLEN/8, x4, x1, x2)

inst_46044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:138132*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138132*0 + 3*732*FLEN/8, x4, x1, x2)

inst_46045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:138135*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138135*0 + 3*733*FLEN/8, x4, x1, x2)

inst_46046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:138138*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138138*0 + 3*734*FLEN/8, x4, x1, x2)

inst_46047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:138141*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138141*0 + 3*735*FLEN/8, x4, x1, x2)

inst_46048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:138144*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138144*0 + 3*736*FLEN/8, x4, x1, x2)

inst_46049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:138147*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138147*0 + 3*737*FLEN/8, x4, x1, x2)

inst_46050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:138150*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138150*0 + 3*738*FLEN/8, x4, x1, x2)

inst_46051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:138153*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138153*0 + 3*739*FLEN/8, x4, x1, x2)

inst_46052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:138156*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138156*0 + 3*740*FLEN/8, x4, x1, x2)

inst_46053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:138159*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138159*0 + 3*741*FLEN/8, x4, x1, x2)

inst_46054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c0000000000000; valaddr_reg:x3; val_offset:138162*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138162*0 + 3*742*FLEN/8, x4, x1, x2)

inst_46055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c0000000000001; valaddr_reg:x3; val_offset:138165*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138165*0 + 3*743*FLEN/8, x4, x1, x2)

inst_46056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c0000000000003; valaddr_reg:x3; val_offset:138168*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138168*0 + 3*744*FLEN/8, x4, x1, x2)

inst_46057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c0000000000007; valaddr_reg:x3; val_offset:138171*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138171*0 + 3*745*FLEN/8, x4, x1, x2)

inst_46058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c000000000000f; valaddr_reg:x3; val_offset:138174*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138174*0 + 3*746*FLEN/8, x4, x1, x2)

inst_46059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c000000000001f; valaddr_reg:x3; val_offset:138177*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138177*0 + 3*747*FLEN/8, x4, x1, x2)

inst_46060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c000000000003f; valaddr_reg:x3; val_offset:138180*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138180*0 + 3*748*FLEN/8, x4, x1, x2)

inst_46061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c000000000007f; valaddr_reg:x3; val_offset:138183*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138183*0 + 3*749*FLEN/8, x4, x1, x2)

inst_46062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c00000000000ff; valaddr_reg:x3; val_offset:138186*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138186*0 + 3*750*FLEN/8, x4, x1, x2)

inst_46063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c00000000001ff; valaddr_reg:x3; val_offset:138189*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138189*0 + 3*751*FLEN/8, x4, x1, x2)

inst_46064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c00000000003ff; valaddr_reg:x3; val_offset:138192*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138192*0 + 3*752*FLEN/8, x4, x1, x2)

inst_46065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c00000000007ff; valaddr_reg:x3; val_offset:138195*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138195*0 + 3*753*FLEN/8, x4, x1, x2)

inst_46066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c0000000000fff; valaddr_reg:x3; val_offset:138198*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138198*0 + 3*754*FLEN/8, x4, x1, x2)

inst_46067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c0000000001fff; valaddr_reg:x3; val_offset:138201*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138201*0 + 3*755*FLEN/8, x4, x1, x2)

inst_46068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c0000000003fff; valaddr_reg:x3; val_offset:138204*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138204*0 + 3*756*FLEN/8, x4, x1, x2)

inst_46069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c0000000007fff; valaddr_reg:x3; val_offset:138207*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138207*0 + 3*757*FLEN/8, x4, x1, x2)

inst_46070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c000000000ffff; valaddr_reg:x3; val_offset:138210*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138210*0 + 3*758*FLEN/8, x4, x1, x2)

inst_46071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c000000001ffff; valaddr_reg:x3; val_offset:138213*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138213*0 + 3*759*FLEN/8, x4, x1, x2)

inst_46072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c000000003ffff; valaddr_reg:x3; val_offset:138216*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138216*0 + 3*760*FLEN/8, x4, x1, x2)

inst_46073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c000000007ffff; valaddr_reg:x3; val_offset:138219*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138219*0 + 3*761*FLEN/8, x4, x1, x2)

inst_46074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c00000000fffff; valaddr_reg:x3; val_offset:138222*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138222*0 + 3*762*FLEN/8, x4, x1, x2)

inst_46075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c00000001fffff; valaddr_reg:x3; val_offset:138225*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138225*0 + 3*763*FLEN/8, x4, x1, x2)

inst_46076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c00000003fffff; valaddr_reg:x3; val_offset:138228*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138228*0 + 3*764*FLEN/8, x4, x1, x2)

inst_46077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c00000007fffff; valaddr_reg:x3; val_offset:138231*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138231*0 + 3*765*FLEN/8, x4, x1, x2)

inst_46078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c0000000ffffff; valaddr_reg:x3; val_offset:138234*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138234*0 + 3*766*FLEN/8, x4, x1, x2)

inst_46079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc551686ec279b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c551686ec279b; op2val:0x0;
op3val:0x1c0000001ffffff; valaddr_reg:x3; val_offset:138237*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138237*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664489382641663,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664558102118399,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664695541071871,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664970418978815,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584665520174792703,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584666619686420479,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584668818709676031,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584673216756187135,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584682012849209343,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584699605035253759,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584734789407342591,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584805158151520255,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584945895639875583,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4585227370616586239,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4585790320570007551,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4586916220476850175,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4586916220476850176,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4588042120383692800,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4588605070337114112,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4588886545313824768,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589027282802180096,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589097651546357760,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589132835918446592,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589150428104491008,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589159224197513216,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589163622244024320,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589165821267279872,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589166920778907648,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589167470534721536,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589167745412628480,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589167882851581952,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589167951571058688,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589167985930797056,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168003110666240,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168011700600832,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168015995568128,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168018143051776,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168019216793600,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168019753664512,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020022099968,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020156317696,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020223426560,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020256980992,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020273758208,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020282146816,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020286341120,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020288438272,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020289486848,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290011136,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290273280,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290404352,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290469888,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290502656,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290519040,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290527232,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290531328,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290533376,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290534400,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290534912,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290535168,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290535296,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290535360,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290535392,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290535408,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290535416,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290535420,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290535422,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4589168020290535423,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496593920,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496593921,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496593923,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496593927,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496593935,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496593951,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496593983,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496594047,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496594175,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496594431,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496594943,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496595967,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496598015,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496602111,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496610303,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496626687,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496659455,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496724991,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666496856063,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666497118207,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666497642495,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666498691071,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666500788223,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666504982527,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666513371135,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666530148351,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666563702783,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666630811647,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721666765029375,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721667033464831,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721667570335743,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721668644077567,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721670791561215,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721675086528511,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721683676463103,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721700856332287,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721735216070655,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721803935547391,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030721941374500863,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030722216252407807,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030722766008221695,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030723865519849471,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030726064543105023,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030730462589616127,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030739258682638335,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030756850868682751,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030792035240771583,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4030862403984949247,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4031003141473304575,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4031284616450015231,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4031847566403436543,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4032973466310279167,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4032973466310279168,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4034099366217121792,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4034662316170543104,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4034943791147253760,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035084528635609088,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035154897379786752,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035190081751875584,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035207673937920000,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035216470030942208,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035220868077453312,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035223067100708864,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035224166612336640,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035224716368150528,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035224991246057472,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225128685010944,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225197404487680,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225231764226048,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225248944095232,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225257534029824,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225261828997120,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225263976480768,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225265050222592,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225265587093504,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225265855528960,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225265989746688,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266056855552,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266090409984,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266107187200,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266115575808,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266119770112,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266121867264,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266122915840,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123440128,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123702272,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123833344,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123898880,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123931648,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123948032,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123956224,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123960320,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123962368,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123963392,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123963904,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123964160,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123964288,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123964352,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123964384,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123964400,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123964408,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123964412,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123964414,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4035225266123964415,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889355745023838849,64,FLEN)
NAN_BOXED(2324517673519871944,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186944,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186945,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186947,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186951,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186959,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186975,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187007,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187071,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187199,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187455,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187967,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783188991,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783191039,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783195135,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783203327,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783219711,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783252479,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783318015,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783449087,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783711231,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394784235519,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394785284095,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394787381247,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394791575551,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394799964159,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394816741375,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394850295807,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394917404671,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050395051622399,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050395320057855,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050395856928767,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050396930670591,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050399078154239,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050403373121535,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050411963056127,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050429142925311,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050463502663679,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050532222140415,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050669661093887,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050944539000831,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63051494294814719,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63052593806442495,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63054792829698047,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63059190876209151,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63067986969231359,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63085579155275775,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63120763527364607,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63191132271542271,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63331869759897599,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63613344736608255,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(64176294690029567,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65302194596872191,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65302194596872192,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(66428094503714816,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(66991044457136128,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67272519433846784,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67413256922202112,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67483625666379776,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67518810038468608,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67536402224513024,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67545198317535232,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67549596364046336,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67551795387301888,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67552894898929664,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553444654743552,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553719532650496,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553856971603968,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553925691080704,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553960050819072,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553977230688256,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553985820622848,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553990115590144,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553992263073792,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553993336815616,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553993873686528,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994142121984,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994276339712,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994343448576,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994377003008,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994393780224,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994402168832,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994406363136,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994408460288,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994409508864,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410033152,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410295296,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410426368,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410491904,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410524672,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410541056,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410549248,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410553344,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410555392,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410556416,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410556928,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557184,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557312,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557376,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557408,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557424,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557432,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557436,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557438,64,FLEN)
NAN_BOXED(6889413452172177633,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557439,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926720,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926721,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926723,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926727,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926735,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926751,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926783,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926847,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926975,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656927231,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656927743,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656928767,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656930815,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656934911,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656943103,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656959487,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656992255,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228657057791,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228657188863,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228657451007,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228657975295,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228659023871,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228661121023,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228665315327,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228673703935,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228690481151,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228724035583,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228791144447,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228925362175,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451229193797631,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451229730668543,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451230804410367,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451232951894015,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451237246861311,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451245836795903,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451263016665087,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451297376403455,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451366095880191,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451503534833663,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451778412740607,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322452328168554495,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322453427680182271,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322455626703437823,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322460024749948927,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322468820842971135,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322486413029015551,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322521597401104383,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322591966145282047,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322732703633637375,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9323014178610348031,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9323577128563769343,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9324703028470611967,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9324703028470611968,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9325828928377454592,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326391878330875904,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326673353307586560,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326814090795941888,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326884459540119552,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326919643912208384,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326937236098252800,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326946032191275008,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326950430237786112,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326952629261041664,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326953728772669440,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954278528483328,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954553406390272,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954690845343744,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954759564820480,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954793924558848,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954811104428032,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954819694362624,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954823989329920,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954826136813568,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954827210555392,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954827747426304,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828015861760,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828150079488,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828217188352,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828250742784,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828267520000,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828275908608,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828280102912,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828282200064,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828283248640,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828283772928,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284035072,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284166144,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284231680,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284264448,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284280832,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284289024,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284293120,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284295168,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284296192,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284296704,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284296960,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297088,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297152,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297184,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297200,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297208,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297212,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297214,64,FLEN)
NAN_BOXED(6889438091147668729,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297215,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039424,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039425,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039427,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039431,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039439,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039455,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039487,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039551,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039679,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039935,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920040447,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920041471,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920043519,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920047615,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920055807,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920072191,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920104959,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920170495,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920301567,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920563711,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392921087999,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392922136575,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392924233727,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392928428031,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392936816639,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392953593855,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392987148287,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393054257151,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393188474879,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393456910335,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393993781247,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568395067523071,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568397215006719,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568401509974015,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568410099908607,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568427279777791,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568461639516159,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568530358992895,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568667797946367,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568942675853311,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85569492431667199,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85570591943294975,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85572790966550527,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85577189013061631,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85585985106083839,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85603577292128255,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85638761664217087,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85709130408394751,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85849867896750079,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(86131342873460735,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(86694292826882047,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(87820192733724671,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(87820192733724672,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(88946092640567296,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89509042593988608,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89790517570699264,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89931255059054592,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90001623803232256,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90036808175321088,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90054400361365504,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90063196454387712,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90067594500898816,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90069793524154368,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90070893035782144,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071442791596032,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071717669502976,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071855108456448,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071923827933184,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071958187671552,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071975367540736,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071983957475328,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071988252442624,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071990399926272,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071991473668096,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992010539008,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992278974464,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992413192192,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992480301056,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992513855488,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992530632704,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992539021312,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992543215616,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992545312768,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992546361344,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992546885632,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547147776,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547278848,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547344384,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547377152,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547393536,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547401728,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547405824,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547407872,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547408896,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409408,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409664,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409792,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409856,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409888,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409904,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409912,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409916,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409918,64,FLEN)
NAN_BOXED(6889449937552131493,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409919,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595648,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595649,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595651,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595655,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595663,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595679,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595711,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595775,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595903,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949596159,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949596671,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949597695,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949599743,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949603839,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949612031,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949628415,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949661183,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949726719,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949857791,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021950119935,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021950644223,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021951692799,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021953789951,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021957984255,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021966372863,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021983150079,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022016704511,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022083813375,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022218031103,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516022486466559,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516023023337471,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516024097079295,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516026244562943,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516030539530239,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516039129464831,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516056309334015,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516090669072383,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516159388549119,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516296827502591,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516571705409535,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403517121461223423,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403518220972851199,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403520419996106751,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403524818042617855,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403533614135640063,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403551206321684479,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403586390693773311,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403656759437950975,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403797496926306303,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9404078971903016959,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9404641921856438271,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9405767821763280895,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9405767821763280896,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9406893721670123520,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407456671623544832,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407738146600255488,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407878884088610816,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407949252832788480,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9407984437204877312,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408002029390921728,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408010825483943936,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408015223530455040,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408017422553710592,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408018522065338368,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019071821152256,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019346699059200,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019484138012672,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019552857489408,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019587217227776,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019604397096960,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019612987031552,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019617281998848,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019619429482496,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019620503224320,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621040095232,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621308530688,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621442748416,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621509857280,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621543411712,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621560188928,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621568577536,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621572771840,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621574868992,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621575917568,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576441856,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576704000,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576835072,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576900608,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576933376,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576949760,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576957952,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576962048,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576964096,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965120,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965632,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576965888,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966016,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966080,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966112,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966128,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966136,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966140,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966142,64,FLEN)
NAN_BOXED(6889458697045327519,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966143,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373888,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373889,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373891,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373895,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373903,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373919,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373951,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374015,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374143,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374399,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374911,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566375935,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566377983,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566382079,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566390271,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566406655,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566439423,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566504959,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566636031,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566898175,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789567422463,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789568471039,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789570568191,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789574762495,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789583151103,64,FLEN)
NAN_BOXED(6889475085211281307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789599928319,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
