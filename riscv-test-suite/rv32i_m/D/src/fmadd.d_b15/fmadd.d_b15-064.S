
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_48384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffff80000; valaddr_reg:x3; val_offset:145152*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145152*0 + 3*0*FLEN/8, x4, x1, x2)

inst_48385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffffc0000; valaddr_reg:x3; val_offset:145155*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145155*0 + 3*1*FLEN/8, x4, x1, x2)

inst_48386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffffe0000; valaddr_reg:x3; val_offset:145158*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145158*0 + 3*2*FLEN/8, x4, x1, x2)

inst_48387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffffff0000; valaddr_reg:x3; val_offset:145161*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145161*0 + 3*3*FLEN/8, x4, x1, x2)

inst_48388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffffff8000; valaddr_reg:x3; val_offset:145164*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145164*0 + 3*4*FLEN/8, x4, x1, x2)

inst_48389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffffffc000; valaddr_reg:x3; val_offset:145167*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145167*0 + 3*5*FLEN/8, x4, x1, x2)

inst_48390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffffffe000; valaddr_reg:x3; val_offset:145170*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145170*0 + 3*6*FLEN/8, x4, x1, x2)

inst_48391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffffff000; valaddr_reg:x3; val_offset:145173*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145173*0 + 3*7*FLEN/8, x4, x1, x2)

inst_48392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffffff800; valaddr_reg:x3; val_offset:145176*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145176*0 + 3*8*FLEN/8, x4, x1, x2)

inst_48393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffffffc00; valaddr_reg:x3; val_offset:145179*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145179*0 + 3*9*FLEN/8, x4, x1, x2)

inst_48394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffffffe00; valaddr_reg:x3; val_offset:145182*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145182*0 + 3*10*FLEN/8, x4, x1, x2)

inst_48395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffffffff00; valaddr_reg:x3; val_offset:145185*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145185*0 + 3*11*FLEN/8, x4, x1, x2)

inst_48396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffffffff80; valaddr_reg:x3; val_offset:145188*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145188*0 + 3*12*FLEN/8, x4, x1, x2)

inst_48397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffffffffc0; valaddr_reg:x3; val_offset:145191*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145191*0 + 3*13*FLEN/8, x4, x1, x2)

inst_48398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffffffffe0; valaddr_reg:x3; val_offset:145194*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145194*0 + 3*14*FLEN/8, x4, x1, x2)

inst_48399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffffffff0; valaddr_reg:x3; val_offset:145197*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145197*0 + 3*15*FLEN/8, x4, x1, x2)

inst_48400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffffffff8; valaddr_reg:x3; val_offset:145200*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145200*0 + 3*16*FLEN/8, x4, x1, x2)

inst_48401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffffffffc; valaddr_reg:x3; val_offset:145203*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145203*0 + 3*17*FLEN/8, x4, x1, x2)

inst_48402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381ffffffffffffe; valaddr_reg:x3; val_offset:145206*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145206*0 + 3*18*FLEN/8, x4, x1, x2)

inst_48403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x381 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x381fffffffffffff; valaddr_reg:x3; val_offset:145209*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145209*0 + 3*19*FLEN/8, x4, x1, x2)

inst_48404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:145212*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145212*0 + 3*20*FLEN/8, x4, x1, x2)

inst_48405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:145215*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145215*0 + 3*21*FLEN/8, x4, x1, x2)

inst_48406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:145218*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145218*0 + 3*22*FLEN/8, x4, x1, x2)

inst_48407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:145221*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145221*0 + 3*23*FLEN/8, x4, x1, x2)

inst_48408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:145224*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145224*0 + 3*24*FLEN/8, x4, x1, x2)

inst_48409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:145227*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145227*0 + 3*25*FLEN/8, x4, x1, x2)

inst_48410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:145230*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145230*0 + 3*26*FLEN/8, x4, x1, x2)

inst_48411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:145233*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145233*0 + 3*27*FLEN/8, x4, x1, x2)

inst_48412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:145236*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145236*0 + 3*28*FLEN/8, x4, x1, x2)

inst_48413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:145239*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145239*0 + 3*29*FLEN/8, x4, x1, x2)

inst_48414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:145242*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145242*0 + 3*30*FLEN/8, x4, x1, x2)

inst_48415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:145245*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145245*0 + 3*31*FLEN/8, x4, x1, x2)

inst_48416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:145248*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145248*0 + 3*32*FLEN/8, x4, x1, x2)

inst_48417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:145251*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145251*0 + 3*33*FLEN/8, x4, x1, x2)

inst_48418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:145254*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145254*0 + 3*34*FLEN/8, x4, x1, x2)

inst_48419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:145257*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145257*0 + 3*35*FLEN/8, x4, x1, x2)

inst_48420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:145260*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145260*0 + 3*36*FLEN/8, x4, x1, x2)

inst_48421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:145263*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145263*0 + 3*37*FLEN/8, x4, x1, x2)

inst_48422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:145266*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145266*0 + 3*38*FLEN/8, x4, x1, x2)

inst_48423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:145269*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145269*0 + 3*39*FLEN/8, x4, x1, x2)

inst_48424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:145272*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145272*0 + 3*40*FLEN/8, x4, x1, x2)

inst_48425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde57a6050a5c7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x12034fe450934 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de57a6050a5c7; op2val:0x20412034fe450934;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:145275*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145275*0 + 3*41*FLEN/8, x4, x1, x2)

inst_48426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000000000000; valaddr_reg:x3; val_offset:145278*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145278*0 + 3*42*FLEN/8, x4, x1, x2)

inst_48427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000000000001; valaddr_reg:x3; val_offset:145281*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145281*0 + 3*43*FLEN/8, x4, x1, x2)

inst_48428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000000000003; valaddr_reg:x3; val_offset:145284*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145284*0 + 3*44*FLEN/8, x4, x1, x2)

inst_48429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000000000007; valaddr_reg:x3; val_offset:145287*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145287*0 + 3*45*FLEN/8, x4, x1, x2)

inst_48430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000000000000f; valaddr_reg:x3; val_offset:145290*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145290*0 + 3*46*FLEN/8, x4, x1, x2)

inst_48431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000000000001f; valaddr_reg:x3; val_offset:145293*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145293*0 + 3*47*FLEN/8, x4, x1, x2)

inst_48432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000000000003f; valaddr_reg:x3; val_offset:145296*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145296*0 + 3*48*FLEN/8, x4, x1, x2)

inst_48433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000000000007f; valaddr_reg:x3; val_offset:145299*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145299*0 + 3*49*FLEN/8, x4, x1, x2)

inst_48434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700000000000ff; valaddr_reg:x3; val_offset:145302*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145302*0 + 3*50*FLEN/8, x4, x1, x2)

inst_48435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700000000001ff; valaddr_reg:x3; val_offset:145305*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145305*0 + 3*51*FLEN/8, x4, x1, x2)

inst_48436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700000000003ff; valaddr_reg:x3; val_offset:145308*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145308*0 + 3*52*FLEN/8, x4, x1, x2)

inst_48437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700000000007ff; valaddr_reg:x3; val_offset:145311*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145311*0 + 3*53*FLEN/8, x4, x1, x2)

inst_48438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000000000fff; valaddr_reg:x3; val_offset:145314*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145314*0 + 3*54*FLEN/8, x4, x1, x2)

inst_48439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000000001fff; valaddr_reg:x3; val_offset:145317*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145317*0 + 3*55*FLEN/8, x4, x1, x2)

inst_48440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000000003fff; valaddr_reg:x3; val_offset:145320*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145320*0 + 3*56*FLEN/8, x4, x1, x2)

inst_48441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000000007fff; valaddr_reg:x3; val_offset:145323*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145323*0 + 3*57*FLEN/8, x4, x1, x2)

inst_48442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000000000ffff; valaddr_reg:x3; val_offset:145326*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145326*0 + 3*58*FLEN/8, x4, x1, x2)

inst_48443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000000001ffff; valaddr_reg:x3; val_offset:145329*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145329*0 + 3*59*FLEN/8, x4, x1, x2)

inst_48444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000000003ffff; valaddr_reg:x3; val_offset:145332*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145332*0 + 3*60*FLEN/8, x4, x1, x2)

inst_48445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000000007ffff; valaddr_reg:x3; val_offset:145335*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145335*0 + 3*61*FLEN/8, x4, x1, x2)

inst_48446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700000000fffff; valaddr_reg:x3; val_offset:145338*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145338*0 + 3*62*FLEN/8, x4, x1, x2)

inst_48447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700000001fffff; valaddr_reg:x3; val_offset:145341*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145341*0 + 3*63*FLEN/8, x4, x1, x2)

inst_48448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700000003fffff; valaddr_reg:x3; val_offset:145344*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145344*0 + 3*64*FLEN/8, x4, x1, x2)

inst_48449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700000007fffff; valaddr_reg:x3; val_offset:145347*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145347*0 + 3*65*FLEN/8, x4, x1, x2)

inst_48450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000000ffffff; valaddr_reg:x3; val_offset:145350*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145350*0 + 3*66*FLEN/8, x4, x1, x2)

inst_48451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000001ffffff; valaddr_reg:x3; val_offset:145353*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145353*0 + 3*67*FLEN/8, x4, x1, x2)

inst_48452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000003ffffff; valaddr_reg:x3; val_offset:145356*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145356*0 + 3*68*FLEN/8, x4, x1, x2)

inst_48453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000007ffffff; valaddr_reg:x3; val_offset:145359*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145359*0 + 3*69*FLEN/8, x4, x1, x2)

inst_48454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000000fffffff; valaddr_reg:x3; val_offset:145362*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145362*0 + 3*70*FLEN/8, x4, x1, x2)

inst_48455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000001fffffff; valaddr_reg:x3; val_offset:145365*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145365*0 + 3*71*FLEN/8, x4, x1, x2)

inst_48456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000003fffffff; valaddr_reg:x3; val_offset:145368*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145368*0 + 3*72*FLEN/8, x4, x1, x2)

inst_48457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000007fffffff; valaddr_reg:x3; val_offset:145371*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145371*0 + 3*73*FLEN/8, x4, x1, x2)

inst_48458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700000ffffffff; valaddr_reg:x3; val_offset:145374*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145374*0 + 3*74*FLEN/8, x4, x1, x2)

inst_48459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700001ffffffff; valaddr_reg:x3; val_offset:145377*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145377*0 + 3*75*FLEN/8, x4, x1, x2)

inst_48460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700003ffffffff; valaddr_reg:x3; val_offset:145380*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145380*0 + 3*76*FLEN/8, x4, x1, x2)

inst_48461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700007ffffffff; valaddr_reg:x3; val_offset:145383*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145383*0 + 3*77*FLEN/8, x4, x1, x2)

inst_48462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870000fffffffff; valaddr_reg:x3; val_offset:145386*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145386*0 + 3*78*FLEN/8, x4, x1, x2)

inst_48463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870001fffffffff; valaddr_reg:x3; val_offset:145389*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145389*0 + 3*79*FLEN/8, x4, x1, x2)

inst_48464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870003fffffffff; valaddr_reg:x3; val_offset:145392*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145392*0 + 3*80*FLEN/8, x4, x1, x2)

inst_48465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870007fffffffff; valaddr_reg:x3; val_offset:145395*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145395*0 + 3*81*FLEN/8, x4, x1, x2)

inst_48466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387000ffffffffff; valaddr_reg:x3; val_offset:145398*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145398*0 + 3*82*FLEN/8, x4, x1, x2)

inst_48467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387001ffffffffff; valaddr_reg:x3; val_offset:145401*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145401*0 + 3*83*FLEN/8, x4, x1, x2)

inst_48468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387003ffffffffff; valaddr_reg:x3; val_offset:145404*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145404*0 + 3*84*FLEN/8, x4, x1, x2)

inst_48469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387007ffffffffff; valaddr_reg:x3; val_offset:145407*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145407*0 + 3*85*FLEN/8, x4, x1, x2)

inst_48470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38700fffffffffff; valaddr_reg:x3; val_offset:145410*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145410*0 + 3*86*FLEN/8, x4, x1, x2)

inst_48471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38701fffffffffff; valaddr_reg:x3; val_offset:145413*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145413*0 + 3*87*FLEN/8, x4, x1, x2)

inst_48472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38703fffffffffff; valaddr_reg:x3; val_offset:145416*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145416*0 + 3*88*FLEN/8, x4, x1, x2)

inst_48473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x38707fffffffffff; valaddr_reg:x3; val_offset:145419*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145419*0 + 3*89*FLEN/8, x4, x1, x2)

inst_48474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3870ffffffffffff; valaddr_reg:x3; val_offset:145422*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145422*0 + 3*90*FLEN/8, x4, x1, x2)

inst_48475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3871ffffffffffff; valaddr_reg:x3; val_offset:145425*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145425*0 + 3*91*FLEN/8, x4, x1, x2)

inst_48476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3873ffffffffffff; valaddr_reg:x3; val_offset:145428*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145428*0 + 3*92*FLEN/8, x4, x1, x2)

inst_48477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3877ffffffffffff; valaddr_reg:x3; val_offset:145431*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145431*0 + 3*93*FLEN/8, x4, x1, x2)

inst_48478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3878000000000000; valaddr_reg:x3; val_offset:145434*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145434*0 + 3*94*FLEN/8, x4, x1, x2)

inst_48479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387c000000000000; valaddr_reg:x3; val_offset:145437*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145437*0 + 3*95*FLEN/8, x4, x1, x2)

inst_48480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387e000000000000; valaddr_reg:x3; val_offset:145440*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145440*0 + 3*96*FLEN/8, x4, x1, x2)

inst_48481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387f000000000000; valaddr_reg:x3; val_offset:145443*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145443*0 + 3*97*FLEN/8, x4, x1, x2)

inst_48482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387f800000000000; valaddr_reg:x3; val_offset:145446*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145446*0 + 3*98*FLEN/8, x4, x1, x2)

inst_48483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fc00000000000; valaddr_reg:x3; val_offset:145449*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145449*0 + 3*99*FLEN/8, x4, x1, x2)

inst_48484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fe00000000000; valaddr_reg:x3; val_offset:145452*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145452*0 + 3*100*FLEN/8, x4, x1, x2)

inst_48485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ff00000000000; valaddr_reg:x3; val_offset:145455*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145455*0 + 3*101*FLEN/8, x4, x1, x2)

inst_48486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ff80000000000; valaddr_reg:x3; val_offset:145458*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145458*0 + 3*102*FLEN/8, x4, x1, x2)

inst_48487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffc0000000000; valaddr_reg:x3; val_offset:145461*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145461*0 + 3*103*FLEN/8, x4, x1, x2)

inst_48488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffe0000000000; valaddr_reg:x3; val_offset:145464*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145464*0 + 3*104*FLEN/8, x4, x1, x2)

inst_48489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fff0000000000; valaddr_reg:x3; val_offset:145467*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145467*0 + 3*105*FLEN/8, x4, x1, x2)

inst_48490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fff8000000000; valaddr_reg:x3; val_offset:145470*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145470*0 + 3*106*FLEN/8, x4, x1, x2)

inst_48491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffc000000000; valaddr_reg:x3; val_offset:145473*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145473*0 + 3*107*FLEN/8, x4, x1, x2)

inst_48492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffe000000000; valaddr_reg:x3; val_offset:145476*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145476*0 + 3*108*FLEN/8, x4, x1, x2)

inst_48493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffff000000000; valaddr_reg:x3; val_offset:145479*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145479*0 + 3*109*FLEN/8, x4, x1, x2)

inst_48494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffff800000000; valaddr_reg:x3; val_offset:145482*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145482*0 + 3*110*FLEN/8, x4, x1, x2)

inst_48495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffc00000000; valaddr_reg:x3; val_offset:145485*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145485*0 + 3*111*FLEN/8, x4, x1, x2)

inst_48496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffe00000000; valaddr_reg:x3; val_offset:145488*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145488*0 + 3*112*FLEN/8, x4, x1, x2)

inst_48497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffff00000000; valaddr_reg:x3; val_offset:145491*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145491*0 + 3*113*FLEN/8, x4, x1, x2)

inst_48498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffff80000000; valaddr_reg:x3; val_offset:145494*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145494*0 + 3*114*FLEN/8, x4, x1, x2)

inst_48499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffc0000000; valaddr_reg:x3; val_offset:145497*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145497*0 + 3*115*FLEN/8, x4, x1, x2)

inst_48500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffe0000000; valaddr_reg:x3; val_offset:145500*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145500*0 + 3*116*FLEN/8, x4, x1, x2)

inst_48501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffff0000000; valaddr_reg:x3; val_offset:145503*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145503*0 + 3*117*FLEN/8, x4, x1, x2)

inst_48502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffff8000000; valaddr_reg:x3; val_offset:145506*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145506*0 + 3*118*FLEN/8, x4, x1, x2)

inst_48503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffc000000; valaddr_reg:x3; val_offset:145509*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145509*0 + 3*119*FLEN/8, x4, x1, x2)

inst_48504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffe000000; valaddr_reg:x3; val_offset:145512*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145512*0 + 3*120*FLEN/8, x4, x1, x2)

inst_48505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffff000000; valaddr_reg:x3; val_offset:145515*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145515*0 + 3*121*FLEN/8, x4, x1, x2)

inst_48506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffff800000; valaddr_reg:x3; val_offset:145518*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145518*0 + 3*122*FLEN/8, x4, x1, x2)

inst_48507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffffc00000; valaddr_reg:x3; val_offset:145521*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145521*0 + 3*123*FLEN/8, x4, x1, x2)

inst_48508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffffe00000; valaddr_reg:x3; val_offset:145524*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145524*0 + 3*124*FLEN/8, x4, x1, x2)

inst_48509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffff00000; valaddr_reg:x3; val_offset:145527*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145527*0 + 3*125*FLEN/8, x4, x1, x2)

inst_48510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffff80000; valaddr_reg:x3; val_offset:145530*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145530*0 + 3*126*FLEN/8, x4, x1, x2)

inst_48511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffffc0000; valaddr_reg:x3; val_offset:145533*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145533*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_48512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffffe0000; valaddr_reg:x3; val_offset:145536*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145536*0 + 3*128*FLEN/8, x4, x1, x2)

inst_48513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffffff0000; valaddr_reg:x3; val_offset:145539*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145539*0 + 3*129*FLEN/8, x4, x1, x2)

inst_48514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffffff8000; valaddr_reg:x3; val_offset:145542*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145542*0 + 3*130*FLEN/8, x4, x1, x2)

inst_48515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffffffc000; valaddr_reg:x3; val_offset:145545*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145545*0 + 3*131*FLEN/8, x4, x1, x2)

inst_48516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffffffe000; valaddr_reg:x3; val_offset:145548*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145548*0 + 3*132*FLEN/8, x4, x1, x2)

inst_48517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffffff000; valaddr_reg:x3; val_offset:145551*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145551*0 + 3*133*FLEN/8, x4, x1, x2)

inst_48518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffffff800; valaddr_reg:x3; val_offset:145554*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145554*0 + 3*134*FLEN/8, x4, x1, x2)

inst_48519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffffffc00; valaddr_reg:x3; val_offset:145557*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145557*0 + 3*135*FLEN/8, x4, x1, x2)

inst_48520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffffffe00; valaddr_reg:x3; val_offset:145560*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145560*0 + 3*136*FLEN/8, x4, x1, x2)

inst_48521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffffffff00; valaddr_reg:x3; val_offset:145563*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145563*0 + 3*137*FLEN/8, x4, x1, x2)

inst_48522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffffffff80; valaddr_reg:x3; val_offset:145566*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145566*0 + 3*138*FLEN/8, x4, x1, x2)

inst_48523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffffffffc0; valaddr_reg:x3; val_offset:145569*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145569*0 + 3*139*FLEN/8, x4, x1, x2)

inst_48524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffffffffe0; valaddr_reg:x3; val_offset:145572*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145572*0 + 3*140*FLEN/8, x4, x1, x2)

inst_48525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffffffff0; valaddr_reg:x3; val_offset:145575*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145575*0 + 3*141*FLEN/8, x4, x1, x2)

inst_48526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffffffff8; valaddr_reg:x3; val_offset:145578*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145578*0 + 3*142*FLEN/8, x4, x1, x2)

inst_48527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffffffffc; valaddr_reg:x3; val_offset:145581*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145581*0 + 3*143*FLEN/8, x4, x1, x2)

inst_48528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387ffffffffffffe; valaddr_reg:x3; val_offset:145584*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145584*0 + 3*144*FLEN/8, x4, x1, x2)

inst_48529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x387 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x387fffffffffffff; valaddr_reg:x3; val_offset:145587*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145587*0 + 3*145*FLEN/8, x4, x1, x2)

inst_48530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:145590*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145590*0 + 3*146*FLEN/8, x4, x1, x2)

inst_48531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:145593*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145593*0 + 3*147*FLEN/8, x4, x1, x2)

inst_48532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:145596*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145596*0 + 3*148*FLEN/8, x4, x1, x2)

inst_48533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:145599*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145599*0 + 3*149*FLEN/8, x4, x1, x2)

inst_48534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:145602*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145602*0 + 3*150*FLEN/8, x4, x1, x2)

inst_48535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:145605*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145605*0 + 3*151*FLEN/8, x4, x1, x2)

inst_48536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:145608*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145608*0 + 3*152*FLEN/8, x4, x1, x2)

inst_48537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:145611*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145611*0 + 3*153*FLEN/8, x4, x1, x2)

inst_48538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:145614*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145614*0 + 3*154*FLEN/8, x4, x1, x2)

inst_48539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:145617*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145617*0 + 3*155*FLEN/8, x4, x1, x2)

inst_48540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:145620*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145620*0 + 3*156*FLEN/8, x4, x1, x2)

inst_48541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:145623*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145623*0 + 3*157*FLEN/8, x4, x1, x2)

inst_48542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:145626*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145626*0 + 3*158*FLEN/8, x4, x1, x2)

inst_48543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:145629*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145629*0 + 3*159*FLEN/8, x4, x1, x2)

inst_48544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:145632*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145632*0 + 3*160*FLEN/8, x4, x1, x2)

inst_48545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:145635*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145635*0 + 3*161*FLEN/8, x4, x1, x2)

inst_48546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:145638*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145638*0 + 3*162*FLEN/8, x4, x1, x2)

inst_48547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:145641*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145641*0 + 3*163*FLEN/8, x4, x1, x2)

inst_48548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:145644*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145644*0 + 3*164*FLEN/8, x4, x1, x2)

inst_48549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:145647*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145647*0 + 3*165*FLEN/8, x4, x1, x2)

inst_48550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:145650*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145650*0 + 3*166*FLEN/8, x4, x1, x2)

inst_48551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe180586b4e48d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1037193e72de2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e180586b4e48d; op2val:0x2041037193e72de2;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:145653*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145653*0 + 3*167*FLEN/8, x4, x1, x2)

inst_48552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:145656*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145656*0 + 3*168*FLEN/8, x4, x1, x2)

inst_48553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:145659*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145659*0 + 3*169*FLEN/8, x4, x1, x2)

inst_48554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:145662*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145662*0 + 3*170*FLEN/8, x4, x1, x2)

inst_48555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:145665*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145665*0 + 3*171*FLEN/8, x4, x1, x2)

inst_48556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:145668*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145668*0 + 3*172*FLEN/8, x4, x1, x2)

inst_48557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:145671*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145671*0 + 3*173*FLEN/8, x4, x1, x2)

inst_48558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:145674*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145674*0 + 3*174*FLEN/8, x4, x1, x2)

inst_48559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:145677*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145677*0 + 3*175*FLEN/8, x4, x1, x2)

inst_48560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:145680*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145680*0 + 3*176*FLEN/8, x4, x1, x2)

inst_48561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:145683*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145683*0 + 3*177*FLEN/8, x4, x1, x2)

inst_48562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:145686*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145686*0 + 3*178*FLEN/8, x4, x1, x2)

inst_48563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:145689*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145689*0 + 3*179*FLEN/8, x4, x1, x2)

inst_48564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:145692*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145692*0 + 3*180*FLEN/8, x4, x1, x2)

inst_48565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:145695*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145695*0 + 3*181*FLEN/8, x4, x1, x2)

inst_48566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:145698*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145698*0 + 3*182*FLEN/8, x4, x1, x2)

inst_48567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:145701*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145701*0 + 3*183*FLEN/8, x4, x1, x2)

inst_48568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:145704*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145704*0 + 3*184*FLEN/8, x4, x1, x2)

inst_48569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:145707*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145707*0 + 3*185*FLEN/8, x4, x1, x2)

inst_48570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:145710*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145710*0 + 3*186*FLEN/8, x4, x1, x2)

inst_48571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:145713*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145713*0 + 3*187*FLEN/8, x4, x1, x2)

inst_48572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:145716*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145716*0 + 3*188*FLEN/8, x4, x1, x2)

inst_48573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:145719*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145719*0 + 3*189*FLEN/8, x4, x1, x2)

inst_48574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000000000000; valaddr_reg:x3; val_offset:145722*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145722*0 + 3*190*FLEN/8, x4, x1, x2)

inst_48575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000000000001; valaddr_reg:x3; val_offset:145725*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145725*0 + 3*191*FLEN/8, x4, x1, x2)

inst_48576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000000000003; valaddr_reg:x3; val_offset:145728*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145728*0 + 3*192*FLEN/8, x4, x1, x2)

inst_48577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000000000007; valaddr_reg:x3; val_offset:145731*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145731*0 + 3*193*FLEN/8, x4, x1, x2)

inst_48578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000000000000f; valaddr_reg:x3; val_offset:145734*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145734*0 + 3*194*FLEN/8, x4, x1, x2)

inst_48579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000000000001f; valaddr_reg:x3; val_offset:145737*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145737*0 + 3*195*FLEN/8, x4, x1, x2)

inst_48580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000000000003f; valaddr_reg:x3; val_offset:145740*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145740*0 + 3*196*FLEN/8, x4, x1, x2)

inst_48581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000000000007f; valaddr_reg:x3; val_offset:145743*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145743*0 + 3*197*FLEN/8, x4, x1, x2)

inst_48582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00000000000ff; valaddr_reg:x3; val_offset:145746*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145746*0 + 3*198*FLEN/8, x4, x1, x2)

inst_48583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00000000001ff; valaddr_reg:x3; val_offset:145749*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145749*0 + 3*199*FLEN/8, x4, x1, x2)

inst_48584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00000000003ff; valaddr_reg:x3; val_offset:145752*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145752*0 + 3*200*FLEN/8, x4, x1, x2)

inst_48585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00000000007ff; valaddr_reg:x3; val_offset:145755*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145755*0 + 3*201*FLEN/8, x4, x1, x2)

inst_48586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000000000fff; valaddr_reg:x3; val_offset:145758*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145758*0 + 3*202*FLEN/8, x4, x1, x2)

inst_48587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000000001fff; valaddr_reg:x3; val_offset:145761*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145761*0 + 3*203*FLEN/8, x4, x1, x2)

inst_48588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000000003fff; valaddr_reg:x3; val_offset:145764*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145764*0 + 3*204*FLEN/8, x4, x1, x2)

inst_48589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000000007fff; valaddr_reg:x3; val_offset:145767*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145767*0 + 3*205*FLEN/8, x4, x1, x2)

inst_48590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000000000ffff; valaddr_reg:x3; val_offset:145770*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145770*0 + 3*206*FLEN/8, x4, x1, x2)

inst_48591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000000001ffff; valaddr_reg:x3; val_offset:145773*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145773*0 + 3*207*FLEN/8, x4, x1, x2)

inst_48592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000000003ffff; valaddr_reg:x3; val_offset:145776*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145776*0 + 3*208*FLEN/8, x4, x1, x2)

inst_48593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000000007ffff; valaddr_reg:x3; val_offset:145779*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145779*0 + 3*209*FLEN/8, x4, x1, x2)

inst_48594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00000000fffff; valaddr_reg:x3; val_offset:145782*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145782*0 + 3*210*FLEN/8, x4, x1, x2)

inst_48595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00000001fffff; valaddr_reg:x3; val_offset:145785*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145785*0 + 3*211*FLEN/8, x4, x1, x2)

inst_48596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00000003fffff; valaddr_reg:x3; val_offset:145788*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145788*0 + 3*212*FLEN/8, x4, x1, x2)

inst_48597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00000007fffff; valaddr_reg:x3; val_offset:145791*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145791*0 + 3*213*FLEN/8, x4, x1, x2)

inst_48598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000000ffffff; valaddr_reg:x3; val_offset:145794*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145794*0 + 3*214*FLEN/8, x4, x1, x2)

inst_48599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000001ffffff; valaddr_reg:x3; val_offset:145797*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145797*0 + 3*215*FLEN/8, x4, x1, x2)

inst_48600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000003ffffff; valaddr_reg:x3; val_offset:145800*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145800*0 + 3*216*FLEN/8, x4, x1, x2)

inst_48601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000007ffffff; valaddr_reg:x3; val_offset:145803*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145803*0 + 3*217*FLEN/8, x4, x1, x2)

inst_48602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000000fffffff; valaddr_reg:x3; val_offset:145806*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145806*0 + 3*218*FLEN/8, x4, x1, x2)

inst_48603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000001fffffff; valaddr_reg:x3; val_offset:145809*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145809*0 + 3*219*FLEN/8, x4, x1, x2)

inst_48604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000003fffffff; valaddr_reg:x3; val_offset:145812*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145812*0 + 3*220*FLEN/8, x4, x1, x2)

inst_48605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000007fffffff; valaddr_reg:x3; val_offset:145815*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145815*0 + 3*221*FLEN/8, x4, x1, x2)

inst_48606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00000ffffffff; valaddr_reg:x3; val_offset:145818*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145818*0 + 3*222*FLEN/8, x4, x1, x2)

inst_48607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00001ffffffff; valaddr_reg:x3; val_offset:145821*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145821*0 + 3*223*FLEN/8, x4, x1, x2)

inst_48608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00003ffffffff; valaddr_reg:x3; val_offset:145824*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145824*0 + 3*224*FLEN/8, x4, x1, x2)

inst_48609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00007ffffffff; valaddr_reg:x3; val_offset:145827*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145827*0 + 3*225*FLEN/8, x4, x1, x2)

inst_48610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0000fffffffff; valaddr_reg:x3; val_offset:145830*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145830*0 + 3*226*FLEN/8, x4, x1, x2)

inst_48611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0001fffffffff; valaddr_reg:x3; val_offset:145833*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145833*0 + 3*227*FLEN/8, x4, x1, x2)

inst_48612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0003fffffffff; valaddr_reg:x3; val_offset:145836*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145836*0 + 3*228*FLEN/8, x4, x1, x2)

inst_48613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0007fffffffff; valaddr_reg:x3; val_offset:145839*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145839*0 + 3*229*FLEN/8, x4, x1, x2)

inst_48614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c000ffffffffff; valaddr_reg:x3; val_offset:145842*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145842*0 + 3*230*FLEN/8, x4, x1, x2)

inst_48615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c001ffffffffff; valaddr_reg:x3; val_offset:145845*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145845*0 + 3*231*FLEN/8, x4, x1, x2)

inst_48616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c003ffffffffff; valaddr_reg:x3; val_offset:145848*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145848*0 + 3*232*FLEN/8, x4, x1, x2)

inst_48617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c007ffffffffff; valaddr_reg:x3; val_offset:145851*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145851*0 + 3*233*FLEN/8, x4, x1, x2)

inst_48618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c00fffffffffff; valaddr_reg:x3; val_offset:145854*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145854*0 + 3*234*FLEN/8, x4, x1, x2)

inst_48619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c01fffffffffff; valaddr_reg:x3; val_offset:145857*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145857*0 + 3*235*FLEN/8, x4, x1, x2)

inst_48620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c03fffffffffff; valaddr_reg:x3; val_offset:145860*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145860*0 + 3*236*FLEN/8, x4, x1, x2)

inst_48621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c07fffffffffff; valaddr_reg:x3; val_offset:145863*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145863*0 + 3*237*FLEN/8, x4, x1, x2)

inst_48622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c0ffffffffffff; valaddr_reg:x3; val_offset:145866*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145866*0 + 3*238*FLEN/8, x4, x1, x2)

inst_48623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c1ffffffffffff; valaddr_reg:x3; val_offset:145869*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145869*0 + 3*239*FLEN/8, x4, x1, x2)

inst_48624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c3ffffffffffff; valaddr_reg:x3; val_offset:145872*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145872*0 + 3*240*FLEN/8, x4, x1, x2)

inst_48625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c7ffffffffffff; valaddr_reg:x3; val_offset:145875*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145875*0 + 3*241*FLEN/8, x4, x1, x2)

inst_48626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82c8000000000000; valaddr_reg:x3; val_offset:145878*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145878*0 + 3*242*FLEN/8, x4, x1, x2)

inst_48627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cc000000000000; valaddr_reg:x3; val_offset:145881*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145881*0 + 3*243*FLEN/8, x4, x1, x2)

inst_48628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82ce000000000000; valaddr_reg:x3; val_offset:145884*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145884*0 + 3*244*FLEN/8, x4, x1, x2)

inst_48629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cf000000000000; valaddr_reg:x3; val_offset:145887*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145887*0 + 3*245*FLEN/8, x4, x1, x2)

inst_48630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cf800000000000; valaddr_reg:x3; val_offset:145890*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145890*0 + 3*246*FLEN/8, x4, x1, x2)

inst_48631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfc00000000000; valaddr_reg:x3; val_offset:145893*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145893*0 + 3*247*FLEN/8, x4, x1, x2)

inst_48632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfe00000000000; valaddr_reg:x3; val_offset:145896*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145896*0 + 3*248*FLEN/8, x4, x1, x2)

inst_48633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cff00000000000; valaddr_reg:x3; val_offset:145899*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145899*0 + 3*249*FLEN/8, x4, x1, x2)

inst_48634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cff80000000000; valaddr_reg:x3; val_offset:145902*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145902*0 + 3*250*FLEN/8, x4, x1, x2)

inst_48635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffc0000000000; valaddr_reg:x3; val_offset:145905*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145905*0 + 3*251*FLEN/8, x4, x1, x2)

inst_48636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffe0000000000; valaddr_reg:x3; val_offset:145908*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145908*0 + 3*252*FLEN/8, x4, x1, x2)

inst_48637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfff0000000000; valaddr_reg:x3; val_offset:145911*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145911*0 + 3*253*FLEN/8, x4, x1, x2)

inst_48638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfff8000000000; valaddr_reg:x3; val_offset:145914*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145914*0 + 3*254*FLEN/8, x4, x1, x2)

inst_48639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffc000000000; valaddr_reg:x3; val_offset:145917*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145917*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_48640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffe000000000; valaddr_reg:x3; val_offset:145920*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145920*0 + 3*256*FLEN/8, x4, x1, x2)

inst_48641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffff000000000; valaddr_reg:x3; val_offset:145923*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145923*0 + 3*257*FLEN/8, x4, x1, x2)

inst_48642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffff800000000; valaddr_reg:x3; val_offset:145926*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145926*0 + 3*258*FLEN/8, x4, x1, x2)

inst_48643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffc00000000; valaddr_reg:x3; val_offset:145929*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145929*0 + 3*259*FLEN/8, x4, x1, x2)

inst_48644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffe00000000; valaddr_reg:x3; val_offset:145932*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145932*0 + 3*260*FLEN/8, x4, x1, x2)

inst_48645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffff00000000; valaddr_reg:x3; val_offset:145935*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145935*0 + 3*261*FLEN/8, x4, x1, x2)

inst_48646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffff80000000; valaddr_reg:x3; val_offset:145938*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145938*0 + 3*262*FLEN/8, x4, x1, x2)

inst_48647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffc0000000; valaddr_reg:x3; val_offset:145941*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145941*0 + 3*263*FLEN/8, x4, x1, x2)

inst_48648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffe0000000; valaddr_reg:x3; val_offset:145944*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145944*0 + 3*264*FLEN/8, x4, x1, x2)

inst_48649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffff0000000; valaddr_reg:x3; val_offset:145947*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145947*0 + 3*265*FLEN/8, x4, x1, x2)

inst_48650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffff8000000; valaddr_reg:x3; val_offset:145950*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145950*0 + 3*266*FLEN/8, x4, x1, x2)

inst_48651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffc000000; valaddr_reg:x3; val_offset:145953*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145953*0 + 3*267*FLEN/8, x4, x1, x2)

inst_48652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffe000000; valaddr_reg:x3; val_offset:145956*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145956*0 + 3*268*FLEN/8, x4, x1, x2)

inst_48653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffff000000; valaddr_reg:x3; val_offset:145959*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145959*0 + 3*269*FLEN/8, x4, x1, x2)

inst_48654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffff800000; valaddr_reg:x3; val_offset:145962*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145962*0 + 3*270*FLEN/8, x4, x1, x2)

inst_48655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffffc00000; valaddr_reg:x3; val_offset:145965*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145965*0 + 3*271*FLEN/8, x4, x1, x2)

inst_48656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffffe00000; valaddr_reg:x3; val_offset:145968*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145968*0 + 3*272*FLEN/8, x4, x1, x2)

inst_48657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffff00000; valaddr_reg:x3; val_offset:145971*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145971*0 + 3*273*FLEN/8, x4, x1, x2)

inst_48658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffff80000; valaddr_reg:x3; val_offset:145974*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145974*0 + 3*274*FLEN/8, x4, x1, x2)

inst_48659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffffc0000; valaddr_reg:x3; val_offset:145977*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145977*0 + 3*275*FLEN/8, x4, x1, x2)

inst_48660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffffe0000; valaddr_reg:x3; val_offset:145980*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145980*0 + 3*276*FLEN/8, x4, x1, x2)

inst_48661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffffff0000; valaddr_reg:x3; val_offset:145983*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145983*0 + 3*277*FLEN/8, x4, x1, x2)

inst_48662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffffff8000; valaddr_reg:x3; val_offset:145986*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145986*0 + 3*278*FLEN/8, x4, x1, x2)

inst_48663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffffffc000; valaddr_reg:x3; val_offset:145989*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145989*0 + 3*279*FLEN/8, x4, x1, x2)

inst_48664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffffffe000; valaddr_reg:x3; val_offset:145992*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145992*0 + 3*280*FLEN/8, x4, x1, x2)

inst_48665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffffff000; valaddr_reg:x3; val_offset:145995*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145995*0 + 3*281*FLEN/8, x4, x1, x2)

inst_48666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffffff800; valaddr_reg:x3; val_offset:145998*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 145998*0 + 3*282*FLEN/8, x4, x1, x2)

inst_48667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffffffc00; valaddr_reg:x3; val_offset:146001*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146001*0 + 3*283*FLEN/8, x4, x1, x2)

inst_48668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffffffe00; valaddr_reg:x3; val_offset:146004*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146004*0 + 3*284*FLEN/8, x4, x1, x2)

inst_48669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffffffff00; valaddr_reg:x3; val_offset:146007*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146007*0 + 3*285*FLEN/8, x4, x1, x2)

inst_48670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffffffff80; valaddr_reg:x3; val_offset:146010*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146010*0 + 3*286*FLEN/8, x4, x1, x2)

inst_48671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffffffffc0; valaddr_reg:x3; val_offset:146013*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146013*0 + 3*287*FLEN/8, x4, x1, x2)

inst_48672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffffffffe0; valaddr_reg:x3; val_offset:146016*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146016*0 + 3*288*FLEN/8, x4, x1, x2)

inst_48673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffffffff0; valaddr_reg:x3; val_offset:146019*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146019*0 + 3*289*FLEN/8, x4, x1, x2)

inst_48674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffffffff8; valaddr_reg:x3; val_offset:146022*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146022*0 + 3*290*FLEN/8, x4, x1, x2)

inst_48675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffffffffc; valaddr_reg:x3; val_offset:146025*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146025*0 + 3*291*FLEN/8, x4, x1, x2)

inst_48676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cffffffffffffe; valaddr_reg:x3; val_offset:146028*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146028*0 + 3*292*FLEN/8, x4, x1, x2)

inst_48677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe2d876b20b2cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e2d876b20b2cd; op2val:0x8000;
op3val:0x82cfffffffffffff; valaddr_reg:x3; val_offset:146031*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146031*0 + 3*293*FLEN/8, x4, x1, x2)

inst_48678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:146034*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146034*0 + 3*294*FLEN/8, x4, x1, x2)

inst_48679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:146037*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146037*0 + 3*295*FLEN/8, x4, x1, x2)

inst_48680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:146040*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146040*0 + 3*296*FLEN/8, x4, x1, x2)

inst_48681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:146043*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146043*0 + 3*297*FLEN/8, x4, x1, x2)

inst_48682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:146046*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146046*0 + 3*298*FLEN/8, x4, x1, x2)

inst_48683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:146049*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146049*0 + 3*299*FLEN/8, x4, x1, x2)

inst_48684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:146052*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146052*0 + 3*300*FLEN/8, x4, x1, x2)

inst_48685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:146055*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146055*0 + 3*301*FLEN/8, x4, x1, x2)

inst_48686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:146058*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146058*0 + 3*302*FLEN/8, x4, x1, x2)

inst_48687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:146061*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146061*0 + 3*303*FLEN/8, x4, x1, x2)

inst_48688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:146064*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146064*0 + 3*304*FLEN/8, x4, x1, x2)

inst_48689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:146067*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146067*0 + 3*305*FLEN/8, x4, x1, x2)

inst_48690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:146070*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146070*0 + 3*306*FLEN/8, x4, x1, x2)

inst_48691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:146073*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146073*0 + 3*307*FLEN/8, x4, x1, x2)

inst_48692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:146076*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146076*0 + 3*308*FLEN/8, x4, x1, x2)

inst_48693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:146079*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146079*0 + 3*309*FLEN/8, x4, x1, x2)

inst_48694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:146082*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146082*0 + 3*310*FLEN/8, x4, x1, x2)

inst_48695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:146085*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146085*0 + 3*311*FLEN/8, x4, x1, x2)

inst_48696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:146088*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146088*0 + 3*312*FLEN/8, x4, x1, x2)

inst_48697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:146091*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146091*0 + 3*313*FLEN/8, x4, x1, x2)

inst_48698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:146094*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146094*0 + 3*314*FLEN/8, x4, x1, x2)

inst_48699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:146097*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146097*0 + 3*315*FLEN/8, x4, x1, x2)

inst_48700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000000000000; valaddr_reg:x3; val_offset:146100*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146100*0 + 3*316*FLEN/8, x4, x1, x2)

inst_48701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000000000001; valaddr_reg:x3; val_offset:146103*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146103*0 + 3*317*FLEN/8, x4, x1, x2)

inst_48702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000000000003; valaddr_reg:x3; val_offset:146106*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146106*0 + 3*318*FLEN/8, x4, x1, x2)

inst_48703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000000000007; valaddr_reg:x3; val_offset:146109*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146109*0 + 3*319*FLEN/8, x4, x1, x2)

inst_48704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000000000000f; valaddr_reg:x3; val_offset:146112*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146112*0 + 3*320*FLEN/8, x4, x1, x2)

inst_48705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000000000001f; valaddr_reg:x3; val_offset:146115*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146115*0 + 3*321*FLEN/8, x4, x1, x2)

inst_48706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000000000003f; valaddr_reg:x3; val_offset:146118*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146118*0 + 3*322*FLEN/8, x4, x1, x2)

inst_48707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000000000007f; valaddr_reg:x3; val_offset:146121*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146121*0 + 3*323*FLEN/8, x4, x1, x2)

inst_48708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000000000000ff; valaddr_reg:x3; val_offset:146124*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146124*0 + 3*324*FLEN/8, x4, x1, x2)

inst_48709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000000000001ff; valaddr_reg:x3; val_offset:146127*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146127*0 + 3*325*FLEN/8, x4, x1, x2)

inst_48710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000000000003ff; valaddr_reg:x3; val_offset:146130*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146130*0 + 3*326*FLEN/8, x4, x1, x2)

inst_48711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000000000007ff; valaddr_reg:x3; val_offset:146133*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146133*0 + 3*327*FLEN/8, x4, x1, x2)

inst_48712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000000000fff; valaddr_reg:x3; val_offset:146136*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146136*0 + 3*328*FLEN/8, x4, x1, x2)

inst_48713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000000001fff; valaddr_reg:x3; val_offset:146139*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146139*0 + 3*329*FLEN/8, x4, x1, x2)

inst_48714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000000003fff; valaddr_reg:x3; val_offset:146142*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146142*0 + 3*330*FLEN/8, x4, x1, x2)

inst_48715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000000007fff; valaddr_reg:x3; val_offset:146145*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146145*0 + 3*331*FLEN/8, x4, x1, x2)

inst_48716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000000000ffff; valaddr_reg:x3; val_offset:146148*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146148*0 + 3*332*FLEN/8, x4, x1, x2)

inst_48717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000000001ffff; valaddr_reg:x3; val_offset:146151*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146151*0 + 3*333*FLEN/8, x4, x1, x2)

inst_48718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000000003ffff; valaddr_reg:x3; val_offset:146154*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146154*0 + 3*334*FLEN/8, x4, x1, x2)

inst_48719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000000007ffff; valaddr_reg:x3; val_offset:146157*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146157*0 + 3*335*FLEN/8, x4, x1, x2)

inst_48720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000000000fffff; valaddr_reg:x3; val_offset:146160*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146160*0 + 3*336*FLEN/8, x4, x1, x2)

inst_48721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000000001fffff; valaddr_reg:x3; val_offset:146163*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146163*0 + 3*337*FLEN/8, x4, x1, x2)

inst_48722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000000003fffff; valaddr_reg:x3; val_offset:146166*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146166*0 + 3*338*FLEN/8, x4, x1, x2)

inst_48723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000000007fffff; valaddr_reg:x3; val_offset:146169*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146169*0 + 3*339*FLEN/8, x4, x1, x2)

inst_48724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000000ffffff; valaddr_reg:x3; val_offset:146172*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146172*0 + 3*340*FLEN/8, x4, x1, x2)

inst_48725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000001ffffff; valaddr_reg:x3; val_offset:146175*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146175*0 + 3*341*FLEN/8, x4, x1, x2)

inst_48726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000003ffffff; valaddr_reg:x3; val_offset:146178*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146178*0 + 3*342*FLEN/8, x4, x1, x2)

inst_48727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000007ffffff; valaddr_reg:x3; val_offset:146181*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146181*0 + 3*343*FLEN/8, x4, x1, x2)

inst_48728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000000fffffff; valaddr_reg:x3; val_offset:146184*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146184*0 + 3*344*FLEN/8, x4, x1, x2)

inst_48729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000001fffffff; valaddr_reg:x3; val_offset:146187*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146187*0 + 3*345*FLEN/8, x4, x1, x2)

inst_48730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000003fffffff; valaddr_reg:x3; val_offset:146190*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146190*0 + 3*346*FLEN/8, x4, x1, x2)

inst_48731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000007fffffff; valaddr_reg:x3; val_offset:146193*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146193*0 + 3*347*FLEN/8, x4, x1, x2)

inst_48732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000000ffffffff; valaddr_reg:x3; val_offset:146196*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146196*0 + 3*348*FLEN/8, x4, x1, x2)

inst_48733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000001ffffffff; valaddr_reg:x3; val_offset:146199*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146199*0 + 3*349*FLEN/8, x4, x1, x2)

inst_48734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000003ffffffff; valaddr_reg:x3; val_offset:146202*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146202*0 + 3*350*FLEN/8, x4, x1, x2)

inst_48735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000007ffffffff; valaddr_reg:x3; val_offset:146205*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146205*0 + 3*351*FLEN/8, x4, x1, x2)

inst_48736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200000fffffffff; valaddr_reg:x3; val_offset:146208*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146208*0 + 3*352*FLEN/8, x4, x1, x2)

inst_48737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200001fffffffff; valaddr_reg:x3; val_offset:146211*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146211*0 + 3*353*FLEN/8, x4, x1, x2)

inst_48738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200003fffffffff; valaddr_reg:x3; val_offset:146214*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146214*0 + 3*354*FLEN/8, x4, x1, x2)

inst_48739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200007fffffffff; valaddr_reg:x3; val_offset:146217*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146217*0 + 3*355*FLEN/8, x4, x1, x2)

inst_48740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820000ffffffffff; valaddr_reg:x3; val_offset:146220*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146220*0 + 3*356*FLEN/8, x4, x1, x2)

inst_48741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820001ffffffffff; valaddr_reg:x3; val_offset:146223*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146223*0 + 3*357*FLEN/8, x4, x1, x2)

inst_48742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820003ffffffffff; valaddr_reg:x3; val_offset:146226*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146226*0 + 3*358*FLEN/8, x4, x1, x2)

inst_48743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820007ffffffffff; valaddr_reg:x3; val_offset:146229*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146229*0 + 3*359*FLEN/8, x4, x1, x2)

inst_48744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82000fffffffffff; valaddr_reg:x3; val_offset:146232*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146232*0 + 3*360*FLEN/8, x4, x1, x2)

inst_48745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82001fffffffffff; valaddr_reg:x3; val_offset:146235*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146235*0 + 3*361*FLEN/8, x4, x1, x2)

inst_48746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82003fffffffffff; valaddr_reg:x3; val_offset:146238*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146238*0 + 3*362*FLEN/8, x4, x1, x2)

inst_48747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x82007fffffffffff; valaddr_reg:x3; val_offset:146241*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146241*0 + 3*363*FLEN/8, x4, x1, x2)

inst_48748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8200ffffffffffff; valaddr_reg:x3; val_offset:146244*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146244*0 + 3*364*FLEN/8, x4, x1, x2)

inst_48749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8201ffffffffffff; valaddr_reg:x3; val_offset:146247*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146247*0 + 3*365*FLEN/8, x4, x1, x2)

inst_48750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8203ffffffffffff; valaddr_reg:x3; val_offset:146250*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146250*0 + 3*366*FLEN/8, x4, x1, x2)

inst_48751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8207ffffffffffff; valaddr_reg:x3; val_offset:146253*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146253*0 + 3*367*FLEN/8, x4, x1, x2)

inst_48752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x8208000000000000; valaddr_reg:x3; val_offset:146256*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146256*0 + 3*368*FLEN/8, x4, x1, x2)

inst_48753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820c000000000000; valaddr_reg:x3; val_offset:146259*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146259*0 + 3*369*FLEN/8, x4, x1, x2)

inst_48754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820e000000000000; valaddr_reg:x3; val_offset:146262*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146262*0 + 3*370*FLEN/8, x4, x1, x2)

inst_48755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820f000000000000; valaddr_reg:x3; val_offset:146265*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146265*0 + 3*371*FLEN/8, x4, x1, x2)

inst_48756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820f800000000000; valaddr_reg:x3; val_offset:146268*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146268*0 + 3*372*FLEN/8, x4, x1, x2)

inst_48757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fc00000000000; valaddr_reg:x3; val_offset:146271*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146271*0 + 3*373*FLEN/8, x4, x1, x2)

inst_48758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fe00000000000; valaddr_reg:x3; val_offset:146274*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146274*0 + 3*374*FLEN/8, x4, x1, x2)

inst_48759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ff00000000000; valaddr_reg:x3; val_offset:146277*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146277*0 + 3*375*FLEN/8, x4, x1, x2)

inst_48760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ff80000000000; valaddr_reg:x3; val_offset:146280*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146280*0 + 3*376*FLEN/8, x4, x1, x2)

inst_48761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffc0000000000; valaddr_reg:x3; val_offset:146283*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146283*0 + 3*377*FLEN/8, x4, x1, x2)

inst_48762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffe0000000000; valaddr_reg:x3; val_offset:146286*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146286*0 + 3*378*FLEN/8, x4, x1, x2)

inst_48763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fff0000000000; valaddr_reg:x3; val_offset:146289*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146289*0 + 3*379*FLEN/8, x4, x1, x2)

inst_48764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fff8000000000; valaddr_reg:x3; val_offset:146292*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146292*0 + 3*380*FLEN/8, x4, x1, x2)

inst_48765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffc000000000; valaddr_reg:x3; val_offset:146295*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146295*0 + 3*381*FLEN/8, x4, x1, x2)

inst_48766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffe000000000; valaddr_reg:x3; val_offset:146298*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146298*0 + 3*382*FLEN/8, x4, x1, x2)

inst_48767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffff000000000; valaddr_reg:x3; val_offset:146301*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146301*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_48768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffff800000000; valaddr_reg:x3; val_offset:146304*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146304*0 + 3*384*FLEN/8, x4, x1, x2)

inst_48769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffc00000000; valaddr_reg:x3; val_offset:146307*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146307*0 + 3*385*FLEN/8, x4, x1, x2)

inst_48770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffe00000000; valaddr_reg:x3; val_offset:146310*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146310*0 + 3*386*FLEN/8, x4, x1, x2)

inst_48771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffff00000000; valaddr_reg:x3; val_offset:146313*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146313*0 + 3*387*FLEN/8, x4, x1, x2)

inst_48772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffff80000000; valaddr_reg:x3; val_offset:146316*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146316*0 + 3*388*FLEN/8, x4, x1, x2)

inst_48773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffc0000000; valaddr_reg:x3; val_offset:146319*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146319*0 + 3*389*FLEN/8, x4, x1, x2)

inst_48774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffe0000000; valaddr_reg:x3; val_offset:146322*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146322*0 + 3*390*FLEN/8, x4, x1, x2)

inst_48775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffff0000000; valaddr_reg:x3; val_offset:146325*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146325*0 + 3*391*FLEN/8, x4, x1, x2)

inst_48776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffff8000000; valaddr_reg:x3; val_offset:146328*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146328*0 + 3*392*FLEN/8, x4, x1, x2)

inst_48777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffc000000; valaddr_reg:x3; val_offset:146331*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146331*0 + 3*393*FLEN/8, x4, x1, x2)

inst_48778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffe000000; valaddr_reg:x3; val_offset:146334*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146334*0 + 3*394*FLEN/8, x4, x1, x2)

inst_48779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffff000000; valaddr_reg:x3; val_offset:146337*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146337*0 + 3*395*FLEN/8, x4, x1, x2)

inst_48780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffff800000; valaddr_reg:x3; val_offset:146340*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146340*0 + 3*396*FLEN/8, x4, x1, x2)

inst_48781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffffc00000; valaddr_reg:x3; val_offset:146343*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146343*0 + 3*397*FLEN/8, x4, x1, x2)

inst_48782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffffe00000; valaddr_reg:x3; val_offset:146346*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146346*0 + 3*398*FLEN/8, x4, x1, x2)

inst_48783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffff00000; valaddr_reg:x3; val_offset:146349*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146349*0 + 3*399*FLEN/8, x4, x1, x2)

inst_48784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffff80000; valaddr_reg:x3; val_offset:146352*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146352*0 + 3*400*FLEN/8, x4, x1, x2)

inst_48785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffffc0000; valaddr_reg:x3; val_offset:146355*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146355*0 + 3*401*FLEN/8, x4, x1, x2)

inst_48786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffffe0000; valaddr_reg:x3; val_offset:146358*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146358*0 + 3*402*FLEN/8, x4, x1, x2)

inst_48787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffffff0000; valaddr_reg:x3; val_offset:146361*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146361*0 + 3*403*FLEN/8, x4, x1, x2)

inst_48788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffffff8000; valaddr_reg:x3; val_offset:146364*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146364*0 + 3*404*FLEN/8, x4, x1, x2)

inst_48789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffffffc000; valaddr_reg:x3; val_offset:146367*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146367*0 + 3*405*FLEN/8, x4, x1, x2)

inst_48790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffffffe000; valaddr_reg:x3; val_offset:146370*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146370*0 + 3*406*FLEN/8, x4, x1, x2)

inst_48791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffffff000; valaddr_reg:x3; val_offset:146373*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146373*0 + 3*407*FLEN/8, x4, x1, x2)

inst_48792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffffff800; valaddr_reg:x3; val_offset:146376*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146376*0 + 3*408*FLEN/8, x4, x1, x2)

inst_48793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffffffc00; valaddr_reg:x3; val_offset:146379*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146379*0 + 3*409*FLEN/8, x4, x1, x2)

inst_48794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffffffe00; valaddr_reg:x3; val_offset:146382*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146382*0 + 3*410*FLEN/8, x4, x1, x2)

inst_48795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffffffff00; valaddr_reg:x3; val_offset:146385*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146385*0 + 3*411*FLEN/8, x4, x1, x2)

inst_48796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffffffff80; valaddr_reg:x3; val_offset:146388*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146388*0 + 3*412*FLEN/8, x4, x1, x2)

inst_48797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffffffffc0; valaddr_reg:x3; val_offset:146391*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146391*0 + 3*413*FLEN/8, x4, x1, x2)

inst_48798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffffffffe0; valaddr_reg:x3; val_offset:146394*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146394*0 + 3*414*FLEN/8, x4, x1, x2)

inst_48799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffffffff0; valaddr_reg:x3; val_offset:146397*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146397*0 + 3*415*FLEN/8, x4, x1, x2)

inst_48800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffffffff8; valaddr_reg:x3; val_offset:146400*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146400*0 + 3*416*FLEN/8, x4, x1, x2)

inst_48801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffffffffc; valaddr_reg:x3; val_offset:146403*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146403*0 + 3*417*FLEN/8, x4, x1, x2)

inst_48802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820ffffffffffffe; valaddr_reg:x3; val_offset:146406*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146406*0 + 3*418*FLEN/8, x4, x1, x2)

inst_48803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe40271df052d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e40271df052d1; op2val:0x8000;
op3val:0x820fffffffffffff; valaddr_reg:x3; val_offset:146409*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146409*0 + 3*419*FLEN/8, x4, x1, x2)

inst_48804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:146412*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146412*0 + 3*420*FLEN/8, x4, x1, x2)

inst_48805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:146415*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146415*0 + 3*421*FLEN/8, x4, x1, x2)

inst_48806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:146418*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146418*0 + 3*422*FLEN/8, x4, x1, x2)

inst_48807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:146421*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146421*0 + 3*423*FLEN/8, x4, x1, x2)

inst_48808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:146424*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146424*0 + 3*424*FLEN/8, x4, x1, x2)

inst_48809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:146427*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146427*0 + 3*425*FLEN/8, x4, x1, x2)

inst_48810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:146430*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146430*0 + 3*426*FLEN/8, x4, x1, x2)

inst_48811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:146433*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146433*0 + 3*427*FLEN/8, x4, x1, x2)

inst_48812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:146436*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146436*0 + 3*428*FLEN/8, x4, x1, x2)

inst_48813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:146439*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146439*0 + 3*429*FLEN/8, x4, x1, x2)

inst_48814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:146442*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146442*0 + 3*430*FLEN/8, x4, x1, x2)

inst_48815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:146445*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146445*0 + 3*431*FLEN/8, x4, x1, x2)

inst_48816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:146448*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146448*0 + 3*432*FLEN/8, x4, x1, x2)

inst_48817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:146451*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146451*0 + 3*433*FLEN/8, x4, x1, x2)

inst_48818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:146454*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146454*0 + 3*434*FLEN/8, x4, x1, x2)

inst_48819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:146457*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146457*0 + 3*435*FLEN/8, x4, x1, x2)

inst_48820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:146460*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146460*0 + 3*436*FLEN/8, x4, x1, x2)

inst_48821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:146463*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146463*0 + 3*437*FLEN/8, x4, x1, x2)

inst_48822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:146466*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146466*0 + 3*438*FLEN/8, x4, x1, x2)

inst_48823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:146469*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146469*0 + 3*439*FLEN/8, x4, x1, x2)

inst_48824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:146472*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146472*0 + 3*440*FLEN/8, x4, x1, x2)

inst_48825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:146475*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146475*0 + 3*441*FLEN/8, x4, x1, x2)

inst_48826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000000000000; valaddr_reg:x3; val_offset:146478*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146478*0 + 3*442*FLEN/8, x4, x1, x2)

inst_48827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000000000001; valaddr_reg:x3; val_offset:146481*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146481*0 + 3*443*FLEN/8, x4, x1, x2)

inst_48828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000000000003; valaddr_reg:x3; val_offset:146484*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146484*0 + 3*444*FLEN/8, x4, x1, x2)

inst_48829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000000000007; valaddr_reg:x3; val_offset:146487*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146487*0 + 3*445*FLEN/8, x4, x1, x2)

inst_48830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000000000000f; valaddr_reg:x3; val_offset:146490*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146490*0 + 3*446*FLEN/8, x4, x1, x2)

inst_48831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000000000001f; valaddr_reg:x3; val_offset:146493*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146493*0 + 3*447*FLEN/8, x4, x1, x2)

inst_48832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000000000003f; valaddr_reg:x3; val_offset:146496*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146496*0 + 3*448*FLEN/8, x4, x1, x2)

inst_48833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000000000007f; valaddr_reg:x3; val_offset:146499*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146499*0 + 3*449*FLEN/8, x4, x1, x2)

inst_48834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100000000000ff; valaddr_reg:x3; val_offset:146502*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146502*0 + 3*450*FLEN/8, x4, x1, x2)

inst_48835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100000000001ff; valaddr_reg:x3; val_offset:146505*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146505*0 + 3*451*FLEN/8, x4, x1, x2)

inst_48836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100000000003ff; valaddr_reg:x3; val_offset:146508*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146508*0 + 3*452*FLEN/8, x4, x1, x2)

inst_48837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100000000007ff; valaddr_reg:x3; val_offset:146511*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146511*0 + 3*453*FLEN/8, x4, x1, x2)

inst_48838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000000000fff; valaddr_reg:x3; val_offset:146514*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146514*0 + 3*454*FLEN/8, x4, x1, x2)

inst_48839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000000001fff; valaddr_reg:x3; val_offset:146517*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146517*0 + 3*455*FLEN/8, x4, x1, x2)

inst_48840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000000003fff; valaddr_reg:x3; val_offset:146520*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146520*0 + 3*456*FLEN/8, x4, x1, x2)

inst_48841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000000007fff; valaddr_reg:x3; val_offset:146523*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146523*0 + 3*457*FLEN/8, x4, x1, x2)

inst_48842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000000000ffff; valaddr_reg:x3; val_offset:146526*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146526*0 + 3*458*FLEN/8, x4, x1, x2)

inst_48843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000000001ffff; valaddr_reg:x3; val_offset:146529*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146529*0 + 3*459*FLEN/8, x4, x1, x2)

inst_48844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000000003ffff; valaddr_reg:x3; val_offset:146532*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146532*0 + 3*460*FLEN/8, x4, x1, x2)

inst_48845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000000007ffff; valaddr_reg:x3; val_offset:146535*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146535*0 + 3*461*FLEN/8, x4, x1, x2)

inst_48846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100000000fffff; valaddr_reg:x3; val_offset:146538*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146538*0 + 3*462*FLEN/8, x4, x1, x2)

inst_48847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100000001fffff; valaddr_reg:x3; val_offset:146541*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146541*0 + 3*463*FLEN/8, x4, x1, x2)

inst_48848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100000003fffff; valaddr_reg:x3; val_offset:146544*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146544*0 + 3*464*FLEN/8, x4, x1, x2)

inst_48849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100000007fffff; valaddr_reg:x3; val_offset:146547*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146547*0 + 3*465*FLEN/8, x4, x1, x2)

inst_48850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000000ffffff; valaddr_reg:x3; val_offset:146550*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146550*0 + 3*466*FLEN/8, x4, x1, x2)

inst_48851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000001ffffff; valaddr_reg:x3; val_offset:146553*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146553*0 + 3*467*FLEN/8, x4, x1, x2)

inst_48852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000003ffffff; valaddr_reg:x3; val_offset:146556*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146556*0 + 3*468*FLEN/8, x4, x1, x2)

inst_48853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000007ffffff; valaddr_reg:x3; val_offset:146559*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146559*0 + 3*469*FLEN/8, x4, x1, x2)

inst_48854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000000fffffff; valaddr_reg:x3; val_offset:146562*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146562*0 + 3*470*FLEN/8, x4, x1, x2)

inst_48855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000001fffffff; valaddr_reg:x3; val_offset:146565*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146565*0 + 3*471*FLEN/8, x4, x1, x2)

inst_48856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000003fffffff; valaddr_reg:x3; val_offset:146568*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146568*0 + 3*472*FLEN/8, x4, x1, x2)

inst_48857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000007fffffff; valaddr_reg:x3; val_offset:146571*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146571*0 + 3*473*FLEN/8, x4, x1, x2)

inst_48858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100000ffffffff; valaddr_reg:x3; val_offset:146574*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146574*0 + 3*474*FLEN/8, x4, x1, x2)

inst_48859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100001ffffffff; valaddr_reg:x3; val_offset:146577*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146577*0 + 3*475*FLEN/8, x4, x1, x2)

inst_48860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100003ffffffff; valaddr_reg:x3; val_offset:146580*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146580*0 + 3*476*FLEN/8, x4, x1, x2)

inst_48861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100007ffffffff; valaddr_reg:x3; val_offset:146583*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146583*0 + 3*477*FLEN/8, x4, x1, x2)

inst_48862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310000fffffffff; valaddr_reg:x3; val_offset:146586*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146586*0 + 3*478*FLEN/8, x4, x1, x2)

inst_48863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310001fffffffff; valaddr_reg:x3; val_offset:146589*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146589*0 + 3*479*FLEN/8, x4, x1, x2)

inst_48864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310003fffffffff; valaddr_reg:x3; val_offset:146592*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146592*0 + 3*480*FLEN/8, x4, x1, x2)

inst_48865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310007fffffffff; valaddr_reg:x3; val_offset:146595*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146595*0 + 3*481*FLEN/8, x4, x1, x2)

inst_48866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831000ffffffffff; valaddr_reg:x3; val_offset:146598*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146598*0 + 3*482*FLEN/8, x4, x1, x2)

inst_48867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831001ffffffffff; valaddr_reg:x3; val_offset:146601*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146601*0 + 3*483*FLEN/8, x4, x1, x2)

inst_48868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831003ffffffffff; valaddr_reg:x3; val_offset:146604*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146604*0 + 3*484*FLEN/8, x4, x1, x2)

inst_48869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831007ffffffffff; valaddr_reg:x3; val_offset:146607*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146607*0 + 3*485*FLEN/8, x4, x1, x2)

inst_48870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83100fffffffffff; valaddr_reg:x3; val_offset:146610*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146610*0 + 3*486*FLEN/8, x4, x1, x2)

inst_48871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83101fffffffffff; valaddr_reg:x3; val_offset:146613*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146613*0 + 3*487*FLEN/8, x4, x1, x2)

inst_48872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83103fffffffffff; valaddr_reg:x3; val_offset:146616*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146616*0 + 3*488*FLEN/8, x4, x1, x2)

inst_48873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x83107fffffffffff; valaddr_reg:x3; val_offset:146619*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146619*0 + 3*489*FLEN/8, x4, x1, x2)

inst_48874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8310ffffffffffff; valaddr_reg:x3; val_offset:146622*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146622*0 + 3*490*FLEN/8, x4, x1, x2)

inst_48875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8311ffffffffffff; valaddr_reg:x3; val_offset:146625*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146625*0 + 3*491*FLEN/8, x4, x1, x2)

inst_48876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8313ffffffffffff; valaddr_reg:x3; val_offset:146628*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146628*0 + 3*492*FLEN/8, x4, x1, x2)

inst_48877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8317ffffffffffff; valaddr_reg:x3; val_offset:146631*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146631*0 + 3*493*FLEN/8, x4, x1, x2)

inst_48878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x8318000000000000; valaddr_reg:x3; val_offset:146634*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146634*0 + 3*494*FLEN/8, x4, x1, x2)

inst_48879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831c000000000000; valaddr_reg:x3; val_offset:146637*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146637*0 + 3*495*FLEN/8, x4, x1, x2)

inst_48880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831e000000000000; valaddr_reg:x3; val_offset:146640*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146640*0 + 3*496*FLEN/8, x4, x1, x2)

inst_48881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831f000000000000; valaddr_reg:x3; val_offset:146643*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146643*0 + 3*497*FLEN/8, x4, x1, x2)

inst_48882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831f800000000000; valaddr_reg:x3; val_offset:146646*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146646*0 + 3*498*FLEN/8, x4, x1, x2)

inst_48883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fc00000000000; valaddr_reg:x3; val_offset:146649*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146649*0 + 3*499*FLEN/8, x4, x1, x2)

inst_48884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fe00000000000; valaddr_reg:x3; val_offset:146652*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146652*0 + 3*500*FLEN/8, x4, x1, x2)

inst_48885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ff00000000000; valaddr_reg:x3; val_offset:146655*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146655*0 + 3*501*FLEN/8, x4, x1, x2)

inst_48886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ff80000000000; valaddr_reg:x3; val_offset:146658*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146658*0 + 3*502*FLEN/8, x4, x1, x2)

inst_48887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffc0000000000; valaddr_reg:x3; val_offset:146661*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146661*0 + 3*503*FLEN/8, x4, x1, x2)

inst_48888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffe0000000000; valaddr_reg:x3; val_offset:146664*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146664*0 + 3*504*FLEN/8, x4, x1, x2)

inst_48889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fff0000000000; valaddr_reg:x3; val_offset:146667*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146667*0 + 3*505*FLEN/8, x4, x1, x2)

inst_48890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fff8000000000; valaddr_reg:x3; val_offset:146670*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146670*0 + 3*506*FLEN/8, x4, x1, x2)

inst_48891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffc000000000; valaddr_reg:x3; val_offset:146673*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146673*0 + 3*507*FLEN/8, x4, x1, x2)

inst_48892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffe000000000; valaddr_reg:x3; val_offset:146676*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146676*0 + 3*508*FLEN/8, x4, x1, x2)

inst_48893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffff000000000; valaddr_reg:x3; val_offset:146679*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146679*0 + 3*509*FLEN/8, x4, x1, x2)

inst_48894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffff800000000; valaddr_reg:x3; val_offset:146682*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146682*0 + 3*510*FLEN/8, x4, x1, x2)

inst_48895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffc00000000; valaddr_reg:x3; val_offset:146685*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146685*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_48896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffe00000000; valaddr_reg:x3; val_offset:146688*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146688*0 + 3*512*FLEN/8, x4, x1, x2)

inst_48897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffff00000000; valaddr_reg:x3; val_offset:146691*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146691*0 + 3*513*FLEN/8, x4, x1, x2)

inst_48898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffff80000000; valaddr_reg:x3; val_offset:146694*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146694*0 + 3*514*FLEN/8, x4, x1, x2)

inst_48899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffc0000000; valaddr_reg:x3; val_offset:146697*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146697*0 + 3*515*FLEN/8, x4, x1, x2)

inst_48900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffe0000000; valaddr_reg:x3; val_offset:146700*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146700*0 + 3*516*FLEN/8, x4, x1, x2)

inst_48901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffff0000000; valaddr_reg:x3; val_offset:146703*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146703*0 + 3*517*FLEN/8, x4, x1, x2)

inst_48902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffff8000000; valaddr_reg:x3; val_offset:146706*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146706*0 + 3*518*FLEN/8, x4, x1, x2)

inst_48903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffc000000; valaddr_reg:x3; val_offset:146709*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146709*0 + 3*519*FLEN/8, x4, x1, x2)

inst_48904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffe000000; valaddr_reg:x3; val_offset:146712*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146712*0 + 3*520*FLEN/8, x4, x1, x2)

inst_48905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffff000000; valaddr_reg:x3; val_offset:146715*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146715*0 + 3*521*FLEN/8, x4, x1, x2)

inst_48906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffff800000; valaddr_reg:x3; val_offset:146718*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146718*0 + 3*522*FLEN/8, x4, x1, x2)

inst_48907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffffc00000; valaddr_reg:x3; val_offset:146721*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146721*0 + 3*523*FLEN/8, x4, x1, x2)

inst_48908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffffe00000; valaddr_reg:x3; val_offset:146724*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146724*0 + 3*524*FLEN/8, x4, x1, x2)

inst_48909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffff00000; valaddr_reg:x3; val_offset:146727*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146727*0 + 3*525*FLEN/8, x4, x1, x2)

inst_48910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffff80000; valaddr_reg:x3; val_offset:146730*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146730*0 + 3*526*FLEN/8, x4, x1, x2)

inst_48911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffffc0000; valaddr_reg:x3; val_offset:146733*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146733*0 + 3*527*FLEN/8, x4, x1, x2)

inst_48912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffffe0000; valaddr_reg:x3; val_offset:146736*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146736*0 + 3*528*FLEN/8, x4, x1, x2)

inst_48913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffffff0000; valaddr_reg:x3; val_offset:146739*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146739*0 + 3*529*FLEN/8, x4, x1, x2)

inst_48914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffffff8000; valaddr_reg:x3; val_offset:146742*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146742*0 + 3*530*FLEN/8, x4, x1, x2)

inst_48915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffffffc000; valaddr_reg:x3; val_offset:146745*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146745*0 + 3*531*FLEN/8, x4, x1, x2)

inst_48916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffffffe000; valaddr_reg:x3; val_offset:146748*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146748*0 + 3*532*FLEN/8, x4, x1, x2)

inst_48917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffffff000; valaddr_reg:x3; val_offset:146751*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146751*0 + 3*533*FLEN/8, x4, x1, x2)

inst_48918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffffff800; valaddr_reg:x3; val_offset:146754*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146754*0 + 3*534*FLEN/8, x4, x1, x2)

inst_48919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffffffc00; valaddr_reg:x3; val_offset:146757*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146757*0 + 3*535*FLEN/8, x4, x1, x2)

inst_48920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffffffe00; valaddr_reg:x3; val_offset:146760*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146760*0 + 3*536*FLEN/8, x4, x1, x2)

inst_48921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffffffff00; valaddr_reg:x3; val_offset:146763*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146763*0 + 3*537*FLEN/8, x4, x1, x2)

inst_48922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffffffff80; valaddr_reg:x3; val_offset:146766*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146766*0 + 3*538*FLEN/8, x4, x1, x2)

inst_48923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffffffffc0; valaddr_reg:x3; val_offset:146769*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146769*0 + 3*539*FLEN/8, x4, x1, x2)

inst_48924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffffffffe0; valaddr_reg:x3; val_offset:146772*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146772*0 + 3*540*FLEN/8, x4, x1, x2)

inst_48925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffffffff0; valaddr_reg:x3; val_offset:146775*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146775*0 + 3*541*FLEN/8, x4, x1, x2)

inst_48926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffffffff8; valaddr_reg:x3; val_offset:146778*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146778*0 + 3*542*FLEN/8, x4, x1, x2)

inst_48927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffffffffc; valaddr_reg:x3; val_offset:146781*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146781*0 + 3*543*FLEN/8, x4, x1, x2)

inst_48928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831ffffffffffffe; valaddr_reg:x3; val_offset:146784*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146784*0 + 3*544*FLEN/8, x4, x1, x2)

inst_48929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4bb35faff00f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e4bb35faff00f; op2val:0x8000;
op3val:0x831fffffffffffff; valaddr_reg:x3; val_offset:146787*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146787*0 + 3*545*FLEN/8, x4, x1, x2)

inst_48930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000000000000; valaddr_reg:x3; val_offset:146790*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146790*0 + 3*546*FLEN/8, x4, x1, x2)

inst_48931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000000000001; valaddr_reg:x3; val_offset:146793*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146793*0 + 3*547*FLEN/8, x4, x1, x2)

inst_48932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000000000003; valaddr_reg:x3; val_offset:146796*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146796*0 + 3*548*FLEN/8, x4, x1, x2)

inst_48933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000000000007; valaddr_reg:x3; val_offset:146799*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146799*0 + 3*549*FLEN/8, x4, x1, x2)

inst_48934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000000000000f; valaddr_reg:x3; val_offset:146802*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146802*0 + 3*550*FLEN/8, x4, x1, x2)

inst_48935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000000000001f; valaddr_reg:x3; val_offset:146805*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146805*0 + 3*551*FLEN/8, x4, x1, x2)

inst_48936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000000000003f; valaddr_reg:x3; val_offset:146808*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146808*0 + 3*552*FLEN/8, x4, x1, x2)

inst_48937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000000000007f; valaddr_reg:x3; val_offset:146811*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146811*0 + 3*553*FLEN/8, x4, x1, x2)

inst_48938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00000000000ff; valaddr_reg:x3; val_offset:146814*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146814*0 + 3*554*FLEN/8, x4, x1, x2)

inst_48939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00000000001ff; valaddr_reg:x3; val_offset:146817*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146817*0 + 3*555*FLEN/8, x4, x1, x2)

inst_48940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00000000003ff; valaddr_reg:x3; val_offset:146820*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146820*0 + 3*556*FLEN/8, x4, x1, x2)

inst_48941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00000000007ff; valaddr_reg:x3; val_offset:146823*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146823*0 + 3*557*FLEN/8, x4, x1, x2)

inst_48942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000000000fff; valaddr_reg:x3; val_offset:146826*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146826*0 + 3*558*FLEN/8, x4, x1, x2)

inst_48943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000000001fff; valaddr_reg:x3; val_offset:146829*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146829*0 + 3*559*FLEN/8, x4, x1, x2)

inst_48944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000000003fff; valaddr_reg:x3; val_offset:146832*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146832*0 + 3*560*FLEN/8, x4, x1, x2)

inst_48945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000000007fff; valaddr_reg:x3; val_offset:146835*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146835*0 + 3*561*FLEN/8, x4, x1, x2)

inst_48946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000000000ffff; valaddr_reg:x3; val_offset:146838*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146838*0 + 3*562*FLEN/8, x4, x1, x2)

inst_48947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000000001ffff; valaddr_reg:x3; val_offset:146841*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146841*0 + 3*563*FLEN/8, x4, x1, x2)

inst_48948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000000003ffff; valaddr_reg:x3; val_offset:146844*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146844*0 + 3*564*FLEN/8, x4, x1, x2)

inst_48949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000000007ffff; valaddr_reg:x3; val_offset:146847*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146847*0 + 3*565*FLEN/8, x4, x1, x2)

inst_48950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00000000fffff; valaddr_reg:x3; val_offset:146850*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146850*0 + 3*566*FLEN/8, x4, x1, x2)

inst_48951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00000001fffff; valaddr_reg:x3; val_offset:146853*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146853*0 + 3*567*FLEN/8, x4, x1, x2)

inst_48952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00000003fffff; valaddr_reg:x3; val_offset:146856*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146856*0 + 3*568*FLEN/8, x4, x1, x2)

inst_48953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00000007fffff; valaddr_reg:x3; val_offset:146859*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146859*0 + 3*569*FLEN/8, x4, x1, x2)

inst_48954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000000ffffff; valaddr_reg:x3; val_offset:146862*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146862*0 + 3*570*FLEN/8, x4, x1, x2)

inst_48955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000001ffffff; valaddr_reg:x3; val_offset:146865*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146865*0 + 3*571*FLEN/8, x4, x1, x2)

inst_48956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000003ffffff; valaddr_reg:x3; val_offset:146868*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146868*0 + 3*572*FLEN/8, x4, x1, x2)

inst_48957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000007ffffff; valaddr_reg:x3; val_offset:146871*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146871*0 + 3*573*FLEN/8, x4, x1, x2)

inst_48958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000000fffffff; valaddr_reg:x3; val_offset:146874*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146874*0 + 3*574*FLEN/8, x4, x1, x2)

inst_48959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000001fffffff; valaddr_reg:x3; val_offset:146877*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146877*0 + 3*575*FLEN/8, x4, x1, x2)

inst_48960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000003fffffff; valaddr_reg:x3; val_offset:146880*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146880*0 + 3*576*FLEN/8, x4, x1, x2)

inst_48961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000007fffffff; valaddr_reg:x3; val_offset:146883*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146883*0 + 3*577*FLEN/8, x4, x1, x2)

inst_48962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00000ffffffff; valaddr_reg:x3; val_offset:146886*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146886*0 + 3*578*FLEN/8, x4, x1, x2)

inst_48963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00001ffffffff; valaddr_reg:x3; val_offset:146889*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146889*0 + 3*579*FLEN/8, x4, x1, x2)

inst_48964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00003ffffffff; valaddr_reg:x3; val_offset:146892*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146892*0 + 3*580*FLEN/8, x4, x1, x2)

inst_48965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00007ffffffff; valaddr_reg:x3; val_offset:146895*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146895*0 + 3*581*FLEN/8, x4, x1, x2)

inst_48966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0000fffffffff; valaddr_reg:x3; val_offset:146898*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146898*0 + 3*582*FLEN/8, x4, x1, x2)

inst_48967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0001fffffffff; valaddr_reg:x3; val_offset:146901*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146901*0 + 3*583*FLEN/8, x4, x1, x2)

inst_48968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0003fffffffff; valaddr_reg:x3; val_offset:146904*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146904*0 + 3*584*FLEN/8, x4, x1, x2)

inst_48969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0007fffffffff; valaddr_reg:x3; val_offset:146907*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146907*0 + 3*585*FLEN/8, x4, x1, x2)

inst_48970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d000ffffffffff; valaddr_reg:x3; val_offset:146910*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146910*0 + 3*586*FLEN/8, x4, x1, x2)

inst_48971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d001ffffffffff; valaddr_reg:x3; val_offset:146913*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146913*0 + 3*587*FLEN/8, x4, x1, x2)

inst_48972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d003ffffffffff; valaddr_reg:x3; val_offset:146916*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146916*0 + 3*588*FLEN/8, x4, x1, x2)

inst_48973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d007ffffffffff; valaddr_reg:x3; val_offset:146919*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146919*0 + 3*589*FLEN/8, x4, x1, x2)

inst_48974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d00fffffffffff; valaddr_reg:x3; val_offset:146922*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146922*0 + 3*590*FLEN/8, x4, x1, x2)

inst_48975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d01fffffffffff; valaddr_reg:x3; val_offset:146925*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146925*0 + 3*591*FLEN/8, x4, x1, x2)

inst_48976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d03fffffffffff; valaddr_reg:x3; val_offset:146928*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146928*0 + 3*592*FLEN/8, x4, x1, x2)

inst_48977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d07fffffffffff; valaddr_reg:x3; val_offset:146931*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146931*0 + 3*593*FLEN/8, x4, x1, x2)

inst_48978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d0ffffffffffff; valaddr_reg:x3; val_offset:146934*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146934*0 + 3*594*FLEN/8, x4, x1, x2)

inst_48979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d1ffffffffffff; valaddr_reg:x3; val_offset:146937*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146937*0 + 3*595*FLEN/8, x4, x1, x2)

inst_48980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d3ffffffffffff; valaddr_reg:x3; val_offset:146940*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146940*0 + 3*596*FLEN/8, x4, x1, x2)

inst_48981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d7ffffffffffff; valaddr_reg:x3; val_offset:146943*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146943*0 + 3*597*FLEN/8, x4, x1, x2)

inst_48982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8d8000000000000; valaddr_reg:x3; val_offset:146946*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146946*0 + 3*598*FLEN/8, x4, x1, x2)

inst_48983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dc000000000000; valaddr_reg:x3; val_offset:146949*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146949*0 + 3*599*FLEN/8, x4, x1, x2)

inst_48984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8de000000000000; valaddr_reg:x3; val_offset:146952*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146952*0 + 3*600*FLEN/8, x4, x1, x2)

inst_48985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8df000000000000; valaddr_reg:x3; val_offset:146955*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146955*0 + 3*601*FLEN/8, x4, x1, x2)

inst_48986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8df800000000000; valaddr_reg:x3; val_offset:146958*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146958*0 + 3*602*FLEN/8, x4, x1, x2)

inst_48987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfc00000000000; valaddr_reg:x3; val_offset:146961*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146961*0 + 3*603*FLEN/8, x4, x1, x2)

inst_48988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfe00000000000; valaddr_reg:x3; val_offset:146964*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146964*0 + 3*604*FLEN/8, x4, x1, x2)

inst_48989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dff00000000000; valaddr_reg:x3; val_offset:146967*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146967*0 + 3*605*FLEN/8, x4, x1, x2)

inst_48990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dff80000000000; valaddr_reg:x3; val_offset:146970*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146970*0 + 3*606*FLEN/8, x4, x1, x2)

inst_48991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffc0000000000; valaddr_reg:x3; val_offset:146973*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146973*0 + 3*607*FLEN/8, x4, x1, x2)

inst_48992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffe0000000000; valaddr_reg:x3; val_offset:146976*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146976*0 + 3*608*FLEN/8, x4, x1, x2)

inst_48993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfff0000000000; valaddr_reg:x3; val_offset:146979*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146979*0 + 3*609*FLEN/8, x4, x1, x2)

inst_48994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfff8000000000; valaddr_reg:x3; val_offset:146982*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146982*0 + 3*610*FLEN/8, x4, x1, x2)

inst_48995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffc000000000; valaddr_reg:x3; val_offset:146985*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146985*0 + 3*611*FLEN/8, x4, x1, x2)

inst_48996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffe000000000; valaddr_reg:x3; val_offset:146988*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146988*0 + 3*612*FLEN/8, x4, x1, x2)

inst_48997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffff000000000; valaddr_reg:x3; val_offset:146991*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146991*0 + 3*613*FLEN/8, x4, x1, x2)

inst_48998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffff800000000; valaddr_reg:x3; val_offset:146994*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146994*0 + 3*614*FLEN/8, x4, x1, x2)

inst_48999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffc00000000; valaddr_reg:x3; val_offset:146997*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 146997*0 + 3*615*FLEN/8, x4, x1, x2)

inst_49000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffe00000000; valaddr_reg:x3; val_offset:147000*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147000*0 + 3*616*FLEN/8, x4, x1, x2)

inst_49001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffff00000000; valaddr_reg:x3; val_offset:147003*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147003*0 + 3*617*FLEN/8, x4, x1, x2)

inst_49002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffff80000000; valaddr_reg:x3; val_offset:147006*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147006*0 + 3*618*FLEN/8, x4, x1, x2)

inst_49003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffc0000000; valaddr_reg:x3; val_offset:147009*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147009*0 + 3*619*FLEN/8, x4, x1, x2)

inst_49004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffe0000000; valaddr_reg:x3; val_offset:147012*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147012*0 + 3*620*FLEN/8, x4, x1, x2)

inst_49005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffff0000000; valaddr_reg:x3; val_offset:147015*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147015*0 + 3*621*FLEN/8, x4, x1, x2)

inst_49006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffff8000000; valaddr_reg:x3; val_offset:147018*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147018*0 + 3*622*FLEN/8, x4, x1, x2)

inst_49007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffc000000; valaddr_reg:x3; val_offset:147021*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147021*0 + 3*623*FLEN/8, x4, x1, x2)

inst_49008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffe000000; valaddr_reg:x3; val_offset:147024*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147024*0 + 3*624*FLEN/8, x4, x1, x2)

inst_49009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffff000000; valaddr_reg:x3; val_offset:147027*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147027*0 + 3*625*FLEN/8, x4, x1, x2)

inst_49010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffff800000; valaddr_reg:x3; val_offset:147030*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147030*0 + 3*626*FLEN/8, x4, x1, x2)

inst_49011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffffc00000; valaddr_reg:x3; val_offset:147033*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147033*0 + 3*627*FLEN/8, x4, x1, x2)

inst_49012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffffe00000; valaddr_reg:x3; val_offset:147036*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147036*0 + 3*628*FLEN/8, x4, x1, x2)

inst_49013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffff00000; valaddr_reg:x3; val_offset:147039*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147039*0 + 3*629*FLEN/8, x4, x1, x2)

inst_49014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffff80000; valaddr_reg:x3; val_offset:147042*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147042*0 + 3*630*FLEN/8, x4, x1, x2)

inst_49015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffffc0000; valaddr_reg:x3; val_offset:147045*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147045*0 + 3*631*FLEN/8, x4, x1, x2)

inst_49016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffffe0000; valaddr_reg:x3; val_offset:147048*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147048*0 + 3*632*FLEN/8, x4, x1, x2)

inst_49017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffffff0000; valaddr_reg:x3; val_offset:147051*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147051*0 + 3*633*FLEN/8, x4, x1, x2)

inst_49018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffffff8000; valaddr_reg:x3; val_offset:147054*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147054*0 + 3*634*FLEN/8, x4, x1, x2)

inst_49019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffffffc000; valaddr_reg:x3; val_offset:147057*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147057*0 + 3*635*FLEN/8, x4, x1, x2)

inst_49020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffffffe000; valaddr_reg:x3; val_offset:147060*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147060*0 + 3*636*FLEN/8, x4, x1, x2)

inst_49021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffffff000; valaddr_reg:x3; val_offset:147063*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147063*0 + 3*637*FLEN/8, x4, x1, x2)

inst_49022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffffff800; valaddr_reg:x3; val_offset:147066*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147066*0 + 3*638*FLEN/8, x4, x1, x2)

inst_49023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffffffc00; valaddr_reg:x3; val_offset:147069*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147069*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_49024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffffffe00; valaddr_reg:x3; val_offset:147072*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147072*0 + 3*640*FLEN/8, x4, x1, x2)

inst_49025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffffffff00; valaddr_reg:x3; val_offset:147075*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147075*0 + 3*641*FLEN/8, x4, x1, x2)

inst_49026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffffffff80; valaddr_reg:x3; val_offset:147078*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147078*0 + 3*642*FLEN/8, x4, x1, x2)

inst_49027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffffffffc0; valaddr_reg:x3; val_offset:147081*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147081*0 + 3*643*FLEN/8, x4, x1, x2)

inst_49028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffffffffe0; valaddr_reg:x3; val_offset:147084*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147084*0 + 3*644*FLEN/8, x4, x1, x2)

inst_49029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffffffff0; valaddr_reg:x3; val_offset:147087*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147087*0 + 3*645*FLEN/8, x4, x1, x2)

inst_49030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffffffff8; valaddr_reg:x3; val_offset:147090*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147090*0 + 3*646*FLEN/8, x4, x1, x2)

inst_49031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffffffffc; valaddr_reg:x3; val_offset:147093*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147093*0 + 3*647*FLEN/8, x4, x1, x2)

inst_49032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dffffffffffffe; valaddr_reg:x3; val_offset:147096*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147096*0 + 3*648*FLEN/8, x4, x1, x2)

inst_49033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xb8dfffffffffffff; valaddr_reg:x3; val_offset:147099*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147099*0 + 3*649*FLEN/8, x4, x1, x2)

inst_49034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:147102*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147102*0 + 3*650*FLEN/8, x4, x1, x2)

inst_49035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:147105*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147105*0 + 3*651*FLEN/8, x4, x1, x2)

inst_49036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:147108*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147108*0 + 3*652*FLEN/8, x4, x1, x2)

inst_49037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:147111*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147111*0 + 3*653*FLEN/8, x4, x1, x2)

inst_49038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:147114*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147114*0 + 3*654*FLEN/8, x4, x1, x2)

inst_49039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:147117*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147117*0 + 3*655*FLEN/8, x4, x1, x2)

inst_49040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:147120*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147120*0 + 3*656*FLEN/8, x4, x1, x2)

inst_49041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:147123*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147123*0 + 3*657*FLEN/8, x4, x1, x2)

inst_49042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:147126*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147126*0 + 3*658*FLEN/8, x4, x1, x2)

inst_49043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:147129*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147129*0 + 3*659*FLEN/8, x4, x1, x2)

inst_49044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:147132*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147132*0 + 3*660*FLEN/8, x4, x1, x2)

inst_49045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:147135*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147135*0 + 3*661*FLEN/8, x4, x1, x2)

inst_49046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:147138*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147138*0 + 3*662*FLEN/8, x4, x1, x2)

inst_49047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:147141*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147141*0 + 3*663*FLEN/8, x4, x1, x2)

inst_49048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:147144*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147144*0 + 3*664*FLEN/8, x4, x1, x2)

inst_49049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:147147*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147147*0 + 3*665*FLEN/8, x4, x1, x2)

inst_49050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:147150*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147150*0 + 3*666*FLEN/8, x4, x1, x2)

inst_49051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:147153*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147153*0 + 3*667*FLEN/8, x4, x1, x2)

inst_49052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:147156*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147156*0 + 3*668*FLEN/8, x4, x1, x2)

inst_49053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:147159*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147159*0 + 3*669*FLEN/8, x4, x1, x2)

inst_49054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:147162*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147162*0 + 3*670*FLEN/8, x4, x1, x2)

inst_49055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe56179ab25747 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x0e0a1f93a5238 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e56179ab25747; op2val:0x9fd0e0a1f93a5238;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:147165*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147165*0 + 3*671*FLEN/8, x4, x1, x2)

inst_49056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000000000000; valaddr_reg:x3; val_offset:147168*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147168*0 + 3*672*FLEN/8, x4, x1, x2)

inst_49057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000000000001; valaddr_reg:x3; val_offset:147171*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147171*0 + 3*673*FLEN/8, x4, x1, x2)

inst_49058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000000000003; valaddr_reg:x3; val_offset:147174*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147174*0 + 3*674*FLEN/8, x4, x1, x2)

inst_49059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000000000007; valaddr_reg:x3; val_offset:147177*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147177*0 + 3*675*FLEN/8, x4, x1, x2)

inst_49060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000000000000f; valaddr_reg:x3; val_offset:147180*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147180*0 + 3*676*FLEN/8, x4, x1, x2)

inst_49061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000000000001f; valaddr_reg:x3; val_offset:147183*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147183*0 + 3*677*FLEN/8, x4, x1, x2)

inst_49062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000000000003f; valaddr_reg:x3; val_offset:147186*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147186*0 + 3*678*FLEN/8, x4, x1, x2)

inst_49063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000000000007f; valaddr_reg:x3; val_offset:147189*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147189*0 + 3*679*FLEN/8, x4, x1, x2)

inst_49064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00000000000ff; valaddr_reg:x3; val_offset:147192*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147192*0 + 3*680*FLEN/8, x4, x1, x2)

inst_49065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00000000001ff; valaddr_reg:x3; val_offset:147195*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147195*0 + 3*681*FLEN/8, x4, x1, x2)

inst_49066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00000000003ff; valaddr_reg:x3; val_offset:147198*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147198*0 + 3*682*FLEN/8, x4, x1, x2)

inst_49067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00000000007ff; valaddr_reg:x3; val_offset:147201*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147201*0 + 3*683*FLEN/8, x4, x1, x2)

inst_49068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000000000fff; valaddr_reg:x3; val_offset:147204*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147204*0 + 3*684*FLEN/8, x4, x1, x2)

inst_49069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000000001fff; valaddr_reg:x3; val_offset:147207*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147207*0 + 3*685*FLEN/8, x4, x1, x2)

inst_49070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000000003fff; valaddr_reg:x3; val_offset:147210*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147210*0 + 3*686*FLEN/8, x4, x1, x2)

inst_49071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000000007fff; valaddr_reg:x3; val_offset:147213*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147213*0 + 3*687*FLEN/8, x4, x1, x2)

inst_49072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000000000ffff; valaddr_reg:x3; val_offset:147216*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147216*0 + 3*688*FLEN/8, x4, x1, x2)

inst_49073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000000001ffff; valaddr_reg:x3; val_offset:147219*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147219*0 + 3*689*FLEN/8, x4, x1, x2)

inst_49074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000000003ffff; valaddr_reg:x3; val_offset:147222*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147222*0 + 3*690*FLEN/8, x4, x1, x2)

inst_49075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000000007ffff; valaddr_reg:x3; val_offset:147225*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147225*0 + 3*691*FLEN/8, x4, x1, x2)

inst_49076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00000000fffff; valaddr_reg:x3; val_offset:147228*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147228*0 + 3*692*FLEN/8, x4, x1, x2)

inst_49077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00000001fffff; valaddr_reg:x3; val_offset:147231*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147231*0 + 3*693*FLEN/8, x4, x1, x2)

inst_49078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00000003fffff; valaddr_reg:x3; val_offset:147234*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147234*0 + 3*694*FLEN/8, x4, x1, x2)

inst_49079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00000007fffff; valaddr_reg:x3; val_offset:147237*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147237*0 + 3*695*FLEN/8, x4, x1, x2)

inst_49080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000000ffffff; valaddr_reg:x3; val_offset:147240*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147240*0 + 3*696*FLEN/8, x4, x1, x2)

inst_49081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000001ffffff; valaddr_reg:x3; val_offset:147243*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147243*0 + 3*697*FLEN/8, x4, x1, x2)

inst_49082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000003ffffff; valaddr_reg:x3; val_offset:147246*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147246*0 + 3*698*FLEN/8, x4, x1, x2)

inst_49083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000007ffffff; valaddr_reg:x3; val_offset:147249*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147249*0 + 3*699*FLEN/8, x4, x1, x2)

inst_49084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000000fffffff; valaddr_reg:x3; val_offset:147252*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147252*0 + 3*700*FLEN/8, x4, x1, x2)

inst_49085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000001fffffff; valaddr_reg:x3; val_offset:147255*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147255*0 + 3*701*FLEN/8, x4, x1, x2)

inst_49086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000003fffffff; valaddr_reg:x3; val_offset:147258*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147258*0 + 3*702*FLEN/8, x4, x1, x2)

inst_49087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000007fffffff; valaddr_reg:x3; val_offset:147261*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147261*0 + 3*703*FLEN/8, x4, x1, x2)

inst_49088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00000ffffffff; valaddr_reg:x3; val_offset:147264*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147264*0 + 3*704*FLEN/8, x4, x1, x2)

inst_49089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00001ffffffff; valaddr_reg:x3; val_offset:147267*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147267*0 + 3*705*FLEN/8, x4, x1, x2)

inst_49090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00003ffffffff; valaddr_reg:x3; val_offset:147270*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147270*0 + 3*706*FLEN/8, x4, x1, x2)

inst_49091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00007ffffffff; valaddr_reg:x3; val_offset:147273*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147273*0 + 3*707*FLEN/8, x4, x1, x2)

inst_49092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0000fffffffff; valaddr_reg:x3; val_offset:147276*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147276*0 + 3*708*FLEN/8, x4, x1, x2)

inst_49093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0001fffffffff; valaddr_reg:x3; val_offset:147279*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147279*0 + 3*709*FLEN/8, x4, x1, x2)

inst_49094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0003fffffffff; valaddr_reg:x3; val_offset:147282*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147282*0 + 3*710*FLEN/8, x4, x1, x2)

inst_49095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0007fffffffff; valaddr_reg:x3; val_offset:147285*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147285*0 + 3*711*FLEN/8, x4, x1, x2)

inst_49096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df000ffffffffff; valaddr_reg:x3; val_offset:147288*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147288*0 + 3*712*FLEN/8, x4, x1, x2)

inst_49097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df001ffffffffff; valaddr_reg:x3; val_offset:147291*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147291*0 + 3*713*FLEN/8, x4, x1, x2)

inst_49098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df003ffffffffff; valaddr_reg:x3; val_offset:147294*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147294*0 + 3*714*FLEN/8, x4, x1, x2)

inst_49099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df007ffffffffff; valaddr_reg:x3; val_offset:147297*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147297*0 + 3*715*FLEN/8, x4, x1, x2)

inst_49100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df00fffffffffff; valaddr_reg:x3; val_offset:147300*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147300*0 + 3*716*FLEN/8, x4, x1, x2)

inst_49101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df01fffffffffff; valaddr_reg:x3; val_offset:147303*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147303*0 + 3*717*FLEN/8, x4, x1, x2)

inst_49102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df03fffffffffff; valaddr_reg:x3; val_offset:147306*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147306*0 + 3*718*FLEN/8, x4, x1, x2)

inst_49103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df07fffffffffff; valaddr_reg:x3; val_offset:147309*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147309*0 + 3*719*FLEN/8, x4, x1, x2)

inst_49104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df0ffffffffffff; valaddr_reg:x3; val_offset:147312*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147312*0 + 3*720*FLEN/8, x4, x1, x2)

inst_49105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df1ffffffffffff; valaddr_reg:x3; val_offset:147315*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147315*0 + 3*721*FLEN/8, x4, x1, x2)

inst_49106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df3ffffffffffff; valaddr_reg:x3; val_offset:147318*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147318*0 + 3*722*FLEN/8, x4, x1, x2)

inst_49107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df7ffffffffffff; valaddr_reg:x3; val_offset:147321*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147321*0 + 3*723*FLEN/8, x4, x1, x2)

inst_49108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3df8000000000000; valaddr_reg:x3; val_offset:147324*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147324*0 + 3*724*FLEN/8, x4, x1, x2)

inst_49109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfc000000000000; valaddr_reg:x3; val_offset:147327*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147327*0 + 3*725*FLEN/8, x4, x1, x2)

inst_49110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfe000000000000; valaddr_reg:x3; val_offset:147330*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147330*0 + 3*726*FLEN/8, x4, x1, x2)

inst_49111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dff000000000000; valaddr_reg:x3; val_offset:147333*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147333*0 + 3*727*FLEN/8, x4, x1, x2)

inst_49112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dff800000000000; valaddr_reg:x3; val_offset:147336*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147336*0 + 3*728*FLEN/8, x4, x1, x2)

inst_49113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffc00000000000; valaddr_reg:x3; val_offset:147339*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147339*0 + 3*729*FLEN/8, x4, x1, x2)

inst_49114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffe00000000000; valaddr_reg:x3; val_offset:147342*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147342*0 + 3*730*FLEN/8, x4, x1, x2)

inst_49115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfff00000000000; valaddr_reg:x3; val_offset:147345*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147345*0 + 3*731*FLEN/8, x4, x1, x2)

inst_49116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfff80000000000; valaddr_reg:x3; val_offset:147348*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147348*0 + 3*732*FLEN/8, x4, x1, x2)

inst_49117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffc0000000000; valaddr_reg:x3; val_offset:147351*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147351*0 + 3*733*FLEN/8, x4, x1, x2)

inst_49118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffe0000000000; valaddr_reg:x3; val_offset:147354*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147354*0 + 3*734*FLEN/8, x4, x1, x2)

inst_49119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffff0000000000; valaddr_reg:x3; val_offset:147357*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147357*0 + 3*735*FLEN/8, x4, x1, x2)

inst_49120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffff8000000000; valaddr_reg:x3; val_offset:147360*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147360*0 + 3*736*FLEN/8, x4, x1, x2)

inst_49121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffc000000000; valaddr_reg:x3; val_offset:147363*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147363*0 + 3*737*FLEN/8, x4, x1, x2)

inst_49122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffe000000000; valaddr_reg:x3; val_offset:147366*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147366*0 + 3*738*FLEN/8, x4, x1, x2)

inst_49123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffff000000000; valaddr_reg:x3; val_offset:147369*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147369*0 + 3*739*FLEN/8, x4, x1, x2)

inst_49124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffff800000000; valaddr_reg:x3; val_offset:147372*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147372*0 + 3*740*FLEN/8, x4, x1, x2)

inst_49125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffc00000000; valaddr_reg:x3; val_offset:147375*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147375*0 + 3*741*FLEN/8, x4, x1, x2)

inst_49126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffe00000000; valaddr_reg:x3; val_offset:147378*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147378*0 + 3*742*FLEN/8, x4, x1, x2)

inst_49127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffff00000000; valaddr_reg:x3; val_offset:147381*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147381*0 + 3*743*FLEN/8, x4, x1, x2)

inst_49128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffff80000000; valaddr_reg:x3; val_offset:147384*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147384*0 + 3*744*FLEN/8, x4, x1, x2)

inst_49129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffc0000000; valaddr_reg:x3; val_offset:147387*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147387*0 + 3*745*FLEN/8, x4, x1, x2)

inst_49130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffe0000000; valaddr_reg:x3; val_offset:147390*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147390*0 + 3*746*FLEN/8, x4, x1, x2)

inst_49131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffff0000000; valaddr_reg:x3; val_offset:147393*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147393*0 + 3*747*FLEN/8, x4, x1, x2)

inst_49132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffff8000000; valaddr_reg:x3; val_offset:147396*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147396*0 + 3*748*FLEN/8, x4, x1, x2)

inst_49133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffc000000; valaddr_reg:x3; val_offset:147399*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147399*0 + 3*749*FLEN/8, x4, x1, x2)

inst_49134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffe000000; valaddr_reg:x3; val_offset:147402*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147402*0 + 3*750*FLEN/8, x4, x1, x2)

inst_49135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffff000000; valaddr_reg:x3; val_offset:147405*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147405*0 + 3*751*FLEN/8, x4, x1, x2)

inst_49136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffff800000; valaddr_reg:x3; val_offset:147408*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147408*0 + 3*752*FLEN/8, x4, x1, x2)

inst_49137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffffc00000; valaddr_reg:x3; val_offset:147411*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147411*0 + 3*753*FLEN/8, x4, x1, x2)

inst_49138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffffe00000; valaddr_reg:x3; val_offset:147414*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147414*0 + 3*754*FLEN/8, x4, x1, x2)

inst_49139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffff00000; valaddr_reg:x3; val_offset:147417*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147417*0 + 3*755*FLEN/8, x4, x1, x2)

inst_49140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffff80000; valaddr_reg:x3; val_offset:147420*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147420*0 + 3*756*FLEN/8, x4, x1, x2)

inst_49141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffffc0000; valaddr_reg:x3; val_offset:147423*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147423*0 + 3*757*FLEN/8, x4, x1, x2)

inst_49142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffffe0000; valaddr_reg:x3; val_offset:147426*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147426*0 + 3*758*FLEN/8, x4, x1, x2)

inst_49143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffffff0000; valaddr_reg:x3; val_offset:147429*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147429*0 + 3*759*FLEN/8, x4, x1, x2)

inst_49144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffffff8000; valaddr_reg:x3; val_offset:147432*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147432*0 + 3*760*FLEN/8, x4, x1, x2)

inst_49145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffffffc000; valaddr_reg:x3; val_offset:147435*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147435*0 + 3*761*FLEN/8, x4, x1, x2)

inst_49146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffffffe000; valaddr_reg:x3; val_offset:147438*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147438*0 + 3*762*FLEN/8, x4, x1, x2)

inst_49147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffffff000; valaddr_reg:x3; val_offset:147441*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147441*0 + 3*763*FLEN/8, x4, x1, x2)

inst_49148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffffff800; valaddr_reg:x3; val_offset:147444*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147444*0 + 3*764*FLEN/8, x4, x1, x2)

inst_49149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffffffc00; valaddr_reg:x3; val_offset:147447*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147447*0 + 3*765*FLEN/8, x4, x1, x2)

inst_49150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dfffffffffffe00; valaddr_reg:x3; val_offset:147450*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147450*0 + 3*766*FLEN/8, x4, x1, x2)

inst_49151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe7051f6d4dd7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0x0d2170a79a8d4 and fs3 == 0 and fe3 == 0x3df and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9e7051f6d4dd7f; op2val:0x2040d2170a79a8d4;
op3val:0x3dffffffffffff00; valaddr_reg:x3; val_offset:147453*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147453*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378181120,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378443264,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378574336,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378639872,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378672640,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378689024,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378697216,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378701312,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378703360,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378704384,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378704896,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378705152,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378705280,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378705344,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378705376,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378705392,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378705400,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378705404,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378705406,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4044232465378705407,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889915318711395783,64,FLEN)
NAN_BOXED(2324174294676212020,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515557888,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515557889,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515557891,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515557895,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515557903,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515557919,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515557951,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515558015,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515558143,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515558399,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515558911,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515559935,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515561983,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515566079,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515574271,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515590655,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515623423,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515688959,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463515820031,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463516082175,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463516606463,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463517655039,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463519752191,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463523946495,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463532335103,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463549112319,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463582666751,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463649775615,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750463783993343,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750464052428799,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750464589299711,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750465663041535,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750467810525183,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750472105492479,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750480695427071,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750497875296255,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750532235034623,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750600954511359,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066750738393464831,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066751013271371775,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066751563027185663,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066752662538813439,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066754861562068991,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066759259608580095,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066768055701602303,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066785647887646719,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066820832259735551,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4066891201003913215,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4067031938492268543,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4067313413468979199,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4067876363422400511,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4069002263329243135,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4069002263329243136,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4070128163236085760,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4070691113189507072,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4070972588166217728,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071113325654573056,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071183694398750720,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071218878770839552,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071236470956883968,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071245267049906176,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071249665096417280,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071251864119672832,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071252963631300608,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071253513387114496,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071253788265021440,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071253925703974912,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071253994423451648,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254028783190016,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254045963059200,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254054552993792,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254058847961088,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254060995444736,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254062069186560,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254062606057472,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254062874492928,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063008710656,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063075819520,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063109373952,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063126151168,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063134539776,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063138734080,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063140831232,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063141879808,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142404096,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142666240,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142797312,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142862848,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142895616,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142912000,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142920192,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142924288,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142926336,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142927360,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142927872,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142928128,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142928256,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142928320,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142928352,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142928368,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142928376,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142928380,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142928382,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4071254063142928383,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889970891937342605,64,FLEN)
NAN_BOXED(2324142669047475682,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077632,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077633,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077635,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077639,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077647,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077663,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077695,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077759,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077887,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459078143,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459078655,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459079679,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459081727,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459085823,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459094015,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459110399,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459143167,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459208703,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459339775,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459601919,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420460126207,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420461174783,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420463271935,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420467466239,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420475854847,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420492632063,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420526186495,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420593295359,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420727513087,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420995948543,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530421532819455,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530422606561279,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530424754044927,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530429049012223,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530437638946815,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530454818815999,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530489178554367,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530557898031103,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530695336984575,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530970214891519,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421531519970705407,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421532619482333183,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421534818505588735,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421539216552099839,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421548012645122047,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421565604831166463,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421600789203255295,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421671157947432959,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421811895435788287,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9422093370412498943,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9422656320365920255,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9423782220272762879,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9423782220272762880,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9424908120179605504,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425471070133026816,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425752545109737472,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425893282598092800,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425963651342270464,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425998835714359296,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426016427900403712,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426025223993425920,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426029622039937024,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426031821063192576,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426032920574820352,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426033470330634240,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426033745208541184,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426033882647494656,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426033951366971392,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426033985726709760,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034002906578944,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034011496513536,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034015791480832,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034017938964480,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034019012706304,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034019549577216,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034019818012672,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034019952230400,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020019339264,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020052893696,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020069670912,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020078059520,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020082253824,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020084350976,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020085399552,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020085923840,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086185984,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086317056,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086382592,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086415360,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086431744,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086439936,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086444032,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086446080,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086447104,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086447616,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086447872,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448000,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448064,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448096,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448112,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448120,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448124,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448126,64,FLEN)
NAN_BOXED(6889994539564577485,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448127,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631680,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631681,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631683,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631687,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631695,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631711,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631743,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631807,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631935,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930632191,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930632703,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930633727,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930635775,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930639871,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930648063,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930664447,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930697215,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930762751,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930893823,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224931155967,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224931680255,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224932728831,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224934825983,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224939020287,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224947408895,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224964186111,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224997740543,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225064849407,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225199067135,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225467502591,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487226004373503,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487227078115327,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487229225598975,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487233520566271,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487242110500863,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487259290370047,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487293650108415,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487362369585151,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487499808538623,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487774686445567,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367488324442259455,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367489423953887231,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367491622977142783,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367496021023653887,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367504817116676095,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367522409302720511,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367557593674809343,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367627962418987007,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367768699907342335,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9368050174884052991,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9368613124837474303,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9369739024744316927,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9369739024744316928,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9370864924651159552,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371427874604580864,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371709349581291520,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371850087069646848,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371920455813824512,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371955640185913344,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371973232371957760,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371982028464979968,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371986426511491072,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371988625534746624,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371989725046374400,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990274802188288,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990549680095232,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990687119048704,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990755838525440,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990790198263808,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990807378132992,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990815968067584,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990820263034880,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990822410518528,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990823484260352,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824021131264,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824289566720,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824423784448,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824490893312,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824524447744,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824541224960,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824549613568,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824553807872,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824555905024,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824556953600,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557477888,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557740032,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557871104,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557936640,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557969408,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557985792,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557993984,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557998080,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558000128,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558001152,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558001664,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558001920,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002048,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002112,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002144,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002160,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002168,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002172,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002174,64,FLEN)
NAN_BOXED(6890015016673628881,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002175,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930112,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930113,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930115,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930119,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930127,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930143,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930175,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930239,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930367,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930623,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595931135,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595932159,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595934207,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595938303,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595946495,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595962879,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595995647,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596061183,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596192255,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596454399,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596978687,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418598027263,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418600124415,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418604318719,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418612707327,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418629484543,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418663038975,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418730147839,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418864365567,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419132801023,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419669671935,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048420743413759,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048422890897407,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048427185864703,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048435775799295,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048452955668479,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048487315406847,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048556034883583,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048693473837055,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048968351743999,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444049518107557887,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444050617619185663,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444052816642441215,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444057214688952319,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444066010781974527,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444083602968018943,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444118787340107775,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444189156084285439,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444329893572640767,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444611368549351423,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9445174318502772735,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615359,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615360,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447426118316457984,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447989068269879296,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448270543246589952,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448411280734945280,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448481649479122944,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448516833851211776,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448534426037256192,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448543222130278400,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448547620176789504,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448549819200045056,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448550918711672832,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551468467486720,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551743345393664,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551880784347136,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551949503823872,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551983863562240,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552001043431424,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552009633366016,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552013928333312,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552016075816960,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017149558784,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017686429696,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017954865152,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018089082880,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018156191744,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018189746176,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018206523392,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018214912000,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018219106304,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018221203456,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222252032,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222776320,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223038464,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223169536,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223235072,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223267840,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223284224,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223292416,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223296512,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223298560,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223299584,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300096,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300352,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300480,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300544,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300576,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300592,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300600,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300604,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300606,64,FLEN)
NAN_BOXED(6890027713700032527,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300607,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134556672,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134556673,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134556675,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134556679,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134556687,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134556703,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134556735,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134556799,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134556927,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134557183,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134557695,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134558719,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134560767,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134564863,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134573055,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134589439,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134622207,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134687743,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098134818815,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098135080959,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098135605247,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098136653823,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098138750975,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098142945279,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098151333887,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098168111103,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098201665535,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098268774399,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098402992127,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144098671427583,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144099208298495,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144100282040319,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144102429523967,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144106724491263,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144115314425855,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144132494295039,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144166854033407,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144235573510143,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144373012463615,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317144647890370559,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317145197646184447,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317146297157812223,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317148496181067775,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317152894227578879,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317161690320601087,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317179282506645503,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317214466878734335,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317284835622911999,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317425573111267327,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13317707048087977983,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13318269998041399295,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13319395897948241919,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13319395897948241920,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13320521797855084544,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321084747808505856,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321366222785216512,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321506960273571840,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321577329017749504,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321612513389838336,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321630105575882752,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321638901668904960,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321643299715416064,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321645498738671616,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321646598250299392,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647148006113280,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647422884020224,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647560322973696,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647629042450432,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647663402188800,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647680582057984,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647689171992576,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647693466959872,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647695614443520,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647696688185344,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697225056256,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697493491712,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697627709440,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697694818304,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697728372736,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697745149952,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697753538560,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697757732864,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697759830016,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697760878592,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761402880,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761665024,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761796096,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761861632,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761894400,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761910784,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761918976,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761923072,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761925120,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761926144,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761926656,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761926912,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761927040,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761927104,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761927136,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761927152,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761927160,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761927164,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761927166,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13321647697761927167,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890039139303053127,64,FLEN)
NAN_BOXED(11515951233462063672,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724161536,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724161537,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724161539,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724161543,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724161551,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724161567,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724161599,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724161663,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724161791,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724162047,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724162559,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724163583,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724165631,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724169727,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724177919,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724194303,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724227071,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724292607,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724423679,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230724685823,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230725210111,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230726258687,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230728355839,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230732550143,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230740938751,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230757715967,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230791270399,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230858379263,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067230992596991,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067231261032447,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067231797903359,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067232871645183,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067235019128831,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067239314096127,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067247904030719,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067265083899903,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067299443638271,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067368163115007,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067505602068479,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463067780479975423,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463068330235789311,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463069429747417087,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463071628770672639,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463076026817183743,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463084822910205951,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463102415096250367,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463137599468339199,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463207968212516863,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463348705700872191,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4463630180677582847,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4464193130631004159,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4465319030537846783,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4465319030537846784,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4466444930444689408,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467007880398110720,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467289355374821376,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467430092863176704,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467500461607354368,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467535645979443200,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467553238165487616,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467562034258509824,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467566432305020928,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467568631328276480,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467569730839904256,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570280595718144,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570555473625088,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570692912578560,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570761632055296,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570795991793664,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570813171662848,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570821761597440,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570826056564736,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570828204048384,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570829277790208,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570829814661120,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830083096576,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830217314304,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830284423168,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830317977600,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830334754816,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830343143424,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830347337728,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830349434880,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830350483456,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351007744,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351269888,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351400960,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351466496,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351499264,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351515648,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351523840,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351527936,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351529984,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351531008,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351531520,64,FLEN)
NAN_BOXED(6890067977259244927,64,FLEN)
NAN_BOXED(2324088404125001940,64,FLEN)
NAN_BOXED(4467570830351531776,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
