
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_62976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x253ffffffffffff; valaddr_reg:x3; val_offset:188928*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188928*0 + 3*0*FLEN/8, x4, x1, x2)

inst_62977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x257ffffffffffff; valaddr_reg:x3; val_offset:188931*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188931*0 + 3*1*FLEN/8, x4, x1, x2)

inst_62978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x258000000000000; valaddr_reg:x3; val_offset:188934*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188934*0 + 3*2*FLEN/8, x4, x1, x2)

inst_62979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25c000000000000; valaddr_reg:x3; val_offset:188937*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188937*0 + 3*3*FLEN/8, x4, x1, x2)

inst_62980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25e000000000000; valaddr_reg:x3; val_offset:188940*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188940*0 + 3*4*FLEN/8, x4, x1, x2)

inst_62981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25f000000000000; valaddr_reg:x3; val_offset:188943*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188943*0 + 3*5*FLEN/8, x4, x1, x2)

inst_62982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25f800000000000; valaddr_reg:x3; val_offset:188946*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188946*0 + 3*6*FLEN/8, x4, x1, x2)

inst_62983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fc00000000000; valaddr_reg:x3; val_offset:188949*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188949*0 + 3*7*FLEN/8, x4, x1, x2)

inst_62984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fe00000000000; valaddr_reg:x3; val_offset:188952*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188952*0 + 3*8*FLEN/8, x4, x1, x2)

inst_62985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ff00000000000; valaddr_reg:x3; val_offset:188955*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188955*0 + 3*9*FLEN/8, x4, x1, x2)

inst_62986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ff80000000000; valaddr_reg:x3; val_offset:188958*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188958*0 + 3*10*FLEN/8, x4, x1, x2)

inst_62987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffc0000000000; valaddr_reg:x3; val_offset:188961*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188961*0 + 3*11*FLEN/8, x4, x1, x2)

inst_62988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffe0000000000; valaddr_reg:x3; val_offset:188964*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188964*0 + 3*12*FLEN/8, x4, x1, x2)

inst_62989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fff0000000000; valaddr_reg:x3; val_offset:188967*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188967*0 + 3*13*FLEN/8, x4, x1, x2)

inst_62990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fff8000000000; valaddr_reg:x3; val_offset:188970*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188970*0 + 3*14*FLEN/8, x4, x1, x2)

inst_62991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffc000000000; valaddr_reg:x3; val_offset:188973*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188973*0 + 3*15*FLEN/8, x4, x1, x2)

inst_62992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffe000000000; valaddr_reg:x3; val_offset:188976*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188976*0 + 3*16*FLEN/8, x4, x1, x2)

inst_62993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffff000000000; valaddr_reg:x3; val_offset:188979*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188979*0 + 3*17*FLEN/8, x4, x1, x2)

inst_62994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffff800000000; valaddr_reg:x3; val_offset:188982*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188982*0 + 3*18*FLEN/8, x4, x1, x2)

inst_62995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffc00000000; valaddr_reg:x3; val_offset:188985*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188985*0 + 3*19*FLEN/8, x4, x1, x2)

inst_62996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffe00000000; valaddr_reg:x3; val_offset:188988*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188988*0 + 3*20*FLEN/8, x4, x1, x2)

inst_62997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffff00000000; valaddr_reg:x3; val_offset:188991*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188991*0 + 3*21*FLEN/8, x4, x1, x2)

inst_62998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffff80000000; valaddr_reg:x3; val_offset:188994*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188994*0 + 3*22*FLEN/8, x4, x1, x2)

inst_62999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffc0000000; valaddr_reg:x3; val_offset:188997*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 188997*0 + 3*23*FLEN/8, x4, x1, x2)

inst_63000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffe0000000; valaddr_reg:x3; val_offset:189000*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189000*0 + 3*24*FLEN/8, x4, x1, x2)

inst_63001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffff0000000; valaddr_reg:x3; val_offset:189003*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189003*0 + 3*25*FLEN/8, x4, x1, x2)

inst_63002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffff8000000; valaddr_reg:x3; val_offset:189006*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189006*0 + 3*26*FLEN/8, x4, x1, x2)

inst_63003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffc000000; valaddr_reg:x3; val_offset:189009*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189009*0 + 3*27*FLEN/8, x4, x1, x2)

inst_63004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffe000000; valaddr_reg:x3; val_offset:189012*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189012*0 + 3*28*FLEN/8, x4, x1, x2)

inst_63005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffff000000; valaddr_reg:x3; val_offset:189015*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189015*0 + 3*29*FLEN/8, x4, x1, x2)

inst_63006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffff800000; valaddr_reg:x3; val_offset:189018*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189018*0 + 3*30*FLEN/8, x4, x1, x2)

inst_63007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffffc00000; valaddr_reg:x3; val_offset:189021*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189021*0 + 3*31*FLEN/8, x4, x1, x2)

inst_63008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffffe00000; valaddr_reg:x3; val_offset:189024*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189024*0 + 3*32*FLEN/8, x4, x1, x2)

inst_63009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffff00000; valaddr_reg:x3; val_offset:189027*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189027*0 + 3*33*FLEN/8, x4, x1, x2)

inst_63010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffff80000; valaddr_reg:x3; val_offset:189030*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189030*0 + 3*34*FLEN/8, x4, x1, x2)

inst_63011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffffc0000; valaddr_reg:x3; val_offset:189033*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189033*0 + 3*35*FLEN/8, x4, x1, x2)

inst_63012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffffe0000; valaddr_reg:x3; val_offset:189036*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189036*0 + 3*36*FLEN/8, x4, x1, x2)

inst_63013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffffff0000; valaddr_reg:x3; val_offset:189039*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189039*0 + 3*37*FLEN/8, x4, x1, x2)

inst_63014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffffff8000; valaddr_reg:x3; val_offset:189042*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189042*0 + 3*38*FLEN/8, x4, x1, x2)

inst_63015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffffffc000; valaddr_reg:x3; val_offset:189045*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189045*0 + 3*39*FLEN/8, x4, x1, x2)

inst_63016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffffffe000; valaddr_reg:x3; val_offset:189048*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189048*0 + 3*40*FLEN/8, x4, x1, x2)

inst_63017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffffff000; valaddr_reg:x3; val_offset:189051*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189051*0 + 3*41*FLEN/8, x4, x1, x2)

inst_63018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffffff800; valaddr_reg:x3; val_offset:189054*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189054*0 + 3*42*FLEN/8, x4, x1, x2)

inst_63019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffffffc00; valaddr_reg:x3; val_offset:189057*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189057*0 + 3*43*FLEN/8, x4, x1, x2)

inst_63020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffffffe00; valaddr_reg:x3; val_offset:189060*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189060*0 + 3*44*FLEN/8, x4, x1, x2)

inst_63021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffffffff00; valaddr_reg:x3; val_offset:189063*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189063*0 + 3*45*FLEN/8, x4, x1, x2)

inst_63022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffffffff80; valaddr_reg:x3; val_offset:189066*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189066*0 + 3*46*FLEN/8, x4, x1, x2)

inst_63023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffffffffc0; valaddr_reg:x3; val_offset:189069*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189069*0 + 3*47*FLEN/8, x4, x1, x2)

inst_63024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffffffffe0; valaddr_reg:x3; val_offset:189072*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189072*0 + 3*48*FLEN/8, x4, x1, x2)

inst_63025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffffffff0; valaddr_reg:x3; val_offset:189075*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189075*0 + 3*49*FLEN/8, x4, x1, x2)

inst_63026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffffffff8; valaddr_reg:x3; val_offset:189078*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189078*0 + 3*50*FLEN/8, x4, x1, x2)

inst_63027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffffffffc; valaddr_reg:x3; val_offset:189081*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189081*0 + 3*51*FLEN/8, x4, x1, x2)

inst_63028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25ffffffffffffe; valaddr_reg:x3; val_offset:189084*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189084*0 + 3*52*FLEN/8, x4, x1, x2)

inst_63029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43562fa8c994a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43562fa8c994a; op2val:0x0;
op3val:0x25fffffffffffff; valaddr_reg:x3; val_offset:189087*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189087*0 + 3*53*FLEN/8, x4, x1, x2)

inst_63030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:189090*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189090*0 + 3*54*FLEN/8, x4, x1, x2)

inst_63031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:189093*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189093*0 + 3*55*FLEN/8, x4, x1, x2)

inst_63032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:189096*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189096*0 + 3*56*FLEN/8, x4, x1, x2)

inst_63033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:189099*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189099*0 + 3*57*FLEN/8, x4, x1, x2)

inst_63034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:189102*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189102*0 + 3*58*FLEN/8, x4, x1, x2)

inst_63035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:189105*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189105*0 + 3*59*FLEN/8, x4, x1, x2)

inst_63036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:189108*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189108*0 + 3*60*FLEN/8, x4, x1, x2)

inst_63037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:189111*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189111*0 + 3*61*FLEN/8, x4, x1, x2)

inst_63038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:189114*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189114*0 + 3*62*FLEN/8, x4, x1, x2)

inst_63039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:189117*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189117*0 + 3*63*FLEN/8, x4, x1, x2)

inst_63040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:189120*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189120*0 + 3*64*FLEN/8, x4, x1, x2)

inst_63041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:189123*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189123*0 + 3*65*FLEN/8, x4, x1, x2)

inst_63042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:189126*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189126*0 + 3*66*FLEN/8, x4, x1, x2)

inst_63043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:189129*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189129*0 + 3*67*FLEN/8, x4, x1, x2)

inst_63044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:189132*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189132*0 + 3*68*FLEN/8, x4, x1, x2)

inst_63045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:189135*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189135*0 + 3*69*FLEN/8, x4, x1, x2)

inst_63046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:189138*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189138*0 + 3*70*FLEN/8, x4, x1, x2)

inst_63047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:189141*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189141*0 + 3*71*FLEN/8, x4, x1, x2)

inst_63048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:189144*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189144*0 + 3*72*FLEN/8, x4, x1, x2)

inst_63049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:189147*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189147*0 + 3*73*FLEN/8, x4, x1, x2)

inst_63050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:189150*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189150*0 + 3*74*FLEN/8, x4, x1, x2)

inst_63051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:189153*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189153*0 + 3*75*FLEN/8, x4, x1, x2)

inst_63052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000000000000; valaddr_reg:x3; val_offset:189156*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189156*0 + 3*76*FLEN/8, x4, x1, x2)

inst_63053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000000000001; valaddr_reg:x3; val_offset:189159*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189159*0 + 3*77*FLEN/8, x4, x1, x2)

inst_63054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000000000003; valaddr_reg:x3; val_offset:189162*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189162*0 + 3*78*FLEN/8, x4, x1, x2)

inst_63055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000000000007; valaddr_reg:x3; val_offset:189165*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189165*0 + 3*79*FLEN/8, x4, x1, x2)

inst_63056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000000000000f; valaddr_reg:x3; val_offset:189168*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189168*0 + 3*80*FLEN/8, x4, x1, x2)

inst_63057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000000000001f; valaddr_reg:x3; val_offset:189171*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189171*0 + 3*81*FLEN/8, x4, x1, x2)

inst_63058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000000000003f; valaddr_reg:x3; val_offset:189174*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189174*0 + 3*82*FLEN/8, x4, x1, x2)

inst_63059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000000000007f; valaddr_reg:x3; val_offset:189177*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189177*0 + 3*83*FLEN/8, x4, x1, x2)

inst_63060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900000000000ff; valaddr_reg:x3; val_offset:189180*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189180*0 + 3*84*FLEN/8, x4, x1, x2)

inst_63061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900000000001ff; valaddr_reg:x3; val_offset:189183*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189183*0 + 3*85*FLEN/8, x4, x1, x2)

inst_63062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900000000003ff; valaddr_reg:x3; val_offset:189186*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189186*0 + 3*86*FLEN/8, x4, x1, x2)

inst_63063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900000000007ff; valaddr_reg:x3; val_offset:189189*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189189*0 + 3*87*FLEN/8, x4, x1, x2)

inst_63064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000000000fff; valaddr_reg:x3; val_offset:189192*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189192*0 + 3*88*FLEN/8, x4, x1, x2)

inst_63065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000000001fff; valaddr_reg:x3; val_offset:189195*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189195*0 + 3*89*FLEN/8, x4, x1, x2)

inst_63066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000000003fff; valaddr_reg:x3; val_offset:189198*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189198*0 + 3*90*FLEN/8, x4, x1, x2)

inst_63067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000000007fff; valaddr_reg:x3; val_offset:189201*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189201*0 + 3*91*FLEN/8, x4, x1, x2)

inst_63068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000000000ffff; valaddr_reg:x3; val_offset:189204*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189204*0 + 3*92*FLEN/8, x4, x1, x2)

inst_63069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000000001ffff; valaddr_reg:x3; val_offset:189207*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189207*0 + 3*93*FLEN/8, x4, x1, x2)

inst_63070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000000003ffff; valaddr_reg:x3; val_offset:189210*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189210*0 + 3*94*FLEN/8, x4, x1, x2)

inst_63071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000000007ffff; valaddr_reg:x3; val_offset:189213*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189213*0 + 3*95*FLEN/8, x4, x1, x2)

inst_63072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900000000fffff; valaddr_reg:x3; val_offset:189216*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189216*0 + 3*96*FLEN/8, x4, x1, x2)

inst_63073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900000001fffff; valaddr_reg:x3; val_offset:189219*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189219*0 + 3*97*FLEN/8, x4, x1, x2)

inst_63074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900000003fffff; valaddr_reg:x3; val_offset:189222*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189222*0 + 3*98*FLEN/8, x4, x1, x2)

inst_63075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900000007fffff; valaddr_reg:x3; val_offset:189225*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189225*0 + 3*99*FLEN/8, x4, x1, x2)

inst_63076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000000ffffff; valaddr_reg:x3; val_offset:189228*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189228*0 + 3*100*FLEN/8, x4, x1, x2)

inst_63077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000001ffffff; valaddr_reg:x3; val_offset:189231*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189231*0 + 3*101*FLEN/8, x4, x1, x2)

inst_63078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000003ffffff; valaddr_reg:x3; val_offset:189234*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189234*0 + 3*102*FLEN/8, x4, x1, x2)

inst_63079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000007ffffff; valaddr_reg:x3; val_offset:189237*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189237*0 + 3*103*FLEN/8, x4, x1, x2)

inst_63080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000000fffffff; valaddr_reg:x3; val_offset:189240*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189240*0 + 3*104*FLEN/8, x4, x1, x2)

inst_63081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000001fffffff; valaddr_reg:x3; val_offset:189243*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189243*0 + 3*105*FLEN/8, x4, x1, x2)

inst_63082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000003fffffff; valaddr_reg:x3; val_offset:189246*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189246*0 + 3*106*FLEN/8, x4, x1, x2)

inst_63083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000007fffffff; valaddr_reg:x3; val_offset:189249*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189249*0 + 3*107*FLEN/8, x4, x1, x2)

inst_63084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900000ffffffff; valaddr_reg:x3; val_offset:189252*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189252*0 + 3*108*FLEN/8, x4, x1, x2)

inst_63085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900001ffffffff; valaddr_reg:x3; val_offset:189255*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189255*0 + 3*109*FLEN/8, x4, x1, x2)

inst_63086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900003ffffffff; valaddr_reg:x3; val_offset:189258*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189258*0 + 3*110*FLEN/8, x4, x1, x2)

inst_63087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900007ffffffff; valaddr_reg:x3; val_offset:189261*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189261*0 + 3*111*FLEN/8, x4, x1, x2)

inst_63088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390000fffffffff; valaddr_reg:x3; val_offset:189264*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189264*0 + 3*112*FLEN/8, x4, x1, x2)

inst_63089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390001fffffffff; valaddr_reg:x3; val_offset:189267*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189267*0 + 3*113*FLEN/8, x4, x1, x2)

inst_63090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390003fffffffff; valaddr_reg:x3; val_offset:189270*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189270*0 + 3*114*FLEN/8, x4, x1, x2)

inst_63091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390007fffffffff; valaddr_reg:x3; val_offset:189273*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189273*0 + 3*115*FLEN/8, x4, x1, x2)

inst_63092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39000ffffffffff; valaddr_reg:x3; val_offset:189276*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189276*0 + 3*116*FLEN/8, x4, x1, x2)

inst_63093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39001ffffffffff; valaddr_reg:x3; val_offset:189279*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189279*0 + 3*117*FLEN/8, x4, x1, x2)

inst_63094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39003ffffffffff; valaddr_reg:x3; val_offset:189282*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189282*0 + 3*118*FLEN/8, x4, x1, x2)

inst_63095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39007ffffffffff; valaddr_reg:x3; val_offset:189285*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189285*0 + 3*119*FLEN/8, x4, x1, x2)

inst_63096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3900fffffffffff; valaddr_reg:x3; val_offset:189288*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189288*0 + 3*120*FLEN/8, x4, x1, x2)

inst_63097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3901fffffffffff; valaddr_reg:x3; val_offset:189291*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189291*0 + 3*121*FLEN/8, x4, x1, x2)

inst_63098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3903fffffffffff; valaddr_reg:x3; val_offset:189294*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189294*0 + 3*122*FLEN/8, x4, x1, x2)

inst_63099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x3907fffffffffff; valaddr_reg:x3; val_offset:189297*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189297*0 + 3*123*FLEN/8, x4, x1, x2)

inst_63100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x390ffffffffffff; valaddr_reg:x3; val_offset:189300*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189300*0 + 3*124*FLEN/8, x4, x1, x2)

inst_63101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x391ffffffffffff; valaddr_reg:x3; val_offset:189303*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189303*0 + 3*125*FLEN/8, x4, x1, x2)

inst_63102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x393ffffffffffff; valaddr_reg:x3; val_offset:189306*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189306*0 + 3*126*FLEN/8, x4, x1, x2)

inst_63103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x397ffffffffffff; valaddr_reg:x3; val_offset:189309*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189309*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_63104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x398000000000000; valaddr_reg:x3; val_offset:189312*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189312*0 + 3*128*FLEN/8, x4, x1, x2)

inst_63105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39c000000000000; valaddr_reg:x3; val_offset:189315*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189315*0 + 3*129*FLEN/8, x4, x1, x2)

inst_63106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39e000000000000; valaddr_reg:x3; val_offset:189318*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189318*0 + 3*130*FLEN/8, x4, x1, x2)

inst_63107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39f000000000000; valaddr_reg:x3; val_offset:189321*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189321*0 + 3*131*FLEN/8, x4, x1, x2)

inst_63108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39f800000000000; valaddr_reg:x3; val_offset:189324*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189324*0 + 3*132*FLEN/8, x4, x1, x2)

inst_63109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fc00000000000; valaddr_reg:x3; val_offset:189327*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189327*0 + 3*133*FLEN/8, x4, x1, x2)

inst_63110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fe00000000000; valaddr_reg:x3; val_offset:189330*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189330*0 + 3*134*FLEN/8, x4, x1, x2)

inst_63111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ff00000000000; valaddr_reg:x3; val_offset:189333*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189333*0 + 3*135*FLEN/8, x4, x1, x2)

inst_63112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ff80000000000; valaddr_reg:x3; val_offset:189336*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189336*0 + 3*136*FLEN/8, x4, x1, x2)

inst_63113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffc0000000000; valaddr_reg:x3; val_offset:189339*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189339*0 + 3*137*FLEN/8, x4, x1, x2)

inst_63114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffe0000000000; valaddr_reg:x3; val_offset:189342*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189342*0 + 3*138*FLEN/8, x4, x1, x2)

inst_63115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fff0000000000; valaddr_reg:x3; val_offset:189345*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189345*0 + 3*139*FLEN/8, x4, x1, x2)

inst_63116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fff8000000000; valaddr_reg:x3; val_offset:189348*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189348*0 + 3*140*FLEN/8, x4, x1, x2)

inst_63117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffc000000000; valaddr_reg:x3; val_offset:189351*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189351*0 + 3*141*FLEN/8, x4, x1, x2)

inst_63118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffe000000000; valaddr_reg:x3; val_offset:189354*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189354*0 + 3*142*FLEN/8, x4, x1, x2)

inst_63119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffff000000000; valaddr_reg:x3; val_offset:189357*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189357*0 + 3*143*FLEN/8, x4, x1, x2)

inst_63120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffff800000000; valaddr_reg:x3; val_offset:189360*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189360*0 + 3*144*FLEN/8, x4, x1, x2)

inst_63121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffc00000000; valaddr_reg:x3; val_offset:189363*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189363*0 + 3*145*FLEN/8, x4, x1, x2)

inst_63122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffe00000000; valaddr_reg:x3; val_offset:189366*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189366*0 + 3*146*FLEN/8, x4, x1, x2)

inst_63123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffff00000000; valaddr_reg:x3; val_offset:189369*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189369*0 + 3*147*FLEN/8, x4, x1, x2)

inst_63124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffff80000000; valaddr_reg:x3; val_offset:189372*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189372*0 + 3*148*FLEN/8, x4, x1, x2)

inst_63125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffc0000000; valaddr_reg:x3; val_offset:189375*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189375*0 + 3*149*FLEN/8, x4, x1, x2)

inst_63126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffe0000000; valaddr_reg:x3; val_offset:189378*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189378*0 + 3*150*FLEN/8, x4, x1, x2)

inst_63127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffff0000000; valaddr_reg:x3; val_offset:189381*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189381*0 + 3*151*FLEN/8, x4, x1, x2)

inst_63128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffff8000000; valaddr_reg:x3; val_offset:189384*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189384*0 + 3*152*FLEN/8, x4, x1, x2)

inst_63129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffc000000; valaddr_reg:x3; val_offset:189387*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189387*0 + 3*153*FLEN/8, x4, x1, x2)

inst_63130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffe000000; valaddr_reg:x3; val_offset:189390*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189390*0 + 3*154*FLEN/8, x4, x1, x2)

inst_63131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffff000000; valaddr_reg:x3; val_offset:189393*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189393*0 + 3*155*FLEN/8, x4, x1, x2)

inst_63132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffff800000; valaddr_reg:x3; val_offset:189396*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189396*0 + 3*156*FLEN/8, x4, x1, x2)

inst_63133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffffc00000; valaddr_reg:x3; val_offset:189399*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189399*0 + 3*157*FLEN/8, x4, x1, x2)

inst_63134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffffe00000; valaddr_reg:x3; val_offset:189402*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189402*0 + 3*158*FLEN/8, x4, x1, x2)

inst_63135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffff00000; valaddr_reg:x3; val_offset:189405*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189405*0 + 3*159*FLEN/8, x4, x1, x2)

inst_63136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffff80000; valaddr_reg:x3; val_offset:189408*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189408*0 + 3*160*FLEN/8, x4, x1, x2)

inst_63137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffffc0000; valaddr_reg:x3; val_offset:189411*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189411*0 + 3*161*FLEN/8, x4, x1, x2)

inst_63138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffffe0000; valaddr_reg:x3; val_offset:189414*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189414*0 + 3*162*FLEN/8, x4, x1, x2)

inst_63139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffffff0000; valaddr_reg:x3; val_offset:189417*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189417*0 + 3*163*FLEN/8, x4, x1, x2)

inst_63140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffffff8000; valaddr_reg:x3; val_offset:189420*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189420*0 + 3*164*FLEN/8, x4, x1, x2)

inst_63141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffffffc000; valaddr_reg:x3; val_offset:189423*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189423*0 + 3*165*FLEN/8, x4, x1, x2)

inst_63142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffffffe000; valaddr_reg:x3; val_offset:189426*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189426*0 + 3*166*FLEN/8, x4, x1, x2)

inst_63143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffffff000; valaddr_reg:x3; val_offset:189429*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189429*0 + 3*167*FLEN/8, x4, x1, x2)

inst_63144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffffff800; valaddr_reg:x3; val_offset:189432*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189432*0 + 3*168*FLEN/8, x4, x1, x2)

inst_63145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffffffc00; valaddr_reg:x3; val_offset:189435*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189435*0 + 3*169*FLEN/8, x4, x1, x2)

inst_63146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffffffe00; valaddr_reg:x3; val_offset:189438*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189438*0 + 3*170*FLEN/8, x4, x1, x2)

inst_63147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffffffff00; valaddr_reg:x3; val_offset:189441*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189441*0 + 3*171*FLEN/8, x4, x1, x2)

inst_63148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffffffff80; valaddr_reg:x3; val_offset:189444*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189444*0 + 3*172*FLEN/8, x4, x1, x2)

inst_63149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffffffffc0; valaddr_reg:x3; val_offset:189447*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189447*0 + 3*173*FLEN/8, x4, x1, x2)

inst_63150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffffffffe0; valaddr_reg:x3; val_offset:189450*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189450*0 + 3*174*FLEN/8, x4, x1, x2)

inst_63151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffffffff0; valaddr_reg:x3; val_offset:189453*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189453*0 + 3*175*FLEN/8, x4, x1, x2)

inst_63152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffffffff8; valaddr_reg:x3; val_offset:189456*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189456*0 + 3*176*FLEN/8, x4, x1, x2)

inst_63153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffffffffc; valaddr_reg:x3; val_offset:189459*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189459*0 + 3*177*FLEN/8, x4, x1, x2)

inst_63154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39ffffffffffffe; valaddr_reg:x3; val_offset:189462*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189462*0 + 3*178*FLEN/8, x4, x1, x2)

inst_63155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43974304d25d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43974304d25d0; op2val:0x0;
op3val:0x39fffffffffffff; valaddr_reg:x3; val_offset:189465*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189465*0 + 3*179*FLEN/8, x4, x1, x2)

inst_63156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:189468*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189468*0 + 3*180*FLEN/8, x4, x1, x2)

inst_63157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:189471*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189471*0 + 3*181*FLEN/8, x4, x1, x2)

inst_63158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:189474*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189474*0 + 3*182*FLEN/8, x4, x1, x2)

inst_63159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:189477*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189477*0 + 3*183*FLEN/8, x4, x1, x2)

inst_63160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:189480*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189480*0 + 3*184*FLEN/8, x4, x1, x2)

inst_63161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:189483*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189483*0 + 3*185*FLEN/8, x4, x1, x2)

inst_63162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:189486*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189486*0 + 3*186*FLEN/8, x4, x1, x2)

inst_63163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:189489*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189489*0 + 3*187*FLEN/8, x4, x1, x2)

inst_63164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:189492*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189492*0 + 3*188*FLEN/8, x4, x1, x2)

inst_63165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:189495*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189495*0 + 3*189*FLEN/8, x4, x1, x2)

inst_63166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:189498*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189498*0 + 3*190*FLEN/8, x4, x1, x2)

inst_63167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:189501*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189501*0 + 3*191*FLEN/8, x4, x1, x2)

inst_63168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:189504*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189504*0 + 3*192*FLEN/8, x4, x1, x2)

inst_63169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:189507*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189507*0 + 3*193*FLEN/8, x4, x1, x2)

inst_63170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:189510*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189510*0 + 3*194*FLEN/8, x4, x1, x2)

inst_63171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:189513*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189513*0 + 3*195*FLEN/8, x4, x1, x2)

inst_63172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:189516*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189516*0 + 3*196*FLEN/8, x4, x1, x2)

inst_63173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:189519*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189519*0 + 3*197*FLEN/8, x4, x1, x2)

inst_63174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:189522*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189522*0 + 3*198*FLEN/8, x4, x1, x2)

inst_63175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:189525*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189525*0 + 3*199*FLEN/8, x4, x1, x2)

inst_63176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:189528*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189528*0 + 3*200*FLEN/8, x4, x1, x2)

inst_63177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:189531*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189531*0 + 3*201*FLEN/8, x4, x1, x2)

inst_63178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000000000000; valaddr_reg:x3; val_offset:189534*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189534*0 + 3*202*FLEN/8, x4, x1, x2)

inst_63179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000000000001; valaddr_reg:x3; val_offset:189537*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189537*0 + 3*203*FLEN/8, x4, x1, x2)

inst_63180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000000000003; valaddr_reg:x3; val_offset:189540*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189540*0 + 3*204*FLEN/8, x4, x1, x2)

inst_63181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000000000007; valaddr_reg:x3; val_offset:189543*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189543*0 + 3*205*FLEN/8, x4, x1, x2)

inst_63182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000000000000f; valaddr_reg:x3; val_offset:189546*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189546*0 + 3*206*FLEN/8, x4, x1, x2)

inst_63183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000000000001f; valaddr_reg:x3; val_offset:189549*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189549*0 + 3*207*FLEN/8, x4, x1, x2)

inst_63184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000000000003f; valaddr_reg:x3; val_offset:189552*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189552*0 + 3*208*FLEN/8, x4, x1, x2)

inst_63185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000000000007f; valaddr_reg:x3; val_offset:189555*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189555*0 + 3*209*FLEN/8, x4, x1, x2)

inst_63186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800000000000ff; valaddr_reg:x3; val_offset:189558*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189558*0 + 3*210*FLEN/8, x4, x1, x2)

inst_63187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800000000001ff; valaddr_reg:x3; val_offset:189561*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189561*0 + 3*211*FLEN/8, x4, x1, x2)

inst_63188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800000000003ff; valaddr_reg:x3; val_offset:189564*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189564*0 + 3*212*FLEN/8, x4, x1, x2)

inst_63189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800000000007ff; valaddr_reg:x3; val_offset:189567*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189567*0 + 3*213*FLEN/8, x4, x1, x2)

inst_63190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000000000fff; valaddr_reg:x3; val_offset:189570*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189570*0 + 3*214*FLEN/8, x4, x1, x2)

inst_63191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000000001fff; valaddr_reg:x3; val_offset:189573*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189573*0 + 3*215*FLEN/8, x4, x1, x2)

inst_63192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000000003fff; valaddr_reg:x3; val_offset:189576*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189576*0 + 3*216*FLEN/8, x4, x1, x2)

inst_63193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000000007fff; valaddr_reg:x3; val_offset:189579*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189579*0 + 3*217*FLEN/8, x4, x1, x2)

inst_63194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000000000ffff; valaddr_reg:x3; val_offset:189582*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189582*0 + 3*218*FLEN/8, x4, x1, x2)

inst_63195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000000001ffff; valaddr_reg:x3; val_offset:189585*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189585*0 + 3*219*FLEN/8, x4, x1, x2)

inst_63196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000000003ffff; valaddr_reg:x3; val_offset:189588*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189588*0 + 3*220*FLEN/8, x4, x1, x2)

inst_63197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000000007ffff; valaddr_reg:x3; val_offset:189591*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189591*0 + 3*221*FLEN/8, x4, x1, x2)

inst_63198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800000000fffff; valaddr_reg:x3; val_offset:189594*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189594*0 + 3*222*FLEN/8, x4, x1, x2)

inst_63199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800000001fffff; valaddr_reg:x3; val_offset:189597*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189597*0 + 3*223*FLEN/8, x4, x1, x2)

inst_63200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800000003fffff; valaddr_reg:x3; val_offset:189600*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189600*0 + 3*224*FLEN/8, x4, x1, x2)

inst_63201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800000007fffff; valaddr_reg:x3; val_offset:189603*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189603*0 + 3*225*FLEN/8, x4, x1, x2)

inst_63202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000000ffffff; valaddr_reg:x3; val_offset:189606*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189606*0 + 3*226*FLEN/8, x4, x1, x2)

inst_63203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000001ffffff; valaddr_reg:x3; val_offset:189609*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189609*0 + 3*227*FLEN/8, x4, x1, x2)

inst_63204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000003ffffff; valaddr_reg:x3; val_offset:189612*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189612*0 + 3*228*FLEN/8, x4, x1, x2)

inst_63205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000007ffffff; valaddr_reg:x3; val_offset:189615*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189615*0 + 3*229*FLEN/8, x4, x1, x2)

inst_63206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000000fffffff; valaddr_reg:x3; val_offset:189618*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189618*0 + 3*230*FLEN/8, x4, x1, x2)

inst_63207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000001fffffff; valaddr_reg:x3; val_offset:189621*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189621*0 + 3*231*FLEN/8, x4, x1, x2)

inst_63208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000003fffffff; valaddr_reg:x3; val_offset:189624*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189624*0 + 3*232*FLEN/8, x4, x1, x2)

inst_63209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000007fffffff; valaddr_reg:x3; val_offset:189627*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189627*0 + 3*233*FLEN/8, x4, x1, x2)

inst_63210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800000ffffffff; valaddr_reg:x3; val_offset:189630*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189630*0 + 3*234*FLEN/8, x4, x1, x2)

inst_63211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800001ffffffff; valaddr_reg:x3; val_offset:189633*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189633*0 + 3*235*FLEN/8, x4, x1, x2)

inst_63212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800003ffffffff; valaddr_reg:x3; val_offset:189636*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189636*0 + 3*236*FLEN/8, x4, x1, x2)

inst_63213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800007ffffffff; valaddr_reg:x3; val_offset:189639*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189639*0 + 3*237*FLEN/8, x4, x1, x2)

inst_63214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380000fffffffff; valaddr_reg:x3; val_offset:189642*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189642*0 + 3*238*FLEN/8, x4, x1, x2)

inst_63215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380001fffffffff; valaddr_reg:x3; val_offset:189645*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189645*0 + 3*239*FLEN/8, x4, x1, x2)

inst_63216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380003fffffffff; valaddr_reg:x3; val_offset:189648*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189648*0 + 3*240*FLEN/8, x4, x1, x2)

inst_63217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380007fffffffff; valaddr_reg:x3; val_offset:189651*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189651*0 + 3*241*FLEN/8, x4, x1, x2)

inst_63218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38000ffffffffff; valaddr_reg:x3; val_offset:189654*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189654*0 + 3*242*FLEN/8, x4, x1, x2)

inst_63219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38001ffffffffff; valaddr_reg:x3; val_offset:189657*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189657*0 + 3*243*FLEN/8, x4, x1, x2)

inst_63220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38003ffffffffff; valaddr_reg:x3; val_offset:189660*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189660*0 + 3*244*FLEN/8, x4, x1, x2)

inst_63221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38007ffffffffff; valaddr_reg:x3; val_offset:189663*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189663*0 + 3*245*FLEN/8, x4, x1, x2)

inst_63222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3800fffffffffff; valaddr_reg:x3; val_offset:189666*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189666*0 + 3*246*FLEN/8, x4, x1, x2)

inst_63223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3801fffffffffff; valaddr_reg:x3; val_offset:189669*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189669*0 + 3*247*FLEN/8, x4, x1, x2)

inst_63224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3803fffffffffff; valaddr_reg:x3; val_offset:189672*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189672*0 + 3*248*FLEN/8, x4, x1, x2)

inst_63225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x3807fffffffffff; valaddr_reg:x3; val_offset:189675*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189675*0 + 3*249*FLEN/8, x4, x1, x2)

inst_63226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x380ffffffffffff; valaddr_reg:x3; val_offset:189678*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189678*0 + 3*250*FLEN/8, x4, x1, x2)

inst_63227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x381ffffffffffff; valaddr_reg:x3; val_offset:189681*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189681*0 + 3*251*FLEN/8, x4, x1, x2)

inst_63228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x383ffffffffffff; valaddr_reg:x3; val_offset:189684*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189684*0 + 3*252*FLEN/8, x4, x1, x2)

inst_63229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x387ffffffffffff; valaddr_reg:x3; val_offset:189687*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189687*0 + 3*253*FLEN/8, x4, x1, x2)

inst_63230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x388000000000000; valaddr_reg:x3; val_offset:189690*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189690*0 + 3*254*FLEN/8, x4, x1, x2)

inst_63231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38c000000000000; valaddr_reg:x3; val_offset:189693*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189693*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_63232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38e000000000000; valaddr_reg:x3; val_offset:189696*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189696*0 + 3*256*FLEN/8, x4, x1, x2)

inst_63233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38f000000000000; valaddr_reg:x3; val_offset:189699*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189699*0 + 3*257*FLEN/8, x4, x1, x2)

inst_63234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38f800000000000; valaddr_reg:x3; val_offset:189702*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189702*0 + 3*258*FLEN/8, x4, x1, x2)

inst_63235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fc00000000000; valaddr_reg:x3; val_offset:189705*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189705*0 + 3*259*FLEN/8, x4, x1, x2)

inst_63236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fe00000000000; valaddr_reg:x3; val_offset:189708*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189708*0 + 3*260*FLEN/8, x4, x1, x2)

inst_63237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ff00000000000; valaddr_reg:x3; val_offset:189711*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189711*0 + 3*261*FLEN/8, x4, x1, x2)

inst_63238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ff80000000000; valaddr_reg:x3; val_offset:189714*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189714*0 + 3*262*FLEN/8, x4, x1, x2)

inst_63239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffc0000000000; valaddr_reg:x3; val_offset:189717*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189717*0 + 3*263*FLEN/8, x4, x1, x2)

inst_63240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffe0000000000; valaddr_reg:x3; val_offset:189720*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189720*0 + 3*264*FLEN/8, x4, x1, x2)

inst_63241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fff0000000000; valaddr_reg:x3; val_offset:189723*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189723*0 + 3*265*FLEN/8, x4, x1, x2)

inst_63242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fff8000000000; valaddr_reg:x3; val_offset:189726*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189726*0 + 3*266*FLEN/8, x4, x1, x2)

inst_63243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffc000000000; valaddr_reg:x3; val_offset:189729*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189729*0 + 3*267*FLEN/8, x4, x1, x2)

inst_63244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffe000000000; valaddr_reg:x3; val_offset:189732*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189732*0 + 3*268*FLEN/8, x4, x1, x2)

inst_63245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffff000000000; valaddr_reg:x3; val_offset:189735*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189735*0 + 3*269*FLEN/8, x4, x1, x2)

inst_63246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffff800000000; valaddr_reg:x3; val_offset:189738*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189738*0 + 3*270*FLEN/8, x4, x1, x2)

inst_63247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffc00000000; valaddr_reg:x3; val_offset:189741*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189741*0 + 3*271*FLEN/8, x4, x1, x2)

inst_63248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffe00000000; valaddr_reg:x3; val_offset:189744*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189744*0 + 3*272*FLEN/8, x4, x1, x2)

inst_63249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffff00000000; valaddr_reg:x3; val_offset:189747*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189747*0 + 3*273*FLEN/8, x4, x1, x2)

inst_63250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffff80000000; valaddr_reg:x3; val_offset:189750*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189750*0 + 3*274*FLEN/8, x4, x1, x2)

inst_63251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffc0000000; valaddr_reg:x3; val_offset:189753*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189753*0 + 3*275*FLEN/8, x4, x1, x2)

inst_63252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffe0000000; valaddr_reg:x3; val_offset:189756*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189756*0 + 3*276*FLEN/8, x4, x1, x2)

inst_63253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffff0000000; valaddr_reg:x3; val_offset:189759*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189759*0 + 3*277*FLEN/8, x4, x1, x2)

inst_63254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffff8000000; valaddr_reg:x3; val_offset:189762*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189762*0 + 3*278*FLEN/8, x4, x1, x2)

inst_63255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffc000000; valaddr_reg:x3; val_offset:189765*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189765*0 + 3*279*FLEN/8, x4, x1, x2)

inst_63256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffe000000; valaddr_reg:x3; val_offset:189768*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189768*0 + 3*280*FLEN/8, x4, x1, x2)

inst_63257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffff000000; valaddr_reg:x3; val_offset:189771*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189771*0 + 3*281*FLEN/8, x4, x1, x2)

inst_63258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffff800000; valaddr_reg:x3; val_offset:189774*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189774*0 + 3*282*FLEN/8, x4, x1, x2)

inst_63259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffffc00000; valaddr_reg:x3; val_offset:189777*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189777*0 + 3*283*FLEN/8, x4, x1, x2)

inst_63260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffffe00000; valaddr_reg:x3; val_offset:189780*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189780*0 + 3*284*FLEN/8, x4, x1, x2)

inst_63261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffff00000; valaddr_reg:x3; val_offset:189783*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189783*0 + 3*285*FLEN/8, x4, x1, x2)

inst_63262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffff80000; valaddr_reg:x3; val_offset:189786*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189786*0 + 3*286*FLEN/8, x4, x1, x2)

inst_63263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffffc0000; valaddr_reg:x3; val_offset:189789*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189789*0 + 3*287*FLEN/8, x4, x1, x2)

inst_63264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffffe0000; valaddr_reg:x3; val_offset:189792*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189792*0 + 3*288*FLEN/8, x4, x1, x2)

inst_63265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffffff0000; valaddr_reg:x3; val_offset:189795*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189795*0 + 3*289*FLEN/8, x4, x1, x2)

inst_63266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffffff8000; valaddr_reg:x3; val_offset:189798*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189798*0 + 3*290*FLEN/8, x4, x1, x2)

inst_63267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffffffc000; valaddr_reg:x3; val_offset:189801*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189801*0 + 3*291*FLEN/8, x4, x1, x2)

inst_63268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffffffe000; valaddr_reg:x3; val_offset:189804*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189804*0 + 3*292*FLEN/8, x4, x1, x2)

inst_63269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffffff000; valaddr_reg:x3; val_offset:189807*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189807*0 + 3*293*FLEN/8, x4, x1, x2)

inst_63270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffffff800; valaddr_reg:x3; val_offset:189810*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189810*0 + 3*294*FLEN/8, x4, x1, x2)

inst_63271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffffffc00; valaddr_reg:x3; val_offset:189813*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189813*0 + 3*295*FLEN/8, x4, x1, x2)

inst_63272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffffffe00; valaddr_reg:x3; val_offset:189816*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189816*0 + 3*296*FLEN/8, x4, x1, x2)

inst_63273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffffffff00; valaddr_reg:x3; val_offset:189819*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189819*0 + 3*297*FLEN/8, x4, x1, x2)

inst_63274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffffffff80; valaddr_reg:x3; val_offset:189822*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189822*0 + 3*298*FLEN/8, x4, x1, x2)

inst_63275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffffffffc0; valaddr_reg:x3; val_offset:189825*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189825*0 + 3*299*FLEN/8, x4, x1, x2)

inst_63276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffffffffe0; valaddr_reg:x3; val_offset:189828*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189828*0 + 3*300*FLEN/8, x4, x1, x2)

inst_63277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffffffff0; valaddr_reg:x3; val_offset:189831*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189831*0 + 3*301*FLEN/8, x4, x1, x2)

inst_63278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffffffff8; valaddr_reg:x3; val_offset:189834*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189834*0 + 3*302*FLEN/8, x4, x1, x2)

inst_63279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffffffffc; valaddr_reg:x3; val_offset:189837*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189837*0 + 3*303*FLEN/8, x4, x1, x2)

inst_63280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38ffffffffffffe; valaddr_reg:x3; val_offset:189840*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189840*0 + 3*304*FLEN/8, x4, x1, x2)

inst_63281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x439e1a3efa1a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa439e1a3efa1a9; op2val:0x0;
op3val:0x38fffffffffffff; valaddr_reg:x3; val_offset:189843*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189843*0 + 3*305*FLEN/8, x4, x1, x2)

inst_63282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:189846*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189846*0 + 3*306*FLEN/8, x4, x1, x2)

inst_63283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:189849*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189849*0 + 3*307*FLEN/8, x4, x1, x2)

inst_63284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:189852*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189852*0 + 3*308*FLEN/8, x4, x1, x2)

inst_63285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:189855*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189855*0 + 3*309*FLEN/8, x4, x1, x2)

inst_63286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:189858*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189858*0 + 3*310*FLEN/8, x4, x1, x2)

inst_63287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:189861*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189861*0 + 3*311*FLEN/8, x4, x1, x2)

inst_63288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:189864*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189864*0 + 3*312*FLEN/8, x4, x1, x2)

inst_63289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:189867*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189867*0 + 3*313*FLEN/8, x4, x1, x2)

inst_63290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:189870*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189870*0 + 3*314*FLEN/8, x4, x1, x2)

inst_63291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:189873*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189873*0 + 3*315*FLEN/8, x4, x1, x2)

inst_63292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:189876*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189876*0 + 3*316*FLEN/8, x4, x1, x2)

inst_63293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:189879*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189879*0 + 3*317*FLEN/8, x4, x1, x2)

inst_63294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:189882*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189882*0 + 3*318*FLEN/8, x4, x1, x2)

inst_63295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:189885*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189885*0 + 3*319*FLEN/8, x4, x1, x2)

inst_63296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:189888*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189888*0 + 3*320*FLEN/8, x4, x1, x2)

inst_63297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:189891*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189891*0 + 3*321*FLEN/8, x4, x1, x2)

inst_63298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:189894*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189894*0 + 3*322*FLEN/8, x4, x1, x2)

inst_63299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:189897*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189897*0 + 3*323*FLEN/8, x4, x1, x2)

inst_63300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:189900*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189900*0 + 3*324*FLEN/8, x4, x1, x2)

inst_63301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:189903*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189903*0 + 3*325*FLEN/8, x4, x1, x2)

inst_63302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:189906*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189906*0 + 3*326*FLEN/8, x4, x1, x2)

inst_63303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:189909*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189909*0 + 3*327*FLEN/8, x4, x1, x2)

inst_63304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000000000000; valaddr_reg:x3; val_offset:189912*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189912*0 + 3*328*FLEN/8, x4, x1, x2)

inst_63305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000000000001; valaddr_reg:x3; val_offset:189915*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189915*0 + 3*329*FLEN/8, x4, x1, x2)

inst_63306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000000000003; valaddr_reg:x3; val_offset:189918*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189918*0 + 3*330*FLEN/8, x4, x1, x2)

inst_63307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000000000007; valaddr_reg:x3; val_offset:189921*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189921*0 + 3*331*FLEN/8, x4, x1, x2)

inst_63308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000000000000f; valaddr_reg:x3; val_offset:189924*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189924*0 + 3*332*FLEN/8, x4, x1, x2)

inst_63309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000000000001f; valaddr_reg:x3; val_offset:189927*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189927*0 + 3*333*FLEN/8, x4, x1, x2)

inst_63310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000000000003f; valaddr_reg:x3; val_offset:189930*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189930*0 + 3*334*FLEN/8, x4, x1, x2)

inst_63311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000000000007f; valaddr_reg:x3; val_offset:189933*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189933*0 + 3*335*FLEN/8, x4, x1, x2)

inst_63312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00000000000ff; valaddr_reg:x3; val_offset:189936*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189936*0 + 3*336*FLEN/8, x4, x1, x2)

inst_63313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00000000001ff; valaddr_reg:x3; val_offset:189939*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189939*0 + 3*337*FLEN/8, x4, x1, x2)

inst_63314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00000000003ff; valaddr_reg:x3; val_offset:189942*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189942*0 + 3*338*FLEN/8, x4, x1, x2)

inst_63315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00000000007ff; valaddr_reg:x3; val_offset:189945*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189945*0 + 3*339*FLEN/8, x4, x1, x2)

inst_63316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000000000fff; valaddr_reg:x3; val_offset:189948*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189948*0 + 3*340*FLEN/8, x4, x1, x2)

inst_63317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000000001fff; valaddr_reg:x3; val_offset:189951*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189951*0 + 3*341*FLEN/8, x4, x1, x2)

inst_63318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000000003fff; valaddr_reg:x3; val_offset:189954*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189954*0 + 3*342*FLEN/8, x4, x1, x2)

inst_63319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000000007fff; valaddr_reg:x3; val_offset:189957*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189957*0 + 3*343*FLEN/8, x4, x1, x2)

inst_63320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000000000ffff; valaddr_reg:x3; val_offset:189960*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189960*0 + 3*344*FLEN/8, x4, x1, x2)

inst_63321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000000001ffff; valaddr_reg:x3; val_offset:189963*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189963*0 + 3*345*FLEN/8, x4, x1, x2)

inst_63322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000000003ffff; valaddr_reg:x3; val_offset:189966*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189966*0 + 3*346*FLEN/8, x4, x1, x2)

inst_63323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000000007ffff; valaddr_reg:x3; val_offset:189969*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189969*0 + 3*347*FLEN/8, x4, x1, x2)

inst_63324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00000000fffff; valaddr_reg:x3; val_offset:189972*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189972*0 + 3*348*FLEN/8, x4, x1, x2)

inst_63325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00000001fffff; valaddr_reg:x3; val_offset:189975*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189975*0 + 3*349*FLEN/8, x4, x1, x2)

inst_63326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00000003fffff; valaddr_reg:x3; val_offset:189978*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189978*0 + 3*350*FLEN/8, x4, x1, x2)

inst_63327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00000007fffff; valaddr_reg:x3; val_offset:189981*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189981*0 + 3*351*FLEN/8, x4, x1, x2)

inst_63328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000000ffffff; valaddr_reg:x3; val_offset:189984*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189984*0 + 3*352*FLEN/8, x4, x1, x2)

inst_63329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000001ffffff; valaddr_reg:x3; val_offset:189987*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189987*0 + 3*353*FLEN/8, x4, x1, x2)

inst_63330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000003ffffff; valaddr_reg:x3; val_offset:189990*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189990*0 + 3*354*FLEN/8, x4, x1, x2)

inst_63331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000007ffffff; valaddr_reg:x3; val_offset:189993*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189993*0 + 3*355*FLEN/8, x4, x1, x2)

inst_63332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000000fffffff; valaddr_reg:x3; val_offset:189996*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189996*0 + 3*356*FLEN/8, x4, x1, x2)

inst_63333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000001fffffff; valaddr_reg:x3; val_offset:189999*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189999*0 + 3*357*FLEN/8, x4, x1, x2)

inst_63334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000003fffffff; valaddr_reg:x3; val_offset:190002*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190002*0 + 3*358*FLEN/8, x4, x1, x2)

inst_63335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000007fffffff; valaddr_reg:x3; val_offset:190005*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190005*0 + 3*359*FLEN/8, x4, x1, x2)

inst_63336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00000ffffffff; valaddr_reg:x3; val_offset:190008*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190008*0 + 3*360*FLEN/8, x4, x1, x2)

inst_63337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00001ffffffff; valaddr_reg:x3; val_offset:190011*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190011*0 + 3*361*FLEN/8, x4, x1, x2)

inst_63338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00003ffffffff; valaddr_reg:x3; val_offset:190014*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190014*0 + 3*362*FLEN/8, x4, x1, x2)

inst_63339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00007ffffffff; valaddr_reg:x3; val_offset:190017*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190017*0 + 3*363*FLEN/8, x4, x1, x2)

inst_63340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0000fffffffff; valaddr_reg:x3; val_offset:190020*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190020*0 + 3*364*FLEN/8, x4, x1, x2)

inst_63341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0001fffffffff; valaddr_reg:x3; val_offset:190023*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190023*0 + 3*365*FLEN/8, x4, x1, x2)

inst_63342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0003fffffffff; valaddr_reg:x3; val_offset:190026*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190026*0 + 3*366*FLEN/8, x4, x1, x2)

inst_63343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0007fffffffff; valaddr_reg:x3; val_offset:190029*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190029*0 + 3*367*FLEN/8, x4, x1, x2)

inst_63344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc000ffffffffff; valaddr_reg:x3; val_offset:190032*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190032*0 + 3*368*FLEN/8, x4, x1, x2)

inst_63345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc001ffffffffff; valaddr_reg:x3; val_offset:190035*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190035*0 + 3*369*FLEN/8, x4, x1, x2)

inst_63346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc003ffffffffff; valaddr_reg:x3; val_offset:190038*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190038*0 + 3*370*FLEN/8, x4, x1, x2)

inst_63347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc007ffffffffff; valaddr_reg:x3; val_offset:190041*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190041*0 + 3*371*FLEN/8, x4, x1, x2)

inst_63348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc00fffffffffff; valaddr_reg:x3; val_offset:190044*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190044*0 + 3*372*FLEN/8, x4, x1, x2)

inst_63349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc01fffffffffff; valaddr_reg:x3; val_offset:190047*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190047*0 + 3*373*FLEN/8, x4, x1, x2)

inst_63350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc03fffffffffff; valaddr_reg:x3; val_offset:190050*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190050*0 + 3*374*FLEN/8, x4, x1, x2)

inst_63351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc07fffffffffff; valaddr_reg:x3; val_offset:190053*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190053*0 + 3*375*FLEN/8, x4, x1, x2)

inst_63352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc0ffffffffffff; valaddr_reg:x3; val_offset:190056*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190056*0 + 3*376*FLEN/8, x4, x1, x2)

inst_63353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc1ffffffffffff; valaddr_reg:x3; val_offset:190059*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190059*0 + 3*377*FLEN/8, x4, x1, x2)

inst_63354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc3ffffffffffff; valaddr_reg:x3; val_offset:190062*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190062*0 + 3*378*FLEN/8, x4, x1, x2)

inst_63355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc7ffffffffffff; valaddr_reg:x3; val_offset:190065*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190065*0 + 3*379*FLEN/8, x4, x1, x2)

inst_63356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xc8000000000000; valaddr_reg:x3; val_offset:190068*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190068*0 + 3*380*FLEN/8, x4, x1, x2)

inst_63357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcc000000000000; valaddr_reg:x3; val_offset:190071*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190071*0 + 3*381*FLEN/8, x4, x1, x2)

inst_63358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xce000000000000; valaddr_reg:x3; val_offset:190074*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190074*0 + 3*382*FLEN/8, x4, x1, x2)

inst_63359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcf000000000000; valaddr_reg:x3; val_offset:190077*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190077*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_63360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcf800000000000; valaddr_reg:x3; val_offset:190080*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190080*0 + 3*384*FLEN/8, x4, x1, x2)

inst_63361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfc00000000000; valaddr_reg:x3; val_offset:190083*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190083*0 + 3*385*FLEN/8, x4, x1, x2)

inst_63362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfe00000000000; valaddr_reg:x3; val_offset:190086*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190086*0 + 3*386*FLEN/8, x4, x1, x2)

inst_63363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcff00000000000; valaddr_reg:x3; val_offset:190089*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190089*0 + 3*387*FLEN/8, x4, x1, x2)

inst_63364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcff80000000000; valaddr_reg:x3; val_offset:190092*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190092*0 + 3*388*FLEN/8, x4, x1, x2)

inst_63365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffc0000000000; valaddr_reg:x3; val_offset:190095*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190095*0 + 3*389*FLEN/8, x4, x1, x2)

inst_63366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffe0000000000; valaddr_reg:x3; val_offset:190098*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190098*0 + 3*390*FLEN/8, x4, x1, x2)

inst_63367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfff0000000000; valaddr_reg:x3; val_offset:190101*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190101*0 + 3*391*FLEN/8, x4, x1, x2)

inst_63368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfff8000000000; valaddr_reg:x3; val_offset:190104*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190104*0 + 3*392*FLEN/8, x4, x1, x2)

inst_63369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffc000000000; valaddr_reg:x3; val_offset:190107*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190107*0 + 3*393*FLEN/8, x4, x1, x2)

inst_63370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffe000000000; valaddr_reg:x3; val_offset:190110*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190110*0 + 3*394*FLEN/8, x4, x1, x2)

inst_63371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffff000000000; valaddr_reg:x3; val_offset:190113*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190113*0 + 3*395*FLEN/8, x4, x1, x2)

inst_63372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffff800000000; valaddr_reg:x3; val_offset:190116*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190116*0 + 3*396*FLEN/8, x4, x1, x2)

inst_63373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffc00000000; valaddr_reg:x3; val_offset:190119*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190119*0 + 3*397*FLEN/8, x4, x1, x2)

inst_63374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffe00000000; valaddr_reg:x3; val_offset:190122*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190122*0 + 3*398*FLEN/8, x4, x1, x2)

inst_63375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffff00000000; valaddr_reg:x3; val_offset:190125*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190125*0 + 3*399*FLEN/8, x4, x1, x2)

inst_63376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffff80000000; valaddr_reg:x3; val_offset:190128*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190128*0 + 3*400*FLEN/8, x4, x1, x2)

inst_63377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffc0000000; valaddr_reg:x3; val_offset:190131*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190131*0 + 3*401*FLEN/8, x4, x1, x2)

inst_63378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffe0000000; valaddr_reg:x3; val_offset:190134*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190134*0 + 3*402*FLEN/8, x4, x1, x2)

inst_63379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffff0000000; valaddr_reg:x3; val_offset:190137*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190137*0 + 3*403*FLEN/8, x4, x1, x2)

inst_63380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffff8000000; valaddr_reg:x3; val_offset:190140*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190140*0 + 3*404*FLEN/8, x4, x1, x2)

inst_63381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffc000000; valaddr_reg:x3; val_offset:190143*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190143*0 + 3*405*FLEN/8, x4, x1, x2)

inst_63382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffe000000; valaddr_reg:x3; val_offset:190146*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190146*0 + 3*406*FLEN/8, x4, x1, x2)

inst_63383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffff000000; valaddr_reg:x3; val_offset:190149*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190149*0 + 3*407*FLEN/8, x4, x1, x2)

inst_63384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffff800000; valaddr_reg:x3; val_offset:190152*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190152*0 + 3*408*FLEN/8, x4, x1, x2)

inst_63385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffffc00000; valaddr_reg:x3; val_offset:190155*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190155*0 + 3*409*FLEN/8, x4, x1, x2)

inst_63386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffffe00000; valaddr_reg:x3; val_offset:190158*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190158*0 + 3*410*FLEN/8, x4, x1, x2)

inst_63387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffff00000; valaddr_reg:x3; val_offset:190161*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190161*0 + 3*411*FLEN/8, x4, x1, x2)

inst_63388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffff80000; valaddr_reg:x3; val_offset:190164*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190164*0 + 3*412*FLEN/8, x4, x1, x2)

inst_63389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffffc0000; valaddr_reg:x3; val_offset:190167*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190167*0 + 3*413*FLEN/8, x4, x1, x2)

inst_63390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffffe0000; valaddr_reg:x3; val_offset:190170*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190170*0 + 3*414*FLEN/8, x4, x1, x2)

inst_63391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffffff0000; valaddr_reg:x3; val_offset:190173*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190173*0 + 3*415*FLEN/8, x4, x1, x2)

inst_63392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffffff8000; valaddr_reg:x3; val_offset:190176*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190176*0 + 3*416*FLEN/8, x4, x1, x2)

inst_63393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffffffc000; valaddr_reg:x3; val_offset:190179*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190179*0 + 3*417*FLEN/8, x4, x1, x2)

inst_63394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffffffe000; valaddr_reg:x3; val_offset:190182*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190182*0 + 3*418*FLEN/8, x4, x1, x2)

inst_63395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffffff000; valaddr_reg:x3; val_offset:190185*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190185*0 + 3*419*FLEN/8, x4, x1, x2)

inst_63396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffffff800; valaddr_reg:x3; val_offset:190188*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190188*0 + 3*420*FLEN/8, x4, x1, x2)

inst_63397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffffffc00; valaddr_reg:x3; val_offset:190191*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190191*0 + 3*421*FLEN/8, x4, x1, x2)

inst_63398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffffffe00; valaddr_reg:x3; val_offset:190194*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190194*0 + 3*422*FLEN/8, x4, x1, x2)

inst_63399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffffffff00; valaddr_reg:x3; val_offset:190197*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190197*0 + 3*423*FLEN/8, x4, x1, x2)

inst_63400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffffffff80; valaddr_reg:x3; val_offset:190200*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190200*0 + 3*424*FLEN/8, x4, x1, x2)

inst_63401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffffffffc0; valaddr_reg:x3; val_offset:190203*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190203*0 + 3*425*FLEN/8, x4, x1, x2)

inst_63402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffffffffe0; valaddr_reg:x3; val_offset:190206*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190206*0 + 3*426*FLEN/8, x4, x1, x2)

inst_63403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffffffff0; valaddr_reg:x3; val_offset:190209*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190209*0 + 3*427*FLEN/8, x4, x1, x2)

inst_63404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffffffff8; valaddr_reg:x3; val_offset:190212*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190212*0 + 3*428*FLEN/8, x4, x1, x2)

inst_63405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffffffffc; valaddr_reg:x3; val_offset:190215*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190215*0 + 3*429*FLEN/8, x4, x1, x2)

inst_63406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcffffffffffffe; valaddr_reg:x3; val_offset:190218*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190218*0 + 3*430*FLEN/8, x4, x1, x2)

inst_63407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43fb9bd7a1e40 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43fb9bd7a1e40; op2val:0x0;
op3val:0xcfffffffffffff; valaddr_reg:x3; val_offset:190221*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190221*0 + 3*431*FLEN/8, x4, x1, x2)

inst_63408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:190224*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190224*0 + 3*432*FLEN/8, x4, x1, x2)

inst_63409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:190227*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190227*0 + 3*433*FLEN/8, x4, x1, x2)

inst_63410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:190230*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190230*0 + 3*434*FLEN/8, x4, x1, x2)

inst_63411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:190233*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190233*0 + 3*435*FLEN/8, x4, x1, x2)

inst_63412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:190236*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190236*0 + 3*436*FLEN/8, x4, x1, x2)

inst_63413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:190239*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190239*0 + 3*437*FLEN/8, x4, x1, x2)

inst_63414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:190242*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190242*0 + 3*438*FLEN/8, x4, x1, x2)

inst_63415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:190245*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190245*0 + 3*439*FLEN/8, x4, x1, x2)

inst_63416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:190248*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190248*0 + 3*440*FLEN/8, x4, x1, x2)

inst_63417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:190251*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190251*0 + 3*441*FLEN/8, x4, x1, x2)

inst_63418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:190254*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190254*0 + 3*442*FLEN/8, x4, x1, x2)

inst_63419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:190257*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190257*0 + 3*443*FLEN/8, x4, x1, x2)

inst_63420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:190260*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190260*0 + 3*444*FLEN/8, x4, x1, x2)

inst_63421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:190263*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190263*0 + 3*445*FLEN/8, x4, x1, x2)

inst_63422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:190266*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190266*0 + 3*446*FLEN/8, x4, x1, x2)

inst_63423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:190269*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190269*0 + 3*447*FLEN/8, x4, x1, x2)

inst_63424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:190272*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190272*0 + 3*448*FLEN/8, x4, x1, x2)

inst_63425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:190275*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190275*0 + 3*449*FLEN/8, x4, x1, x2)

inst_63426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:190278*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190278*0 + 3*450*FLEN/8, x4, x1, x2)

inst_63427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:190281*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190281*0 + 3*451*FLEN/8, x4, x1, x2)

inst_63428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:190284*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190284*0 + 3*452*FLEN/8, x4, x1, x2)

inst_63429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:190287*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190287*0 + 3*453*FLEN/8, x4, x1, x2)

inst_63430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000000000000; valaddr_reg:x3; val_offset:190290*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190290*0 + 3*454*FLEN/8, x4, x1, x2)

inst_63431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000000000001; valaddr_reg:x3; val_offset:190293*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190293*0 + 3*455*FLEN/8, x4, x1, x2)

inst_63432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000000000003; valaddr_reg:x3; val_offset:190296*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190296*0 + 3*456*FLEN/8, x4, x1, x2)

inst_63433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000000000007; valaddr_reg:x3; val_offset:190299*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190299*0 + 3*457*FLEN/8, x4, x1, x2)

inst_63434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000000000000f; valaddr_reg:x3; val_offset:190302*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190302*0 + 3*458*FLEN/8, x4, x1, x2)

inst_63435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000000000001f; valaddr_reg:x3; val_offset:190305*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190305*0 + 3*459*FLEN/8, x4, x1, x2)

inst_63436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000000000003f; valaddr_reg:x3; val_offset:190308*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190308*0 + 3*460*FLEN/8, x4, x1, x2)

inst_63437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000000000007f; valaddr_reg:x3; val_offset:190311*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190311*0 + 3*461*FLEN/8, x4, x1, x2)

inst_63438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300000000000ff; valaddr_reg:x3; val_offset:190314*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190314*0 + 3*462*FLEN/8, x4, x1, x2)

inst_63439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300000000001ff; valaddr_reg:x3; val_offset:190317*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190317*0 + 3*463*FLEN/8, x4, x1, x2)

inst_63440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300000000003ff; valaddr_reg:x3; val_offset:190320*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190320*0 + 3*464*FLEN/8, x4, x1, x2)

inst_63441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300000000007ff; valaddr_reg:x3; val_offset:190323*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190323*0 + 3*465*FLEN/8, x4, x1, x2)

inst_63442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000000000fff; valaddr_reg:x3; val_offset:190326*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190326*0 + 3*466*FLEN/8, x4, x1, x2)

inst_63443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000000001fff; valaddr_reg:x3; val_offset:190329*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190329*0 + 3*467*FLEN/8, x4, x1, x2)

inst_63444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000000003fff; valaddr_reg:x3; val_offset:190332*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190332*0 + 3*468*FLEN/8, x4, x1, x2)

inst_63445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000000007fff; valaddr_reg:x3; val_offset:190335*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190335*0 + 3*469*FLEN/8, x4, x1, x2)

inst_63446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000000000ffff; valaddr_reg:x3; val_offset:190338*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190338*0 + 3*470*FLEN/8, x4, x1, x2)

inst_63447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000000001ffff; valaddr_reg:x3; val_offset:190341*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190341*0 + 3*471*FLEN/8, x4, x1, x2)

inst_63448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000000003ffff; valaddr_reg:x3; val_offset:190344*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190344*0 + 3*472*FLEN/8, x4, x1, x2)

inst_63449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000000007ffff; valaddr_reg:x3; val_offset:190347*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190347*0 + 3*473*FLEN/8, x4, x1, x2)

inst_63450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300000000fffff; valaddr_reg:x3; val_offset:190350*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190350*0 + 3*474*FLEN/8, x4, x1, x2)

inst_63451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300000001fffff; valaddr_reg:x3; val_offset:190353*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190353*0 + 3*475*FLEN/8, x4, x1, x2)

inst_63452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300000003fffff; valaddr_reg:x3; val_offset:190356*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190356*0 + 3*476*FLEN/8, x4, x1, x2)

inst_63453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300000007fffff; valaddr_reg:x3; val_offset:190359*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190359*0 + 3*477*FLEN/8, x4, x1, x2)

inst_63454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000000ffffff; valaddr_reg:x3; val_offset:190362*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190362*0 + 3*478*FLEN/8, x4, x1, x2)

inst_63455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000001ffffff; valaddr_reg:x3; val_offset:190365*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190365*0 + 3*479*FLEN/8, x4, x1, x2)

inst_63456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000003ffffff; valaddr_reg:x3; val_offset:190368*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190368*0 + 3*480*FLEN/8, x4, x1, x2)

inst_63457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000007ffffff; valaddr_reg:x3; val_offset:190371*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190371*0 + 3*481*FLEN/8, x4, x1, x2)

inst_63458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000000fffffff; valaddr_reg:x3; val_offset:190374*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190374*0 + 3*482*FLEN/8, x4, x1, x2)

inst_63459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000001fffffff; valaddr_reg:x3; val_offset:190377*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190377*0 + 3*483*FLEN/8, x4, x1, x2)

inst_63460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000003fffffff; valaddr_reg:x3; val_offset:190380*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190380*0 + 3*484*FLEN/8, x4, x1, x2)

inst_63461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000007fffffff; valaddr_reg:x3; val_offset:190383*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190383*0 + 3*485*FLEN/8, x4, x1, x2)

inst_63462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300000ffffffff; valaddr_reg:x3; val_offset:190386*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190386*0 + 3*486*FLEN/8, x4, x1, x2)

inst_63463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300001ffffffff; valaddr_reg:x3; val_offset:190389*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190389*0 + 3*487*FLEN/8, x4, x1, x2)

inst_63464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300003ffffffff; valaddr_reg:x3; val_offset:190392*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190392*0 + 3*488*FLEN/8, x4, x1, x2)

inst_63465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300007ffffffff; valaddr_reg:x3; val_offset:190395*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190395*0 + 3*489*FLEN/8, x4, x1, x2)

inst_63466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130000fffffffff; valaddr_reg:x3; val_offset:190398*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190398*0 + 3*490*FLEN/8, x4, x1, x2)

inst_63467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130001fffffffff; valaddr_reg:x3; val_offset:190401*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190401*0 + 3*491*FLEN/8, x4, x1, x2)

inst_63468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130003fffffffff; valaddr_reg:x3; val_offset:190404*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190404*0 + 3*492*FLEN/8, x4, x1, x2)

inst_63469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130007fffffffff; valaddr_reg:x3; val_offset:190407*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190407*0 + 3*493*FLEN/8, x4, x1, x2)

inst_63470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13000ffffffffff; valaddr_reg:x3; val_offset:190410*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190410*0 + 3*494*FLEN/8, x4, x1, x2)

inst_63471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13001ffffffffff; valaddr_reg:x3; val_offset:190413*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190413*0 + 3*495*FLEN/8, x4, x1, x2)

inst_63472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13003ffffffffff; valaddr_reg:x3; val_offset:190416*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190416*0 + 3*496*FLEN/8, x4, x1, x2)

inst_63473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13007ffffffffff; valaddr_reg:x3; val_offset:190419*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190419*0 + 3*497*FLEN/8, x4, x1, x2)

inst_63474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1300fffffffffff; valaddr_reg:x3; val_offset:190422*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190422*0 + 3*498*FLEN/8, x4, x1, x2)

inst_63475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1301fffffffffff; valaddr_reg:x3; val_offset:190425*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190425*0 + 3*499*FLEN/8, x4, x1, x2)

inst_63476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1303fffffffffff; valaddr_reg:x3; val_offset:190428*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190428*0 + 3*500*FLEN/8, x4, x1, x2)

inst_63477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x1307fffffffffff; valaddr_reg:x3; val_offset:190431*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190431*0 + 3*501*FLEN/8, x4, x1, x2)

inst_63478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x130ffffffffffff; valaddr_reg:x3; val_offset:190434*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190434*0 + 3*502*FLEN/8, x4, x1, x2)

inst_63479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x131ffffffffffff; valaddr_reg:x3; val_offset:190437*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190437*0 + 3*503*FLEN/8, x4, x1, x2)

inst_63480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x133ffffffffffff; valaddr_reg:x3; val_offset:190440*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190440*0 + 3*504*FLEN/8, x4, x1, x2)

inst_63481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x137ffffffffffff; valaddr_reg:x3; val_offset:190443*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190443*0 + 3*505*FLEN/8, x4, x1, x2)

inst_63482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x138000000000000; valaddr_reg:x3; val_offset:190446*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190446*0 + 3*506*FLEN/8, x4, x1, x2)

inst_63483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13c000000000000; valaddr_reg:x3; val_offset:190449*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190449*0 + 3*507*FLEN/8, x4, x1, x2)

inst_63484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13e000000000000; valaddr_reg:x3; val_offset:190452*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190452*0 + 3*508*FLEN/8, x4, x1, x2)

inst_63485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13f000000000000; valaddr_reg:x3; val_offset:190455*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190455*0 + 3*509*FLEN/8, x4, x1, x2)

inst_63486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13f800000000000; valaddr_reg:x3; val_offset:190458*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190458*0 + 3*510*FLEN/8, x4, x1, x2)

inst_63487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fc00000000000; valaddr_reg:x3; val_offset:190461*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190461*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_63488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fe00000000000; valaddr_reg:x3; val_offset:190464*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190464*0 + 3*512*FLEN/8, x4, x1, x2)

inst_63489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ff00000000000; valaddr_reg:x3; val_offset:190467*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190467*0 + 3*513*FLEN/8, x4, x1, x2)

inst_63490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ff80000000000; valaddr_reg:x3; val_offset:190470*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190470*0 + 3*514*FLEN/8, x4, x1, x2)

inst_63491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffc0000000000; valaddr_reg:x3; val_offset:190473*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190473*0 + 3*515*FLEN/8, x4, x1, x2)

inst_63492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffe0000000000; valaddr_reg:x3; val_offset:190476*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190476*0 + 3*516*FLEN/8, x4, x1, x2)

inst_63493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fff0000000000; valaddr_reg:x3; val_offset:190479*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190479*0 + 3*517*FLEN/8, x4, x1, x2)

inst_63494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fff8000000000; valaddr_reg:x3; val_offset:190482*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190482*0 + 3*518*FLEN/8, x4, x1, x2)

inst_63495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffc000000000; valaddr_reg:x3; val_offset:190485*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190485*0 + 3*519*FLEN/8, x4, x1, x2)

inst_63496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffe000000000; valaddr_reg:x3; val_offset:190488*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190488*0 + 3*520*FLEN/8, x4, x1, x2)

inst_63497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffff000000000; valaddr_reg:x3; val_offset:190491*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190491*0 + 3*521*FLEN/8, x4, x1, x2)

inst_63498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffff800000000; valaddr_reg:x3; val_offset:190494*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190494*0 + 3*522*FLEN/8, x4, x1, x2)

inst_63499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffc00000000; valaddr_reg:x3; val_offset:190497*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190497*0 + 3*523*FLEN/8, x4, x1, x2)

inst_63500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffe00000000; valaddr_reg:x3; val_offset:190500*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190500*0 + 3*524*FLEN/8, x4, x1, x2)

inst_63501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffff00000000; valaddr_reg:x3; val_offset:190503*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190503*0 + 3*525*FLEN/8, x4, x1, x2)

inst_63502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffff80000000; valaddr_reg:x3; val_offset:190506*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190506*0 + 3*526*FLEN/8, x4, x1, x2)

inst_63503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffc0000000; valaddr_reg:x3; val_offset:190509*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190509*0 + 3*527*FLEN/8, x4, x1, x2)

inst_63504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffe0000000; valaddr_reg:x3; val_offset:190512*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190512*0 + 3*528*FLEN/8, x4, x1, x2)

inst_63505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffff0000000; valaddr_reg:x3; val_offset:190515*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190515*0 + 3*529*FLEN/8, x4, x1, x2)

inst_63506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffff8000000; valaddr_reg:x3; val_offset:190518*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190518*0 + 3*530*FLEN/8, x4, x1, x2)

inst_63507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffc000000; valaddr_reg:x3; val_offset:190521*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190521*0 + 3*531*FLEN/8, x4, x1, x2)

inst_63508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffe000000; valaddr_reg:x3; val_offset:190524*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190524*0 + 3*532*FLEN/8, x4, x1, x2)

inst_63509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffff000000; valaddr_reg:x3; val_offset:190527*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190527*0 + 3*533*FLEN/8, x4, x1, x2)

inst_63510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffff800000; valaddr_reg:x3; val_offset:190530*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190530*0 + 3*534*FLEN/8, x4, x1, x2)

inst_63511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffffc00000; valaddr_reg:x3; val_offset:190533*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190533*0 + 3*535*FLEN/8, x4, x1, x2)

inst_63512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffffe00000; valaddr_reg:x3; val_offset:190536*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190536*0 + 3*536*FLEN/8, x4, x1, x2)

inst_63513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffff00000; valaddr_reg:x3; val_offset:190539*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190539*0 + 3*537*FLEN/8, x4, x1, x2)

inst_63514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffff80000; valaddr_reg:x3; val_offset:190542*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190542*0 + 3*538*FLEN/8, x4, x1, x2)

inst_63515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffffc0000; valaddr_reg:x3; val_offset:190545*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190545*0 + 3*539*FLEN/8, x4, x1, x2)

inst_63516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffffe0000; valaddr_reg:x3; val_offset:190548*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190548*0 + 3*540*FLEN/8, x4, x1, x2)

inst_63517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffffff0000; valaddr_reg:x3; val_offset:190551*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190551*0 + 3*541*FLEN/8, x4, x1, x2)

inst_63518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffffff8000; valaddr_reg:x3; val_offset:190554*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190554*0 + 3*542*FLEN/8, x4, x1, x2)

inst_63519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffffffc000; valaddr_reg:x3; val_offset:190557*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190557*0 + 3*543*FLEN/8, x4, x1, x2)

inst_63520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffffffe000; valaddr_reg:x3; val_offset:190560*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190560*0 + 3*544*FLEN/8, x4, x1, x2)

inst_63521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffffff000; valaddr_reg:x3; val_offset:190563*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190563*0 + 3*545*FLEN/8, x4, x1, x2)

inst_63522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffffff800; valaddr_reg:x3; val_offset:190566*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190566*0 + 3*546*FLEN/8, x4, x1, x2)

inst_63523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffffffc00; valaddr_reg:x3; val_offset:190569*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190569*0 + 3*547*FLEN/8, x4, x1, x2)

inst_63524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffffffe00; valaddr_reg:x3; val_offset:190572*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190572*0 + 3*548*FLEN/8, x4, x1, x2)

inst_63525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffffffff00; valaddr_reg:x3; val_offset:190575*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190575*0 + 3*549*FLEN/8, x4, x1, x2)

inst_63526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffffffff80; valaddr_reg:x3; val_offset:190578*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190578*0 + 3*550*FLEN/8, x4, x1, x2)

inst_63527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffffffffc0; valaddr_reg:x3; val_offset:190581*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190581*0 + 3*551*FLEN/8, x4, x1, x2)

inst_63528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffffffffe0; valaddr_reg:x3; val_offset:190584*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190584*0 + 3*552*FLEN/8, x4, x1, x2)

inst_63529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffffffff0; valaddr_reg:x3; val_offset:190587*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190587*0 + 3*553*FLEN/8, x4, x1, x2)

inst_63530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffffffff8; valaddr_reg:x3; val_offset:190590*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190590*0 + 3*554*FLEN/8, x4, x1, x2)

inst_63531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffffffffc; valaddr_reg:x3; val_offset:190593*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190593*0 + 3*555*FLEN/8, x4, x1, x2)

inst_63532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13ffffffffffffe; valaddr_reg:x3; val_offset:190596*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190596*0 + 3*556*FLEN/8, x4, x1, x2)

inst_63533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442f9e456b056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa442f9e456b056; op2val:0x0;
op3val:0x13fffffffffffff; valaddr_reg:x3; val_offset:190599*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190599*0 + 3*557*FLEN/8, x4, x1, x2)

inst_63534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:190602*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190602*0 + 3*558*FLEN/8, x4, x1, x2)

inst_63535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:190605*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190605*0 + 3*559*FLEN/8, x4, x1, x2)

inst_63536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:190608*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190608*0 + 3*560*FLEN/8, x4, x1, x2)

inst_63537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:190611*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190611*0 + 3*561*FLEN/8, x4, x1, x2)

inst_63538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:190614*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190614*0 + 3*562*FLEN/8, x4, x1, x2)

inst_63539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:190617*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190617*0 + 3*563*FLEN/8, x4, x1, x2)

inst_63540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:190620*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190620*0 + 3*564*FLEN/8, x4, x1, x2)

inst_63541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:190623*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190623*0 + 3*565*FLEN/8, x4, x1, x2)

inst_63542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:190626*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190626*0 + 3*566*FLEN/8, x4, x1, x2)

inst_63543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:190629*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190629*0 + 3*567*FLEN/8, x4, x1, x2)

inst_63544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:190632*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190632*0 + 3*568*FLEN/8, x4, x1, x2)

inst_63545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:190635*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190635*0 + 3*569*FLEN/8, x4, x1, x2)

inst_63546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:190638*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190638*0 + 3*570*FLEN/8, x4, x1, x2)

inst_63547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:190641*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190641*0 + 3*571*FLEN/8, x4, x1, x2)

inst_63548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:190644*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190644*0 + 3*572*FLEN/8, x4, x1, x2)

inst_63549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:190647*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190647*0 + 3*573*FLEN/8, x4, x1, x2)

inst_63550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:190650*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190650*0 + 3*574*FLEN/8, x4, x1, x2)

inst_63551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:190653*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190653*0 + 3*575*FLEN/8, x4, x1, x2)

inst_63552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:190656*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190656*0 + 3*576*FLEN/8, x4, x1, x2)

inst_63553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:190659*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190659*0 + 3*577*FLEN/8, x4, x1, x2)

inst_63554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:190662*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190662*0 + 3*578*FLEN/8, x4, x1, x2)

inst_63555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:190665*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190665*0 + 3*579*FLEN/8, x4, x1, x2)

inst_63556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000000000000; valaddr_reg:x3; val_offset:190668*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190668*0 + 3*580*FLEN/8, x4, x1, x2)

inst_63557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000000000001; valaddr_reg:x3; val_offset:190671*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190671*0 + 3*581*FLEN/8, x4, x1, x2)

inst_63558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000000000003; valaddr_reg:x3; val_offset:190674*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190674*0 + 3*582*FLEN/8, x4, x1, x2)

inst_63559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000000000007; valaddr_reg:x3; val_offset:190677*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190677*0 + 3*583*FLEN/8, x4, x1, x2)

inst_63560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000000000000f; valaddr_reg:x3; val_offset:190680*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190680*0 + 3*584*FLEN/8, x4, x1, x2)

inst_63561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000000000001f; valaddr_reg:x3; val_offset:190683*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190683*0 + 3*585*FLEN/8, x4, x1, x2)

inst_63562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000000000003f; valaddr_reg:x3; val_offset:190686*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190686*0 + 3*586*FLEN/8, x4, x1, x2)

inst_63563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000000000007f; valaddr_reg:x3; val_offset:190689*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190689*0 + 3*587*FLEN/8, x4, x1, x2)

inst_63564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200000000000ff; valaddr_reg:x3; val_offset:190692*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190692*0 + 3*588*FLEN/8, x4, x1, x2)

inst_63565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200000000001ff; valaddr_reg:x3; val_offset:190695*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190695*0 + 3*589*FLEN/8, x4, x1, x2)

inst_63566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200000000003ff; valaddr_reg:x3; val_offset:190698*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190698*0 + 3*590*FLEN/8, x4, x1, x2)

inst_63567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200000000007ff; valaddr_reg:x3; val_offset:190701*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190701*0 + 3*591*FLEN/8, x4, x1, x2)

inst_63568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000000000fff; valaddr_reg:x3; val_offset:190704*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190704*0 + 3*592*FLEN/8, x4, x1, x2)

inst_63569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000000001fff; valaddr_reg:x3; val_offset:190707*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190707*0 + 3*593*FLEN/8, x4, x1, x2)

inst_63570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000000003fff; valaddr_reg:x3; val_offset:190710*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190710*0 + 3*594*FLEN/8, x4, x1, x2)

inst_63571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000000007fff; valaddr_reg:x3; val_offset:190713*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190713*0 + 3*595*FLEN/8, x4, x1, x2)

inst_63572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000000000ffff; valaddr_reg:x3; val_offset:190716*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190716*0 + 3*596*FLEN/8, x4, x1, x2)

inst_63573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000000001ffff; valaddr_reg:x3; val_offset:190719*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190719*0 + 3*597*FLEN/8, x4, x1, x2)

inst_63574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000000003ffff; valaddr_reg:x3; val_offset:190722*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190722*0 + 3*598*FLEN/8, x4, x1, x2)

inst_63575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000000007ffff; valaddr_reg:x3; val_offset:190725*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190725*0 + 3*599*FLEN/8, x4, x1, x2)

inst_63576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200000000fffff; valaddr_reg:x3; val_offset:190728*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190728*0 + 3*600*FLEN/8, x4, x1, x2)

inst_63577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200000001fffff; valaddr_reg:x3; val_offset:190731*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190731*0 + 3*601*FLEN/8, x4, x1, x2)

inst_63578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200000003fffff; valaddr_reg:x3; val_offset:190734*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190734*0 + 3*602*FLEN/8, x4, x1, x2)

inst_63579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200000007fffff; valaddr_reg:x3; val_offset:190737*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190737*0 + 3*603*FLEN/8, x4, x1, x2)

inst_63580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000000ffffff; valaddr_reg:x3; val_offset:190740*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190740*0 + 3*604*FLEN/8, x4, x1, x2)

inst_63581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000001ffffff; valaddr_reg:x3; val_offset:190743*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190743*0 + 3*605*FLEN/8, x4, x1, x2)

inst_63582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000003ffffff; valaddr_reg:x3; val_offset:190746*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190746*0 + 3*606*FLEN/8, x4, x1, x2)

inst_63583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000007ffffff; valaddr_reg:x3; val_offset:190749*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190749*0 + 3*607*FLEN/8, x4, x1, x2)

inst_63584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000000fffffff; valaddr_reg:x3; val_offset:190752*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190752*0 + 3*608*FLEN/8, x4, x1, x2)

inst_63585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000001fffffff; valaddr_reg:x3; val_offset:190755*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190755*0 + 3*609*FLEN/8, x4, x1, x2)

inst_63586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000003fffffff; valaddr_reg:x3; val_offset:190758*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190758*0 + 3*610*FLEN/8, x4, x1, x2)

inst_63587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000007fffffff; valaddr_reg:x3; val_offset:190761*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190761*0 + 3*611*FLEN/8, x4, x1, x2)

inst_63588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200000ffffffff; valaddr_reg:x3; val_offset:190764*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190764*0 + 3*612*FLEN/8, x4, x1, x2)

inst_63589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200001ffffffff; valaddr_reg:x3; val_offset:190767*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190767*0 + 3*613*FLEN/8, x4, x1, x2)

inst_63590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200003ffffffff; valaddr_reg:x3; val_offset:190770*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190770*0 + 3*614*FLEN/8, x4, x1, x2)

inst_63591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200007ffffffff; valaddr_reg:x3; val_offset:190773*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190773*0 + 3*615*FLEN/8, x4, x1, x2)

inst_63592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120000fffffffff; valaddr_reg:x3; val_offset:190776*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190776*0 + 3*616*FLEN/8, x4, x1, x2)

inst_63593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120001fffffffff; valaddr_reg:x3; val_offset:190779*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190779*0 + 3*617*FLEN/8, x4, x1, x2)

inst_63594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120003fffffffff; valaddr_reg:x3; val_offset:190782*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190782*0 + 3*618*FLEN/8, x4, x1, x2)

inst_63595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120007fffffffff; valaddr_reg:x3; val_offset:190785*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190785*0 + 3*619*FLEN/8, x4, x1, x2)

inst_63596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812000ffffffffff; valaddr_reg:x3; val_offset:190788*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190788*0 + 3*620*FLEN/8, x4, x1, x2)

inst_63597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812001ffffffffff; valaddr_reg:x3; val_offset:190791*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190791*0 + 3*621*FLEN/8, x4, x1, x2)

inst_63598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812003ffffffffff; valaddr_reg:x3; val_offset:190794*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190794*0 + 3*622*FLEN/8, x4, x1, x2)

inst_63599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812007ffffffffff; valaddr_reg:x3; val_offset:190797*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190797*0 + 3*623*FLEN/8, x4, x1, x2)

inst_63600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81200fffffffffff; valaddr_reg:x3; val_offset:190800*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190800*0 + 3*624*FLEN/8, x4, x1, x2)

inst_63601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81201fffffffffff; valaddr_reg:x3; val_offset:190803*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190803*0 + 3*625*FLEN/8, x4, x1, x2)

inst_63602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81203fffffffffff; valaddr_reg:x3; val_offset:190806*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190806*0 + 3*626*FLEN/8, x4, x1, x2)

inst_63603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x81207fffffffffff; valaddr_reg:x3; val_offset:190809*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190809*0 + 3*627*FLEN/8, x4, x1, x2)

inst_63604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8120ffffffffffff; valaddr_reg:x3; val_offset:190812*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190812*0 + 3*628*FLEN/8, x4, x1, x2)

inst_63605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8121ffffffffffff; valaddr_reg:x3; val_offset:190815*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190815*0 + 3*629*FLEN/8, x4, x1, x2)

inst_63606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8123ffffffffffff; valaddr_reg:x3; val_offset:190818*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190818*0 + 3*630*FLEN/8, x4, x1, x2)

inst_63607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8127ffffffffffff; valaddr_reg:x3; val_offset:190821*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190821*0 + 3*631*FLEN/8, x4, x1, x2)

inst_63608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x8128000000000000; valaddr_reg:x3; val_offset:190824*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190824*0 + 3*632*FLEN/8, x4, x1, x2)

inst_63609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812c000000000000; valaddr_reg:x3; val_offset:190827*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190827*0 + 3*633*FLEN/8, x4, x1, x2)

inst_63610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812e000000000000; valaddr_reg:x3; val_offset:190830*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190830*0 + 3*634*FLEN/8, x4, x1, x2)

inst_63611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812f000000000000; valaddr_reg:x3; val_offset:190833*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190833*0 + 3*635*FLEN/8, x4, x1, x2)

inst_63612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812f800000000000; valaddr_reg:x3; val_offset:190836*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190836*0 + 3*636*FLEN/8, x4, x1, x2)

inst_63613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fc00000000000; valaddr_reg:x3; val_offset:190839*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190839*0 + 3*637*FLEN/8, x4, x1, x2)

inst_63614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fe00000000000; valaddr_reg:x3; val_offset:190842*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190842*0 + 3*638*FLEN/8, x4, x1, x2)

inst_63615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ff00000000000; valaddr_reg:x3; val_offset:190845*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190845*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_63616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ff80000000000; valaddr_reg:x3; val_offset:190848*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190848*0 + 3*640*FLEN/8, x4, x1, x2)

inst_63617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffc0000000000; valaddr_reg:x3; val_offset:190851*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190851*0 + 3*641*FLEN/8, x4, x1, x2)

inst_63618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffe0000000000; valaddr_reg:x3; val_offset:190854*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190854*0 + 3*642*FLEN/8, x4, x1, x2)

inst_63619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fff0000000000; valaddr_reg:x3; val_offset:190857*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190857*0 + 3*643*FLEN/8, x4, x1, x2)

inst_63620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fff8000000000; valaddr_reg:x3; val_offset:190860*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190860*0 + 3*644*FLEN/8, x4, x1, x2)

inst_63621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffc000000000; valaddr_reg:x3; val_offset:190863*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190863*0 + 3*645*FLEN/8, x4, x1, x2)

inst_63622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffe000000000; valaddr_reg:x3; val_offset:190866*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190866*0 + 3*646*FLEN/8, x4, x1, x2)

inst_63623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffff000000000; valaddr_reg:x3; val_offset:190869*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190869*0 + 3*647*FLEN/8, x4, x1, x2)

inst_63624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffff800000000; valaddr_reg:x3; val_offset:190872*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190872*0 + 3*648*FLEN/8, x4, x1, x2)

inst_63625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffc00000000; valaddr_reg:x3; val_offset:190875*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190875*0 + 3*649*FLEN/8, x4, x1, x2)

inst_63626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffe00000000; valaddr_reg:x3; val_offset:190878*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190878*0 + 3*650*FLEN/8, x4, x1, x2)

inst_63627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffff00000000; valaddr_reg:x3; val_offset:190881*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190881*0 + 3*651*FLEN/8, x4, x1, x2)

inst_63628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffff80000000; valaddr_reg:x3; val_offset:190884*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190884*0 + 3*652*FLEN/8, x4, x1, x2)

inst_63629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffc0000000; valaddr_reg:x3; val_offset:190887*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190887*0 + 3*653*FLEN/8, x4, x1, x2)

inst_63630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffe0000000; valaddr_reg:x3; val_offset:190890*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190890*0 + 3*654*FLEN/8, x4, x1, x2)

inst_63631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffff0000000; valaddr_reg:x3; val_offset:190893*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190893*0 + 3*655*FLEN/8, x4, x1, x2)

inst_63632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffff8000000; valaddr_reg:x3; val_offset:190896*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190896*0 + 3*656*FLEN/8, x4, x1, x2)

inst_63633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffc000000; valaddr_reg:x3; val_offset:190899*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190899*0 + 3*657*FLEN/8, x4, x1, x2)

inst_63634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffe000000; valaddr_reg:x3; val_offset:190902*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190902*0 + 3*658*FLEN/8, x4, x1, x2)

inst_63635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffff000000; valaddr_reg:x3; val_offset:190905*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190905*0 + 3*659*FLEN/8, x4, x1, x2)

inst_63636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffff800000; valaddr_reg:x3; val_offset:190908*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190908*0 + 3*660*FLEN/8, x4, x1, x2)

inst_63637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffffc00000; valaddr_reg:x3; val_offset:190911*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190911*0 + 3*661*FLEN/8, x4, x1, x2)

inst_63638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffffe00000; valaddr_reg:x3; val_offset:190914*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190914*0 + 3*662*FLEN/8, x4, x1, x2)

inst_63639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffff00000; valaddr_reg:x3; val_offset:190917*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190917*0 + 3*663*FLEN/8, x4, x1, x2)

inst_63640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffff80000; valaddr_reg:x3; val_offset:190920*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190920*0 + 3*664*FLEN/8, x4, x1, x2)

inst_63641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffffc0000; valaddr_reg:x3; val_offset:190923*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190923*0 + 3*665*FLEN/8, x4, x1, x2)

inst_63642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffffe0000; valaddr_reg:x3; val_offset:190926*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190926*0 + 3*666*FLEN/8, x4, x1, x2)

inst_63643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffffff0000; valaddr_reg:x3; val_offset:190929*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190929*0 + 3*667*FLEN/8, x4, x1, x2)

inst_63644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffffff8000; valaddr_reg:x3; val_offset:190932*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190932*0 + 3*668*FLEN/8, x4, x1, x2)

inst_63645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffffffc000; valaddr_reg:x3; val_offset:190935*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190935*0 + 3*669*FLEN/8, x4, x1, x2)

inst_63646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffffffe000; valaddr_reg:x3; val_offset:190938*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190938*0 + 3*670*FLEN/8, x4, x1, x2)

inst_63647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffffff000; valaddr_reg:x3; val_offset:190941*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190941*0 + 3*671*FLEN/8, x4, x1, x2)

inst_63648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffffff800; valaddr_reg:x3; val_offset:190944*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190944*0 + 3*672*FLEN/8, x4, x1, x2)

inst_63649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffffffc00; valaddr_reg:x3; val_offset:190947*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190947*0 + 3*673*FLEN/8, x4, x1, x2)

inst_63650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffffffe00; valaddr_reg:x3; val_offset:190950*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190950*0 + 3*674*FLEN/8, x4, x1, x2)

inst_63651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffffffff00; valaddr_reg:x3; val_offset:190953*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190953*0 + 3*675*FLEN/8, x4, x1, x2)

inst_63652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffffffff80; valaddr_reg:x3; val_offset:190956*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190956*0 + 3*676*FLEN/8, x4, x1, x2)

inst_63653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffffffffc0; valaddr_reg:x3; val_offset:190959*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190959*0 + 3*677*FLEN/8, x4, x1, x2)

inst_63654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffffffffe0; valaddr_reg:x3; val_offset:190962*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190962*0 + 3*678*FLEN/8, x4, x1, x2)

inst_63655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffffffff0; valaddr_reg:x3; val_offset:190965*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190965*0 + 3*679*FLEN/8, x4, x1, x2)

inst_63656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffffffff8; valaddr_reg:x3; val_offset:190968*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190968*0 + 3*680*FLEN/8, x4, x1, x2)

inst_63657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffffffffc; valaddr_reg:x3; val_offset:190971*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190971*0 + 3*681*FLEN/8, x4, x1, x2)

inst_63658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812ffffffffffffe; valaddr_reg:x3; val_offset:190974*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190974*0 + 3*682*FLEN/8, x4, x1, x2)

inst_63659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44e981a2c9e6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44e981a2c9e6f; op2val:0x8000;
op3val:0x812fffffffffffff; valaddr_reg:x3; val_offset:190977*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190977*0 + 3*683*FLEN/8, x4, x1, x2)

inst_63660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:190980*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190980*0 + 3*684*FLEN/8, x4, x1, x2)

inst_63661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:190983*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190983*0 + 3*685*FLEN/8, x4, x1, x2)

inst_63662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:190986*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190986*0 + 3*686*FLEN/8, x4, x1, x2)

inst_63663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:190989*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190989*0 + 3*687*FLEN/8, x4, x1, x2)

inst_63664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:190992*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190992*0 + 3*688*FLEN/8, x4, x1, x2)

inst_63665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:190995*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190995*0 + 3*689*FLEN/8, x4, x1, x2)

inst_63666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:190998*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 190998*0 + 3*690*FLEN/8, x4, x1, x2)

inst_63667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:191001*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191001*0 + 3*691*FLEN/8, x4, x1, x2)

inst_63668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:191004*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191004*0 + 3*692*FLEN/8, x4, x1, x2)

inst_63669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:191007*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191007*0 + 3*693*FLEN/8, x4, x1, x2)

inst_63670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:191010*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191010*0 + 3*694*FLEN/8, x4, x1, x2)

inst_63671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:191013*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191013*0 + 3*695*FLEN/8, x4, x1, x2)

inst_63672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:191016*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191016*0 + 3*696*FLEN/8, x4, x1, x2)

inst_63673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:191019*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191019*0 + 3*697*FLEN/8, x4, x1, x2)

inst_63674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:191022*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191022*0 + 3*698*FLEN/8, x4, x1, x2)

inst_63675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:191025*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191025*0 + 3*699*FLEN/8, x4, x1, x2)

inst_63676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:191028*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191028*0 + 3*700*FLEN/8, x4, x1, x2)

inst_63677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:191031*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191031*0 + 3*701*FLEN/8, x4, x1, x2)

inst_63678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:191034*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191034*0 + 3*702*FLEN/8, x4, x1, x2)

inst_63679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:191037*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191037*0 + 3*703*FLEN/8, x4, x1, x2)

inst_63680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:191040*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191040*0 + 3*704*FLEN/8, x4, x1, x2)

inst_63681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:191043*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191043*0 + 3*705*FLEN/8, x4, x1, x2)

inst_63682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000000000000; valaddr_reg:x3; val_offset:191046*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191046*0 + 3*706*FLEN/8, x4, x1, x2)

inst_63683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000000000001; valaddr_reg:x3; val_offset:191049*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191049*0 + 3*707*FLEN/8, x4, x1, x2)

inst_63684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000000000003; valaddr_reg:x3; val_offset:191052*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191052*0 + 3*708*FLEN/8, x4, x1, x2)

inst_63685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000000000007; valaddr_reg:x3; val_offset:191055*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191055*0 + 3*709*FLEN/8, x4, x1, x2)

inst_63686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000000000000f; valaddr_reg:x3; val_offset:191058*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191058*0 + 3*710*FLEN/8, x4, x1, x2)

inst_63687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000000000001f; valaddr_reg:x3; val_offset:191061*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191061*0 + 3*711*FLEN/8, x4, x1, x2)

inst_63688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000000000003f; valaddr_reg:x3; val_offset:191064*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191064*0 + 3*712*FLEN/8, x4, x1, x2)

inst_63689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000000000007f; valaddr_reg:x3; val_offset:191067*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191067*0 + 3*713*FLEN/8, x4, x1, x2)

inst_63690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000000000000ff; valaddr_reg:x3; val_offset:191070*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191070*0 + 3*714*FLEN/8, x4, x1, x2)

inst_63691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000000000001ff; valaddr_reg:x3; val_offset:191073*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191073*0 + 3*715*FLEN/8, x4, x1, x2)

inst_63692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000000000003ff; valaddr_reg:x3; val_offset:191076*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191076*0 + 3*716*FLEN/8, x4, x1, x2)

inst_63693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000000000007ff; valaddr_reg:x3; val_offset:191079*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191079*0 + 3*717*FLEN/8, x4, x1, x2)

inst_63694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000000000fff; valaddr_reg:x3; val_offset:191082*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191082*0 + 3*718*FLEN/8, x4, x1, x2)

inst_63695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000000001fff; valaddr_reg:x3; val_offset:191085*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191085*0 + 3*719*FLEN/8, x4, x1, x2)

inst_63696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000000003fff; valaddr_reg:x3; val_offset:191088*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191088*0 + 3*720*FLEN/8, x4, x1, x2)

inst_63697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000000007fff; valaddr_reg:x3; val_offset:191091*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191091*0 + 3*721*FLEN/8, x4, x1, x2)

inst_63698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000000000ffff; valaddr_reg:x3; val_offset:191094*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191094*0 + 3*722*FLEN/8, x4, x1, x2)

inst_63699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000000001ffff; valaddr_reg:x3; val_offset:191097*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191097*0 + 3*723*FLEN/8, x4, x1, x2)

inst_63700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000000003ffff; valaddr_reg:x3; val_offset:191100*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191100*0 + 3*724*FLEN/8, x4, x1, x2)

inst_63701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000000007ffff; valaddr_reg:x3; val_offset:191103*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191103*0 + 3*725*FLEN/8, x4, x1, x2)

inst_63702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000000000fffff; valaddr_reg:x3; val_offset:191106*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191106*0 + 3*726*FLEN/8, x4, x1, x2)

inst_63703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000000001fffff; valaddr_reg:x3; val_offset:191109*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191109*0 + 3*727*FLEN/8, x4, x1, x2)

inst_63704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000000003fffff; valaddr_reg:x3; val_offset:191112*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191112*0 + 3*728*FLEN/8, x4, x1, x2)

inst_63705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000000007fffff; valaddr_reg:x3; val_offset:191115*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191115*0 + 3*729*FLEN/8, x4, x1, x2)

inst_63706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000000ffffff; valaddr_reg:x3; val_offset:191118*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191118*0 + 3*730*FLEN/8, x4, x1, x2)

inst_63707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000001ffffff; valaddr_reg:x3; val_offset:191121*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191121*0 + 3*731*FLEN/8, x4, x1, x2)

inst_63708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000003ffffff; valaddr_reg:x3; val_offset:191124*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191124*0 + 3*732*FLEN/8, x4, x1, x2)

inst_63709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000007ffffff; valaddr_reg:x3; val_offset:191127*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191127*0 + 3*733*FLEN/8, x4, x1, x2)

inst_63710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000000fffffff; valaddr_reg:x3; val_offset:191130*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191130*0 + 3*734*FLEN/8, x4, x1, x2)

inst_63711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000001fffffff; valaddr_reg:x3; val_offset:191133*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191133*0 + 3*735*FLEN/8, x4, x1, x2)

inst_63712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000003fffffff; valaddr_reg:x3; val_offset:191136*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191136*0 + 3*736*FLEN/8, x4, x1, x2)

inst_63713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000007fffffff; valaddr_reg:x3; val_offset:191139*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191139*0 + 3*737*FLEN/8, x4, x1, x2)

inst_63714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000000ffffffff; valaddr_reg:x3; val_offset:191142*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191142*0 + 3*738*FLEN/8, x4, x1, x2)

inst_63715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000001ffffffff; valaddr_reg:x3; val_offset:191145*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191145*0 + 3*739*FLEN/8, x4, x1, x2)

inst_63716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000003ffffffff; valaddr_reg:x3; val_offset:191148*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191148*0 + 3*740*FLEN/8, x4, x1, x2)

inst_63717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000007ffffffff; valaddr_reg:x3; val_offset:191151*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191151*0 + 3*741*FLEN/8, x4, x1, x2)

inst_63718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300000fffffffff; valaddr_reg:x3; val_offset:191154*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191154*0 + 3*742*FLEN/8, x4, x1, x2)

inst_63719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300001fffffffff; valaddr_reg:x3; val_offset:191157*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191157*0 + 3*743*FLEN/8, x4, x1, x2)

inst_63720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300003fffffffff; valaddr_reg:x3; val_offset:191160*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191160*0 + 3*744*FLEN/8, x4, x1, x2)

inst_63721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300007fffffffff; valaddr_reg:x3; val_offset:191163*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191163*0 + 3*745*FLEN/8, x4, x1, x2)

inst_63722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830000ffffffffff; valaddr_reg:x3; val_offset:191166*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191166*0 + 3*746*FLEN/8, x4, x1, x2)

inst_63723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830001ffffffffff; valaddr_reg:x3; val_offset:191169*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191169*0 + 3*747*FLEN/8, x4, x1, x2)

inst_63724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830003ffffffffff; valaddr_reg:x3; val_offset:191172*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191172*0 + 3*748*FLEN/8, x4, x1, x2)

inst_63725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830007ffffffffff; valaddr_reg:x3; val_offset:191175*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191175*0 + 3*749*FLEN/8, x4, x1, x2)

inst_63726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83000fffffffffff; valaddr_reg:x3; val_offset:191178*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191178*0 + 3*750*FLEN/8, x4, x1, x2)

inst_63727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83001fffffffffff; valaddr_reg:x3; val_offset:191181*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191181*0 + 3*751*FLEN/8, x4, x1, x2)

inst_63728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83003fffffffffff; valaddr_reg:x3; val_offset:191184*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191184*0 + 3*752*FLEN/8, x4, x1, x2)

inst_63729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x83007fffffffffff; valaddr_reg:x3; val_offset:191187*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191187*0 + 3*753*FLEN/8, x4, x1, x2)

inst_63730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8300ffffffffffff; valaddr_reg:x3; val_offset:191190*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191190*0 + 3*754*FLEN/8, x4, x1, x2)

inst_63731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8301ffffffffffff; valaddr_reg:x3; val_offset:191193*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191193*0 + 3*755*FLEN/8, x4, x1, x2)

inst_63732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8303ffffffffffff; valaddr_reg:x3; val_offset:191196*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191196*0 + 3*756*FLEN/8, x4, x1, x2)

inst_63733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8307ffffffffffff; valaddr_reg:x3; val_offset:191199*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191199*0 + 3*757*FLEN/8, x4, x1, x2)

inst_63734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x8308000000000000; valaddr_reg:x3; val_offset:191202*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191202*0 + 3*758*FLEN/8, x4, x1, x2)

inst_63735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830c000000000000; valaddr_reg:x3; val_offset:191205*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191205*0 + 3*759*FLEN/8, x4, x1, x2)

inst_63736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830e000000000000; valaddr_reg:x3; val_offset:191208*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191208*0 + 3*760*FLEN/8, x4, x1, x2)

inst_63737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830f000000000000; valaddr_reg:x3; val_offset:191211*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191211*0 + 3*761*FLEN/8, x4, x1, x2)

inst_63738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830f800000000000; valaddr_reg:x3; val_offset:191214*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191214*0 + 3*762*FLEN/8, x4, x1, x2)

inst_63739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830fc00000000000; valaddr_reg:x3; val_offset:191217*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191217*0 + 3*763*FLEN/8, x4, x1, x2)

inst_63740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830fe00000000000; valaddr_reg:x3; val_offset:191220*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191220*0 + 3*764*FLEN/8, x4, x1, x2)

inst_63741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830ff00000000000; valaddr_reg:x3; val_offset:191223*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191223*0 + 3*765*FLEN/8, x4, x1, x2)

inst_63742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830ff80000000000; valaddr_reg:x3; val_offset:191226*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191226*0 + 3*766*FLEN/8, x4, x1, x2)

inst_63743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x451eb54c10b8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa451eb54c10b8b; op2val:0x8000;
op3val:0x830ffc0000000000; valaddr_reg:x3; val_offset:191229*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 191229*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(167759086119550975,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(168884986026393599,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(168884986026393600,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170010885933236224,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170573835886657536,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170855310863368192,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170996048351723520,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171066417095901184,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171101601467990016,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171119193654034432,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171127989747056640,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171132387793567744,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171134586816823296,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171135686328451072,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136236084264960,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136510962171904,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136648401125376,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136717120602112,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136751480340480,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136768660209664,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136777250144256,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136781545111552,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136783692595200,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136784766337024,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785303207936,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785571643392,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785705861120,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785772969984,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785806524416,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785823301632,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785831690240,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785835884544,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785837981696,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839030272,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839554560,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839816704,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839947776,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840013312,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840046080,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840062464,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840070656,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840074752,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840076800,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840077824,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078336,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078592,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078720,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078784,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078816,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078832,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078840,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078844,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078846,64,FLEN)
NAN_BOXED(6891692029010286922,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078847,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118272,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118273,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118275,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118279,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118287,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118303,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118335,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118399,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118527,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118783,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760119295,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760120319,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760122367,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760126463,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760134655,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760151039,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760183807,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760249343,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760380415,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760642559,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178761166847,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178762215423,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178764312575,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178768506879,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178776895487,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178793672703,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178827227135,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178894335999,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179028553727,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179296989183,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179833860095,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705180907601919,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705183055085567,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705187350052863,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705195939987455,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705213119856639,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705247479595007,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705316199071743,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705453638025215,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705728515932159,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256706278271746047,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256707377783373823,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256709576806629375,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256713974853140479,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256722770946162687,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256740363132207103,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256775547504295935,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256845916248473599,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256986653736828927,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(257268128713539583,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(257831078666960895,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(258956978573803519,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(258956978573803520,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260082878480646144,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260645828434067456,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260927303410778112,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261068040899133440,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261138409643311104,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261173594015399936,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261191186201444352,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261199982294466560,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261204380340977664,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261206579364233216,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261207678875860992,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208228631674880,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208503509581824,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208640948535296,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208709668012032,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208744027750400,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208761207619584,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208769797554176,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208774092521472,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208776240005120,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208777313746944,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208777850617856,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778119053312,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778253271040,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778320379904,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778353934336,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778370711552,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778379100160,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778383294464,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778385391616,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778386440192,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778386964480,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387226624,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387357696,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387423232,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387456000,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387472384,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387480576,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387484672,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387486720,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387487744,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488256,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488512,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488640,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488704,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488736,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488752,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488760,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488764,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488766,64,FLEN)
NAN_BOXED(6891696500973053392,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488767,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747776,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747777,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747779,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747783,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747791,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747807,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747839,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747903,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748031,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748287,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748799,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132749823,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132751871,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132755967,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132764159,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132780543,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132813311,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132878847,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133009919,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133272063,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133796351,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579134844927,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579136942079,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579141136383,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579149524991,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579166302207,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579199856639,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579266965503,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579401183231,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579669618687,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201580206489599,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201581280231423,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201583427715071,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201587722682367,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201596312616959,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201613492486143,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201647852224511,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201716571701247,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201854010654719,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252202128888561663,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252202678644375551,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252203778156003327,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252205977179258879,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252210375225769983,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252219171318792191,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252236763504836607,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252271947876925439,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252342316621103103,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252483054109458431,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252764529086169087,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(253327479039590399,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(254453378946433023,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(254453378946433024,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255579278853275648,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256142228806696960,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256423703783407616,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256564441271762944,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256634810015940608,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256669994388029440,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256687586574073856,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256696382667096064,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256700780713607168,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256702979736862720,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704079248490496,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704629004304384,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704903882211328,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705041321164800,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705110040641536,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705144400379904,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705161580249088,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705170170183680,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705174465150976,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705176612634624,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705177686376448,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178223247360,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178491682816,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178625900544,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178693009408,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178726563840,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178743341056,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178751729664,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178755923968,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178758021120,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759069696,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759593984,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759856128,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759987200,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760052736,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760085504,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760101888,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760110080,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760114176,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760116224,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760117248,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760117760,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118016,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118144,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118208,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118240,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118256,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118264,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118268,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118270,64,FLEN)
NAN_BOXED(6891696971064517033,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118271,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445952,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445953,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445955,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445959,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445967,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445983,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446015,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446079,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446207,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446463,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446975,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528447999,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528450047,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528454143,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528462335,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528478719,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528511487,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528577023,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528708095,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528970239,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195529494527,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195530543103,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195532640255,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195536834559,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195545223167,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195562000383,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195595554815,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195662663679,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195796881407,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196065316863,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196602187775,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043197675929599,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043199823413247,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043204118380543,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043212708315135,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043229888184319,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043264247922687,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043332967399423,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043470406352895,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043745284259839,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54044295040073727,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54045394551701503,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54047593574957055,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54051991621468159,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54060787714490367,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54078379900534783,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54113564272623615,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54183933016801279,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54324670505156607,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54606145481867263,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(55169095435288575,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131199,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131200,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57420895248973824,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57983845202395136,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58265320179105792,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58406057667461120,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58476426411638784,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58511610783727616,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58529202969772032,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58537999062794240,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58542397109305344,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58544596132560896,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58545695644188672,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546245400002560,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546520277909504,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546657716862976,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546726436339712,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546760796078080,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546777975947264,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546786565881856,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546790860849152,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546793008332800,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794082074624,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794618945536,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794887380992,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795021598720,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795088707584,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795122262016,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795139039232,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795147427840,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795151622144,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795153719296,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795154767872,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155292160,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155554304,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155685376,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155750912,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155783680,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155800064,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155808256,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155812352,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155814400,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815424,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815936,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816192,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816320,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816384,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816416,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816432,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816440,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816444,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816446,64,FLEN)
NAN_BOXED(6891703396764098112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816447,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039424,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039425,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039427,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039431,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039439,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039455,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039487,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039551,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039679,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039935,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920040447,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920041471,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920043519,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920047615,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920055807,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920072191,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920104959,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920170495,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920301567,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920563711,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392921087999,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392922136575,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392924233727,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392928428031,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392936816639,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392953593855,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392987148287,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393054257151,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393188474879,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393456910335,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393993781247,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568395067523071,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568397215006719,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568401509974015,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568410099908607,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568427279777791,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568461639516159,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568530358992895,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568667797946367,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568942675853311,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85569492431667199,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85570591943294975,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85572790966550527,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85577189013061631,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85585985106083839,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85603577292128255,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85638761664217087,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85709130408394751,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85849867896750079,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(86131342873460735,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(86694292826882047,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(87820192733724671,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(87820192733724672,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(88946092640567296,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89509042593988608,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89790517570699264,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89931255059054592,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90001623803232256,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90036808175321088,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90054400361365504,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90063196454387712,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90067594500898816,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90069793524154368,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90070893035782144,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071442791596032,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071717669502976,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071855108456448,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071923827933184,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071958187671552,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071975367540736,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071983957475328,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071988252442624,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071990399926272,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071991473668096,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992010539008,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992278974464,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992413192192,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992480301056,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992513855488,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992530632704,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992539021312,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992543215616,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992545312768,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992546361344,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992546885632,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547147776,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547278848,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547344384,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547377152,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547393536,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547401728,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547405824,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547407872,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547408896,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409408,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409664,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409792,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409856,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409888,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409904,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409912,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409916,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409918,64,FLEN)
NAN_BOXED(6891706970828877910,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409919,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444736,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444737,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444739,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444743,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444751,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444767,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444799,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444863,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444991,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445247,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445759,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147446783,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147448831,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147452927,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147461119,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147477503,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147510271,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147575807,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147706879,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147969023,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830148493311,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830149541887,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830151639039,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830155833343,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830164221951,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830180999167,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830214553599,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830281662463,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830415880191,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830684315647,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436831221186559,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436832294928383,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436834442412031,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436838737379327,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436847327313919,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436864507183103,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436898866921471,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436967586398207,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437105025351679,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437379903258623,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437929659072511,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304439029170700287,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304441228193955839,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304445626240466943,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304454422333489151,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304472014519533567,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304507198891622399,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304577567635800063,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304718305124155391,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304999780100866047,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9305562730054287359,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129983,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129984,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9307814529867972608,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308377479821393920,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308658954798104576,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308799692286459904,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308870061030637568,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308905245402726400,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308922837588770816,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308931633681793024,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308936031728304128,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308938230751559680,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939330263187456,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939880019001344,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940154896908288,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940292335861760,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940361055338496,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940395415076864,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940412594946048,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940421184880640,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940425479847936,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940427627331584,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940428701073408,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429237944320,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429506379776,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429640597504,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429707706368,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429741260800,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429758038016,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429766426624,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429770620928,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429772718080,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429773766656,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774290944,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774553088,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774684160,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774749696,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774782464,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774798848,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774807040,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774811136,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774813184,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814208,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814720,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814976,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815104,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815168,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815200,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815216,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815224,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815228,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815230,64,FLEN)
NAN_BOXED(6891719744964828783,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815231,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559616,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559617,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559619,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559623,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559631,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559647,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559679,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559743,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559871,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968560127,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968560639,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968561663,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968563711,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968567807,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968575999,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968592383,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968625151,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968690687,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968821759,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818969083903,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818969608191,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818970656767,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818972753919,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818976948223,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818985336831,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819002114047,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819035668479,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819102777343,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819236995071,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819505430527,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544820042301439,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544821116043263,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544823263526911,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544827558494207,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544836148428799,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544853328297983,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544887688036351,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544956407513087,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545093846466559,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545368724373503,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545918480187391,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439547017991815167,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439549217015070719,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439553615061581823,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439562411154604031,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439580003340648447,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439615187712737279,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439685556456914943,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439826293945270271,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9440107768921980927,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9440670718875402239,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9441796618782244863,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9441796618782244864,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9442922518689087488,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443485468642508800,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443766943619219456,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443907681107574784,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443978049851752448,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444013234223841280,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444030826409885696,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444039622502907904,64,FLEN)
NAN_BOXED(6891723400964803467,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444044020549419008,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
