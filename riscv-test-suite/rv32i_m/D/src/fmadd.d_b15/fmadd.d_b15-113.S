
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_86016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000000000000; valaddr_reg:x3; val_offset:258048*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258048*0 + 3*0*FLEN/8, x4, x1, x2)

inst_86017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000000000001; valaddr_reg:x3; val_offset:258051*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258051*0 + 3*1*FLEN/8, x4, x1, x2)

inst_86018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000000000003; valaddr_reg:x3; val_offset:258054*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258054*0 + 3*2*FLEN/8, x4, x1, x2)

inst_86019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000000000007; valaddr_reg:x3; val_offset:258057*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258057*0 + 3*3*FLEN/8, x4, x1, x2)

inst_86020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000000000000f; valaddr_reg:x3; val_offset:258060*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258060*0 + 3*4*FLEN/8, x4, x1, x2)

inst_86021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000000000001f; valaddr_reg:x3; val_offset:258063*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258063*0 + 3*5*FLEN/8, x4, x1, x2)

inst_86022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000000000003f; valaddr_reg:x3; val_offset:258066*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258066*0 + 3*6*FLEN/8, x4, x1, x2)

inst_86023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000000000007f; valaddr_reg:x3; val_offset:258069*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258069*0 + 3*7*FLEN/8, x4, x1, x2)

inst_86024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900000000000ff; valaddr_reg:x3; val_offset:258072*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258072*0 + 3*8*FLEN/8, x4, x1, x2)

inst_86025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900000000001ff; valaddr_reg:x3; val_offset:258075*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258075*0 + 3*9*FLEN/8, x4, x1, x2)

inst_86026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900000000003ff; valaddr_reg:x3; val_offset:258078*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258078*0 + 3*10*FLEN/8, x4, x1, x2)

inst_86027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900000000007ff; valaddr_reg:x3; val_offset:258081*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258081*0 + 3*11*FLEN/8, x4, x1, x2)

inst_86028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000000000fff; valaddr_reg:x3; val_offset:258084*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258084*0 + 3*12*FLEN/8, x4, x1, x2)

inst_86029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000000001fff; valaddr_reg:x3; val_offset:258087*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258087*0 + 3*13*FLEN/8, x4, x1, x2)

inst_86030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000000003fff; valaddr_reg:x3; val_offset:258090*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258090*0 + 3*14*FLEN/8, x4, x1, x2)

inst_86031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000000007fff; valaddr_reg:x3; val_offset:258093*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258093*0 + 3*15*FLEN/8, x4, x1, x2)

inst_86032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000000000ffff; valaddr_reg:x3; val_offset:258096*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258096*0 + 3*16*FLEN/8, x4, x1, x2)

inst_86033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000000001ffff; valaddr_reg:x3; val_offset:258099*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258099*0 + 3*17*FLEN/8, x4, x1, x2)

inst_86034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000000003ffff; valaddr_reg:x3; val_offset:258102*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258102*0 + 3*18*FLEN/8, x4, x1, x2)

inst_86035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000000007ffff; valaddr_reg:x3; val_offset:258105*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258105*0 + 3*19*FLEN/8, x4, x1, x2)

inst_86036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900000000fffff; valaddr_reg:x3; val_offset:258108*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258108*0 + 3*20*FLEN/8, x4, x1, x2)

inst_86037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900000001fffff; valaddr_reg:x3; val_offset:258111*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258111*0 + 3*21*FLEN/8, x4, x1, x2)

inst_86038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900000003fffff; valaddr_reg:x3; val_offset:258114*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258114*0 + 3*22*FLEN/8, x4, x1, x2)

inst_86039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900000007fffff; valaddr_reg:x3; val_offset:258117*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258117*0 + 3*23*FLEN/8, x4, x1, x2)

inst_86040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000000ffffff; valaddr_reg:x3; val_offset:258120*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258120*0 + 3*24*FLEN/8, x4, x1, x2)

inst_86041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000001ffffff; valaddr_reg:x3; val_offset:258123*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258123*0 + 3*25*FLEN/8, x4, x1, x2)

inst_86042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000003ffffff; valaddr_reg:x3; val_offset:258126*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258126*0 + 3*26*FLEN/8, x4, x1, x2)

inst_86043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000007ffffff; valaddr_reg:x3; val_offset:258129*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258129*0 + 3*27*FLEN/8, x4, x1, x2)

inst_86044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000000fffffff; valaddr_reg:x3; val_offset:258132*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258132*0 + 3*28*FLEN/8, x4, x1, x2)

inst_86045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000001fffffff; valaddr_reg:x3; val_offset:258135*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258135*0 + 3*29*FLEN/8, x4, x1, x2)

inst_86046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000003fffffff; valaddr_reg:x3; val_offset:258138*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258138*0 + 3*30*FLEN/8, x4, x1, x2)

inst_86047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000007fffffff; valaddr_reg:x3; val_offset:258141*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258141*0 + 3*31*FLEN/8, x4, x1, x2)

inst_86048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900000ffffffff; valaddr_reg:x3; val_offset:258144*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258144*0 + 3*32*FLEN/8, x4, x1, x2)

inst_86049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900001ffffffff; valaddr_reg:x3; val_offset:258147*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258147*0 + 3*33*FLEN/8, x4, x1, x2)

inst_86050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900003ffffffff; valaddr_reg:x3; val_offset:258150*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258150*0 + 3*34*FLEN/8, x4, x1, x2)

inst_86051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900007ffffffff; valaddr_reg:x3; val_offset:258153*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258153*0 + 3*35*FLEN/8, x4, x1, x2)

inst_86052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90000fffffffff; valaddr_reg:x3; val_offset:258156*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258156*0 + 3*36*FLEN/8, x4, x1, x2)

inst_86053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90001fffffffff; valaddr_reg:x3; val_offset:258159*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258159*0 + 3*37*FLEN/8, x4, x1, x2)

inst_86054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90003fffffffff; valaddr_reg:x3; val_offset:258162*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258162*0 + 3*38*FLEN/8, x4, x1, x2)

inst_86055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90007fffffffff; valaddr_reg:x3; val_offset:258165*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258165*0 + 3*39*FLEN/8, x4, x1, x2)

inst_86056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9000ffffffffff; valaddr_reg:x3; val_offset:258168*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258168*0 + 3*40*FLEN/8, x4, x1, x2)

inst_86057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9001ffffffffff; valaddr_reg:x3; val_offset:258171*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258171*0 + 3*41*FLEN/8, x4, x1, x2)

inst_86058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9003ffffffffff; valaddr_reg:x3; val_offset:258174*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258174*0 + 3*42*FLEN/8, x4, x1, x2)

inst_86059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9007ffffffffff; valaddr_reg:x3; val_offset:258177*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258177*0 + 3*43*FLEN/8, x4, x1, x2)

inst_86060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a900fffffffffff; valaddr_reg:x3; val_offset:258180*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258180*0 + 3*44*FLEN/8, x4, x1, x2)

inst_86061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a901fffffffffff; valaddr_reg:x3; val_offset:258183*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258183*0 + 3*45*FLEN/8, x4, x1, x2)

inst_86062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a903fffffffffff; valaddr_reg:x3; val_offset:258186*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258186*0 + 3*46*FLEN/8, x4, x1, x2)

inst_86063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a907fffffffffff; valaddr_reg:x3; val_offset:258189*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258189*0 + 3*47*FLEN/8, x4, x1, x2)

inst_86064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a90ffffffffffff; valaddr_reg:x3; val_offset:258192*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258192*0 + 3*48*FLEN/8, x4, x1, x2)

inst_86065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a91ffffffffffff; valaddr_reg:x3; val_offset:258195*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258195*0 + 3*49*FLEN/8, x4, x1, x2)

inst_86066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a93ffffffffffff; valaddr_reg:x3; val_offset:258198*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258198*0 + 3*50*FLEN/8, x4, x1, x2)

inst_86067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a97ffffffffffff; valaddr_reg:x3; val_offset:258201*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258201*0 + 3*51*FLEN/8, x4, x1, x2)

inst_86068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a98000000000000; valaddr_reg:x3; val_offset:258204*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258204*0 + 3*52*FLEN/8, x4, x1, x2)

inst_86069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9c000000000000; valaddr_reg:x3; val_offset:258207*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258207*0 + 3*53*FLEN/8, x4, x1, x2)

inst_86070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9e000000000000; valaddr_reg:x3; val_offset:258210*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258210*0 + 3*54*FLEN/8, x4, x1, x2)

inst_86071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9f000000000000; valaddr_reg:x3; val_offset:258213*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258213*0 + 3*55*FLEN/8, x4, x1, x2)

inst_86072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9f800000000000; valaddr_reg:x3; val_offset:258216*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258216*0 + 3*56*FLEN/8, x4, x1, x2)

inst_86073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fc00000000000; valaddr_reg:x3; val_offset:258219*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258219*0 + 3*57*FLEN/8, x4, x1, x2)

inst_86074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fe00000000000; valaddr_reg:x3; val_offset:258222*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258222*0 + 3*58*FLEN/8, x4, x1, x2)

inst_86075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ff00000000000; valaddr_reg:x3; val_offset:258225*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258225*0 + 3*59*FLEN/8, x4, x1, x2)

inst_86076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ff80000000000; valaddr_reg:x3; val_offset:258228*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258228*0 + 3*60*FLEN/8, x4, x1, x2)

inst_86077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffc0000000000; valaddr_reg:x3; val_offset:258231*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258231*0 + 3*61*FLEN/8, x4, x1, x2)

inst_86078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffe0000000000; valaddr_reg:x3; val_offset:258234*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258234*0 + 3*62*FLEN/8, x4, x1, x2)

inst_86079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fff0000000000; valaddr_reg:x3; val_offset:258237*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258237*0 + 3*63*FLEN/8, x4, x1, x2)

inst_86080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fff8000000000; valaddr_reg:x3; val_offset:258240*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258240*0 + 3*64*FLEN/8, x4, x1, x2)

inst_86081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffc000000000; valaddr_reg:x3; val_offset:258243*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258243*0 + 3*65*FLEN/8, x4, x1, x2)

inst_86082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffe000000000; valaddr_reg:x3; val_offset:258246*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258246*0 + 3*66*FLEN/8, x4, x1, x2)

inst_86083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffff000000000; valaddr_reg:x3; val_offset:258249*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258249*0 + 3*67*FLEN/8, x4, x1, x2)

inst_86084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffff800000000; valaddr_reg:x3; val_offset:258252*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258252*0 + 3*68*FLEN/8, x4, x1, x2)

inst_86085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffc00000000; valaddr_reg:x3; val_offset:258255*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258255*0 + 3*69*FLEN/8, x4, x1, x2)

inst_86086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffe00000000; valaddr_reg:x3; val_offset:258258*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258258*0 + 3*70*FLEN/8, x4, x1, x2)

inst_86087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffff00000000; valaddr_reg:x3; val_offset:258261*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258261*0 + 3*71*FLEN/8, x4, x1, x2)

inst_86088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffff80000000; valaddr_reg:x3; val_offset:258264*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258264*0 + 3*72*FLEN/8, x4, x1, x2)

inst_86089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffc0000000; valaddr_reg:x3; val_offset:258267*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258267*0 + 3*73*FLEN/8, x4, x1, x2)

inst_86090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffe0000000; valaddr_reg:x3; val_offset:258270*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258270*0 + 3*74*FLEN/8, x4, x1, x2)

inst_86091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffff0000000; valaddr_reg:x3; val_offset:258273*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258273*0 + 3*75*FLEN/8, x4, x1, x2)

inst_86092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffff8000000; valaddr_reg:x3; val_offset:258276*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258276*0 + 3*76*FLEN/8, x4, x1, x2)

inst_86093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffc000000; valaddr_reg:x3; val_offset:258279*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258279*0 + 3*77*FLEN/8, x4, x1, x2)

inst_86094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffe000000; valaddr_reg:x3; val_offset:258282*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258282*0 + 3*78*FLEN/8, x4, x1, x2)

inst_86095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffff000000; valaddr_reg:x3; val_offset:258285*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258285*0 + 3*79*FLEN/8, x4, x1, x2)

inst_86096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffff800000; valaddr_reg:x3; val_offset:258288*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258288*0 + 3*80*FLEN/8, x4, x1, x2)

inst_86097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffffc00000; valaddr_reg:x3; val_offset:258291*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258291*0 + 3*81*FLEN/8, x4, x1, x2)

inst_86098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffffe00000; valaddr_reg:x3; val_offset:258294*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258294*0 + 3*82*FLEN/8, x4, x1, x2)

inst_86099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffff00000; valaddr_reg:x3; val_offset:258297*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258297*0 + 3*83*FLEN/8, x4, x1, x2)

inst_86100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffff80000; valaddr_reg:x3; val_offset:258300*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258300*0 + 3*84*FLEN/8, x4, x1, x2)

inst_86101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffffc0000; valaddr_reg:x3; val_offset:258303*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258303*0 + 3*85*FLEN/8, x4, x1, x2)

inst_86102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffffe0000; valaddr_reg:x3; val_offset:258306*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258306*0 + 3*86*FLEN/8, x4, x1, x2)

inst_86103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffffff0000; valaddr_reg:x3; val_offset:258309*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258309*0 + 3*87*FLEN/8, x4, x1, x2)

inst_86104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffffff8000; valaddr_reg:x3; val_offset:258312*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258312*0 + 3*88*FLEN/8, x4, x1, x2)

inst_86105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffffffc000; valaddr_reg:x3; val_offset:258315*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258315*0 + 3*89*FLEN/8, x4, x1, x2)

inst_86106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffffffe000; valaddr_reg:x3; val_offset:258318*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258318*0 + 3*90*FLEN/8, x4, x1, x2)

inst_86107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffffff000; valaddr_reg:x3; val_offset:258321*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258321*0 + 3*91*FLEN/8, x4, x1, x2)

inst_86108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffffff800; valaddr_reg:x3; val_offset:258324*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258324*0 + 3*92*FLEN/8, x4, x1, x2)

inst_86109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffffffc00; valaddr_reg:x3; val_offset:258327*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258327*0 + 3*93*FLEN/8, x4, x1, x2)

inst_86110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffffffe00; valaddr_reg:x3; val_offset:258330*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258330*0 + 3*94*FLEN/8, x4, x1, x2)

inst_86111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffffffff00; valaddr_reg:x3; val_offset:258333*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258333*0 + 3*95*FLEN/8, x4, x1, x2)

inst_86112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffffffff80; valaddr_reg:x3; val_offset:258336*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258336*0 + 3*96*FLEN/8, x4, x1, x2)

inst_86113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffffffffc0; valaddr_reg:x3; val_offset:258339*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258339*0 + 3*97*FLEN/8, x4, x1, x2)

inst_86114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffffffffe0; valaddr_reg:x3; val_offset:258342*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258342*0 + 3*98*FLEN/8, x4, x1, x2)

inst_86115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffffffff0; valaddr_reg:x3; val_offset:258345*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258345*0 + 3*99*FLEN/8, x4, x1, x2)

inst_86116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffffffff8; valaddr_reg:x3; val_offset:258348*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258348*0 + 3*100*FLEN/8, x4, x1, x2)

inst_86117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffffffffc; valaddr_reg:x3; val_offset:258351*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258351*0 + 3*101*FLEN/8, x4, x1, x2)

inst_86118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9ffffffffffffe; valaddr_reg:x3; val_offset:258354*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258354*0 + 3*102*FLEN/8, x4, x1, x2)

inst_86119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3a9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3a9fffffffffffff; valaddr_reg:x3; val_offset:258357*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258357*0 + 3*103*FLEN/8, x4, x1, x2)

inst_86120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:258360*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258360*0 + 3*104*FLEN/8, x4, x1, x2)

inst_86121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:258363*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258363*0 + 3*105*FLEN/8, x4, x1, x2)

inst_86122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:258366*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258366*0 + 3*106*FLEN/8, x4, x1, x2)

inst_86123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:258369*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258369*0 + 3*107*FLEN/8, x4, x1, x2)

inst_86124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:258372*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258372*0 + 3*108*FLEN/8, x4, x1, x2)

inst_86125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:258375*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258375*0 + 3*109*FLEN/8, x4, x1, x2)

inst_86126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:258378*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258378*0 + 3*110*FLEN/8, x4, x1, x2)

inst_86127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:258381*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258381*0 + 3*111*FLEN/8, x4, x1, x2)

inst_86128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:258384*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258384*0 + 3*112*FLEN/8, x4, x1, x2)

inst_86129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:258387*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258387*0 + 3*113*FLEN/8, x4, x1, x2)

inst_86130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:258390*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258390*0 + 3*114*FLEN/8, x4, x1, x2)

inst_86131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:258393*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258393*0 + 3*115*FLEN/8, x4, x1, x2)

inst_86132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:258396*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258396*0 + 3*116*FLEN/8, x4, x1, x2)

inst_86133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:258399*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258399*0 + 3*117*FLEN/8, x4, x1, x2)

inst_86134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:258402*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258402*0 + 3*118*FLEN/8, x4, x1, x2)

inst_86135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:258405*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258405*0 + 3*119*FLEN/8, x4, x1, x2)

inst_86136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:258408*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258408*0 + 3*120*FLEN/8, x4, x1, x2)

inst_86137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:258411*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258411*0 + 3*121*FLEN/8, x4, x1, x2)

inst_86138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:258414*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258414*0 + 3*122*FLEN/8, x4, x1, x2)

inst_86139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:258417*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258417*0 + 3*123*FLEN/8, x4, x1, x2)

inst_86140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:258420*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258420*0 + 3*124*FLEN/8, x4, x1, x2)

inst_86141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb521ea67bfb90 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2bd85383cbe85 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab521ea67bfb90; op2val:0x2032bd85383cbe85;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:258423*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258423*0 + 3*125*FLEN/8, x4, x1, x2)

inst_86142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:258426*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258426*0 + 3*126*FLEN/8, x4, x1, x2)

inst_86143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:258429*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258429*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_86144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:258432*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258432*0 + 3*128*FLEN/8, x4, x1, x2)

inst_86145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:258435*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258435*0 + 3*129*FLEN/8, x4, x1, x2)

inst_86146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:258438*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258438*0 + 3*130*FLEN/8, x4, x1, x2)

inst_86147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:258441*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258441*0 + 3*131*FLEN/8, x4, x1, x2)

inst_86148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:258444*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258444*0 + 3*132*FLEN/8, x4, x1, x2)

inst_86149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:258447*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258447*0 + 3*133*FLEN/8, x4, x1, x2)

inst_86150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:258450*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258450*0 + 3*134*FLEN/8, x4, x1, x2)

inst_86151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:258453*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258453*0 + 3*135*FLEN/8, x4, x1, x2)

inst_86152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:258456*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258456*0 + 3*136*FLEN/8, x4, x1, x2)

inst_86153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:258459*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258459*0 + 3*137*FLEN/8, x4, x1, x2)

inst_86154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:258462*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258462*0 + 3*138*FLEN/8, x4, x1, x2)

inst_86155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:258465*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258465*0 + 3*139*FLEN/8, x4, x1, x2)

inst_86156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:258468*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258468*0 + 3*140*FLEN/8, x4, x1, x2)

inst_86157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:258471*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258471*0 + 3*141*FLEN/8, x4, x1, x2)

inst_86158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:258474*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258474*0 + 3*142*FLEN/8, x4, x1, x2)

inst_86159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:258477*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258477*0 + 3*143*FLEN/8, x4, x1, x2)

inst_86160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:258480*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258480*0 + 3*144*FLEN/8, x4, x1, x2)

inst_86161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:258483*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258483*0 + 3*145*FLEN/8, x4, x1, x2)

inst_86162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:258486*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258486*0 + 3*146*FLEN/8, x4, x1, x2)

inst_86163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:258489*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258489*0 + 3*147*FLEN/8, x4, x1, x2)

inst_86164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000000000000; valaddr_reg:x3; val_offset:258492*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258492*0 + 3*148*FLEN/8, x4, x1, x2)

inst_86165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000000000001; valaddr_reg:x3; val_offset:258495*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258495*0 + 3*149*FLEN/8, x4, x1, x2)

inst_86166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000000000003; valaddr_reg:x3; val_offset:258498*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258498*0 + 3*150*FLEN/8, x4, x1, x2)

inst_86167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000000000007; valaddr_reg:x3; val_offset:258501*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258501*0 + 3*151*FLEN/8, x4, x1, x2)

inst_86168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000000000000f; valaddr_reg:x3; val_offset:258504*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258504*0 + 3*152*FLEN/8, x4, x1, x2)

inst_86169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000000000001f; valaddr_reg:x3; val_offset:258507*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258507*0 + 3*153*FLEN/8, x4, x1, x2)

inst_86170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000000000003f; valaddr_reg:x3; val_offset:258510*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258510*0 + 3*154*FLEN/8, x4, x1, x2)

inst_86171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000000000007f; valaddr_reg:x3; val_offset:258513*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258513*0 + 3*155*FLEN/8, x4, x1, x2)

inst_86172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700000000000ff; valaddr_reg:x3; val_offset:258516*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258516*0 + 3*156*FLEN/8, x4, x1, x2)

inst_86173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700000000001ff; valaddr_reg:x3; val_offset:258519*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258519*0 + 3*157*FLEN/8, x4, x1, x2)

inst_86174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700000000003ff; valaddr_reg:x3; val_offset:258522*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258522*0 + 3*158*FLEN/8, x4, x1, x2)

inst_86175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700000000007ff; valaddr_reg:x3; val_offset:258525*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258525*0 + 3*159*FLEN/8, x4, x1, x2)

inst_86176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000000000fff; valaddr_reg:x3; val_offset:258528*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258528*0 + 3*160*FLEN/8, x4, x1, x2)

inst_86177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000000001fff; valaddr_reg:x3; val_offset:258531*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258531*0 + 3*161*FLEN/8, x4, x1, x2)

inst_86178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000000003fff; valaddr_reg:x3; val_offset:258534*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258534*0 + 3*162*FLEN/8, x4, x1, x2)

inst_86179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000000007fff; valaddr_reg:x3; val_offset:258537*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258537*0 + 3*163*FLEN/8, x4, x1, x2)

inst_86180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000000000ffff; valaddr_reg:x3; val_offset:258540*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258540*0 + 3*164*FLEN/8, x4, x1, x2)

inst_86181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000000001ffff; valaddr_reg:x3; val_offset:258543*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258543*0 + 3*165*FLEN/8, x4, x1, x2)

inst_86182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000000003ffff; valaddr_reg:x3; val_offset:258546*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258546*0 + 3*166*FLEN/8, x4, x1, x2)

inst_86183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000000007ffff; valaddr_reg:x3; val_offset:258549*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258549*0 + 3*167*FLEN/8, x4, x1, x2)

inst_86184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700000000fffff; valaddr_reg:x3; val_offset:258552*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258552*0 + 3*168*FLEN/8, x4, x1, x2)

inst_86185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700000001fffff; valaddr_reg:x3; val_offset:258555*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258555*0 + 3*169*FLEN/8, x4, x1, x2)

inst_86186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700000003fffff; valaddr_reg:x3; val_offset:258558*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258558*0 + 3*170*FLEN/8, x4, x1, x2)

inst_86187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700000007fffff; valaddr_reg:x3; val_offset:258561*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258561*0 + 3*171*FLEN/8, x4, x1, x2)

inst_86188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000000ffffff; valaddr_reg:x3; val_offset:258564*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258564*0 + 3*172*FLEN/8, x4, x1, x2)

inst_86189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000001ffffff; valaddr_reg:x3; val_offset:258567*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258567*0 + 3*173*FLEN/8, x4, x1, x2)

inst_86190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000003ffffff; valaddr_reg:x3; val_offset:258570*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258570*0 + 3*174*FLEN/8, x4, x1, x2)

inst_86191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000007ffffff; valaddr_reg:x3; val_offset:258573*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258573*0 + 3*175*FLEN/8, x4, x1, x2)

inst_86192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000000fffffff; valaddr_reg:x3; val_offset:258576*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258576*0 + 3*176*FLEN/8, x4, x1, x2)

inst_86193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000001fffffff; valaddr_reg:x3; val_offset:258579*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258579*0 + 3*177*FLEN/8, x4, x1, x2)

inst_86194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000003fffffff; valaddr_reg:x3; val_offset:258582*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258582*0 + 3*178*FLEN/8, x4, x1, x2)

inst_86195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000007fffffff; valaddr_reg:x3; val_offset:258585*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258585*0 + 3*179*FLEN/8, x4, x1, x2)

inst_86196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700000ffffffff; valaddr_reg:x3; val_offset:258588*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258588*0 + 3*180*FLEN/8, x4, x1, x2)

inst_86197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700001ffffffff; valaddr_reg:x3; val_offset:258591*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258591*0 + 3*181*FLEN/8, x4, x1, x2)

inst_86198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700003ffffffff; valaddr_reg:x3; val_offset:258594*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258594*0 + 3*182*FLEN/8, x4, x1, x2)

inst_86199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700007ffffffff; valaddr_reg:x3; val_offset:258597*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258597*0 + 3*183*FLEN/8, x4, x1, x2)

inst_86200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370000fffffffff; valaddr_reg:x3; val_offset:258600*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258600*0 + 3*184*FLEN/8, x4, x1, x2)

inst_86201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370001fffffffff; valaddr_reg:x3; val_offset:258603*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258603*0 + 3*185*FLEN/8, x4, x1, x2)

inst_86202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370003fffffffff; valaddr_reg:x3; val_offset:258606*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258606*0 + 3*186*FLEN/8, x4, x1, x2)

inst_86203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370007fffffffff; valaddr_reg:x3; val_offset:258609*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258609*0 + 3*187*FLEN/8, x4, x1, x2)

inst_86204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837000ffffffffff; valaddr_reg:x3; val_offset:258612*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258612*0 + 3*188*FLEN/8, x4, x1, x2)

inst_86205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837001ffffffffff; valaddr_reg:x3; val_offset:258615*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258615*0 + 3*189*FLEN/8, x4, x1, x2)

inst_86206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837003ffffffffff; valaddr_reg:x3; val_offset:258618*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258618*0 + 3*190*FLEN/8, x4, x1, x2)

inst_86207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837007ffffffffff; valaddr_reg:x3; val_offset:258621*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258621*0 + 3*191*FLEN/8, x4, x1, x2)

inst_86208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83700fffffffffff; valaddr_reg:x3; val_offset:258624*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258624*0 + 3*192*FLEN/8, x4, x1, x2)

inst_86209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83701fffffffffff; valaddr_reg:x3; val_offset:258627*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258627*0 + 3*193*FLEN/8, x4, x1, x2)

inst_86210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83703fffffffffff; valaddr_reg:x3; val_offset:258630*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258630*0 + 3*194*FLEN/8, x4, x1, x2)

inst_86211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x83707fffffffffff; valaddr_reg:x3; val_offset:258633*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258633*0 + 3*195*FLEN/8, x4, x1, x2)

inst_86212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8370ffffffffffff; valaddr_reg:x3; val_offset:258636*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258636*0 + 3*196*FLEN/8, x4, x1, x2)

inst_86213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8371ffffffffffff; valaddr_reg:x3; val_offset:258639*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258639*0 + 3*197*FLEN/8, x4, x1, x2)

inst_86214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8373ffffffffffff; valaddr_reg:x3; val_offset:258642*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258642*0 + 3*198*FLEN/8, x4, x1, x2)

inst_86215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8377ffffffffffff; valaddr_reg:x3; val_offset:258645*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258645*0 + 3*199*FLEN/8, x4, x1, x2)

inst_86216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x8378000000000000; valaddr_reg:x3; val_offset:258648*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258648*0 + 3*200*FLEN/8, x4, x1, x2)

inst_86217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837c000000000000; valaddr_reg:x3; val_offset:258651*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258651*0 + 3*201*FLEN/8, x4, x1, x2)

inst_86218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837e000000000000; valaddr_reg:x3; val_offset:258654*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258654*0 + 3*202*FLEN/8, x4, x1, x2)

inst_86219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837f000000000000; valaddr_reg:x3; val_offset:258657*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258657*0 + 3*203*FLEN/8, x4, x1, x2)

inst_86220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837f800000000000; valaddr_reg:x3; val_offset:258660*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258660*0 + 3*204*FLEN/8, x4, x1, x2)

inst_86221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fc00000000000; valaddr_reg:x3; val_offset:258663*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258663*0 + 3*205*FLEN/8, x4, x1, x2)

inst_86222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fe00000000000; valaddr_reg:x3; val_offset:258666*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258666*0 + 3*206*FLEN/8, x4, x1, x2)

inst_86223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ff00000000000; valaddr_reg:x3; val_offset:258669*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258669*0 + 3*207*FLEN/8, x4, x1, x2)

inst_86224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ff80000000000; valaddr_reg:x3; val_offset:258672*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258672*0 + 3*208*FLEN/8, x4, x1, x2)

inst_86225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffc0000000000; valaddr_reg:x3; val_offset:258675*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258675*0 + 3*209*FLEN/8, x4, x1, x2)

inst_86226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffe0000000000; valaddr_reg:x3; val_offset:258678*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258678*0 + 3*210*FLEN/8, x4, x1, x2)

inst_86227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fff0000000000; valaddr_reg:x3; val_offset:258681*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258681*0 + 3*211*FLEN/8, x4, x1, x2)

inst_86228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fff8000000000; valaddr_reg:x3; val_offset:258684*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258684*0 + 3*212*FLEN/8, x4, x1, x2)

inst_86229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffc000000000; valaddr_reg:x3; val_offset:258687*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258687*0 + 3*213*FLEN/8, x4, x1, x2)

inst_86230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffe000000000; valaddr_reg:x3; val_offset:258690*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258690*0 + 3*214*FLEN/8, x4, x1, x2)

inst_86231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffff000000000; valaddr_reg:x3; val_offset:258693*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258693*0 + 3*215*FLEN/8, x4, x1, x2)

inst_86232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffff800000000; valaddr_reg:x3; val_offset:258696*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258696*0 + 3*216*FLEN/8, x4, x1, x2)

inst_86233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffc00000000; valaddr_reg:x3; val_offset:258699*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258699*0 + 3*217*FLEN/8, x4, x1, x2)

inst_86234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffe00000000; valaddr_reg:x3; val_offset:258702*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258702*0 + 3*218*FLEN/8, x4, x1, x2)

inst_86235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffff00000000; valaddr_reg:x3; val_offset:258705*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258705*0 + 3*219*FLEN/8, x4, x1, x2)

inst_86236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffff80000000; valaddr_reg:x3; val_offset:258708*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258708*0 + 3*220*FLEN/8, x4, x1, x2)

inst_86237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffc0000000; valaddr_reg:x3; val_offset:258711*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258711*0 + 3*221*FLEN/8, x4, x1, x2)

inst_86238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffe0000000; valaddr_reg:x3; val_offset:258714*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258714*0 + 3*222*FLEN/8, x4, x1, x2)

inst_86239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffff0000000; valaddr_reg:x3; val_offset:258717*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258717*0 + 3*223*FLEN/8, x4, x1, x2)

inst_86240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffff8000000; valaddr_reg:x3; val_offset:258720*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258720*0 + 3*224*FLEN/8, x4, x1, x2)

inst_86241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffc000000; valaddr_reg:x3; val_offset:258723*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258723*0 + 3*225*FLEN/8, x4, x1, x2)

inst_86242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffe000000; valaddr_reg:x3; val_offset:258726*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258726*0 + 3*226*FLEN/8, x4, x1, x2)

inst_86243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffff000000; valaddr_reg:x3; val_offset:258729*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258729*0 + 3*227*FLEN/8, x4, x1, x2)

inst_86244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffff800000; valaddr_reg:x3; val_offset:258732*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258732*0 + 3*228*FLEN/8, x4, x1, x2)

inst_86245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffffc00000; valaddr_reg:x3; val_offset:258735*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258735*0 + 3*229*FLEN/8, x4, x1, x2)

inst_86246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffffe00000; valaddr_reg:x3; val_offset:258738*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258738*0 + 3*230*FLEN/8, x4, x1, x2)

inst_86247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffff00000; valaddr_reg:x3; val_offset:258741*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258741*0 + 3*231*FLEN/8, x4, x1, x2)

inst_86248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffff80000; valaddr_reg:x3; val_offset:258744*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258744*0 + 3*232*FLEN/8, x4, x1, x2)

inst_86249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffffc0000; valaddr_reg:x3; val_offset:258747*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258747*0 + 3*233*FLEN/8, x4, x1, x2)

inst_86250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffffe0000; valaddr_reg:x3; val_offset:258750*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258750*0 + 3*234*FLEN/8, x4, x1, x2)

inst_86251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffffff0000; valaddr_reg:x3; val_offset:258753*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258753*0 + 3*235*FLEN/8, x4, x1, x2)

inst_86252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffffff8000; valaddr_reg:x3; val_offset:258756*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258756*0 + 3*236*FLEN/8, x4, x1, x2)

inst_86253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffffffc000; valaddr_reg:x3; val_offset:258759*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258759*0 + 3*237*FLEN/8, x4, x1, x2)

inst_86254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffffffe000; valaddr_reg:x3; val_offset:258762*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258762*0 + 3*238*FLEN/8, x4, x1, x2)

inst_86255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffffff000; valaddr_reg:x3; val_offset:258765*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258765*0 + 3*239*FLEN/8, x4, x1, x2)

inst_86256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffffff800; valaddr_reg:x3; val_offset:258768*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258768*0 + 3*240*FLEN/8, x4, x1, x2)

inst_86257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffffffc00; valaddr_reg:x3; val_offset:258771*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258771*0 + 3*241*FLEN/8, x4, x1, x2)

inst_86258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffffffe00; valaddr_reg:x3; val_offset:258774*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258774*0 + 3*242*FLEN/8, x4, x1, x2)

inst_86259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffffffff00; valaddr_reg:x3; val_offset:258777*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258777*0 + 3*243*FLEN/8, x4, x1, x2)

inst_86260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffffffff80; valaddr_reg:x3; val_offset:258780*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258780*0 + 3*244*FLEN/8, x4, x1, x2)

inst_86261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffffffffc0; valaddr_reg:x3; val_offset:258783*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258783*0 + 3*245*FLEN/8, x4, x1, x2)

inst_86262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffffffffe0; valaddr_reg:x3; val_offset:258786*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258786*0 + 3*246*FLEN/8, x4, x1, x2)

inst_86263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffffffff0; valaddr_reg:x3; val_offset:258789*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258789*0 + 3*247*FLEN/8, x4, x1, x2)

inst_86264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffffffff8; valaddr_reg:x3; val_offset:258792*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258792*0 + 3*248*FLEN/8, x4, x1, x2)

inst_86265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffffffffc; valaddr_reg:x3; val_offset:258795*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258795*0 + 3*249*FLEN/8, x4, x1, x2)

inst_86266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837ffffffffffffe; valaddr_reg:x3; val_offset:258798*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258798*0 + 3*250*FLEN/8, x4, x1, x2)

inst_86267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7db68432f6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x037 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7db68432f6ff; op2val:0x8000;
op3val:0x837fffffffffffff; valaddr_reg:x3; val_offset:258801*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258801*0 + 3*251*FLEN/8, x4, x1, x2)

inst_86268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:258804*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258804*0 + 3*252*FLEN/8, x4, x1, x2)

inst_86269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:258807*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258807*0 + 3*253*FLEN/8, x4, x1, x2)

inst_86270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:258810*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258810*0 + 3*254*FLEN/8, x4, x1, x2)

inst_86271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:258813*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258813*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_86272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:258816*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258816*0 + 3*256*FLEN/8, x4, x1, x2)

inst_86273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:258819*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258819*0 + 3*257*FLEN/8, x4, x1, x2)

inst_86274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:258822*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258822*0 + 3*258*FLEN/8, x4, x1, x2)

inst_86275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:258825*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258825*0 + 3*259*FLEN/8, x4, x1, x2)

inst_86276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:258828*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258828*0 + 3*260*FLEN/8, x4, x1, x2)

inst_86277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:258831*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258831*0 + 3*261*FLEN/8, x4, x1, x2)

inst_86278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:258834*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258834*0 + 3*262*FLEN/8, x4, x1, x2)

inst_86279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:258837*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258837*0 + 3*263*FLEN/8, x4, x1, x2)

inst_86280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:258840*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258840*0 + 3*264*FLEN/8, x4, x1, x2)

inst_86281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:258843*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258843*0 + 3*265*FLEN/8, x4, x1, x2)

inst_86282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:258846*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258846*0 + 3*266*FLEN/8, x4, x1, x2)

inst_86283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:258849*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258849*0 + 3*267*FLEN/8, x4, x1, x2)

inst_86284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:258852*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258852*0 + 3*268*FLEN/8, x4, x1, x2)

inst_86285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:258855*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258855*0 + 3*269*FLEN/8, x4, x1, x2)

inst_86286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:258858*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258858*0 + 3*270*FLEN/8, x4, x1, x2)

inst_86287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:258861*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258861*0 + 3*271*FLEN/8, x4, x1, x2)

inst_86288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:258864*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258864*0 + 3*272*FLEN/8, x4, x1, x2)

inst_86289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:258867*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258867*0 + 3*273*FLEN/8, x4, x1, x2)

inst_86290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000000000000; valaddr_reg:x3; val_offset:258870*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258870*0 + 3*274*FLEN/8, x4, x1, x2)

inst_86291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000000000001; valaddr_reg:x3; val_offset:258873*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258873*0 + 3*275*FLEN/8, x4, x1, x2)

inst_86292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000000000003; valaddr_reg:x3; val_offset:258876*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258876*0 + 3*276*FLEN/8, x4, x1, x2)

inst_86293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000000000007; valaddr_reg:x3; val_offset:258879*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258879*0 + 3*277*FLEN/8, x4, x1, x2)

inst_86294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000000000000f; valaddr_reg:x3; val_offset:258882*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258882*0 + 3*278*FLEN/8, x4, x1, x2)

inst_86295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000000000001f; valaddr_reg:x3; val_offset:258885*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258885*0 + 3*279*FLEN/8, x4, x1, x2)

inst_86296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000000000003f; valaddr_reg:x3; val_offset:258888*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258888*0 + 3*280*FLEN/8, x4, x1, x2)

inst_86297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000000000007f; valaddr_reg:x3; val_offset:258891*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258891*0 + 3*281*FLEN/8, x4, x1, x2)

inst_86298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900000000000ff; valaddr_reg:x3; val_offset:258894*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258894*0 + 3*282*FLEN/8, x4, x1, x2)

inst_86299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900000000001ff; valaddr_reg:x3; val_offset:258897*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258897*0 + 3*283*FLEN/8, x4, x1, x2)

inst_86300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900000000003ff; valaddr_reg:x3; val_offset:258900*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258900*0 + 3*284*FLEN/8, x4, x1, x2)

inst_86301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900000000007ff; valaddr_reg:x3; val_offset:258903*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258903*0 + 3*285*FLEN/8, x4, x1, x2)

inst_86302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000000000fff; valaddr_reg:x3; val_offset:258906*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258906*0 + 3*286*FLEN/8, x4, x1, x2)

inst_86303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000000001fff; valaddr_reg:x3; val_offset:258909*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258909*0 + 3*287*FLEN/8, x4, x1, x2)

inst_86304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000000003fff; valaddr_reg:x3; val_offset:258912*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258912*0 + 3*288*FLEN/8, x4, x1, x2)

inst_86305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000000007fff; valaddr_reg:x3; val_offset:258915*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258915*0 + 3*289*FLEN/8, x4, x1, x2)

inst_86306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000000000ffff; valaddr_reg:x3; val_offset:258918*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258918*0 + 3*290*FLEN/8, x4, x1, x2)

inst_86307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000000001ffff; valaddr_reg:x3; val_offset:258921*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258921*0 + 3*291*FLEN/8, x4, x1, x2)

inst_86308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000000003ffff; valaddr_reg:x3; val_offset:258924*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258924*0 + 3*292*FLEN/8, x4, x1, x2)

inst_86309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000000007ffff; valaddr_reg:x3; val_offset:258927*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258927*0 + 3*293*FLEN/8, x4, x1, x2)

inst_86310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900000000fffff; valaddr_reg:x3; val_offset:258930*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258930*0 + 3*294*FLEN/8, x4, x1, x2)

inst_86311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900000001fffff; valaddr_reg:x3; val_offset:258933*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258933*0 + 3*295*FLEN/8, x4, x1, x2)

inst_86312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900000003fffff; valaddr_reg:x3; val_offset:258936*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258936*0 + 3*296*FLEN/8, x4, x1, x2)

inst_86313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900000007fffff; valaddr_reg:x3; val_offset:258939*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258939*0 + 3*297*FLEN/8, x4, x1, x2)

inst_86314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000000ffffff; valaddr_reg:x3; val_offset:258942*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258942*0 + 3*298*FLEN/8, x4, x1, x2)

inst_86315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000001ffffff; valaddr_reg:x3; val_offset:258945*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258945*0 + 3*299*FLEN/8, x4, x1, x2)

inst_86316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000003ffffff; valaddr_reg:x3; val_offset:258948*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258948*0 + 3*300*FLEN/8, x4, x1, x2)

inst_86317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000007ffffff; valaddr_reg:x3; val_offset:258951*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258951*0 + 3*301*FLEN/8, x4, x1, x2)

inst_86318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000000fffffff; valaddr_reg:x3; val_offset:258954*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258954*0 + 3*302*FLEN/8, x4, x1, x2)

inst_86319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000001fffffff; valaddr_reg:x3; val_offset:258957*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258957*0 + 3*303*FLEN/8, x4, x1, x2)

inst_86320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000003fffffff; valaddr_reg:x3; val_offset:258960*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258960*0 + 3*304*FLEN/8, x4, x1, x2)

inst_86321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000007fffffff; valaddr_reg:x3; val_offset:258963*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258963*0 + 3*305*FLEN/8, x4, x1, x2)

inst_86322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900000ffffffff; valaddr_reg:x3; val_offset:258966*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258966*0 + 3*306*FLEN/8, x4, x1, x2)

inst_86323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900001ffffffff; valaddr_reg:x3; val_offset:258969*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258969*0 + 3*307*FLEN/8, x4, x1, x2)

inst_86324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900003ffffffff; valaddr_reg:x3; val_offset:258972*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258972*0 + 3*308*FLEN/8, x4, x1, x2)

inst_86325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900007ffffffff; valaddr_reg:x3; val_offset:258975*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258975*0 + 3*309*FLEN/8, x4, x1, x2)

inst_86326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290000fffffffff; valaddr_reg:x3; val_offset:258978*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258978*0 + 3*310*FLEN/8, x4, x1, x2)

inst_86327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290001fffffffff; valaddr_reg:x3; val_offset:258981*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258981*0 + 3*311*FLEN/8, x4, x1, x2)

inst_86328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290003fffffffff; valaddr_reg:x3; val_offset:258984*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258984*0 + 3*312*FLEN/8, x4, x1, x2)

inst_86329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290007fffffffff; valaddr_reg:x3; val_offset:258987*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258987*0 + 3*313*FLEN/8, x4, x1, x2)

inst_86330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829000ffffffffff; valaddr_reg:x3; val_offset:258990*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258990*0 + 3*314*FLEN/8, x4, x1, x2)

inst_86331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829001ffffffffff; valaddr_reg:x3; val_offset:258993*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258993*0 + 3*315*FLEN/8, x4, x1, x2)

inst_86332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829003ffffffffff; valaddr_reg:x3; val_offset:258996*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258996*0 + 3*316*FLEN/8, x4, x1, x2)

inst_86333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829007ffffffffff; valaddr_reg:x3; val_offset:258999*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258999*0 + 3*317*FLEN/8, x4, x1, x2)

inst_86334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82900fffffffffff; valaddr_reg:x3; val_offset:259002*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259002*0 + 3*318*FLEN/8, x4, x1, x2)

inst_86335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82901fffffffffff; valaddr_reg:x3; val_offset:259005*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259005*0 + 3*319*FLEN/8, x4, x1, x2)

inst_86336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82903fffffffffff; valaddr_reg:x3; val_offset:259008*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259008*0 + 3*320*FLEN/8, x4, x1, x2)

inst_86337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x82907fffffffffff; valaddr_reg:x3; val_offset:259011*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259011*0 + 3*321*FLEN/8, x4, x1, x2)

inst_86338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8290ffffffffffff; valaddr_reg:x3; val_offset:259014*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259014*0 + 3*322*FLEN/8, x4, x1, x2)

inst_86339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8291ffffffffffff; valaddr_reg:x3; val_offset:259017*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259017*0 + 3*323*FLEN/8, x4, x1, x2)

inst_86340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8293ffffffffffff; valaddr_reg:x3; val_offset:259020*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259020*0 + 3*324*FLEN/8, x4, x1, x2)

inst_86341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8297ffffffffffff; valaddr_reg:x3; val_offset:259023*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259023*0 + 3*325*FLEN/8, x4, x1, x2)

inst_86342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x8298000000000000; valaddr_reg:x3; val_offset:259026*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259026*0 + 3*326*FLEN/8, x4, x1, x2)

inst_86343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829c000000000000; valaddr_reg:x3; val_offset:259029*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259029*0 + 3*327*FLEN/8, x4, x1, x2)

inst_86344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829e000000000000; valaddr_reg:x3; val_offset:259032*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259032*0 + 3*328*FLEN/8, x4, x1, x2)

inst_86345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829f000000000000; valaddr_reg:x3; val_offset:259035*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259035*0 + 3*329*FLEN/8, x4, x1, x2)

inst_86346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829f800000000000; valaddr_reg:x3; val_offset:259038*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259038*0 + 3*330*FLEN/8, x4, x1, x2)

inst_86347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fc00000000000; valaddr_reg:x3; val_offset:259041*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259041*0 + 3*331*FLEN/8, x4, x1, x2)

inst_86348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fe00000000000; valaddr_reg:x3; val_offset:259044*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259044*0 + 3*332*FLEN/8, x4, x1, x2)

inst_86349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ff00000000000; valaddr_reg:x3; val_offset:259047*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259047*0 + 3*333*FLEN/8, x4, x1, x2)

inst_86350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ff80000000000; valaddr_reg:x3; val_offset:259050*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259050*0 + 3*334*FLEN/8, x4, x1, x2)

inst_86351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffc0000000000; valaddr_reg:x3; val_offset:259053*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259053*0 + 3*335*FLEN/8, x4, x1, x2)

inst_86352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffe0000000000; valaddr_reg:x3; val_offset:259056*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259056*0 + 3*336*FLEN/8, x4, x1, x2)

inst_86353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fff0000000000; valaddr_reg:x3; val_offset:259059*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259059*0 + 3*337*FLEN/8, x4, x1, x2)

inst_86354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fff8000000000; valaddr_reg:x3; val_offset:259062*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259062*0 + 3*338*FLEN/8, x4, x1, x2)

inst_86355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffc000000000; valaddr_reg:x3; val_offset:259065*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259065*0 + 3*339*FLEN/8, x4, x1, x2)

inst_86356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffe000000000; valaddr_reg:x3; val_offset:259068*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259068*0 + 3*340*FLEN/8, x4, x1, x2)

inst_86357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffff000000000; valaddr_reg:x3; val_offset:259071*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259071*0 + 3*341*FLEN/8, x4, x1, x2)

inst_86358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffff800000000; valaddr_reg:x3; val_offset:259074*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259074*0 + 3*342*FLEN/8, x4, x1, x2)

inst_86359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffc00000000; valaddr_reg:x3; val_offset:259077*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259077*0 + 3*343*FLEN/8, x4, x1, x2)

inst_86360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffe00000000; valaddr_reg:x3; val_offset:259080*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259080*0 + 3*344*FLEN/8, x4, x1, x2)

inst_86361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffff00000000; valaddr_reg:x3; val_offset:259083*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259083*0 + 3*345*FLEN/8, x4, x1, x2)

inst_86362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffff80000000; valaddr_reg:x3; val_offset:259086*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259086*0 + 3*346*FLEN/8, x4, x1, x2)

inst_86363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffc0000000; valaddr_reg:x3; val_offset:259089*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259089*0 + 3*347*FLEN/8, x4, x1, x2)

inst_86364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffe0000000; valaddr_reg:x3; val_offset:259092*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259092*0 + 3*348*FLEN/8, x4, x1, x2)

inst_86365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffff0000000; valaddr_reg:x3; val_offset:259095*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259095*0 + 3*349*FLEN/8, x4, x1, x2)

inst_86366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffff8000000; valaddr_reg:x3; val_offset:259098*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259098*0 + 3*350*FLEN/8, x4, x1, x2)

inst_86367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffc000000; valaddr_reg:x3; val_offset:259101*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259101*0 + 3*351*FLEN/8, x4, x1, x2)

inst_86368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffe000000; valaddr_reg:x3; val_offset:259104*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259104*0 + 3*352*FLEN/8, x4, x1, x2)

inst_86369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffff000000; valaddr_reg:x3; val_offset:259107*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259107*0 + 3*353*FLEN/8, x4, x1, x2)

inst_86370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffff800000; valaddr_reg:x3; val_offset:259110*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259110*0 + 3*354*FLEN/8, x4, x1, x2)

inst_86371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffffc00000; valaddr_reg:x3; val_offset:259113*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259113*0 + 3*355*FLEN/8, x4, x1, x2)

inst_86372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffffe00000; valaddr_reg:x3; val_offset:259116*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259116*0 + 3*356*FLEN/8, x4, x1, x2)

inst_86373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffff00000; valaddr_reg:x3; val_offset:259119*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259119*0 + 3*357*FLEN/8, x4, x1, x2)

inst_86374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffff80000; valaddr_reg:x3; val_offset:259122*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259122*0 + 3*358*FLEN/8, x4, x1, x2)

inst_86375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffffc0000; valaddr_reg:x3; val_offset:259125*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259125*0 + 3*359*FLEN/8, x4, x1, x2)

inst_86376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffffe0000; valaddr_reg:x3; val_offset:259128*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259128*0 + 3*360*FLEN/8, x4, x1, x2)

inst_86377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffffff0000; valaddr_reg:x3; val_offset:259131*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259131*0 + 3*361*FLEN/8, x4, x1, x2)

inst_86378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffffff8000; valaddr_reg:x3; val_offset:259134*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259134*0 + 3*362*FLEN/8, x4, x1, x2)

inst_86379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffffffc000; valaddr_reg:x3; val_offset:259137*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259137*0 + 3*363*FLEN/8, x4, x1, x2)

inst_86380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffffffe000; valaddr_reg:x3; val_offset:259140*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259140*0 + 3*364*FLEN/8, x4, x1, x2)

inst_86381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffffff000; valaddr_reg:x3; val_offset:259143*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259143*0 + 3*365*FLEN/8, x4, x1, x2)

inst_86382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffffff800; valaddr_reg:x3; val_offset:259146*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259146*0 + 3*366*FLEN/8, x4, x1, x2)

inst_86383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffffffc00; valaddr_reg:x3; val_offset:259149*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259149*0 + 3*367*FLEN/8, x4, x1, x2)

inst_86384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffffffe00; valaddr_reg:x3; val_offset:259152*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259152*0 + 3*368*FLEN/8, x4, x1, x2)

inst_86385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffffffff00; valaddr_reg:x3; val_offset:259155*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259155*0 + 3*369*FLEN/8, x4, x1, x2)

inst_86386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffffffff80; valaddr_reg:x3; val_offset:259158*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259158*0 + 3*370*FLEN/8, x4, x1, x2)

inst_86387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffffffffc0; valaddr_reg:x3; val_offset:259161*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259161*0 + 3*371*FLEN/8, x4, x1, x2)

inst_86388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffffffffe0; valaddr_reg:x3; val_offset:259164*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259164*0 + 3*372*FLEN/8, x4, x1, x2)

inst_86389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffffffff0; valaddr_reg:x3; val_offset:259167*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259167*0 + 3*373*FLEN/8, x4, x1, x2)

inst_86390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffffffff8; valaddr_reg:x3; val_offset:259170*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259170*0 + 3*374*FLEN/8, x4, x1, x2)

inst_86391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffffffffc; valaddr_reg:x3; val_offset:259173*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259173*0 + 3*375*FLEN/8, x4, x1, x2)

inst_86392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829ffffffffffffe; valaddr_reg:x3; val_offset:259176*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259176*0 + 3*376*FLEN/8, x4, x1, x2)

inst_86393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab7e5dd8914aef; op2val:0x8000;
op3val:0x829fffffffffffff; valaddr_reg:x3; val_offset:259179*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259179*0 + 3*377*FLEN/8, x4, x1, x2)

inst_86394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:259182*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259182*0 + 3*378*FLEN/8, x4, x1, x2)

inst_86395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:259185*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259185*0 + 3*379*FLEN/8, x4, x1, x2)

inst_86396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:259188*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259188*0 + 3*380*FLEN/8, x4, x1, x2)

inst_86397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:259191*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259191*0 + 3*381*FLEN/8, x4, x1, x2)

inst_86398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:259194*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259194*0 + 3*382*FLEN/8, x4, x1, x2)

inst_86399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:259197*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259197*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_86400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:259200*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259200*0 + 3*384*FLEN/8, x4, x1, x2)

inst_86401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:259203*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259203*0 + 3*385*FLEN/8, x4, x1, x2)

inst_86402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:259206*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259206*0 + 3*386*FLEN/8, x4, x1, x2)

inst_86403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:259209*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259209*0 + 3*387*FLEN/8, x4, x1, x2)

inst_86404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:259212*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259212*0 + 3*388*FLEN/8, x4, x1, x2)

inst_86405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:259215*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259215*0 + 3*389*FLEN/8, x4, x1, x2)

inst_86406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:259218*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259218*0 + 3*390*FLEN/8, x4, x1, x2)

inst_86407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:259221*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259221*0 + 3*391*FLEN/8, x4, x1, x2)

inst_86408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:259224*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259224*0 + 3*392*FLEN/8, x4, x1, x2)

inst_86409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:259227*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259227*0 + 3*393*FLEN/8, x4, x1, x2)

inst_86410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:259230*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259230*0 + 3*394*FLEN/8, x4, x1, x2)

inst_86411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:259233*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259233*0 + 3*395*FLEN/8, x4, x1, x2)

inst_86412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:259236*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259236*0 + 3*396*FLEN/8, x4, x1, x2)

inst_86413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:259239*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259239*0 + 3*397*FLEN/8, x4, x1, x2)

inst_86414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:259242*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259242*0 + 3*398*FLEN/8, x4, x1, x2)

inst_86415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:259245*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259245*0 + 3*399*FLEN/8, x4, x1, x2)

inst_86416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000000000000; valaddr_reg:x3; val_offset:259248*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259248*0 + 3*400*FLEN/8, x4, x1, x2)

inst_86417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000000000001; valaddr_reg:x3; val_offset:259251*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259251*0 + 3*401*FLEN/8, x4, x1, x2)

inst_86418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000000000003; valaddr_reg:x3; val_offset:259254*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259254*0 + 3*402*FLEN/8, x4, x1, x2)

inst_86419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000000000007; valaddr_reg:x3; val_offset:259257*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259257*0 + 3*403*FLEN/8, x4, x1, x2)

inst_86420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000000000000f; valaddr_reg:x3; val_offset:259260*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259260*0 + 3*404*FLEN/8, x4, x1, x2)

inst_86421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000000000001f; valaddr_reg:x3; val_offset:259263*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259263*0 + 3*405*FLEN/8, x4, x1, x2)

inst_86422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000000000003f; valaddr_reg:x3; val_offset:259266*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259266*0 + 3*406*FLEN/8, x4, x1, x2)

inst_86423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000000000007f; valaddr_reg:x3; val_offset:259269*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259269*0 + 3*407*FLEN/8, x4, x1, x2)

inst_86424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300000000000ff; valaddr_reg:x3; val_offset:259272*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259272*0 + 3*408*FLEN/8, x4, x1, x2)

inst_86425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300000000001ff; valaddr_reg:x3; val_offset:259275*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259275*0 + 3*409*FLEN/8, x4, x1, x2)

inst_86426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300000000003ff; valaddr_reg:x3; val_offset:259278*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259278*0 + 3*410*FLEN/8, x4, x1, x2)

inst_86427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300000000007ff; valaddr_reg:x3; val_offset:259281*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259281*0 + 3*411*FLEN/8, x4, x1, x2)

inst_86428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000000000fff; valaddr_reg:x3; val_offset:259284*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259284*0 + 3*412*FLEN/8, x4, x1, x2)

inst_86429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000000001fff; valaddr_reg:x3; val_offset:259287*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259287*0 + 3*413*FLEN/8, x4, x1, x2)

inst_86430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000000003fff; valaddr_reg:x3; val_offset:259290*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259290*0 + 3*414*FLEN/8, x4, x1, x2)

inst_86431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000000007fff; valaddr_reg:x3; val_offset:259293*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259293*0 + 3*415*FLEN/8, x4, x1, x2)

inst_86432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000000000ffff; valaddr_reg:x3; val_offset:259296*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259296*0 + 3*416*FLEN/8, x4, x1, x2)

inst_86433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000000001ffff; valaddr_reg:x3; val_offset:259299*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259299*0 + 3*417*FLEN/8, x4, x1, x2)

inst_86434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000000003ffff; valaddr_reg:x3; val_offset:259302*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259302*0 + 3*418*FLEN/8, x4, x1, x2)

inst_86435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000000007ffff; valaddr_reg:x3; val_offset:259305*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259305*0 + 3*419*FLEN/8, x4, x1, x2)

inst_86436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300000000fffff; valaddr_reg:x3; val_offset:259308*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259308*0 + 3*420*FLEN/8, x4, x1, x2)

inst_86437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300000001fffff; valaddr_reg:x3; val_offset:259311*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259311*0 + 3*421*FLEN/8, x4, x1, x2)

inst_86438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300000003fffff; valaddr_reg:x3; val_offset:259314*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259314*0 + 3*422*FLEN/8, x4, x1, x2)

inst_86439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300000007fffff; valaddr_reg:x3; val_offset:259317*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259317*0 + 3*423*FLEN/8, x4, x1, x2)

inst_86440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000000ffffff; valaddr_reg:x3; val_offset:259320*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259320*0 + 3*424*FLEN/8, x4, x1, x2)

inst_86441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000001ffffff; valaddr_reg:x3; val_offset:259323*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259323*0 + 3*425*FLEN/8, x4, x1, x2)

inst_86442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000003ffffff; valaddr_reg:x3; val_offset:259326*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259326*0 + 3*426*FLEN/8, x4, x1, x2)

inst_86443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000007ffffff; valaddr_reg:x3; val_offset:259329*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259329*0 + 3*427*FLEN/8, x4, x1, x2)

inst_86444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000000fffffff; valaddr_reg:x3; val_offset:259332*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259332*0 + 3*428*FLEN/8, x4, x1, x2)

inst_86445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000001fffffff; valaddr_reg:x3; val_offset:259335*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259335*0 + 3*429*FLEN/8, x4, x1, x2)

inst_86446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000003fffffff; valaddr_reg:x3; val_offset:259338*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259338*0 + 3*430*FLEN/8, x4, x1, x2)

inst_86447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000007fffffff; valaddr_reg:x3; val_offset:259341*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259341*0 + 3*431*FLEN/8, x4, x1, x2)

inst_86448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300000ffffffff; valaddr_reg:x3; val_offset:259344*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259344*0 + 3*432*FLEN/8, x4, x1, x2)

inst_86449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300001ffffffff; valaddr_reg:x3; val_offset:259347*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259347*0 + 3*433*FLEN/8, x4, x1, x2)

inst_86450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300003ffffffff; valaddr_reg:x3; val_offset:259350*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259350*0 + 3*434*FLEN/8, x4, x1, x2)

inst_86451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300007ffffffff; valaddr_reg:x3; val_offset:259353*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259353*0 + 3*435*FLEN/8, x4, x1, x2)

inst_86452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030000fffffffff; valaddr_reg:x3; val_offset:259356*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259356*0 + 3*436*FLEN/8, x4, x1, x2)

inst_86453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030001fffffffff; valaddr_reg:x3; val_offset:259359*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259359*0 + 3*437*FLEN/8, x4, x1, x2)

inst_86454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030003fffffffff; valaddr_reg:x3; val_offset:259362*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259362*0 + 3*438*FLEN/8, x4, x1, x2)

inst_86455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030007fffffffff; valaddr_reg:x3; val_offset:259365*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259365*0 + 3*439*FLEN/8, x4, x1, x2)

inst_86456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803000ffffffffff; valaddr_reg:x3; val_offset:259368*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259368*0 + 3*440*FLEN/8, x4, x1, x2)

inst_86457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803001ffffffffff; valaddr_reg:x3; val_offset:259371*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259371*0 + 3*441*FLEN/8, x4, x1, x2)

inst_86458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803003ffffffffff; valaddr_reg:x3; val_offset:259374*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259374*0 + 3*442*FLEN/8, x4, x1, x2)

inst_86459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803007ffffffffff; valaddr_reg:x3; val_offset:259377*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259377*0 + 3*443*FLEN/8, x4, x1, x2)

inst_86460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80300fffffffffff; valaddr_reg:x3; val_offset:259380*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259380*0 + 3*444*FLEN/8, x4, x1, x2)

inst_86461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80301fffffffffff; valaddr_reg:x3; val_offset:259383*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259383*0 + 3*445*FLEN/8, x4, x1, x2)

inst_86462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80303fffffffffff; valaddr_reg:x3; val_offset:259386*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259386*0 + 3*446*FLEN/8, x4, x1, x2)

inst_86463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x80307fffffffffff; valaddr_reg:x3; val_offset:259389*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259389*0 + 3*447*FLEN/8, x4, x1, x2)

inst_86464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8030ffffffffffff; valaddr_reg:x3; val_offset:259392*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259392*0 + 3*448*FLEN/8, x4, x1, x2)

inst_86465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8031ffffffffffff; valaddr_reg:x3; val_offset:259395*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259395*0 + 3*449*FLEN/8, x4, x1, x2)

inst_86466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8033ffffffffffff; valaddr_reg:x3; val_offset:259398*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259398*0 + 3*450*FLEN/8, x4, x1, x2)

inst_86467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8037ffffffffffff; valaddr_reg:x3; val_offset:259401*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259401*0 + 3*451*FLEN/8, x4, x1, x2)

inst_86468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x8038000000000000; valaddr_reg:x3; val_offset:259404*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259404*0 + 3*452*FLEN/8, x4, x1, x2)

inst_86469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803c000000000000; valaddr_reg:x3; val_offset:259407*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259407*0 + 3*453*FLEN/8, x4, x1, x2)

inst_86470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803e000000000000; valaddr_reg:x3; val_offset:259410*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259410*0 + 3*454*FLEN/8, x4, x1, x2)

inst_86471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803f000000000000; valaddr_reg:x3; val_offset:259413*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259413*0 + 3*455*FLEN/8, x4, x1, x2)

inst_86472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803f800000000000; valaddr_reg:x3; val_offset:259416*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259416*0 + 3*456*FLEN/8, x4, x1, x2)

inst_86473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fc00000000000; valaddr_reg:x3; val_offset:259419*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259419*0 + 3*457*FLEN/8, x4, x1, x2)

inst_86474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fe00000000000; valaddr_reg:x3; val_offset:259422*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259422*0 + 3*458*FLEN/8, x4, x1, x2)

inst_86475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ff00000000000; valaddr_reg:x3; val_offset:259425*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259425*0 + 3*459*FLEN/8, x4, x1, x2)

inst_86476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ff80000000000; valaddr_reg:x3; val_offset:259428*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259428*0 + 3*460*FLEN/8, x4, x1, x2)

inst_86477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffc0000000000; valaddr_reg:x3; val_offset:259431*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259431*0 + 3*461*FLEN/8, x4, x1, x2)

inst_86478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffe0000000000; valaddr_reg:x3; val_offset:259434*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259434*0 + 3*462*FLEN/8, x4, x1, x2)

inst_86479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fff0000000000; valaddr_reg:x3; val_offset:259437*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259437*0 + 3*463*FLEN/8, x4, x1, x2)

inst_86480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fff8000000000; valaddr_reg:x3; val_offset:259440*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259440*0 + 3*464*FLEN/8, x4, x1, x2)

inst_86481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffc000000000; valaddr_reg:x3; val_offset:259443*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259443*0 + 3*465*FLEN/8, x4, x1, x2)

inst_86482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffe000000000; valaddr_reg:x3; val_offset:259446*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259446*0 + 3*466*FLEN/8, x4, x1, x2)

inst_86483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffff000000000; valaddr_reg:x3; val_offset:259449*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259449*0 + 3*467*FLEN/8, x4, x1, x2)

inst_86484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffff800000000; valaddr_reg:x3; val_offset:259452*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259452*0 + 3*468*FLEN/8, x4, x1, x2)

inst_86485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffc00000000; valaddr_reg:x3; val_offset:259455*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259455*0 + 3*469*FLEN/8, x4, x1, x2)

inst_86486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffe00000000; valaddr_reg:x3; val_offset:259458*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259458*0 + 3*470*FLEN/8, x4, x1, x2)

inst_86487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffff00000000; valaddr_reg:x3; val_offset:259461*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259461*0 + 3*471*FLEN/8, x4, x1, x2)

inst_86488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffff80000000; valaddr_reg:x3; val_offset:259464*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259464*0 + 3*472*FLEN/8, x4, x1, x2)

inst_86489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffc0000000; valaddr_reg:x3; val_offset:259467*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259467*0 + 3*473*FLEN/8, x4, x1, x2)

inst_86490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffe0000000; valaddr_reg:x3; val_offset:259470*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259470*0 + 3*474*FLEN/8, x4, x1, x2)

inst_86491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffff0000000; valaddr_reg:x3; val_offset:259473*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259473*0 + 3*475*FLEN/8, x4, x1, x2)

inst_86492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffff8000000; valaddr_reg:x3; val_offset:259476*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259476*0 + 3*476*FLEN/8, x4, x1, x2)

inst_86493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffc000000; valaddr_reg:x3; val_offset:259479*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259479*0 + 3*477*FLEN/8, x4, x1, x2)

inst_86494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffe000000; valaddr_reg:x3; val_offset:259482*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259482*0 + 3*478*FLEN/8, x4, x1, x2)

inst_86495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffff000000; valaddr_reg:x3; val_offset:259485*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259485*0 + 3*479*FLEN/8, x4, x1, x2)

inst_86496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffff800000; valaddr_reg:x3; val_offset:259488*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259488*0 + 3*480*FLEN/8, x4, x1, x2)

inst_86497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffffc00000; valaddr_reg:x3; val_offset:259491*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259491*0 + 3*481*FLEN/8, x4, x1, x2)

inst_86498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffffe00000; valaddr_reg:x3; val_offset:259494*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259494*0 + 3*482*FLEN/8, x4, x1, x2)

inst_86499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffff00000; valaddr_reg:x3; val_offset:259497*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259497*0 + 3*483*FLEN/8, x4, x1, x2)

inst_86500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffff80000; valaddr_reg:x3; val_offset:259500*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259500*0 + 3*484*FLEN/8, x4, x1, x2)

inst_86501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffffc0000; valaddr_reg:x3; val_offset:259503*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259503*0 + 3*485*FLEN/8, x4, x1, x2)

inst_86502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffffe0000; valaddr_reg:x3; val_offset:259506*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259506*0 + 3*486*FLEN/8, x4, x1, x2)

inst_86503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffffff0000; valaddr_reg:x3; val_offset:259509*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259509*0 + 3*487*FLEN/8, x4, x1, x2)

inst_86504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffffff8000; valaddr_reg:x3; val_offset:259512*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259512*0 + 3*488*FLEN/8, x4, x1, x2)

inst_86505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffffffc000; valaddr_reg:x3; val_offset:259515*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259515*0 + 3*489*FLEN/8, x4, x1, x2)

inst_86506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffffffe000; valaddr_reg:x3; val_offset:259518*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259518*0 + 3*490*FLEN/8, x4, x1, x2)

inst_86507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffffff000; valaddr_reg:x3; val_offset:259521*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259521*0 + 3*491*FLEN/8, x4, x1, x2)

inst_86508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffffff800; valaddr_reg:x3; val_offset:259524*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259524*0 + 3*492*FLEN/8, x4, x1, x2)

inst_86509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffffffc00; valaddr_reg:x3; val_offset:259527*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259527*0 + 3*493*FLEN/8, x4, x1, x2)

inst_86510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffffffe00; valaddr_reg:x3; val_offset:259530*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259530*0 + 3*494*FLEN/8, x4, x1, x2)

inst_86511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffffffff00; valaddr_reg:x3; val_offset:259533*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259533*0 + 3*495*FLEN/8, x4, x1, x2)

inst_86512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffffffff80; valaddr_reg:x3; val_offset:259536*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259536*0 + 3*496*FLEN/8, x4, x1, x2)

inst_86513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffffffffc0; valaddr_reg:x3; val_offset:259539*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259539*0 + 3*497*FLEN/8, x4, x1, x2)

inst_86514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffffffffe0; valaddr_reg:x3; val_offset:259542*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259542*0 + 3*498*FLEN/8, x4, x1, x2)

inst_86515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffffffff0; valaddr_reg:x3; val_offset:259545*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259545*0 + 3*499*FLEN/8, x4, x1, x2)

inst_86516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffffffff8; valaddr_reg:x3; val_offset:259548*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259548*0 + 3*500*FLEN/8, x4, x1, x2)

inst_86517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffffffffc; valaddr_reg:x3; val_offset:259551*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259551*0 + 3*501*FLEN/8, x4, x1, x2)

inst_86518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803ffffffffffffe; valaddr_reg:x3; val_offset:259554*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259554*0 + 3*502*FLEN/8, x4, x1, x2)

inst_86519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8512f989e764 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8512f989e764; op2val:0x8000;
op3val:0x803fffffffffffff; valaddr_reg:x3; val_offset:259557*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259557*0 + 3*503*FLEN/8, x4, x1, x2)

inst_86520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:259560*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259560*0 + 3*504*FLEN/8, x4, x1, x2)

inst_86521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:259563*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259563*0 + 3*505*FLEN/8, x4, x1, x2)

inst_86522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:259566*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259566*0 + 3*506*FLEN/8, x4, x1, x2)

inst_86523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:259569*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259569*0 + 3*507*FLEN/8, x4, x1, x2)

inst_86524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:259572*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259572*0 + 3*508*FLEN/8, x4, x1, x2)

inst_86525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:259575*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259575*0 + 3*509*FLEN/8, x4, x1, x2)

inst_86526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:259578*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259578*0 + 3*510*FLEN/8, x4, x1, x2)

inst_86527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:259581*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259581*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_86528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:259584*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259584*0 + 3*512*FLEN/8, x4, x1, x2)

inst_86529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:259587*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259587*0 + 3*513*FLEN/8, x4, x1, x2)

inst_86530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:259590*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259590*0 + 3*514*FLEN/8, x4, x1, x2)

inst_86531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:259593*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259593*0 + 3*515*FLEN/8, x4, x1, x2)

inst_86532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:259596*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259596*0 + 3*516*FLEN/8, x4, x1, x2)

inst_86533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:259599*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259599*0 + 3*517*FLEN/8, x4, x1, x2)

inst_86534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:259602*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259602*0 + 3*518*FLEN/8, x4, x1, x2)

inst_86535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:259605*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259605*0 + 3*519*FLEN/8, x4, x1, x2)

inst_86536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:259608*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259608*0 + 3*520*FLEN/8, x4, x1, x2)

inst_86537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:259611*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259611*0 + 3*521*FLEN/8, x4, x1, x2)

inst_86538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:259614*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259614*0 + 3*522*FLEN/8, x4, x1, x2)

inst_86539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:259617*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259617*0 + 3*523*FLEN/8, x4, x1, x2)

inst_86540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:259620*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259620*0 + 3*524*FLEN/8, x4, x1, x2)

inst_86541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:259623*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259623*0 + 3*525*FLEN/8, x4, x1, x2)

inst_86542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000000000000; valaddr_reg:x3; val_offset:259626*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259626*0 + 3*526*FLEN/8, x4, x1, x2)

inst_86543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000000000001; valaddr_reg:x3; val_offset:259629*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259629*0 + 3*527*FLEN/8, x4, x1, x2)

inst_86544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000000000003; valaddr_reg:x3; val_offset:259632*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259632*0 + 3*528*FLEN/8, x4, x1, x2)

inst_86545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000000000007; valaddr_reg:x3; val_offset:259635*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259635*0 + 3*529*FLEN/8, x4, x1, x2)

inst_86546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000000000000f; valaddr_reg:x3; val_offset:259638*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259638*0 + 3*530*FLEN/8, x4, x1, x2)

inst_86547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000000000001f; valaddr_reg:x3; val_offset:259641*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259641*0 + 3*531*FLEN/8, x4, x1, x2)

inst_86548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000000000003f; valaddr_reg:x3; val_offset:259644*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259644*0 + 3*532*FLEN/8, x4, x1, x2)

inst_86549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000000000007f; valaddr_reg:x3; val_offset:259647*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259647*0 + 3*533*FLEN/8, x4, x1, x2)

inst_86550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200000000000ff; valaddr_reg:x3; val_offset:259650*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259650*0 + 3*534*FLEN/8, x4, x1, x2)

inst_86551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200000000001ff; valaddr_reg:x3; val_offset:259653*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259653*0 + 3*535*FLEN/8, x4, x1, x2)

inst_86552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200000000003ff; valaddr_reg:x3; val_offset:259656*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259656*0 + 3*536*FLEN/8, x4, x1, x2)

inst_86553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200000000007ff; valaddr_reg:x3; val_offset:259659*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259659*0 + 3*537*FLEN/8, x4, x1, x2)

inst_86554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000000000fff; valaddr_reg:x3; val_offset:259662*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259662*0 + 3*538*FLEN/8, x4, x1, x2)

inst_86555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000000001fff; valaddr_reg:x3; val_offset:259665*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259665*0 + 3*539*FLEN/8, x4, x1, x2)

inst_86556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000000003fff; valaddr_reg:x3; val_offset:259668*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259668*0 + 3*540*FLEN/8, x4, x1, x2)

inst_86557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000000007fff; valaddr_reg:x3; val_offset:259671*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259671*0 + 3*541*FLEN/8, x4, x1, x2)

inst_86558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000000000ffff; valaddr_reg:x3; val_offset:259674*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259674*0 + 3*542*FLEN/8, x4, x1, x2)

inst_86559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000000001ffff; valaddr_reg:x3; val_offset:259677*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259677*0 + 3*543*FLEN/8, x4, x1, x2)

inst_86560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000000003ffff; valaddr_reg:x3; val_offset:259680*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259680*0 + 3*544*FLEN/8, x4, x1, x2)

inst_86561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000000007ffff; valaddr_reg:x3; val_offset:259683*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259683*0 + 3*545*FLEN/8, x4, x1, x2)

inst_86562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200000000fffff; valaddr_reg:x3; val_offset:259686*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259686*0 + 3*546*FLEN/8, x4, x1, x2)

inst_86563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200000001fffff; valaddr_reg:x3; val_offset:259689*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259689*0 + 3*547*FLEN/8, x4, x1, x2)

inst_86564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200000003fffff; valaddr_reg:x3; val_offset:259692*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259692*0 + 3*548*FLEN/8, x4, x1, x2)

inst_86565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200000007fffff; valaddr_reg:x3; val_offset:259695*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259695*0 + 3*549*FLEN/8, x4, x1, x2)

inst_86566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000000ffffff; valaddr_reg:x3; val_offset:259698*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259698*0 + 3*550*FLEN/8, x4, x1, x2)

inst_86567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000001ffffff; valaddr_reg:x3; val_offset:259701*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259701*0 + 3*551*FLEN/8, x4, x1, x2)

inst_86568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000003ffffff; valaddr_reg:x3; val_offset:259704*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259704*0 + 3*552*FLEN/8, x4, x1, x2)

inst_86569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000007ffffff; valaddr_reg:x3; val_offset:259707*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259707*0 + 3*553*FLEN/8, x4, x1, x2)

inst_86570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000000fffffff; valaddr_reg:x3; val_offset:259710*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259710*0 + 3*554*FLEN/8, x4, x1, x2)

inst_86571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000001fffffff; valaddr_reg:x3; val_offset:259713*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259713*0 + 3*555*FLEN/8, x4, x1, x2)

inst_86572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000003fffffff; valaddr_reg:x3; val_offset:259716*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259716*0 + 3*556*FLEN/8, x4, x1, x2)

inst_86573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000007fffffff; valaddr_reg:x3; val_offset:259719*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259719*0 + 3*557*FLEN/8, x4, x1, x2)

inst_86574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200000ffffffff; valaddr_reg:x3; val_offset:259722*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259722*0 + 3*558*FLEN/8, x4, x1, x2)

inst_86575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200001ffffffff; valaddr_reg:x3; val_offset:259725*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259725*0 + 3*559*FLEN/8, x4, x1, x2)

inst_86576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200003ffffffff; valaddr_reg:x3; val_offset:259728*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259728*0 + 3*560*FLEN/8, x4, x1, x2)

inst_86577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200007ffffffff; valaddr_reg:x3; val_offset:259731*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259731*0 + 3*561*FLEN/8, x4, x1, x2)

inst_86578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320000fffffffff; valaddr_reg:x3; val_offset:259734*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259734*0 + 3*562*FLEN/8, x4, x1, x2)

inst_86579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320001fffffffff; valaddr_reg:x3; val_offset:259737*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259737*0 + 3*563*FLEN/8, x4, x1, x2)

inst_86580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320003fffffffff; valaddr_reg:x3; val_offset:259740*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259740*0 + 3*564*FLEN/8, x4, x1, x2)

inst_86581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320007fffffffff; valaddr_reg:x3; val_offset:259743*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259743*0 + 3*565*FLEN/8, x4, x1, x2)

inst_86582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32000ffffffffff; valaddr_reg:x3; val_offset:259746*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259746*0 + 3*566*FLEN/8, x4, x1, x2)

inst_86583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32001ffffffffff; valaddr_reg:x3; val_offset:259749*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259749*0 + 3*567*FLEN/8, x4, x1, x2)

inst_86584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32003ffffffffff; valaddr_reg:x3; val_offset:259752*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259752*0 + 3*568*FLEN/8, x4, x1, x2)

inst_86585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32007ffffffffff; valaddr_reg:x3; val_offset:259755*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259755*0 + 3*569*FLEN/8, x4, x1, x2)

inst_86586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3200fffffffffff; valaddr_reg:x3; val_offset:259758*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259758*0 + 3*570*FLEN/8, x4, x1, x2)

inst_86587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3201fffffffffff; valaddr_reg:x3; val_offset:259761*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259761*0 + 3*571*FLEN/8, x4, x1, x2)

inst_86588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3203fffffffffff; valaddr_reg:x3; val_offset:259764*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259764*0 + 3*572*FLEN/8, x4, x1, x2)

inst_86589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x3207fffffffffff; valaddr_reg:x3; val_offset:259767*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259767*0 + 3*573*FLEN/8, x4, x1, x2)

inst_86590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x320ffffffffffff; valaddr_reg:x3; val_offset:259770*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259770*0 + 3*574*FLEN/8, x4, x1, x2)

inst_86591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x321ffffffffffff; valaddr_reg:x3; val_offset:259773*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259773*0 + 3*575*FLEN/8, x4, x1, x2)

inst_86592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x323ffffffffffff; valaddr_reg:x3; val_offset:259776*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259776*0 + 3*576*FLEN/8, x4, x1, x2)

inst_86593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x327ffffffffffff; valaddr_reg:x3; val_offset:259779*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259779*0 + 3*577*FLEN/8, x4, x1, x2)

inst_86594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x328000000000000; valaddr_reg:x3; val_offset:259782*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259782*0 + 3*578*FLEN/8, x4, x1, x2)

inst_86595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32c000000000000; valaddr_reg:x3; val_offset:259785*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259785*0 + 3*579*FLEN/8, x4, x1, x2)

inst_86596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32e000000000000; valaddr_reg:x3; val_offset:259788*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259788*0 + 3*580*FLEN/8, x4, x1, x2)

inst_86597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32f000000000000; valaddr_reg:x3; val_offset:259791*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259791*0 + 3*581*FLEN/8, x4, x1, x2)

inst_86598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32f800000000000; valaddr_reg:x3; val_offset:259794*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259794*0 + 3*582*FLEN/8, x4, x1, x2)

inst_86599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fc00000000000; valaddr_reg:x3; val_offset:259797*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259797*0 + 3*583*FLEN/8, x4, x1, x2)

inst_86600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fe00000000000; valaddr_reg:x3; val_offset:259800*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259800*0 + 3*584*FLEN/8, x4, x1, x2)

inst_86601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ff00000000000; valaddr_reg:x3; val_offset:259803*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259803*0 + 3*585*FLEN/8, x4, x1, x2)

inst_86602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ff80000000000; valaddr_reg:x3; val_offset:259806*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259806*0 + 3*586*FLEN/8, x4, x1, x2)

inst_86603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffc0000000000; valaddr_reg:x3; val_offset:259809*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259809*0 + 3*587*FLEN/8, x4, x1, x2)

inst_86604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffe0000000000; valaddr_reg:x3; val_offset:259812*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259812*0 + 3*588*FLEN/8, x4, x1, x2)

inst_86605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fff0000000000; valaddr_reg:x3; val_offset:259815*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259815*0 + 3*589*FLEN/8, x4, x1, x2)

inst_86606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fff8000000000; valaddr_reg:x3; val_offset:259818*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259818*0 + 3*590*FLEN/8, x4, x1, x2)

inst_86607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffc000000000; valaddr_reg:x3; val_offset:259821*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259821*0 + 3*591*FLEN/8, x4, x1, x2)

inst_86608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffe000000000; valaddr_reg:x3; val_offset:259824*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259824*0 + 3*592*FLEN/8, x4, x1, x2)

inst_86609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffff000000000; valaddr_reg:x3; val_offset:259827*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259827*0 + 3*593*FLEN/8, x4, x1, x2)

inst_86610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffff800000000; valaddr_reg:x3; val_offset:259830*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259830*0 + 3*594*FLEN/8, x4, x1, x2)

inst_86611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffc00000000; valaddr_reg:x3; val_offset:259833*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259833*0 + 3*595*FLEN/8, x4, x1, x2)

inst_86612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffe00000000; valaddr_reg:x3; val_offset:259836*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259836*0 + 3*596*FLEN/8, x4, x1, x2)

inst_86613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffff00000000; valaddr_reg:x3; val_offset:259839*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259839*0 + 3*597*FLEN/8, x4, x1, x2)

inst_86614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffff80000000; valaddr_reg:x3; val_offset:259842*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259842*0 + 3*598*FLEN/8, x4, x1, x2)

inst_86615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffc0000000; valaddr_reg:x3; val_offset:259845*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259845*0 + 3*599*FLEN/8, x4, x1, x2)

inst_86616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffe0000000; valaddr_reg:x3; val_offset:259848*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259848*0 + 3*600*FLEN/8, x4, x1, x2)

inst_86617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffff0000000; valaddr_reg:x3; val_offset:259851*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259851*0 + 3*601*FLEN/8, x4, x1, x2)

inst_86618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffff8000000; valaddr_reg:x3; val_offset:259854*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259854*0 + 3*602*FLEN/8, x4, x1, x2)

inst_86619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffc000000; valaddr_reg:x3; val_offset:259857*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259857*0 + 3*603*FLEN/8, x4, x1, x2)

inst_86620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffe000000; valaddr_reg:x3; val_offset:259860*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259860*0 + 3*604*FLEN/8, x4, x1, x2)

inst_86621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffff000000; valaddr_reg:x3; val_offset:259863*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259863*0 + 3*605*FLEN/8, x4, x1, x2)

inst_86622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffff800000; valaddr_reg:x3; val_offset:259866*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259866*0 + 3*606*FLEN/8, x4, x1, x2)

inst_86623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffffc00000; valaddr_reg:x3; val_offset:259869*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259869*0 + 3*607*FLEN/8, x4, x1, x2)

inst_86624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffffe00000; valaddr_reg:x3; val_offset:259872*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259872*0 + 3*608*FLEN/8, x4, x1, x2)

inst_86625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffff00000; valaddr_reg:x3; val_offset:259875*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259875*0 + 3*609*FLEN/8, x4, x1, x2)

inst_86626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffff80000; valaddr_reg:x3; val_offset:259878*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259878*0 + 3*610*FLEN/8, x4, x1, x2)

inst_86627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffffc0000; valaddr_reg:x3; val_offset:259881*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259881*0 + 3*611*FLEN/8, x4, x1, x2)

inst_86628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffffe0000; valaddr_reg:x3; val_offset:259884*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259884*0 + 3*612*FLEN/8, x4, x1, x2)

inst_86629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffffff0000; valaddr_reg:x3; val_offset:259887*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259887*0 + 3*613*FLEN/8, x4, x1, x2)

inst_86630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffffff8000; valaddr_reg:x3; val_offset:259890*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259890*0 + 3*614*FLEN/8, x4, x1, x2)

inst_86631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffffffc000; valaddr_reg:x3; val_offset:259893*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259893*0 + 3*615*FLEN/8, x4, x1, x2)

inst_86632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffffffe000; valaddr_reg:x3; val_offset:259896*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259896*0 + 3*616*FLEN/8, x4, x1, x2)

inst_86633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffffff000; valaddr_reg:x3; val_offset:259899*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259899*0 + 3*617*FLEN/8, x4, x1, x2)

inst_86634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffffff800; valaddr_reg:x3; val_offset:259902*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259902*0 + 3*618*FLEN/8, x4, x1, x2)

inst_86635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffffffc00; valaddr_reg:x3; val_offset:259905*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259905*0 + 3*619*FLEN/8, x4, x1, x2)

inst_86636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffffffe00; valaddr_reg:x3; val_offset:259908*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259908*0 + 3*620*FLEN/8, x4, x1, x2)

inst_86637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffffffff00; valaddr_reg:x3; val_offset:259911*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259911*0 + 3*621*FLEN/8, x4, x1, x2)

inst_86638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffffffff80; valaddr_reg:x3; val_offset:259914*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259914*0 + 3*622*FLEN/8, x4, x1, x2)

inst_86639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffffffffc0; valaddr_reg:x3; val_offset:259917*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259917*0 + 3*623*FLEN/8, x4, x1, x2)

inst_86640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffffffffe0; valaddr_reg:x3; val_offset:259920*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259920*0 + 3*624*FLEN/8, x4, x1, x2)

inst_86641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffffffff0; valaddr_reg:x3; val_offset:259923*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259923*0 + 3*625*FLEN/8, x4, x1, x2)

inst_86642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffffffff8; valaddr_reg:x3; val_offset:259926*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259926*0 + 3*626*FLEN/8, x4, x1, x2)

inst_86643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffffffffc; valaddr_reg:x3; val_offset:259929*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259929*0 + 3*627*FLEN/8, x4, x1, x2)

inst_86644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32ffffffffffffe; valaddr_reg:x3; val_offset:259932*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259932*0 + 3*628*FLEN/8, x4, x1, x2)

inst_86645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb88a913245743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab88a913245743; op2val:0x0;
op3val:0x32fffffffffffff; valaddr_reg:x3; val_offset:259935*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259935*0 + 3*629*FLEN/8, x4, x1, x2)

inst_86646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:259938*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259938*0 + 3*630*FLEN/8, x4, x1, x2)

inst_86647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:259941*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259941*0 + 3*631*FLEN/8, x4, x1, x2)

inst_86648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:259944*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259944*0 + 3*632*FLEN/8, x4, x1, x2)

inst_86649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:259947*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259947*0 + 3*633*FLEN/8, x4, x1, x2)

inst_86650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:259950*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259950*0 + 3*634*FLEN/8, x4, x1, x2)

inst_86651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:259953*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259953*0 + 3*635*FLEN/8, x4, x1, x2)

inst_86652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:259956*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259956*0 + 3*636*FLEN/8, x4, x1, x2)

inst_86653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7f; valaddr_reg:x3; val_offset:259959*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259959*0 + 3*637*FLEN/8, x4, x1, x2)

inst_86654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xff; valaddr_reg:x3; val_offset:259962*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259962*0 + 3*638*FLEN/8, x4, x1, x2)

inst_86655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1ff; valaddr_reg:x3; val_offset:259965*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259965*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_86656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3ff; valaddr_reg:x3; val_offset:259968*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259968*0 + 3*640*FLEN/8, x4, x1, x2)

inst_86657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7ff; valaddr_reg:x3; val_offset:259971*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259971*0 + 3*641*FLEN/8, x4, x1, x2)

inst_86658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfff; valaddr_reg:x3; val_offset:259974*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259974*0 + 3*642*FLEN/8, x4, x1, x2)

inst_86659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1fff; valaddr_reg:x3; val_offset:259977*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259977*0 + 3*643*FLEN/8, x4, x1, x2)

inst_86660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3fff; valaddr_reg:x3; val_offset:259980*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259980*0 + 3*644*FLEN/8, x4, x1, x2)

inst_86661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7fff; valaddr_reg:x3; val_offset:259983*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259983*0 + 3*645*FLEN/8, x4, x1, x2)

inst_86662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffff; valaddr_reg:x3; val_offset:259986*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259986*0 + 3*646*FLEN/8, x4, x1, x2)

inst_86663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1ffff; valaddr_reg:x3; val_offset:259989*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259989*0 + 3*647*FLEN/8, x4, x1, x2)

inst_86664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3ffff; valaddr_reg:x3; val_offset:259992*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259992*0 + 3*648*FLEN/8, x4, x1, x2)

inst_86665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7ffff; valaddr_reg:x3; val_offset:259995*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259995*0 + 3*649*FLEN/8, x4, x1, x2)

inst_86666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffff; valaddr_reg:x3; val_offset:259998*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 259998*0 + 3*650*FLEN/8, x4, x1, x2)

inst_86667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1fffff; valaddr_reg:x3; val_offset:260001*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260001*0 + 3*651*FLEN/8, x4, x1, x2)

inst_86668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3fffff; valaddr_reg:x3; val_offset:260004*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260004*0 + 3*652*FLEN/8, x4, x1, x2)

inst_86669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7fffff; valaddr_reg:x3; val_offset:260007*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260007*0 + 3*653*FLEN/8, x4, x1, x2)

inst_86670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffff; valaddr_reg:x3; val_offset:260010*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260010*0 + 3*654*FLEN/8, x4, x1, x2)

inst_86671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1ffffff; valaddr_reg:x3; val_offset:260013*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260013*0 + 3*655*FLEN/8, x4, x1, x2)

inst_86672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3ffffff; valaddr_reg:x3; val_offset:260016*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260016*0 + 3*656*FLEN/8, x4, x1, x2)

inst_86673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:260019*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260019*0 + 3*657*FLEN/8, x4, x1, x2)

inst_86674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffff; valaddr_reg:x3; val_offset:260022*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260022*0 + 3*658*FLEN/8, x4, x1, x2)

inst_86675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1fffffff; valaddr_reg:x3; val_offset:260025*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260025*0 + 3*659*FLEN/8, x4, x1, x2)

inst_86676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3fffffff; valaddr_reg:x3; val_offset:260028*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260028*0 + 3*660*FLEN/8, x4, x1, x2)

inst_86677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7fffffff; valaddr_reg:x3; val_offset:260031*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260031*0 + 3*661*FLEN/8, x4, x1, x2)

inst_86678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffff; valaddr_reg:x3; val_offset:260034*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260034*0 + 3*662*FLEN/8, x4, x1, x2)

inst_86679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1ffffffff; valaddr_reg:x3; val_offset:260037*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260037*0 + 3*663*FLEN/8, x4, x1, x2)

inst_86680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3ffffffff; valaddr_reg:x3; val_offset:260040*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260040*0 + 3*664*FLEN/8, x4, x1, x2)

inst_86681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7ffffffff; valaddr_reg:x3; val_offset:260043*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260043*0 + 3*665*FLEN/8, x4, x1, x2)

inst_86682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffff; valaddr_reg:x3; val_offset:260046*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260046*0 + 3*666*FLEN/8, x4, x1, x2)

inst_86683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1fffffffff; valaddr_reg:x3; val_offset:260049*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260049*0 + 3*667*FLEN/8, x4, x1, x2)

inst_86684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3fffffffff; valaddr_reg:x3; val_offset:260052*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260052*0 + 3*668*FLEN/8, x4, x1, x2)

inst_86685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7fffffffff; valaddr_reg:x3; val_offset:260055*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260055*0 + 3*669*FLEN/8, x4, x1, x2)

inst_86686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffffff; valaddr_reg:x3; val_offset:260058*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260058*0 + 3*670*FLEN/8, x4, x1, x2)

inst_86687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1ffffffffff; valaddr_reg:x3; val_offset:260061*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260061*0 + 3*671*FLEN/8, x4, x1, x2)

inst_86688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3ffffffffff; valaddr_reg:x3; val_offset:260064*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260064*0 + 3*672*FLEN/8, x4, x1, x2)

inst_86689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7ffffffffff; valaddr_reg:x3; val_offset:260067*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260067*0 + 3*673*FLEN/8, x4, x1, x2)

inst_86690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffffff; valaddr_reg:x3; val_offset:260070*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260070*0 + 3*674*FLEN/8, x4, x1, x2)

inst_86691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1fffffffffff; valaddr_reg:x3; val_offset:260073*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260073*0 + 3*675*FLEN/8, x4, x1, x2)

inst_86692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3fffffffffff; valaddr_reg:x3; val_offset:260076*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260076*0 + 3*676*FLEN/8, x4, x1, x2)

inst_86693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7fffffffffff; valaddr_reg:x3; val_offset:260079*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260079*0 + 3*677*FLEN/8, x4, x1, x2)

inst_86694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffffffff; valaddr_reg:x3; val_offset:260082*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260082*0 + 3*678*FLEN/8, x4, x1, x2)

inst_86695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x1ffffffffffff; valaddr_reg:x3; val_offset:260085*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260085*0 + 3*679*FLEN/8, x4, x1, x2)

inst_86696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:260088*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260088*0 + 3*680*FLEN/8, x4, x1, x2)

inst_86697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x3ffffffffffff; valaddr_reg:x3; val_offset:260091*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260091*0 + 3*681*FLEN/8, x4, x1, x2)

inst_86698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:260094*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260094*0 + 3*682*FLEN/8, x4, x1, x2)

inst_86699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:260097*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260097*0 + 3*683*FLEN/8, x4, x1, x2)

inst_86700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:260100*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260100*0 + 3*684*FLEN/8, x4, x1, x2)

inst_86701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:260103*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260103*0 + 3*685*FLEN/8, x4, x1, x2)

inst_86702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x7ffffffffffff; valaddr_reg:x3; val_offset:260106*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260106*0 + 3*686*FLEN/8, x4, x1, x2)

inst_86703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x8000000000000; valaddr_reg:x3; val_offset:260109*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260109*0 + 3*687*FLEN/8, x4, x1, x2)

inst_86704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:260112*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260112*0 + 3*688*FLEN/8, x4, x1, x2)

inst_86705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:260115*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260115*0 + 3*689*FLEN/8, x4, x1, x2)

inst_86706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:260118*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260118*0 + 3*690*FLEN/8, x4, x1, x2)

inst_86707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xc000000000000; valaddr_reg:x3; val_offset:260121*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260121*0 + 3*691*FLEN/8, x4, x1, x2)

inst_86708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:260124*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260124*0 + 3*692*FLEN/8, x4, x1, x2)

inst_86709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:260127*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260127*0 + 3*693*FLEN/8, x4, x1, x2)

inst_86710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xe000000000000; valaddr_reg:x3; val_offset:260130*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260130*0 + 3*694*FLEN/8, x4, x1, x2)

inst_86711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xf000000000000; valaddr_reg:x3; val_offset:260133*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260133*0 + 3*695*FLEN/8, x4, x1, x2)

inst_86712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xf800000000000; valaddr_reg:x3; val_offset:260136*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260136*0 + 3*696*FLEN/8, x4, x1, x2)

inst_86713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfc00000000000; valaddr_reg:x3; val_offset:260139*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260139*0 + 3*697*FLEN/8, x4, x1, x2)

inst_86714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfe00000000000; valaddr_reg:x3; val_offset:260142*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260142*0 + 3*698*FLEN/8, x4, x1, x2)

inst_86715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xff00000000000; valaddr_reg:x3; val_offset:260145*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260145*0 + 3*699*FLEN/8, x4, x1, x2)

inst_86716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xff80000000000; valaddr_reg:x3; val_offset:260148*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260148*0 + 3*700*FLEN/8, x4, x1, x2)

inst_86717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffc0000000000; valaddr_reg:x3; val_offset:260151*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260151*0 + 3*701*FLEN/8, x4, x1, x2)

inst_86718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffe0000000000; valaddr_reg:x3; val_offset:260154*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260154*0 + 3*702*FLEN/8, x4, x1, x2)

inst_86719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfff0000000000; valaddr_reg:x3; val_offset:260157*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260157*0 + 3*703*FLEN/8, x4, x1, x2)

inst_86720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfff8000000000; valaddr_reg:x3; val_offset:260160*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260160*0 + 3*704*FLEN/8, x4, x1, x2)

inst_86721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffc000000000; valaddr_reg:x3; val_offset:260163*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260163*0 + 3*705*FLEN/8, x4, x1, x2)

inst_86722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffe000000000; valaddr_reg:x3; val_offset:260166*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260166*0 + 3*706*FLEN/8, x4, x1, x2)

inst_86723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffff000000000; valaddr_reg:x3; val_offset:260169*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260169*0 + 3*707*FLEN/8, x4, x1, x2)

inst_86724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffff800000000; valaddr_reg:x3; val_offset:260172*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260172*0 + 3*708*FLEN/8, x4, x1, x2)

inst_86725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffc00000000; valaddr_reg:x3; val_offset:260175*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260175*0 + 3*709*FLEN/8, x4, x1, x2)

inst_86726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffe00000000; valaddr_reg:x3; val_offset:260178*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260178*0 + 3*710*FLEN/8, x4, x1, x2)

inst_86727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffff00000000; valaddr_reg:x3; val_offset:260181*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260181*0 + 3*711*FLEN/8, x4, x1, x2)

inst_86728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffff80000000; valaddr_reg:x3; val_offset:260184*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260184*0 + 3*712*FLEN/8, x4, x1, x2)

inst_86729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffc0000000; valaddr_reg:x3; val_offset:260187*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260187*0 + 3*713*FLEN/8, x4, x1, x2)

inst_86730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffe0000000; valaddr_reg:x3; val_offset:260190*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260190*0 + 3*714*FLEN/8, x4, x1, x2)

inst_86731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffff0000000; valaddr_reg:x3; val_offset:260193*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260193*0 + 3*715*FLEN/8, x4, x1, x2)

inst_86732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffff8000000; valaddr_reg:x3; val_offset:260196*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260196*0 + 3*716*FLEN/8, x4, x1, x2)

inst_86733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffc000000; valaddr_reg:x3; val_offset:260199*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260199*0 + 3*717*FLEN/8, x4, x1, x2)

inst_86734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffe000000; valaddr_reg:x3; val_offset:260202*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260202*0 + 3*718*FLEN/8, x4, x1, x2)

inst_86735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffff000000; valaddr_reg:x3; val_offset:260205*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260205*0 + 3*719*FLEN/8, x4, x1, x2)

inst_86736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffff800000; valaddr_reg:x3; val_offset:260208*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260208*0 + 3*720*FLEN/8, x4, x1, x2)

inst_86737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffc00000; valaddr_reg:x3; val_offset:260211*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260211*0 + 3*721*FLEN/8, x4, x1, x2)

inst_86738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffe00000; valaddr_reg:x3; val_offset:260214*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260214*0 + 3*722*FLEN/8, x4, x1, x2)

inst_86739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffff00000; valaddr_reg:x3; val_offset:260217*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260217*0 + 3*723*FLEN/8, x4, x1, x2)

inst_86740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffff80000; valaddr_reg:x3; val_offset:260220*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260220*0 + 3*724*FLEN/8, x4, x1, x2)

inst_86741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffffc0000; valaddr_reg:x3; val_offset:260223*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260223*0 + 3*725*FLEN/8, x4, x1, x2)

inst_86742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffffe0000; valaddr_reg:x3; val_offset:260226*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260226*0 + 3*726*FLEN/8, x4, x1, x2)

inst_86743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffff0000; valaddr_reg:x3; val_offset:260229*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260229*0 + 3*727*FLEN/8, x4, x1, x2)

inst_86744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffff8000; valaddr_reg:x3; val_offset:260232*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260232*0 + 3*728*FLEN/8, x4, x1, x2)

inst_86745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffffc000; valaddr_reg:x3; val_offset:260235*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260235*0 + 3*729*FLEN/8, x4, x1, x2)

inst_86746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffffe000; valaddr_reg:x3; val_offset:260238*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260238*0 + 3*730*FLEN/8, x4, x1, x2)

inst_86747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffffff000; valaddr_reg:x3; val_offset:260241*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260241*0 + 3*731*FLEN/8, x4, x1, x2)

inst_86748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffffff800; valaddr_reg:x3; val_offset:260244*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260244*0 + 3*732*FLEN/8, x4, x1, x2)

inst_86749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffffffc00; valaddr_reg:x3; val_offset:260247*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260247*0 + 3*733*FLEN/8, x4, x1, x2)

inst_86750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffffffe00; valaddr_reg:x3; val_offset:260250*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260250*0 + 3*734*FLEN/8, x4, x1, x2)

inst_86751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffffff00; valaddr_reg:x3; val_offset:260253*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260253*0 + 3*735*FLEN/8, x4, x1, x2)

inst_86752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffffff80; valaddr_reg:x3; val_offset:260256*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260256*0 + 3*736*FLEN/8, x4, x1, x2)

inst_86753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:260259*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260259*0 + 3*737*FLEN/8, x4, x1, x2)

inst_86754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:260262*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260262*0 + 3*738*FLEN/8, x4, x1, x2)

inst_86755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:260265*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260265*0 + 3*739*FLEN/8, x4, x1, x2)

inst_86756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:260268*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260268*0 + 3*740*FLEN/8, x4, x1, x2)

inst_86757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:260271*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260271*0 + 3*741*FLEN/8, x4, x1, x2)

inst_86758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:260274*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260274*0 + 3*742*FLEN/8, x4, x1, x2)

inst_86759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb8d1a9c87684b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab8d1a9c87684b; op2val:0x0;
op3val:0xfffffffffffff; valaddr_reg:x3; val_offset:260277*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260277*0 + 3*743*FLEN/8, x4, x1, x2)

inst_86760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf0000000000000; valaddr_reg:x3; val_offset:260280*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260280*0 + 3*744*FLEN/8, x4, x1, x2)

inst_86761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf0000000000001; valaddr_reg:x3; val_offset:260283*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260283*0 + 3*745*FLEN/8, x4, x1, x2)

inst_86762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf0000000000003; valaddr_reg:x3; val_offset:260286*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260286*0 + 3*746*FLEN/8, x4, x1, x2)

inst_86763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf0000000000007; valaddr_reg:x3; val_offset:260289*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260289*0 + 3*747*FLEN/8, x4, x1, x2)

inst_86764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf000000000000f; valaddr_reg:x3; val_offset:260292*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260292*0 + 3*748*FLEN/8, x4, x1, x2)

inst_86765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf000000000001f; valaddr_reg:x3; val_offset:260295*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260295*0 + 3*749*FLEN/8, x4, x1, x2)

inst_86766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf000000000003f; valaddr_reg:x3; val_offset:260298*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260298*0 + 3*750*FLEN/8, x4, x1, x2)

inst_86767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf000000000007f; valaddr_reg:x3; val_offset:260301*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260301*0 + 3*751*FLEN/8, x4, x1, x2)

inst_86768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf00000000000ff; valaddr_reg:x3; val_offset:260304*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260304*0 + 3*752*FLEN/8, x4, x1, x2)

inst_86769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf00000000001ff; valaddr_reg:x3; val_offset:260307*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260307*0 + 3*753*FLEN/8, x4, x1, x2)

inst_86770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf00000000003ff; valaddr_reg:x3; val_offset:260310*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260310*0 + 3*754*FLEN/8, x4, x1, x2)

inst_86771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf00000000007ff; valaddr_reg:x3; val_offset:260313*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260313*0 + 3*755*FLEN/8, x4, x1, x2)

inst_86772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf0000000000fff; valaddr_reg:x3; val_offset:260316*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260316*0 + 3*756*FLEN/8, x4, x1, x2)

inst_86773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf0000000001fff; valaddr_reg:x3; val_offset:260319*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260319*0 + 3*757*FLEN/8, x4, x1, x2)

inst_86774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf0000000003fff; valaddr_reg:x3; val_offset:260322*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260322*0 + 3*758*FLEN/8, x4, x1, x2)

inst_86775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf0000000007fff; valaddr_reg:x3; val_offset:260325*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260325*0 + 3*759*FLEN/8, x4, x1, x2)

inst_86776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf000000000ffff; valaddr_reg:x3; val_offset:260328*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260328*0 + 3*760*FLEN/8, x4, x1, x2)

inst_86777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf000000001ffff; valaddr_reg:x3; val_offset:260331*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260331*0 + 3*761*FLEN/8, x4, x1, x2)

inst_86778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf000000003ffff; valaddr_reg:x3; val_offset:260334*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260334*0 + 3*762*FLEN/8, x4, x1, x2)

inst_86779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf000000007ffff; valaddr_reg:x3; val_offset:260337*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260337*0 + 3*763*FLEN/8, x4, x1, x2)

inst_86780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf00000000fffff; valaddr_reg:x3; val_offset:260340*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260340*0 + 3*764*FLEN/8, x4, x1, x2)

inst_86781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf00000001fffff; valaddr_reg:x3; val_offset:260343*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260343*0 + 3*765*FLEN/8, x4, x1, x2)

inst_86782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf00000003fffff; valaddr_reg:x3; val_offset:260346*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260346*0 + 3*766*FLEN/8, x4, x1, x2)

inst_86783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xba2704f6953c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2870d5c186ea3 and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faba2704f6953c8; op2val:0x9fc2870d5c186ea3;
op3val:0xbaf00000007fffff; valaddr_reg:x3; val_offset:260349*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 260349*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846154752,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846154753,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846154755,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846154759,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846154767,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846154783,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846154815,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846154879,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846155007,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846155263,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846155775,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846156799,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846158847,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846162943,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846171135,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846187519,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846220287,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846285823,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846416895,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850846679039,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850847203327,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850848251903,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850850349055,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850854543359,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850862931967,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850879709183,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850913263615,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872850980372479,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872851114590207,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872851383025663,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872851919896575,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872852993638399,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872855141122047,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872859436089343,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872868026023935,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872885205893119,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872919565631487,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219872988285108223,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219873125724061695,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219873400601968639,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219873950357782527,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219875049869410303,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219877248892665855,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219881646939176959,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219890443032199167,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219908035218243583,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4219943219590332415,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4220013588334510079,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4220154325822865407,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4220435800799576063,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4220998750752997375,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4222124650659839999,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4222124650659840000,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4223250550566682624,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4223813500520103936,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224094975496814592,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224235712985169920,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224306081729347584,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224341266101436416,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224358858287480832,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224367654380503040,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224372052427014144,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224374251450269696,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224375350961897472,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224375900717711360,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376175595618304,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376313034571776,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376381754048512,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376416113786880,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376433293656064,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376441883590656,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376446178557952,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376448326041600,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376449399783424,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376449936654336,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450205089792,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450339307520,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450406416384,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450439970816,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450456748032,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450465136640,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450469330944,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450471428096,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450472476672,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473000960,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473263104,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473394176,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473459712,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473492480,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473508864,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473517056,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473521152,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473523200,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473524224,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473524736,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473524992,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473525120,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473525184,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473525216,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473525232,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473525240,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473525244,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473525246,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4224376450473525247,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893693946216315792,64,FLEN)
NAN_BOXED(2320125137921031813,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153088,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153089,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153091,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153095,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153103,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153119,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153151,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153215,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153343,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153599,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360154111,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360155135,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360157183,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360161279,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360169471,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360185855,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360218623,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360284159,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360415231,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360677375,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016361201663,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016362250239,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016364347391,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016368541695,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016376930303,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016393707519,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016427261951,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016494370815,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016628588543,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016897023999,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070017433894911,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070018507636735,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070020655120383,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070024950087679,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070033540022271,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070050719891455,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070085079629823,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070153799106559,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070291238060031,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070566115966975,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471071115871780863,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471072215383408639,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471074414406664191,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471078812453175295,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471087608546197503,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471105200732241919,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471140385104330751,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471210753848508415,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471351491336863743,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471632966313574399,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9472195916266995711,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9473321816173838335,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9473321816173838336,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9474447716080680960,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475010666034102272,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475292141010812928,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475432878499168256,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475503247243345920,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475538431615434752,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475556023801479168,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475564819894501376,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475569217941012480,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475571416964268032,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475572516475895808,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573066231709696,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573341109616640,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573478548570112,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573547268046848,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573581627785216,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573598807654400,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573607397588992,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573611692556288,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573613840039936,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573614913781760,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615450652672,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615719088128,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615853305856,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615920414720,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615953969152,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615970746368,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615979134976,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615983329280,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615985426432,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615986475008,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615986999296,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987261440,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987392512,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987458048,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987490816,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987507200,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987515392,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987519488,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987521536,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987522560,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523072,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523328,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523456,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523520,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523552,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523568,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523576,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523580,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523582,64,FLEN)
NAN_BOXED(6893741877476128511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523583,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966144,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966145,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966147,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966151,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966159,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966175,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966207,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966271,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966399,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966655,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576967167,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576968191,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576970239,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576974335,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576982527,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576998911,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577031679,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577097215,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577228287,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577490431,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621578014719,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621579063295,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621581160447,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621585354751,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621593743359,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621610520575,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621644075007,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621711183871,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621845401599,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019622113837055,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019622650707967,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019623724449791,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019625871933439,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019630166900735,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019638756835327,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019655936704511,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019690296442879,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019759015919615,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019896454873087,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408020171332780031,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408020721088593919,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408021820600221695,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408024019623477247,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408028417669988351,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408037213763010559,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408054805949054975,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408089990321143807,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408160359065321471,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408301096553676799,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408582571530387455,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9409145521483808767,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9410271421390651391,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9410271421390651392,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9411397321297494016,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9411960271250915328,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412241746227625984,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412382483715981312,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412452852460158976,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412488036832247808,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412505629018292224,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412514425111314432,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412518823157825536,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412521022181081088,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522121692708864,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522671448522752,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522946326429696,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523083765383168,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523152484859904,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523186844598272,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523204024467456,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523212614402048,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523216909369344,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523219056852992,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220130594816,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220667465728,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220935901184,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221070118912,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221137227776,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221170782208,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221187559424,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221195948032,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221200142336,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221202239488,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221203288064,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221203812352,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204074496,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204205568,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204271104,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204303872,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204320256,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204328448,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204332544,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204334592,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204335616,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336128,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336384,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336512,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336576,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336608,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336624,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336632,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336636,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336638,64,FLEN)
NAN_BOXED(6893742596151134959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336639,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887296,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887297,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887299,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887303,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887311,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887327,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887359,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887423,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887551,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887807,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736888319,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736889343,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736891391,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736895487,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736903679,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736920063,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736952831,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737018367,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737149439,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737411583,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737935871,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835738984447,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835741081599,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835745275903,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835753664511,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835770441727,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835803996159,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835871105023,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882836005322751,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882836273758207,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882836810629119,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882837884370943,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882840031854591,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882844326821887,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882852916756479,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882870096625663,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882904456364031,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882973175840767,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236883110614794239,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236883385492701183,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236883935248515071,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236885034760142847,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236887233783398399,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236891631829909503,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236900427922931711,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236918020108976127,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236953204481064959,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9237023573225242623,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9237164310713597951,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9237445785690308607,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9238008735643729919,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9239134635550572543,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9239134635550572544,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9240260535457415168,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9240823485410836480,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241104960387547136,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241245697875902464,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241316066620080128,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241351250992168960,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241368843178213376,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241377639271235584,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241382037317746688,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241384236341002240,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241385335852630016,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241385885608443904,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386160486350848,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386297925304320,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386366644781056,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386401004519424,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386418184388608,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386426774323200,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386431069290496,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386433216774144,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386434290515968,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386434827386880,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435095822336,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435230040064,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435297148928,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435330703360,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435347480576,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435355869184,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435360063488,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435362160640,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435363209216,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435363733504,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435363995648,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364126720,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364192256,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364225024,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364241408,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364249600,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364253696,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364255744,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364256768,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257280,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257536,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257664,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257728,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257760,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257776,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257784,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257788,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257790,64,FLEN)
NAN_BOXED(6893749971163146084,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257791,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524800,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524801,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524803,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524807,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524815,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524831,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524863,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524927,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368525055,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368525311,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368525823,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368526847,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368528895,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368532991,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368541183,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368557567,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368590335,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368655871,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368786943,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981369049087,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981369573375,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981370621951,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981372719103,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981376913407,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981385302015,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981402079231,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981435633663,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981502742527,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981636960255,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981905395711,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179982442266623,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179983516008447,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179985663492095,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179989958459391,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179998548393983,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180015728263167,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180050088001535,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180118807478271,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180256246431743,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180531124338687,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225181080880152575,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225182180391780351,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225184379415035903,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225188777461547007,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225197573554569215,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225215165740613631,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225250350112702463,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225320718856880127,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225461456345235455,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225742931321946111,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(226305881275367423,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(227431781182210047,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(227431781182210048,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(228557681089052672,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229120631042473984,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229402106019184640,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229542843507539968,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229613212251717632,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229648396623806464,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229665988809850880,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229674784902873088,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229679182949384192,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229681381972639744,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229682481484267520,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683031240081408,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683306117988352,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683443556941824,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683512276418560,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683546636156928,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683563816026112,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683572405960704,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683576700928000,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683578848411648,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683579922153472,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580459024384,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580727459840,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580861677568,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580928786432,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580962340864,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580979118080,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580987506688,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580991700992,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580993798144,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580994846720,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995371008,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995633152,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995764224,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995829760,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995862528,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995878912,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995887104,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995891200,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995893248,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995894272,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995894784,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895040,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895168,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895232,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895264,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895280,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895288,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895292,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895294,64,FLEN)
NAN_BOXED(6893753914372675395,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895295,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(511,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1023,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2047,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4095,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8191,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16383,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32767,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65535,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(131071,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262143,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(524287,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1048575,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2097151,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4194303,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8388607,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16777215,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33554431,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67108863,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134217727,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(268435455,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(536870911,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1073741823,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2147483647,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4294967295,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8589934591,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17179869183,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34359738367,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68719476735,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137438953471,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274877906943,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(549755813887,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1099511627775,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2199023255551,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4398046511103,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8796093022207,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17592186044415,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35184372088831,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(70368744177663,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710655,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(562949953421311,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1125899906842623,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685247,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685248,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3377699720527872,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3940649673949184,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4222124650659840,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4362862139015168,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4433230883192832,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4468415255281664,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4486007441326080,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4494803534348288,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4499201580859392,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4501400604114944,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4502500115742720,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503049871556608,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503324749463552,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503462188417024,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503530907893760,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503565267632128,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503582447501312,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503591037435904,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503595332403200,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503597479886848,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503598553628672,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599090499584,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599358935040,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599493152768,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599560261632,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599593816064,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599610593280,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599618981888,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599623176192,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599625273344,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626321920,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626846208,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627108352,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627239424,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627304960,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627337728,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627354112,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627362304,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627366400,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627368448,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369472,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369984,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370240,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370368,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893758800055461963,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370495,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465153536,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465153537,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465153539,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465153543,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465153551,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465153567,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465153599,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465153663,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465153791,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465154047,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465154559,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465155583,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465157631,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465161727,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465169919,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465186303,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465219071,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465284607,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465415679,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485465677823,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485466202111,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485467250687,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485469347839,64,FLEN)
NAN_BOXED(6893782257873015752,64,FLEN)
NAN_BOXED(11511912088961838755,64,FLEN)
NAN_BOXED(13470266485473542143,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
