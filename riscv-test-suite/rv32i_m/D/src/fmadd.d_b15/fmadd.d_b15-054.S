
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_40704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39afffffffffe000; valaddr_reg:x3; val_offset:122112*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122112*0 + 3*0*FLEN/8, x4, x1, x2)

inst_40705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39affffffffff000; valaddr_reg:x3; val_offset:122115*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122115*0 + 3*1*FLEN/8, x4, x1, x2)

inst_40706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39affffffffff800; valaddr_reg:x3; val_offset:122118*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122118*0 + 3*2*FLEN/8, x4, x1, x2)

inst_40707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39affffffffffc00; valaddr_reg:x3; val_offset:122121*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122121*0 + 3*3*FLEN/8, x4, x1, x2)

inst_40708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39affffffffffe00; valaddr_reg:x3; val_offset:122124*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122124*0 + 3*4*FLEN/8, x4, x1, x2)

inst_40709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39afffffffffff00; valaddr_reg:x3; val_offset:122127*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122127*0 + 3*5*FLEN/8, x4, x1, x2)

inst_40710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39afffffffffff80; valaddr_reg:x3; val_offset:122130*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122130*0 + 3*6*FLEN/8, x4, x1, x2)

inst_40711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39afffffffffffc0; valaddr_reg:x3; val_offset:122133*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122133*0 + 3*7*FLEN/8, x4, x1, x2)

inst_40712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39afffffffffffe0; valaddr_reg:x3; val_offset:122136*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122136*0 + 3*8*FLEN/8, x4, x1, x2)

inst_40713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39affffffffffff0; valaddr_reg:x3; val_offset:122139*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122139*0 + 3*9*FLEN/8, x4, x1, x2)

inst_40714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39affffffffffff8; valaddr_reg:x3; val_offset:122142*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122142*0 + 3*10*FLEN/8, x4, x1, x2)

inst_40715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39affffffffffffc; valaddr_reg:x3; val_offset:122145*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122145*0 + 3*11*FLEN/8, x4, x1, x2)

inst_40716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39affffffffffffe; valaddr_reg:x3; val_offset:122148*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122148*0 + 3*12*FLEN/8, x4, x1, x2)

inst_40717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x39a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x39afffffffffffff; valaddr_reg:x3; val_offset:122151*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122151*0 + 3*13*FLEN/8, x4, x1, x2)

inst_40718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:122154*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122154*0 + 3*14*FLEN/8, x4, x1, x2)

inst_40719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:122157*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122157*0 + 3*15*FLEN/8, x4, x1, x2)

inst_40720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:122160*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122160*0 + 3*16*FLEN/8, x4, x1, x2)

inst_40721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:122163*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122163*0 + 3*17*FLEN/8, x4, x1, x2)

inst_40722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:122166*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122166*0 + 3*18*FLEN/8, x4, x1, x2)

inst_40723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:122169*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122169*0 + 3*19*FLEN/8, x4, x1, x2)

inst_40724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:122172*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122172*0 + 3*20*FLEN/8, x4, x1, x2)

inst_40725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:122175*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122175*0 + 3*21*FLEN/8, x4, x1, x2)

inst_40726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:122178*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122178*0 + 3*22*FLEN/8, x4, x1, x2)

inst_40727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:122181*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122181*0 + 3*23*FLEN/8, x4, x1, x2)

inst_40728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:122184*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122184*0 + 3*24*FLEN/8, x4, x1, x2)

inst_40729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:122187*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122187*0 + 3*25*FLEN/8, x4, x1, x2)

inst_40730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:122190*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122190*0 + 3*26*FLEN/8, x4, x1, x2)

inst_40731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:122193*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122193*0 + 3*27*FLEN/8, x4, x1, x2)

inst_40732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:122196*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122196*0 + 3*28*FLEN/8, x4, x1, x2)

inst_40733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:122199*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122199*0 + 3*29*FLEN/8, x4, x1, x2)

inst_40734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:122202*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122202*0 + 3*30*FLEN/8, x4, x1, x2)

inst_40735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:122205*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122205*0 + 3*31*FLEN/8, x4, x1, x2)

inst_40736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:122208*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122208*0 + 3*32*FLEN/8, x4, x1, x2)

inst_40737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:122211*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122211*0 + 3*33*FLEN/8, x4, x1, x2)

inst_40738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:122214*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122214*0 + 3*34*FLEN/8, x4, x1, x2)

inst_40739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8df83b6b387b1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x495a0bd0d5def and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f98df83b6b387b1; op2val:0x204495a0bd0d5def;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:122217*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122217*0 + 3*35*FLEN/8, x4, x1, x2)

inst_40740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:122220*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122220*0 + 3*36*FLEN/8, x4, x1, x2)

inst_40741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:122223*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122223*0 + 3*37*FLEN/8, x4, x1, x2)

inst_40742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:122226*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122226*0 + 3*38*FLEN/8, x4, x1, x2)

inst_40743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:122229*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122229*0 + 3*39*FLEN/8, x4, x1, x2)

inst_40744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:122232*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122232*0 + 3*40*FLEN/8, x4, x1, x2)

inst_40745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:122235*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122235*0 + 3*41*FLEN/8, x4, x1, x2)

inst_40746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:122238*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122238*0 + 3*42*FLEN/8, x4, x1, x2)

inst_40747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:122241*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122241*0 + 3*43*FLEN/8, x4, x1, x2)

inst_40748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:122244*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122244*0 + 3*44*FLEN/8, x4, x1, x2)

inst_40749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:122247*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122247*0 + 3*45*FLEN/8, x4, x1, x2)

inst_40750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:122250*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122250*0 + 3*46*FLEN/8, x4, x1, x2)

inst_40751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:122253*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122253*0 + 3*47*FLEN/8, x4, x1, x2)

inst_40752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:122256*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122256*0 + 3*48*FLEN/8, x4, x1, x2)

inst_40753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:122259*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122259*0 + 3*49*FLEN/8, x4, x1, x2)

inst_40754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:122262*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122262*0 + 3*50*FLEN/8, x4, x1, x2)

inst_40755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:122265*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122265*0 + 3*51*FLEN/8, x4, x1, x2)

inst_40756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:122268*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122268*0 + 3*52*FLEN/8, x4, x1, x2)

inst_40757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:122271*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122271*0 + 3*53*FLEN/8, x4, x1, x2)

inst_40758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:122274*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122274*0 + 3*54*FLEN/8, x4, x1, x2)

inst_40759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:122277*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122277*0 + 3*55*FLEN/8, x4, x1, x2)

inst_40760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:122280*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122280*0 + 3*56*FLEN/8, x4, x1, x2)

inst_40761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:122283*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122283*0 + 3*57*FLEN/8, x4, x1, x2)

inst_40762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000000000000; valaddr_reg:x3; val_offset:122286*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122286*0 + 3*58*FLEN/8, x4, x1, x2)

inst_40763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000000000001; valaddr_reg:x3; val_offset:122289*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122289*0 + 3*59*FLEN/8, x4, x1, x2)

inst_40764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000000000003; valaddr_reg:x3; val_offset:122292*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122292*0 + 3*60*FLEN/8, x4, x1, x2)

inst_40765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000000000007; valaddr_reg:x3; val_offset:122295*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122295*0 + 3*61*FLEN/8, x4, x1, x2)

inst_40766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000000000000f; valaddr_reg:x3; val_offset:122298*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122298*0 + 3*62*FLEN/8, x4, x1, x2)

inst_40767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000000000001f; valaddr_reg:x3; val_offset:122301*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122301*0 + 3*63*FLEN/8, x4, x1, x2)

inst_40768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000000000003f; valaddr_reg:x3; val_offset:122304*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122304*0 + 3*64*FLEN/8, x4, x1, x2)

inst_40769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000000000007f; valaddr_reg:x3; val_offset:122307*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122307*0 + 3*65*FLEN/8, x4, x1, x2)

inst_40770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300000000000ff; valaddr_reg:x3; val_offset:122310*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122310*0 + 3*66*FLEN/8, x4, x1, x2)

inst_40771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300000000001ff; valaddr_reg:x3; val_offset:122313*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122313*0 + 3*67*FLEN/8, x4, x1, x2)

inst_40772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300000000003ff; valaddr_reg:x3; val_offset:122316*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122316*0 + 3*68*FLEN/8, x4, x1, x2)

inst_40773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300000000007ff; valaddr_reg:x3; val_offset:122319*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122319*0 + 3*69*FLEN/8, x4, x1, x2)

inst_40774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000000000fff; valaddr_reg:x3; val_offset:122322*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122322*0 + 3*70*FLEN/8, x4, x1, x2)

inst_40775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000000001fff; valaddr_reg:x3; val_offset:122325*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122325*0 + 3*71*FLEN/8, x4, x1, x2)

inst_40776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000000003fff; valaddr_reg:x3; val_offset:122328*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122328*0 + 3*72*FLEN/8, x4, x1, x2)

inst_40777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000000007fff; valaddr_reg:x3; val_offset:122331*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122331*0 + 3*73*FLEN/8, x4, x1, x2)

inst_40778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000000000ffff; valaddr_reg:x3; val_offset:122334*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122334*0 + 3*74*FLEN/8, x4, x1, x2)

inst_40779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000000001ffff; valaddr_reg:x3; val_offset:122337*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122337*0 + 3*75*FLEN/8, x4, x1, x2)

inst_40780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000000003ffff; valaddr_reg:x3; val_offset:122340*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122340*0 + 3*76*FLEN/8, x4, x1, x2)

inst_40781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000000007ffff; valaddr_reg:x3; val_offset:122343*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122343*0 + 3*77*FLEN/8, x4, x1, x2)

inst_40782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300000000fffff; valaddr_reg:x3; val_offset:122346*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122346*0 + 3*78*FLEN/8, x4, x1, x2)

inst_40783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300000001fffff; valaddr_reg:x3; val_offset:122349*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122349*0 + 3*79*FLEN/8, x4, x1, x2)

inst_40784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300000003fffff; valaddr_reg:x3; val_offset:122352*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122352*0 + 3*80*FLEN/8, x4, x1, x2)

inst_40785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300000007fffff; valaddr_reg:x3; val_offset:122355*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122355*0 + 3*81*FLEN/8, x4, x1, x2)

inst_40786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000000ffffff; valaddr_reg:x3; val_offset:122358*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122358*0 + 3*82*FLEN/8, x4, x1, x2)

inst_40787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000001ffffff; valaddr_reg:x3; val_offset:122361*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122361*0 + 3*83*FLEN/8, x4, x1, x2)

inst_40788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000003ffffff; valaddr_reg:x3; val_offset:122364*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122364*0 + 3*84*FLEN/8, x4, x1, x2)

inst_40789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000007ffffff; valaddr_reg:x3; val_offset:122367*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122367*0 + 3*85*FLEN/8, x4, x1, x2)

inst_40790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000000fffffff; valaddr_reg:x3; val_offset:122370*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122370*0 + 3*86*FLEN/8, x4, x1, x2)

inst_40791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000001fffffff; valaddr_reg:x3; val_offset:122373*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122373*0 + 3*87*FLEN/8, x4, x1, x2)

inst_40792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000003fffffff; valaddr_reg:x3; val_offset:122376*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122376*0 + 3*88*FLEN/8, x4, x1, x2)

inst_40793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000007fffffff; valaddr_reg:x3; val_offset:122379*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122379*0 + 3*89*FLEN/8, x4, x1, x2)

inst_40794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300000ffffffff; valaddr_reg:x3; val_offset:122382*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122382*0 + 3*90*FLEN/8, x4, x1, x2)

inst_40795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300001ffffffff; valaddr_reg:x3; val_offset:122385*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122385*0 + 3*91*FLEN/8, x4, x1, x2)

inst_40796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300003ffffffff; valaddr_reg:x3; val_offset:122388*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122388*0 + 3*92*FLEN/8, x4, x1, x2)

inst_40797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300007ffffffff; valaddr_reg:x3; val_offset:122391*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122391*0 + 3*93*FLEN/8, x4, x1, x2)

inst_40798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330000fffffffff; valaddr_reg:x3; val_offset:122394*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122394*0 + 3*94*FLEN/8, x4, x1, x2)

inst_40799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330001fffffffff; valaddr_reg:x3; val_offset:122397*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122397*0 + 3*95*FLEN/8, x4, x1, x2)

inst_40800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330003fffffffff; valaddr_reg:x3; val_offset:122400*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122400*0 + 3*96*FLEN/8, x4, x1, x2)

inst_40801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330007fffffffff; valaddr_reg:x3; val_offset:122403*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122403*0 + 3*97*FLEN/8, x4, x1, x2)

inst_40802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833000ffffffffff; valaddr_reg:x3; val_offset:122406*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122406*0 + 3*98*FLEN/8, x4, x1, x2)

inst_40803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833001ffffffffff; valaddr_reg:x3; val_offset:122409*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122409*0 + 3*99*FLEN/8, x4, x1, x2)

inst_40804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833003ffffffffff; valaddr_reg:x3; val_offset:122412*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122412*0 + 3*100*FLEN/8, x4, x1, x2)

inst_40805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833007ffffffffff; valaddr_reg:x3; val_offset:122415*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122415*0 + 3*101*FLEN/8, x4, x1, x2)

inst_40806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83300fffffffffff; valaddr_reg:x3; val_offset:122418*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122418*0 + 3*102*FLEN/8, x4, x1, x2)

inst_40807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83301fffffffffff; valaddr_reg:x3; val_offset:122421*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122421*0 + 3*103*FLEN/8, x4, x1, x2)

inst_40808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83303fffffffffff; valaddr_reg:x3; val_offset:122424*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122424*0 + 3*104*FLEN/8, x4, x1, x2)

inst_40809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x83307fffffffffff; valaddr_reg:x3; val_offset:122427*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122427*0 + 3*105*FLEN/8, x4, x1, x2)

inst_40810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8330ffffffffffff; valaddr_reg:x3; val_offset:122430*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122430*0 + 3*106*FLEN/8, x4, x1, x2)

inst_40811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8331ffffffffffff; valaddr_reg:x3; val_offset:122433*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122433*0 + 3*107*FLEN/8, x4, x1, x2)

inst_40812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8333ffffffffffff; valaddr_reg:x3; val_offset:122436*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122436*0 + 3*108*FLEN/8, x4, x1, x2)

inst_40813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8337ffffffffffff; valaddr_reg:x3; val_offset:122439*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122439*0 + 3*109*FLEN/8, x4, x1, x2)

inst_40814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x8338000000000000; valaddr_reg:x3; val_offset:122442*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122442*0 + 3*110*FLEN/8, x4, x1, x2)

inst_40815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833c000000000000; valaddr_reg:x3; val_offset:122445*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122445*0 + 3*111*FLEN/8, x4, x1, x2)

inst_40816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833e000000000000; valaddr_reg:x3; val_offset:122448*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122448*0 + 3*112*FLEN/8, x4, x1, x2)

inst_40817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833f000000000000; valaddr_reg:x3; val_offset:122451*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122451*0 + 3*113*FLEN/8, x4, x1, x2)

inst_40818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833f800000000000; valaddr_reg:x3; val_offset:122454*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122454*0 + 3*114*FLEN/8, x4, x1, x2)

inst_40819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fc00000000000; valaddr_reg:x3; val_offset:122457*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122457*0 + 3*115*FLEN/8, x4, x1, x2)

inst_40820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fe00000000000; valaddr_reg:x3; val_offset:122460*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122460*0 + 3*116*FLEN/8, x4, x1, x2)

inst_40821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ff00000000000; valaddr_reg:x3; val_offset:122463*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122463*0 + 3*117*FLEN/8, x4, x1, x2)

inst_40822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ff80000000000; valaddr_reg:x3; val_offset:122466*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122466*0 + 3*118*FLEN/8, x4, x1, x2)

inst_40823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffc0000000000; valaddr_reg:x3; val_offset:122469*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122469*0 + 3*119*FLEN/8, x4, x1, x2)

inst_40824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffe0000000000; valaddr_reg:x3; val_offset:122472*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122472*0 + 3*120*FLEN/8, x4, x1, x2)

inst_40825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fff0000000000; valaddr_reg:x3; val_offset:122475*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122475*0 + 3*121*FLEN/8, x4, x1, x2)

inst_40826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fff8000000000; valaddr_reg:x3; val_offset:122478*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122478*0 + 3*122*FLEN/8, x4, x1, x2)

inst_40827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffc000000000; valaddr_reg:x3; val_offset:122481*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122481*0 + 3*123*FLEN/8, x4, x1, x2)

inst_40828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffe000000000; valaddr_reg:x3; val_offset:122484*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122484*0 + 3*124*FLEN/8, x4, x1, x2)

inst_40829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffff000000000; valaddr_reg:x3; val_offset:122487*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122487*0 + 3*125*FLEN/8, x4, x1, x2)

inst_40830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffff800000000; valaddr_reg:x3; val_offset:122490*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122490*0 + 3*126*FLEN/8, x4, x1, x2)

inst_40831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffc00000000; valaddr_reg:x3; val_offset:122493*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122493*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_40832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffe00000000; valaddr_reg:x3; val_offset:122496*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122496*0 + 3*128*FLEN/8, x4, x1, x2)

inst_40833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffff00000000; valaddr_reg:x3; val_offset:122499*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122499*0 + 3*129*FLEN/8, x4, x1, x2)

inst_40834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffff80000000; valaddr_reg:x3; val_offset:122502*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122502*0 + 3*130*FLEN/8, x4, x1, x2)

inst_40835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffc0000000; valaddr_reg:x3; val_offset:122505*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122505*0 + 3*131*FLEN/8, x4, x1, x2)

inst_40836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffe0000000; valaddr_reg:x3; val_offset:122508*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122508*0 + 3*132*FLEN/8, x4, x1, x2)

inst_40837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffff0000000; valaddr_reg:x3; val_offset:122511*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122511*0 + 3*133*FLEN/8, x4, x1, x2)

inst_40838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffff8000000; valaddr_reg:x3; val_offset:122514*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122514*0 + 3*134*FLEN/8, x4, x1, x2)

inst_40839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffc000000; valaddr_reg:x3; val_offset:122517*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122517*0 + 3*135*FLEN/8, x4, x1, x2)

inst_40840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffe000000; valaddr_reg:x3; val_offset:122520*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122520*0 + 3*136*FLEN/8, x4, x1, x2)

inst_40841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffff000000; valaddr_reg:x3; val_offset:122523*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122523*0 + 3*137*FLEN/8, x4, x1, x2)

inst_40842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffff800000; valaddr_reg:x3; val_offset:122526*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122526*0 + 3*138*FLEN/8, x4, x1, x2)

inst_40843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffffc00000; valaddr_reg:x3; val_offset:122529*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122529*0 + 3*139*FLEN/8, x4, x1, x2)

inst_40844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffffe00000; valaddr_reg:x3; val_offset:122532*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122532*0 + 3*140*FLEN/8, x4, x1, x2)

inst_40845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffff00000; valaddr_reg:x3; val_offset:122535*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122535*0 + 3*141*FLEN/8, x4, x1, x2)

inst_40846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffff80000; valaddr_reg:x3; val_offset:122538*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122538*0 + 3*142*FLEN/8, x4, x1, x2)

inst_40847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffffc0000; valaddr_reg:x3; val_offset:122541*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122541*0 + 3*143*FLEN/8, x4, x1, x2)

inst_40848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffffe0000; valaddr_reg:x3; val_offset:122544*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122544*0 + 3*144*FLEN/8, x4, x1, x2)

inst_40849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffffff0000; valaddr_reg:x3; val_offset:122547*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122547*0 + 3*145*FLEN/8, x4, x1, x2)

inst_40850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffffff8000; valaddr_reg:x3; val_offset:122550*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122550*0 + 3*146*FLEN/8, x4, x1, x2)

inst_40851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffffffc000; valaddr_reg:x3; val_offset:122553*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122553*0 + 3*147*FLEN/8, x4, x1, x2)

inst_40852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffffffe000; valaddr_reg:x3; val_offset:122556*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122556*0 + 3*148*FLEN/8, x4, x1, x2)

inst_40853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffffff000; valaddr_reg:x3; val_offset:122559*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122559*0 + 3*149*FLEN/8, x4, x1, x2)

inst_40854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffffff800; valaddr_reg:x3; val_offset:122562*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122562*0 + 3*150*FLEN/8, x4, x1, x2)

inst_40855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffffffc00; valaddr_reg:x3; val_offset:122565*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122565*0 + 3*151*FLEN/8, x4, x1, x2)

inst_40856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffffffe00; valaddr_reg:x3; val_offset:122568*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122568*0 + 3*152*FLEN/8, x4, x1, x2)

inst_40857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffffffff00; valaddr_reg:x3; val_offset:122571*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122571*0 + 3*153*FLEN/8, x4, x1, x2)

inst_40858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffffffff80; valaddr_reg:x3; val_offset:122574*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122574*0 + 3*154*FLEN/8, x4, x1, x2)

inst_40859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffffffffc0; valaddr_reg:x3; val_offset:122577*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122577*0 + 3*155*FLEN/8, x4, x1, x2)

inst_40860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffffffffe0; valaddr_reg:x3; val_offset:122580*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122580*0 + 3*156*FLEN/8, x4, x1, x2)

inst_40861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffffffff0; valaddr_reg:x3; val_offset:122583*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122583*0 + 3*157*FLEN/8, x4, x1, x2)

inst_40862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffffffff8; valaddr_reg:x3; val_offset:122586*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122586*0 + 3*158*FLEN/8, x4, x1, x2)

inst_40863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffffffffc; valaddr_reg:x3; val_offset:122589*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122589*0 + 3*159*FLEN/8, x4, x1, x2)

inst_40864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833ffffffffffffe; valaddr_reg:x3; val_offset:122592*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122592*0 + 3*160*FLEN/8, x4, x1, x2)

inst_40865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9099330bb750b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f99099330bb750b; op2val:0x8000;
op3val:0x833fffffffffffff; valaddr_reg:x3; val_offset:122595*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122595*0 + 3*161*FLEN/8, x4, x1, x2)

inst_40866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000000000000; valaddr_reg:x3; val_offset:122598*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122598*0 + 3*162*FLEN/8, x4, x1, x2)

inst_40867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000000000001; valaddr_reg:x3; val_offset:122601*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122601*0 + 3*163*FLEN/8, x4, x1, x2)

inst_40868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000000000003; valaddr_reg:x3; val_offset:122604*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122604*0 + 3*164*FLEN/8, x4, x1, x2)

inst_40869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000000000007; valaddr_reg:x3; val_offset:122607*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122607*0 + 3*165*FLEN/8, x4, x1, x2)

inst_40870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000000000000f; valaddr_reg:x3; val_offset:122610*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122610*0 + 3*166*FLEN/8, x4, x1, x2)

inst_40871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000000000001f; valaddr_reg:x3; val_offset:122613*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122613*0 + 3*167*FLEN/8, x4, x1, x2)

inst_40872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000000000003f; valaddr_reg:x3; val_offset:122616*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122616*0 + 3*168*FLEN/8, x4, x1, x2)

inst_40873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000000000007f; valaddr_reg:x3; val_offset:122619*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122619*0 + 3*169*FLEN/8, x4, x1, x2)

inst_40874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400000000000ff; valaddr_reg:x3; val_offset:122622*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122622*0 + 3*170*FLEN/8, x4, x1, x2)

inst_40875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400000000001ff; valaddr_reg:x3; val_offset:122625*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122625*0 + 3*171*FLEN/8, x4, x1, x2)

inst_40876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400000000003ff; valaddr_reg:x3; val_offset:122628*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122628*0 + 3*172*FLEN/8, x4, x1, x2)

inst_40877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400000000007ff; valaddr_reg:x3; val_offset:122631*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122631*0 + 3*173*FLEN/8, x4, x1, x2)

inst_40878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000000000fff; valaddr_reg:x3; val_offset:122634*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122634*0 + 3*174*FLEN/8, x4, x1, x2)

inst_40879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000000001fff; valaddr_reg:x3; val_offset:122637*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122637*0 + 3*175*FLEN/8, x4, x1, x2)

inst_40880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000000003fff; valaddr_reg:x3; val_offset:122640*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122640*0 + 3*176*FLEN/8, x4, x1, x2)

inst_40881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000000007fff; valaddr_reg:x3; val_offset:122643*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122643*0 + 3*177*FLEN/8, x4, x1, x2)

inst_40882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000000000ffff; valaddr_reg:x3; val_offset:122646*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122646*0 + 3*178*FLEN/8, x4, x1, x2)

inst_40883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000000001ffff; valaddr_reg:x3; val_offset:122649*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122649*0 + 3*179*FLEN/8, x4, x1, x2)

inst_40884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000000003ffff; valaddr_reg:x3; val_offset:122652*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122652*0 + 3*180*FLEN/8, x4, x1, x2)

inst_40885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000000007ffff; valaddr_reg:x3; val_offset:122655*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122655*0 + 3*181*FLEN/8, x4, x1, x2)

inst_40886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400000000fffff; valaddr_reg:x3; val_offset:122658*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122658*0 + 3*182*FLEN/8, x4, x1, x2)

inst_40887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400000001fffff; valaddr_reg:x3; val_offset:122661*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122661*0 + 3*183*FLEN/8, x4, x1, x2)

inst_40888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400000003fffff; valaddr_reg:x3; val_offset:122664*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122664*0 + 3*184*FLEN/8, x4, x1, x2)

inst_40889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400000007fffff; valaddr_reg:x3; val_offset:122667*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122667*0 + 3*185*FLEN/8, x4, x1, x2)

inst_40890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000000ffffff; valaddr_reg:x3; val_offset:122670*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122670*0 + 3*186*FLEN/8, x4, x1, x2)

inst_40891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000001ffffff; valaddr_reg:x3; val_offset:122673*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122673*0 + 3*187*FLEN/8, x4, x1, x2)

inst_40892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000003ffffff; valaddr_reg:x3; val_offset:122676*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122676*0 + 3*188*FLEN/8, x4, x1, x2)

inst_40893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000007ffffff; valaddr_reg:x3; val_offset:122679*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122679*0 + 3*189*FLEN/8, x4, x1, x2)

inst_40894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000000fffffff; valaddr_reg:x3; val_offset:122682*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122682*0 + 3*190*FLEN/8, x4, x1, x2)

inst_40895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000001fffffff; valaddr_reg:x3; val_offset:122685*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122685*0 + 3*191*FLEN/8, x4, x1, x2)

inst_40896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000003fffffff; valaddr_reg:x3; val_offset:122688*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122688*0 + 3*192*FLEN/8, x4, x1, x2)

inst_40897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000007fffffff; valaddr_reg:x3; val_offset:122691*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122691*0 + 3*193*FLEN/8, x4, x1, x2)

inst_40898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400000ffffffff; valaddr_reg:x3; val_offset:122694*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122694*0 + 3*194*FLEN/8, x4, x1, x2)

inst_40899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400001ffffffff; valaddr_reg:x3; val_offset:122697*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122697*0 + 3*195*FLEN/8, x4, x1, x2)

inst_40900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400003ffffffff; valaddr_reg:x3; val_offset:122700*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122700*0 + 3*196*FLEN/8, x4, x1, x2)

inst_40901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400007ffffffff; valaddr_reg:x3; val_offset:122703*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122703*0 + 3*197*FLEN/8, x4, x1, x2)

inst_40902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840000fffffffff; valaddr_reg:x3; val_offset:122706*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122706*0 + 3*198*FLEN/8, x4, x1, x2)

inst_40903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840001fffffffff; valaddr_reg:x3; val_offset:122709*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122709*0 + 3*199*FLEN/8, x4, x1, x2)

inst_40904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840003fffffffff; valaddr_reg:x3; val_offset:122712*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122712*0 + 3*200*FLEN/8, x4, x1, x2)

inst_40905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840007fffffffff; valaddr_reg:x3; val_offset:122715*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122715*0 + 3*201*FLEN/8, x4, x1, x2)

inst_40906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384000ffffffffff; valaddr_reg:x3; val_offset:122718*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122718*0 + 3*202*FLEN/8, x4, x1, x2)

inst_40907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384001ffffffffff; valaddr_reg:x3; val_offset:122721*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122721*0 + 3*203*FLEN/8, x4, x1, x2)

inst_40908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384003ffffffffff; valaddr_reg:x3; val_offset:122724*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122724*0 + 3*204*FLEN/8, x4, x1, x2)

inst_40909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384007ffffffffff; valaddr_reg:x3; val_offset:122727*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122727*0 + 3*205*FLEN/8, x4, x1, x2)

inst_40910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38400fffffffffff; valaddr_reg:x3; val_offset:122730*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122730*0 + 3*206*FLEN/8, x4, x1, x2)

inst_40911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38401fffffffffff; valaddr_reg:x3; val_offset:122733*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122733*0 + 3*207*FLEN/8, x4, x1, x2)

inst_40912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38403fffffffffff; valaddr_reg:x3; val_offset:122736*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122736*0 + 3*208*FLEN/8, x4, x1, x2)

inst_40913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x38407fffffffffff; valaddr_reg:x3; val_offset:122739*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122739*0 + 3*209*FLEN/8, x4, x1, x2)

inst_40914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3840ffffffffffff; valaddr_reg:x3; val_offset:122742*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122742*0 + 3*210*FLEN/8, x4, x1, x2)

inst_40915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3841ffffffffffff; valaddr_reg:x3; val_offset:122745*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122745*0 + 3*211*FLEN/8, x4, x1, x2)

inst_40916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3843ffffffffffff; valaddr_reg:x3; val_offset:122748*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122748*0 + 3*212*FLEN/8, x4, x1, x2)

inst_40917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3847ffffffffffff; valaddr_reg:x3; val_offset:122751*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122751*0 + 3*213*FLEN/8, x4, x1, x2)

inst_40918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3848000000000000; valaddr_reg:x3; val_offset:122754*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122754*0 + 3*214*FLEN/8, x4, x1, x2)

inst_40919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384c000000000000; valaddr_reg:x3; val_offset:122757*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122757*0 + 3*215*FLEN/8, x4, x1, x2)

inst_40920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384e000000000000; valaddr_reg:x3; val_offset:122760*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122760*0 + 3*216*FLEN/8, x4, x1, x2)

inst_40921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384f000000000000; valaddr_reg:x3; val_offset:122763*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122763*0 + 3*217*FLEN/8, x4, x1, x2)

inst_40922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384f800000000000; valaddr_reg:x3; val_offset:122766*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122766*0 + 3*218*FLEN/8, x4, x1, x2)

inst_40923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fc00000000000; valaddr_reg:x3; val_offset:122769*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122769*0 + 3*219*FLEN/8, x4, x1, x2)

inst_40924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fe00000000000; valaddr_reg:x3; val_offset:122772*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122772*0 + 3*220*FLEN/8, x4, x1, x2)

inst_40925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ff00000000000; valaddr_reg:x3; val_offset:122775*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122775*0 + 3*221*FLEN/8, x4, x1, x2)

inst_40926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ff80000000000; valaddr_reg:x3; val_offset:122778*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122778*0 + 3*222*FLEN/8, x4, x1, x2)

inst_40927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffc0000000000; valaddr_reg:x3; val_offset:122781*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122781*0 + 3*223*FLEN/8, x4, x1, x2)

inst_40928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffe0000000000; valaddr_reg:x3; val_offset:122784*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122784*0 + 3*224*FLEN/8, x4, x1, x2)

inst_40929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fff0000000000; valaddr_reg:x3; val_offset:122787*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122787*0 + 3*225*FLEN/8, x4, x1, x2)

inst_40930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fff8000000000; valaddr_reg:x3; val_offset:122790*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122790*0 + 3*226*FLEN/8, x4, x1, x2)

inst_40931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffc000000000; valaddr_reg:x3; val_offset:122793*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122793*0 + 3*227*FLEN/8, x4, x1, x2)

inst_40932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffe000000000; valaddr_reg:x3; val_offset:122796*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122796*0 + 3*228*FLEN/8, x4, x1, x2)

inst_40933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffff000000000; valaddr_reg:x3; val_offset:122799*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122799*0 + 3*229*FLEN/8, x4, x1, x2)

inst_40934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffff800000000; valaddr_reg:x3; val_offset:122802*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122802*0 + 3*230*FLEN/8, x4, x1, x2)

inst_40935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffc00000000; valaddr_reg:x3; val_offset:122805*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122805*0 + 3*231*FLEN/8, x4, x1, x2)

inst_40936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffe00000000; valaddr_reg:x3; val_offset:122808*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122808*0 + 3*232*FLEN/8, x4, x1, x2)

inst_40937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffff00000000; valaddr_reg:x3; val_offset:122811*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122811*0 + 3*233*FLEN/8, x4, x1, x2)

inst_40938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffff80000000; valaddr_reg:x3; val_offset:122814*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122814*0 + 3*234*FLEN/8, x4, x1, x2)

inst_40939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffc0000000; valaddr_reg:x3; val_offset:122817*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122817*0 + 3*235*FLEN/8, x4, x1, x2)

inst_40940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffe0000000; valaddr_reg:x3; val_offset:122820*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122820*0 + 3*236*FLEN/8, x4, x1, x2)

inst_40941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffff0000000; valaddr_reg:x3; val_offset:122823*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122823*0 + 3*237*FLEN/8, x4, x1, x2)

inst_40942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffff8000000; valaddr_reg:x3; val_offset:122826*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122826*0 + 3*238*FLEN/8, x4, x1, x2)

inst_40943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffc000000; valaddr_reg:x3; val_offset:122829*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122829*0 + 3*239*FLEN/8, x4, x1, x2)

inst_40944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffe000000; valaddr_reg:x3; val_offset:122832*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122832*0 + 3*240*FLEN/8, x4, x1, x2)

inst_40945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffff000000; valaddr_reg:x3; val_offset:122835*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122835*0 + 3*241*FLEN/8, x4, x1, x2)

inst_40946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffff800000; valaddr_reg:x3; val_offset:122838*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122838*0 + 3*242*FLEN/8, x4, x1, x2)

inst_40947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffffc00000; valaddr_reg:x3; val_offset:122841*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122841*0 + 3*243*FLEN/8, x4, x1, x2)

inst_40948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffffe00000; valaddr_reg:x3; val_offset:122844*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122844*0 + 3*244*FLEN/8, x4, x1, x2)

inst_40949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffff00000; valaddr_reg:x3; val_offset:122847*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122847*0 + 3*245*FLEN/8, x4, x1, x2)

inst_40950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffff80000; valaddr_reg:x3; val_offset:122850*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122850*0 + 3*246*FLEN/8, x4, x1, x2)

inst_40951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffffc0000; valaddr_reg:x3; val_offset:122853*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122853*0 + 3*247*FLEN/8, x4, x1, x2)

inst_40952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffffe0000; valaddr_reg:x3; val_offset:122856*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122856*0 + 3*248*FLEN/8, x4, x1, x2)

inst_40953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffffff0000; valaddr_reg:x3; val_offset:122859*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122859*0 + 3*249*FLEN/8, x4, x1, x2)

inst_40954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffffff8000; valaddr_reg:x3; val_offset:122862*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122862*0 + 3*250*FLEN/8, x4, x1, x2)

inst_40955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffffffc000; valaddr_reg:x3; val_offset:122865*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122865*0 + 3*251*FLEN/8, x4, x1, x2)

inst_40956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffffffe000; valaddr_reg:x3; val_offset:122868*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122868*0 + 3*252*FLEN/8, x4, x1, x2)

inst_40957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffffff000; valaddr_reg:x3; val_offset:122871*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122871*0 + 3*253*FLEN/8, x4, x1, x2)

inst_40958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffffff800; valaddr_reg:x3; val_offset:122874*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122874*0 + 3*254*FLEN/8, x4, x1, x2)

inst_40959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffffffc00; valaddr_reg:x3; val_offset:122877*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122877*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_40960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffffffe00; valaddr_reg:x3; val_offset:122880*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122880*0 + 3*256*FLEN/8, x4, x1, x2)

inst_40961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffffffff00; valaddr_reg:x3; val_offset:122883*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122883*0 + 3*257*FLEN/8, x4, x1, x2)

inst_40962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffffffff80; valaddr_reg:x3; val_offset:122886*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122886*0 + 3*258*FLEN/8, x4, x1, x2)

inst_40963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffffffffc0; valaddr_reg:x3; val_offset:122889*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122889*0 + 3*259*FLEN/8, x4, x1, x2)

inst_40964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffffffffe0; valaddr_reg:x3; val_offset:122892*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122892*0 + 3*260*FLEN/8, x4, x1, x2)

inst_40965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffffffff0; valaddr_reg:x3; val_offset:122895*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122895*0 + 3*261*FLEN/8, x4, x1, x2)

inst_40966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffffffff8; valaddr_reg:x3; val_offset:122898*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122898*0 + 3*262*FLEN/8, x4, x1, x2)

inst_40967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffffffffc; valaddr_reg:x3; val_offset:122901*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122901*0 + 3*263*FLEN/8, x4, x1, x2)

inst_40968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384ffffffffffffe; valaddr_reg:x3; val_offset:122904*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122904*0 + 3*264*FLEN/8, x4, x1, x2)

inst_40969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x384fffffffffffff; valaddr_reg:x3; val_offset:122907*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122907*0 + 3*265*FLEN/8, x4, x1, x2)

inst_40970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:122910*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122910*0 + 3*266*FLEN/8, x4, x1, x2)

inst_40971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:122913*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122913*0 + 3*267*FLEN/8, x4, x1, x2)

inst_40972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:122916*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122916*0 + 3*268*FLEN/8, x4, x1, x2)

inst_40973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:122919*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122919*0 + 3*269*FLEN/8, x4, x1, x2)

inst_40974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:122922*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122922*0 + 3*270*FLEN/8, x4, x1, x2)

inst_40975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:122925*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122925*0 + 3*271*FLEN/8, x4, x1, x2)

inst_40976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:122928*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122928*0 + 3*272*FLEN/8, x4, x1, x2)

inst_40977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:122931*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122931*0 + 3*273*FLEN/8, x4, x1, x2)

inst_40978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:122934*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122934*0 + 3*274*FLEN/8, x4, x1, x2)

inst_40979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:122937*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122937*0 + 3*275*FLEN/8, x4, x1, x2)

inst_40980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:122940*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122940*0 + 3*276*FLEN/8, x4, x1, x2)

inst_40981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:122943*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122943*0 + 3*277*FLEN/8, x4, x1, x2)

inst_40982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:122946*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122946*0 + 3*278*FLEN/8, x4, x1, x2)

inst_40983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:122949*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122949*0 + 3*279*FLEN/8, x4, x1, x2)

inst_40984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:122952*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122952*0 + 3*280*FLEN/8, x4, x1, x2)

inst_40985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:122955*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122955*0 + 3*281*FLEN/8, x4, x1, x2)

inst_40986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:122958*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122958*0 + 3*282*FLEN/8, x4, x1, x2)

inst_40987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:122961*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122961*0 + 3*283*FLEN/8, x4, x1, x2)

inst_40988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:122964*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122964*0 + 3*284*FLEN/8, x4, x1, x2)

inst_40989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:122967*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122967*0 + 3*285*FLEN/8, x4, x1, x2)

inst_40990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:122970*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122970*0 + 3*286*FLEN/8, x4, x1, x2)

inst_40991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90aab519847d7 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x4722781ee1d9e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990aab519847d7; op2val:0x2044722781ee1d9e;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:122973*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122973*0 + 3*287*FLEN/8, x4, x1, x2)

inst_40992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:122976*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122976*0 + 3*288*FLEN/8, x4, x1, x2)

inst_40993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:122979*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122979*0 + 3*289*FLEN/8, x4, x1, x2)

inst_40994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:122982*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122982*0 + 3*290*FLEN/8, x4, x1, x2)

inst_40995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:122985*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122985*0 + 3*291*FLEN/8, x4, x1, x2)

inst_40996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:122988*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122988*0 + 3*292*FLEN/8, x4, x1, x2)

inst_40997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:122991*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122991*0 + 3*293*FLEN/8, x4, x1, x2)

inst_40998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:122994*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122994*0 + 3*294*FLEN/8, x4, x1, x2)

inst_40999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:122997*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 122997*0 + 3*295*FLEN/8, x4, x1, x2)

inst_41000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:123000*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123000*0 + 3*296*FLEN/8, x4, x1, x2)

inst_41001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:123003*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123003*0 + 3*297*FLEN/8, x4, x1, x2)

inst_41002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:123006*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123006*0 + 3*298*FLEN/8, x4, x1, x2)

inst_41003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:123009*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123009*0 + 3*299*FLEN/8, x4, x1, x2)

inst_41004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:123012*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123012*0 + 3*300*FLEN/8, x4, x1, x2)

inst_41005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:123015*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123015*0 + 3*301*FLEN/8, x4, x1, x2)

inst_41006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:123018*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123018*0 + 3*302*FLEN/8, x4, x1, x2)

inst_41007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:123021*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123021*0 + 3*303*FLEN/8, x4, x1, x2)

inst_41008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:123024*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123024*0 + 3*304*FLEN/8, x4, x1, x2)

inst_41009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:123027*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123027*0 + 3*305*FLEN/8, x4, x1, x2)

inst_41010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:123030*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123030*0 + 3*306*FLEN/8, x4, x1, x2)

inst_41011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:123033*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123033*0 + 3*307*FLEN/8, x4, x1, x2)

inst_41012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:123036*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123036*0 + 3*308*FLEN/8, x4, x1, x2)

inst_41013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:123039*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123039*0 + 3*309*FLEN/8, x4, x1, x2)

inst_41014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000000000000; valaddr_reg:x3; val_offset:123042*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123042*0 + 3*310*FLEN/8, x4, x1, x2)

inst_41015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000000000001; valaddr_reg:x3; val_offset:123045*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123045*0 + 3*311*FLEN/8, x4, x1, x2)

inst_41016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000000000003; valaddr_reg:x3; val_offset:123048*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123048*0 + 3*312*FLEN/8, x4, x1, x2)

inst_41017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000000000007; valaddr_reg:x3; val_offset:123051*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123051*0 + 3*313*FLEN/8, x4, x1, x2)

inst_41018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000000000000f; valaddr_reg:x3; val_offset:123054*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123054*0 + 3*314*FLEN/8, x4, x1, x2)

inst_41019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000000000001f; valaddr_reg:x3; val_offset:123057*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123057*0 + 3*315*FLEN/8, x4, x1, x2)

inst_41020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000000000003f; valaddr_reg:x3; val_offset:123060*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123060*0 + 3*316*FLEN/8, x4, x1, x2)

inst_41021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000000000007f; valaddr_reg:x3; val_offset:123063*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123063*0 + 3*317*FLEN/8, x4, x1, x2)

inst_41022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00000000000ff; valaddr_reg:x3; val_offset:123066*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123066*0 + 3*318*FLEN/8, x4, x1, x2)

inst_41023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00000000001ff; valaddr_reg:x3; val_offset:123069*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123069*0 + 3*319*FLEN/8, x4, x1, x2)

inst_41024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00000000003ff; valaddr_reg:x3; val_offset:123072*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123072*0 + 3*320*FLEN/8, x4, x1, x2)

inst_41025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00000000007ff; valaddr_reg:x3; val_offset:123075*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123075*0 + 3*321*FLEN/8, x4, x1, x2)

inst_41026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000000000fff; valaddr_reg:x3; val_offset:123078*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123078*0 + 3*322*FLEN/8, x4, x1, x2)

inst_41027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000000001fff; valaddr_reg:x3; val_offset:123081*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123081*0 + 3*323*FLEN/8, x4, x1, x2)

inst_41028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000000003fff; valaddr_reg:x3; val_offset:123084*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123084*0 + 3*324*FLEN/8, x4, x1, x2)

inst_41029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000000007fff; valaddr_reg:x3; val_offset:123087*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123087*0 + 3*325*FLEN/8, x4, x1, x2)

inst_41030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000000000ffff; valaddr_reg:x3; val_offset:123090*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123090*0 + 3*326*FLEN/8, x4, x1, x2)

inst_41031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000000001ffff; valaddr_reg:x3; val_offset:123093*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123093*0 + 3*327*FLEN/8, x4, x1, x2)

inst_41032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000000003ffff; valaddr_reg:x3; val_offset:123096*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123096*0 + 3*328*FLEN/8, x4, x1, x2)

inst_41033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000000007ffff; valaddr_reg:x3; val_offset:123099*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123099*0 + 3*329*FLEN/8, x4, x1, x2)

inst_41034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00000000fffff; valaddr_reg:x3; val_offset:123102*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123102*0 + 3*330*FLEN/8, x4, x1, x2)

inst_41035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00000001fffff; valaddr_reg:x3; val_offset:123105*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123105*0 + 3*331*FLEN/8, x4, x1, x2)

inst_41036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00000003fffff; valaddr_reg:x3; val_offset:123108*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123108*0 + 3*332*FLEN/8, x4, x1, x2)

inst_41037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00000007fffff; valaddr_reg:x3; val_offset:123111*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123111*0 + 3*333*FLEN/8, x4, x1, x2)

inst_41038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000000ffffff; valaddr_reg:x3; val_offset:123114*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123114*0 + 3*334*FLEN/8, x4, x1, x2)

inst_41039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000001ffffff; valaddr_reg:x3; val_offset:123117*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123117*0 + 3*335*FLEN/8, x4, x1, x2)

inst_41040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000003ffffff; valaddr_reg:x3; val_offset:123120*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123120*0 + 3*336*FLEN/8, x4, x1, x2)

inst_41041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000007ffffff; valaddr_reg:x3; val_offset:123123*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123123*0 + 3*337*FLEN/8, x4, x1, x2)

inst_41042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000000fffffff; valaddr_reg:x3; val_offset:123126*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123126*0 + 3*338*FLEN/8, x4, x1, x2)

inst_41043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000001fffffff; valaddr_reg:x3; val_offset:123129*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123129*0 + 3*339*FLEN/8, x4, x1, x2)

inst_41044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000003fffffff; valaddr_reg:x3; val_offset:123132*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123132*0 + 3*340*FLEN/8, x4, x1, x2)

inst_41045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000007fffffff; valaddr_reg:x3; val_offset:123135*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123135*0 + 3*341*FLEN/8, x4, x1, x2)

inst_41046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00000ffffffff; valaddr_reg:x3; val_offset:123138*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123138*0 + 3*342*FLEN/8, x4, x1, x2)

inst_41047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00001ffffffff; valaddr_reg:x3; val_offset:123141*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123141*0 + 3*343*FLEN/8, x4, x1, x2)

inst_41048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00003ffffffff; valaddr_reg:x3; val_offset:123144*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123144*0 + 3*344*FLEN/8, x4, x1, x2)

inst_41049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00007ffffffff; valaddr_reg:x3; val_offset:123147*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123147*0 + 3*345*FLEN/8, x4, x1, x2)

inst_41050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0000fffffffff; valaddr_reg:x3; val_offset:123150*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123150*0 + 3*346*FLEN/8, x4, x1, x2)

inst_41051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0001fffffffff; valaddr_reg:x3; val_offset:123153*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123153*0 + 3*347*FLEN/8, x4, x1, x2)

inst_41052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0003fffffffff; valaddr_reg:x3; val_offset:123156*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123156*0 + 3*348*FLEN/8, x4, x1, x2)

inst_41053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0007fffffffff; valaddr_reg:x3; val_offset:123159*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123159*0 + 3*349*FLEN/8, x4, x1, x2)

inst_41054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d000ffffffffff; valaddr_reg:x3; val_offset:123162*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123162*0 + 3*350*FLEN/8, x4, x1, x2)

inst_41055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d001ffffffffff; valaddr_reg:x3; val_offset:123165*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123165*0 + 3*351*FLEN/8, x4, x1, x2)

inst_41056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d003ffffffffff; valaddr_reg:x3; val_offset:123168*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123168*0 + 3*352*FLEN/8, x4, x1, x2)

inst_41057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d007ffffffffff; valaddr_reg:x3; val_offset:123171*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123171*0 + 3*353*FLEN/8, x4, x1, x2)

inst_41058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d00fffffffffff; valaddr_reg:x3; val_offset:123174*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123174*0 + 3*354*FLEN/8, x4, x1, x2)

inst_41059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d01fffffffffff; valaddr_reg:x3; val_offset:123177*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123177*0 + 3*355*FLEN/8, x4, x1, x2)

inst_41060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d03fffffffffff; valaddr_reg:x3; val_offset:123180*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123180*0 + 3*356*FLEN/8, x4, x1, x2)

inst_41061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d07fffffffffff; valaddr_reg:x3; val_offset:123183*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123183*0 + 3*357*FLEN/8, x4, x1, x2)

inst_41062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d0ffffffffffff; valaddr_reg:x3; val_offset:123186*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123186*0 + 3*358*FLEN/8, x4, x1, x2)

inst_41063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d1ffffffffffff; valaddr_reg:x3; val_offset:123189*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123189*0 + 3*359*FLEN/8, x4, x1, x2)

inst_41064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d3ffffffffffff; valaddr_reg:x3; val_offset:123192*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123192*0 + 3*360*FLEN/8, x4, x1, x2)

inst_41065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d7ffffffffffff; valaddr_reg:x3; val_offset:123195*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123195*0 + 3*361*FLEN/8, x4, x1, x2)

inst_41066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80d8000000000000; valaddr_reg:x3; val_offset:123198*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123198*0 + 3*362*FLEN/8, x4, x1, x2)

inst_41067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dc000000000000; valaddr_reg:x3; val_offset:123201*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123201*0 + 3*363*FLEN/8, x4, x1, x2)

inst_41068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80de000000000000; valaddr_reg:x3; val_offset:123204*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123204*0 + 3*364*FLEN/8, x4, x1, x2)

inst_41069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80df000000000000; valaddr_reg:x3; val_offset:123207*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123207*0 + 3*365*FLEN/8, x4, x1, x2)

inst_41070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80df800000000000; valaddr_reg:x3; val_offset:123210*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123210*0 + 3*366*FLEN/8, x4, x1, x2)

inst_41071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfc00000000000; valaddr_reg:x3; val_offset:123213*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123213*0 + 3*367*FLEN/8, x4, x1, x2)

inst_41072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfe00000000000; valaddr_reg:x3; val_offset:123216*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123216*0 + 3*368*FLEN/8, x4, x1, x2)

inst_41073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dff00000000000; valaddr_reg:x3; val_offset:123219*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123219*0 + 3*369*FLEN/8, x4, x1, x2)

inst_41074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dff80000000000; valaddr_reg:x3; val_offset:123222*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123222*0 + 3*370*FLEN/8, x4, x1, x2)

inst_41075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffc0000000000; valaddr_reg:x3; val_offset:123225*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123225*0 + 3*371*FLEN/8, x4, x1, x2)

inst_41076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffe0000000000; valaddr_reg:x3; val_offset:123228*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123228*0 + 3*372*FLEN/8, x4, x1, x2)

inst_41077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfff0000000000; valaddr_reg:x3; val_offset:123231*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123231*0 + 3*373*FLEN/8, x4, x1, x2)

inst_41078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfff8000000000; valaddr_reg:x3; val_offset:123234*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123234*0 + 3*374*FLEN/8, x4, x1, x2)

inst_41079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffc000000000; valaddr_reg:x3; val_offset:123237*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123237*0 + 3*375*FLEN/8, x4, x1, x2)

inst_41080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffe000000000; valaddr_reg:x3; val_offset:123240*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123240*0 + 3*376*FLEN/8, x4, x1, x2)

inst_41081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffff000000000; valaddr_reg:x3; val_offset:123243*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123243*0 + 3*377*FLEN/8, x4, x1, x2)

inst_41082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffff800000000; valaddr_reg:x3; val_offset:123246*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123246*0 + 3*378*FLEN/8, x4, x1, x2)

inst_41083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffc00000000; valaddr_reg:x3; val_offset:123249*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123249*0 + 3*379*FLEN/8, x4, x1, x2)

inst_41084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffe00000000; valaddr_reg:x3; val_offset:123252*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123252*0 + 3*380*FLEN/8, x4, x1, x2)

inst_41085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffff00000000; valaddr_reg:x3; val_offset:123255*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123255*0 + 3*381*FLEN/8, x4, x1, x2)

inst_41086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffff80000000; valaddr_reg:x3; val_offset:123258*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123258*0 + 3*382*FLEN/8, x4, x1, x2)

inst_41087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffc0000000; valaddr_reg:x3; val_offset:123261*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123261*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_41088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffe0000000; valaddr_reg:x3; val_offset:123264*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123264*0 + 3*384*FLEN/8, x4, x1, x2)

inst_41089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffff0000000; valaddr_reg:x3; val_offset:123267*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123267*0 + 3*385*FLEN/8, x4, x1, x2)

inst_41090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffff8000000; valaddr_reg:x3; val_offset:123270*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123270*0 + 3*386*FLEN/8, x4, x1, x2)

inst_41091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffc000000; valaddr_reg:x3; val_offset:123273*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123273*0 + 3*387*FLEN/8, x4, x1, x2)

inst_41092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffe000000; valaddr_reg:x3; val_offset:123276*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123276*0 + 3*388*FLEN/8, x4, x1, x2)

inst_41093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffff000000; valaddr_reg:x3; val_offset:123279*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123279*0 + 3*389*FLEN/8, x4, x1, x2)

inst_41094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffff800000; valaddr_reg:x3; val_offset:123282*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123282*0 + 3*390*FLEN/8, x4, x1, x2)

inst_41095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffffc00000; valaddr_reg:x3; val_offset:123285*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123285*0 + 3*391*FLEN/8, x4, x1, x2)

inst_41096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffffe00000; valaddr_reg:x3; val_offset:123288*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123288*0 + 3*392*FLEN/8, x4, x1, x2)

inst_41097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffff00000; valaddr_reg:x3; val_offset:123291*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123291*0 + 3*393*FLEN/8, x4, x1, x2)

inst_41098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffff80000; valaddr_reg:x3; val_offset:123294*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123294*0 + 3*394*FLEN/8, x4, x1, x2)

inst_41099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffffc0000; valaddr_reg:x3; val_offset:123297*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123297*0 + 3*395*FLEN/8, x4, x1, x2)

inst_41100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffffe0000; valaddr_reg:x3; val_offset:123300*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123300*0 + 3*396*FLEN/8, x4, x1, x2)

inst_41101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffffff0000; valaddr_reg:x3; val_offset:123303*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123303*0 + 3*397*FLEN/8, x4, x1, x2)

inst_41102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffffff8000; valaddr_reg:x3; val_offset:123306*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123306*0 + 3*398*FLEN/8, x4, x1, x2)

inst_41103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffffffc000; valaddr_reg:x3; val_offset:123309*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123309*0 + 3*399*FLEN/8, x4, x1, x2)

inst_41104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffffffe000; valaddr_reg:x3; val_offset:123312*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123312*0 + 3*400*FLEN/8, x4, x1, x2)

inst_41105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffffff000; valaddr_reg:x3; val_offset:123315*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123315*0 + 3*401*FLEN/8, x4, x1, x2)

inst_41106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffffff800; valaddr_reg:x3; val_offset:123318*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123318*0 + 3*402*FLEN/8, x4, x1, x2)

inst_41107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffffffc00; valaddr_reg:x3; val_offset:123321*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123321*0 + 3*403*FLEN/8, x4, x1, x2)

inst_41108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffffffe00; valaddr_reg:x3; val_offset:123324*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123324*0 + 3*404*FLEN/8, x4, x1, x2)

inst_41109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffffffff00; valaddr_reg:x3; val_offset:123327*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123327*0 + 3*405*FLEN/8, x4, x1, x2)

inst_41110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffffffff80; valaddr_reg:x3; val_offset:123330*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123330*0 + 3*406*FLEN/8, x4, x1, x2)

inst_41111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffffffffc0; valaddr_reg:x3; val_offset:123333*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123333*0 + 3*407*FLEN/8, x4, x1, x2)

inst_41112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffffffffe0; valaddr_reg:x3; val_offset:123336*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123336*0 + 3*408*FLEN/8, x4, x1, x2)

inst_41113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffffffff0; valaddr_reg:x3; val_offset:123339*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123339*0 + 3*409*FLEN/8, x4, x1, x2)

inst_41114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffffffff8; valaddr_reg:x3; val_offset:123342*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123342*0 + 3*410*FLEN/8, x4, x1, x2)

inst_41115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffffffffc; valaddr_reg:x3; val_offset:123345*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123345*0 + 3*411*FLEN/8, x4, x1, x2)

inst_41116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dffffffffffffe; valaddr_reg:x3; val_offset:123348*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123348*0 + 3*412*FLEN/8, x4, x1, x2)

inst_41117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x90afe96b3f2ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f990afe96b3f2ad; op2val:0x8000;
op3val:0x80dfffffffffffff; valaddr_reg:x3; val_offset:123351*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123351*0 + 3*413*FLEN/8, x4, x1, x2)

inst_41118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:123354*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123354*0 + 3*414*FLEN/8, x4, x1, x2)

inst_41119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:123357*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123357*0 + 3*415*FLEN/8, x4, x1, x2)

inst_41120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:123360*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123360*0 + 3*416*FLEN/8, x4, x1, x2)

inst_41121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:123363*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123363*0 + 3*417*FLEN/8, x4, x1, x2)

inst_41122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:123366*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123366*0 + 3*418*FLEN/8, x4, x1, x2)

inst_41123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:123369*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123369*0 + 3*419*FLEN/8, x4, x1, x2)

inst_41124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:123372*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123372*0 + 3*420*FLEN/8, x4, x1, x2)

inst_41125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:123375*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123375*0 + 3*421*FLEN/8, x4, x1, x2)

inst_41126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:123378*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123378*0 + 3*422*FLEN/8, x4, x1, x2)

inst_41127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:123381*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123381*0 + 3*423*FLEN/8, x4, x1, x2)

inst_41128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:123384*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123384*0 + 3*424*FLEN/8, x4, x1, x2)

inst_41129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:123387*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123387*0 + 3*425*FLEN/8, x4, x1, x2)

inst_41130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:123390*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123390*0 + 3*426*FLEN/8, x4, x1, x2)

inst_41131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:123393*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123393*0 + 3*427*FLEN/8, x4, x1, x2)

inst_41132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:123396*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123396*0 + 3*428*FLEN/8, x4, x1, x2)

inst_41133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:123399*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123399*0 + 3*429*FLEN/8, x4, x1, x2)

inst_41134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:123402*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123402*0 + 3*430*FLEN/8, x4, x1, x2)

inst_41135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:123405*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123405*0 + 3*431*FLEN/8, x4, x1, x2)

inst_41136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:123408*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123408*0 + 3*432*FLEN/8, x4, x1, x2)

inst_41137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:123411*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123411*0 + 3*433*FLEN/8, x4, x1, x2)

inst_41138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:123414*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123414*0 + 3*434*FLEN/8, x4, x1, x2)

inst_41139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:123417*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123417*0 + 3*435*FLEN/8, x4, x1, x2)

inst_41140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000000000000; valaddr_reg:x3; val_offset:123420*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123420*0 + 3*436*FLEN/8, x4, x1, x2)

inst_41141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000000000001; valaddr_reg:x3; val_offset:123423*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123423*0 + 3*437*FLEN/8, x4, x1, x2)

inst_41142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000000000003; valaddr_reg:x3; val_offset:123426*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123426*0 + 3*438*FLEN/8, x4, x1, x2)

inst_41143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000000000007; valaddr_reg:x3; val_offset:123429*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123429*0 + 3*439*FLEN/8, x4, x1, x2)

inst_41144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000000000000f; valaddr_reg:x3; val_offset:123432*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123432*0 + 3*440*FLEN/8, x4, x1, x2)

inst_41145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000000000001f; valaddr_reg:x3; val_offset:123435*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123435*0 + 3*441*FLEN/8, x4, x1, x2)

inst_41146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000000000003f; valaddr_reg:x3; val_offset:123438*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123438*0 + 3*442*FLEN/8, x4, x1, x2)

inst_41147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000000000007f; valaddr_reg:x3; val_offset:123441*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123441*0 + 3*443*FLEN/8, x4, x1, x2)

inst_41148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500000000000ff; valaddr_reg:x3; val_offset:123444*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123444*0 + 3*444*FLEN/8, x4, x1, x2)

inst_41149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500000000001ff; valaddr_reg:x3; val_offset:123447*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123447*0 + 3*445*FLEN/8, x4, x1, x2)

inst_41150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500000000003ff; valaddr_reg:x3; val_offset:123450*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123450*0 + 3*446*FLEN/8, x4, x1, x2)

inst_41151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500000000007ff; valaddr_reg:x3; val_offset:123453*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123453*0 + 3*447*FLEN/8, x4, x1, x2)

inst_41152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000000000fff; valaddr_reg:x3; val_offset:123456*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123456*0 + 3*448*FLEN/8, x4, x1, x2)

inst_41153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000000001fff; valaddr_reg:x3; val_offset:123459*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123459*0 + 3*449*FLEN/8, x4, x1, x2)

inst_41154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000000003fff; valaddr_reg:x3; val_offset:123462*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123462*0 + 3*450*FLEN/8, x4, x1, x2)

inst_41155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000000007fff; valaddr_reg:x3; val_offset:123465*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123465*0 + 3*451*FLEN/8, x4, x1, x2)

inst_41156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000000000ffff; valaddr_reg:x3; val_offset:123468*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123468*0 + 3*452*FLEN/8, x4, x1, x2)

inst_41157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000000001ffff; valaddr_reg:x3; val_offset:123471*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123471*0 + 3*453*FLEN/8, x4, x1, x2)

inst_41158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000000003ffff; valaddr_reg:x3; val_offset:123474*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123474*0 + 3*454*FLEN/8, x4, x1, x2)

inst_41159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000000007ffff; valaddr_reg:x3; val_offset:123477*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123477*0 + 3*455*FLEN/8, x4, x1, x2)

inst_41160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500000000fffff; valaddr_reg:x3; val_offset:123480*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123480*0 + 3*456*FLEN/8, x4, x1, x2)

inst_41161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500000001fffff; valaddr_reg:x3; val_offset:123483*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123483*0 + 3*457*FLEN/8, x4, x1, x2)

inst_41162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500000003fffff; valaddr_reg:x3; val_offset:123486*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123486*0 + 3*458*FLEN/8, x4, x1, x2)

inst_41163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500000007fffff; valaddr_reg:x3; val_offset:123489*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123489*0 + 3*459*FLEN/8, x4, x1, x2)

inst_41164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000000ffffff; valaddr_reg:x3; val_offset:123492*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123492*0 + 3*460*FLEN/8, x4, x1, x2)

inst_41165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000001ffffff; valaddr_reg:x3; val_offset:123495*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123495*0 + 3*461*FLEN/8, x4, x1, x2)

inst_41166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000003ffffff; valaddr_reg:x3; val_offset:123498*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123498*0 + 3*462*FLEN/8, x4, x1, x2)

inst_41167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000007ffffff; valaddr_reg:x3; val_offset:123501*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123501*0 + 3*463*FLEN/8, x4, x1, x2)

inst_41168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000000fffffff; valaddr_reg:x3; val_offset:123504*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123504*0 + 3*464*FLEN/8, x4, x1, x2)

inst_41169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000001fffffff; valaddr_reg:x3; val_offset:123507*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123507*0 + 3*465*FLEN/8, x4, x1, x2)

inst_41170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000003fffffff; valaddr_reg:x3; val_offset:123510*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123510*0 + 3*466*FLEN/8, x4, x1, x2)

inst_41171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000007fffffff; valaddr_reg:x3; val_offset:123513*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123513*0 + 3*467*FLEN/8, x4, x1, x2)

inst_41172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500000ffffffff; valaddr_reg:x3; val_offset:123516*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123516*0 + 3*468*FLEN/8, x4, x1, x2)

inst_41173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500001ffffffff; valaddr_reg:x3; val_offset:123519*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123519*0 + 3*469*FLEN/8, x4, x1, x2)

inst_41174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500003ffffffff; valaddr_reg:x3; val_offset:123522*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123522*0 + 3*470*FLEN/8, x4, x1, x2)

inst_41175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500007ffffffff; valaddr_reg:x3; val_offset:123525*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123525*0 + 3*471*FLEN/8, x4, x1, x2)

inst_41176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350000fffffffff; valaddr_reg:x3; val_offset:123528*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123528*0 + 3*472*FLEN/8, x4, x1, x2)

inst_41177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350001fffffffff; valaddr_reg:x3; val_offset:123531*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123531*0 + 3*473*FLEN/8, x4, x1, x2)

inst_41178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350003fffffffff; valaddr_reg:x3; val_offset:123534*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123534*0 + 3*474*FLEN/8, x4, x1, x2)

inst_41179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350007fffffffff; valaddr_reg:x3; val_offset:123537*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123537*0 + 3*475*FLEN/8, x4, x1, x2)

inst_41180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35000ffffffffff; valaddr_reg:x3; val_offset:123540*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123540*0 + 3*476*FLEN/8, x4, x1, x2)

inst_41181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35001ffffffffff; valaddr_reg:x3; val_offset:123543*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123543*0 + 3*477*FLEN/8, x4, x1, x2)

inst_41182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35003ffffffffff; valaddr_reg:x3; val_offset:123546*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123546*0 + 3*478*FLEN/8, x4, x1, x2)

inst_41183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35007ffffffffff; valaddr_reg:x3; val_offset:123549*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123549*0 + 3*479*FLEN/8, x4, x1, x2)

inst_41184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3500fffffffffff; valaddr_reg:x3; val_offset:123552*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123552*0 + 3*480*FLEN/8, x4, x1, x2)

inst_41185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3501fffffffffff; valaddr_reg:x3; val_offset:123555*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123555*0 + 3*481*FLEN/8, x4, x1, x2)

inst_41186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3503fffffffffff; valaddr_reg:x3; val_offset:123558*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123558*0 + 3*482*FLEN/8, x4, x1, x2)

inst_41187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x3507fffffffffff; valaddr_reg:x3; val_offset:123561*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123561*0 + 3*483*FLEN/8, x4, x1, x2)

inst_41188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x350ffffffffffff; valaddr_reg:x3; val_offset:123564*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123564*0 + 3*484*FLEN/8, x4, x1, x2)

inst_41189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x351ffffffffffff; valaddr_reg:x3; val_offset:123567*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123567*0 + 3*485*FLEN/8, x4, x1, x2)

inst_41190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x353ffffffffffff; valaddr_reg:x3; val_offset:123570*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123570*0 + 3*486*FLEN/8, x4, x1, x2)

inst_41191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x357ffffffffffff; valaddr_reg:x3; val_offset:123573*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123573*0 + 3*487*FLEN/8, x4, x1, x2)

inst_41192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x358000000000000; valaddr_reg:x3; val_offset:123576*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123576*0 + 3*488*FLEN/8, x4, x1, x2)

inst_41193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35c000000000000; valaddr_reg:x3; val_offset:123579*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123579*0 + 3*489*FLEN/8, x4, x1, x2)

inst_41194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35e000000000000; valaddr_reg:x3; val_offset:123582*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123582*0 + 3*490*FLEN/8, x4, x1, x2)

inst_41195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35f000000000000; valaddr_reg:x3; val_offset:123585*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123585*0 + 3*491*FLEN/8, x4, x1, x2)

inst_41196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35f800000000000; valaddr_reg:x3; val_offset:123588*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123588*0 + 3*492*FLEN/8, x4, x1, x2)

inst_41197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fc00000000000; valaddr_reg:x3; val_offset:123591*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123591*0 + 3*493*FLEN/8, x4, x1, x2)

inst_41198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fe00000000000; valaddr_reg:x3; val_offset:123594*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123594*0 + 3*494*FLEN/8, x4, x1, x2)

inst_41199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ff00000000000; valaddr_reg:x3; val_offset:123597*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123597*0 + 3*495*FLEN/8, x4, x1, x2)

inst_41200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ff80000000000; valaddr_reg:x3; val_offset:123600*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123600*0 + 3*496*FLEN/8, x4, x1, x2)

inst_41201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffc0000000000; valaddr_reg:x3; val_offset:123603*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123603*0 + 3*497*FLEN/8, x4, x1, x2)

inst_41202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffe0000000000; valaddr_reg:x3; val_offset:123606*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123606*0 + 3*498*FLEN/8, x4, x1, x2)

inst_41203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fff0000000000; valaddr_reg:x3; val_offset:123609*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123609*0 + 3*499*FLEN/8, x4, x1, x2)

inst_41204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fff8000000000; valaddr_reg:x3; val_offset:123612*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123612*0 + 3*500*FLEN/8, x4, x1, x2)

inst_41205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffc000000000; valaddr_reg:x3; val_offset:123615*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123615*0 + 3*501*FLEN/8, x4, x1, x2)

inst_41206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffe000000000; valaddr_reg:x3; val_offset:123618*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123618*0 + 3*502*FLEN/8, x4, x1, x2)

inst_41207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffff000000000; valaddr_reg:x3; val_offset:123621*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123621*0 + 3*503*FLEN/8, x4, x1, x2)

inst_41208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffff800000000; valaddr_reg:x3; val_offset:123624*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123624*0 + 3*504*FLEN/8, x4, x1, x2)

inst_41209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffc00000000; valaddr_reg:x3; val_offset:123627*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123627*0 + 3*505*FLEN/8, x4, x1, x2)

inst_41210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffe00000000; valaddr_reg:x3; val_offset:123630*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123630*0 + 3*506*FLEN/8, x4, x1, x2)

inst_41211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffff00000000; valaddr_reg:x3; val_offset:123633*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123633*0 + 3*507*FLEN/8, x4, x1, x2)

inst_41212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffff80000000; valaddr_reg:x3; val_offset:123636*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123636*0 + 3*508*FLEN/8, x4, x1, x2)

inst_41213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffc0000000; valaddr_reg:x3; val_offset:123639*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123639*0 + 3*509*FLEN/8, x4, x1, x2)

inst_41214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffe0000000; valaddr_reg:x3; val_offset:123642*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123642*0 + 3*510*FLEN/8, x4, x1, x2)

inst_41215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffff0000000; valaddr_reg:x3; val_offset:123645*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123645*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_41216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffff8000000; valaddr_reg:x3; val_offset:123648*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123648*0 + 3*512*FLEN/8, x4, x1, x2)

inst_41217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffc000000; valaddr_reg:x3; val_offset:123651*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123651*0 + 3*513*FLEN/8, x4, x1, x2)

inst_41218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffe000000; valaddr_reg:x3; val_offset:123654*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123654*0 + 3*514*FLEN/8, x4, x1, x2)

inst_41219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffff000000; valaddr_reg:x3; val_offset:123657*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123657*0 + 3*515*FLEN/8, x4, x1, x2)

inst_41220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffff800000; valaddr_reg:x3; val_offset:123660*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123660*0 + 3*516*FLEN/8, x4, x1, x2)

inst_41221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffffc00000; valaddr_reg:x3; val_offset:123663*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123663*0 + 3*517*FLEN/8, x4, x1, x2)

inst_41222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffffe00000; valaddr_reg:x3; val_offset:123666*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123666*0 + 3*518*FLEN/8, x4, x1, x2)

inst_41223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffff00000; valaddr_reg:x3; val_offset:123669*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123669*0 + 3*519*FLEN/8, x4, x1, x2)

inst_41224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffff80000; valaddr_reg:x3; val_offset:123672*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123672*0 + 3*520*FLEN/8, x4, x1, x2)

inst_41225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffffc0000; valaddr_reg:x3; val_offset:123675*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123675*0 + 3*521*FLEN/8, x4, x1, x2)

inst_41226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffffe0000; valaddr_reg:x3; val_offset:123678*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123678*0 + 3*522*FLEN/8, x4, x1, x2)

inst_41227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffffff0000; valaddr_reg:x3; val_offset:123681*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123681*0 + 3*523*FLEN/8, x4, x1, x2)

inst_41228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffffff8000; valaddr_reg:x3; val_offset:123684*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123684*0 + 3*524*FLEN/8, x4, x1, x2)

inst_41229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffffffc000; valaddr_reg:x3; val_offset:123687*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123687*0 + 3*525*FLEN/8, x4, x1, x2)

inst_41230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffffffe000; valaddr_reg:x3; val_offset:123690*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123690*0 + 3*526*FLEN/8, x4, x1, x2)

inst_41231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffffff000; valaddr_reg:x3; val_offset:123693*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123693*0 + 3*527*FLEN/8, x4, x1, x2)

inst_41232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffffff800; valaddr_reg:x3; val_offset:123696*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123696*0 + 3*528*FLEN/8, x4, x1, x2)

inst_41233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffffffc00; valaddr_reg:x3; val_offset:123699*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123699*0 + 3*529*FLEN/8, x4, x1, x2)

inst_41234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffffffe00; valaddr_reg:x3; val_offset:123702*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123702*0 + 3*530*FLEN/8, x4, x1, x2)

inst_41235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffffffff00; valaddr_reg:x3; val_offset:123705*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123705*0 + 3*531*FLEN/8, x4, x1, x2)

inst_41236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffffffff80; valaddr_reg:x3; val_offset:123708*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123708*0 + 3*532*FLEN/8, x4, x1, x2)

inst_41237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffffffffc0; valaddr_reg:x3; val_offset:123711*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123711*0 + 3*533*FLEN/8, x4, x1, x2)

inst_41238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffffffffe0; valaddr_reg:x3; val_offset:123714*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123714*0 + 3*534*FLEN/8, x4, x1, x2)

inst_41239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffffffff0; valaddr_reg:x3; val_offset:123717*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123717*0 + 3*535*FLEN/8, x4, x1, x2)

inst_41240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffffffff8; valaddr_reg:x3; val_offset:123720*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123720*0 + 3*536*FLEN/8, x4, x1, x2)

inst_41241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffffffffc; valaddr_reg:x3; val_offset:123723*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123723*0 + 3*537*FLEN/8, x4, x1, x2)

inst_41242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35ffffffffffffe; valaddr_reg:x3; val_offset:123726*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123726*0 + 3*538*FLEN/8, x4, x1, x2)

inst_41243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x916f5db8e7fbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9916f5db8e7fbf; op2val:0x0;
op3val:0x35fffffffffffff; valaddr_reg:x3; val_offset:123729*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123729*0 + 3*539*FLEN/8, x4, x1, x2)

inst_41244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:123732*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123732*0 + 3*540*FLEN/8, x4, x1, x2)

inst_41245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:123735*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123735*0 + 3*541*FLEN/8, x4, x1, x2)

inst_41246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:123738*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123738*0 + 3*542*FLEN/8, x4, x1, x2)

inst_41247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:123741*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123741*0 + 3*543*FLEN/8, x4, x1, x2)

inst_41248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:123744*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123744*0 + 3*544*FLEN/8, x4, x1, x2)

inst_41249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:123747*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123747*0 + 3*545*FLEN/8, x4, x1, x2)

inst_41250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:123750*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123750*0 + 3*546*FLEN/8, x4, x1, x2)

inst_41251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:123753*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123753*0 + 3*547*FLEN/8, x4, x1, x2)

inst_41252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:123756*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123756*0 + 3*548*FLEN/8, x4, x1, x2)

inst_41253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:123759*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123759*0 + 3*549*FLEN/8, x4, x1, x2)

inst_41254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:123762*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123762*0 + 3*550*FLEN/8, x4, x1, x2)

inst_41255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:123765*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123765*0 + 3*551*FLEN/8, x4, x1, x2)

inst_41256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:123768*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123768*0 + 3*552*FLEN/8, x4, x1, x2)

inst_41257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:123771*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123771*0 + 3*553*FLEN/8, x4, x1, x2)

inst_41258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:123774*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123774*0 + 3*554*FLEN/8, x4, x1, x2)

inst_41259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:123777*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123777*0 + 3*555*FLEN/8, x4, x1, x2)

inst_41260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:123780*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123780*0 + 3*556*FLEN/8, x4, x1, x2)

inst_41261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:123783*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123783*0 + 3*557*FLEN/8, x4, x1, x2)

inst_41262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:123786*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123786*0 + 3*558*FLEN/8, x4, x1, x2)

inst_41263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:123789*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123789*0 + 3*559*FLEN/8, x4, x1, x2)

inst_41264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:123792*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123792*0 + 3*560*FLEN/8, x4, x1, x2)

inst_41265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:123795*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123795*0 + 3*561*FLEN/8, x4, x1, x2)

inst_41266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000000000000; valaddr_reg:x3; val_offset:123798*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123798*0 + 3*562*FLEN/8, x4, x1, x2)

inst_41267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000000000001; valaddr_reg:x3; val_offset:123801*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123801*0 + 3*563*FLEN/8, x4, x1, x2)

inst_41268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000000000003; valaddr_reg:x3; val_offset:123804*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123804*0 + 3*564*FLEN/8, x4, x1, x2)

inst_41269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000000000007; valaddr_reg:x3; val_offset:123807*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123807*0 + 3*565*FLEN/8, x4, x1, x2)

inst_41270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000000000000f; valaddr_reg:x3; val_offset:123810*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123810*0 + 3*566*FLEN/8, x4, x1, x2)

inst_41271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000000000001f; valaddr_reg:x3; val_offset:123813*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123813*0 + 3*567*FLEN/8, x4, x1, x2)

inst_41272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000000000003f; valaddr_reg:x3; val_offset:123816*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123816*0 + 3*568*FLEN/8, x4, x1, x2)

inst_41273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000000000007f; valaddr_reg:x3; val_offset:123819*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123819*0 + 3*569*FLEN/8, x4, x1, x2)

inst_41274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200000000000ff; valaddr_reg:x3; val_offset:123822*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123822*0 + 3*570*FLEN/8, x4, x1, x2)

inst_41275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200000000001ff; valaddr_reg:x3; val_offset:123825*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123825*0 + 3*571*FLEN/8, x4, x1, x2)

inst_41276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200000000003ff; valaddr_reg:x3; val_offset:123828*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123828*0 + 3*572*FLEN/8, x4, x1, x2)

inst_41277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200000000007ff; valaddr_reg:x3; val_offset:123831*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123831*0 + 3*573*FLEN/8, x4, x1, x2)

inst_41278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000000000fff; valaddr_reg:x3; val_offset:123834*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123834*0 + 3*574*FLEN/8, x4, x1, x2)

inst_41279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000000001fff; valaddr_reg:x3; val_offset:123837*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123837*0 + 3*575*FLEN/8, x4, x1, x2)

inst_41280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000000003fff; valaddr_reg:x3; val_offset:123840*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123840*0 + 3*576*FLEN/8, x4, x1, x2)

inst_41281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000000007fff; valaddr_reg:x3; val_offset:123843*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123843*0 + 3*577*FLEN/8, x4, x1, x2)

inst_41282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000000000ffff; valaddr_reg:x3; val_offset:123846*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123846*0 + 3*578*FLEN/8, x4, x1, x2)

inst_41283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000000001ffff; valaddr_reg:x3; val_offset:123849*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123849*0 + 3*579*FLEN/8, x4, x1, x2)

inst_41284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000000003ffff; valaddr_reg:x3; val_offset:123852*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123852*0 + 3*580*FLEN/8, x4, x1, x2)

inst_41285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000000007ffff; valaddr_reg:x3; val_offset:123855*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123855*0 + 3*581*FLEN/8, x4, x1, x2)

inst_41286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200000000fffff; valaddr_reg:x3; val_offset:123858*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123858*0 + 3*582*FLEN/8, x4, x1, x2)

inst_41287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200000001fffff; valaddr_reg:x3; val_offset:123861*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123861*0 + 3*583*FLEN/8, x4, x1, x2)

inst_41288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200000003fffff; valaddr_reg:x3; val_offset:123864*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123864*0 + 3*584*FLEN/8, x4, x1, x2)

inst_41289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200000007fffff; valaddr_reg:x3; val_offset:123867*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123867*0 + 3*585*FLEN/8, x4, x1, x2)

inst_41290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000000ffffff; valaddr_reg:x3; val_offset:123870*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123870*0 + 3*586*FLEN/8, x4, x1, x2)

inst_41291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000001ffffff; valaddr_reg:x3; val_offset:123873*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123873*0 + 3*587*FLEN/8, x4, x1, x2)

inst_41292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000003ffffff; valaddr_reg:x3; val_offset:123876*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123876*0 + 3*588*FLEN/8, x4, x1, x2)

inst_41293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000007ffffff; valaddr_reg:x3; val_offset:123879*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123879*0 + 3*589*FLEN/8, x4, x1, x2)

inst_41294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000000fffffff; valaddr_reg:x3; val_offset:123882*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123882*0 + 3*590*FLEN/8, x4, x1, x2)

inst_41295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000001fffffff; valaddr_reg:x3; val_offset:123885*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123885*0 + 3*591*FLEN/8, x4, x1, x2)

inst_41296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000003fffffff; valaddr_reg:x3; val_offset:123888*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123888*0 + 3*592*FLEN/8, x4, x1, x2)

inst_41297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000007fffffff; valaddr_reg:x3; val_offset:123891*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123891*0 + 3*593*FLEN/8, x4, x1, x2)

inst_41298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200000ffffffff; valaddr_reg:x3; val_offset:123894*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123894*0 + 3*594*FLEN/8, x4, x1, x2)

inst_41299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200001ffffffff; valaddr_reg:x3; val_offset:123897*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123897*0 + 3*595*FLEN/8, x4, x1, x2)

inst_41300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200003ffffffff; valaddr_reg:x3; val_offset:123900*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123900*0 + 3*596*FLEN/8, x4, x1, x2)

inst_41301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200007ffffffff; valaddr_reg:x3; val_offset:123903*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123903*0 + 3*597*FLEN/8, x4, x1, x2)

inst_41302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20000fffffffff; valaddr_reg:x3; val_offset:123906*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123906*0 + 3*598*FLEN/8, x4, x1, x2)

inst_41303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20001fffffffff; valaddr_reg:x3; val_offset:123909*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123909*0 + 3*599*FLEN/8, x4, x1, x2)

inst_41304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20003fffffffff; valaddr_reg:x3; val_offset:123912*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123912*0 + 3*600*FLEN/8, x4, x1, x2)

inst_41305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20007fffffffff; valaddr_reg:x3; val_offset:123915*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123915*0 + 3*601*FLEN/8, x4, x1, x2)

inst_41306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2000ffffffffff; valaddr_reg:x3; val_offset:123918*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123918*0 + 3*602*FLEN/8, x4, x1, x2)

inst_41307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2001ffffffffff; valaddr_reg:x3; val_offset:123921*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123921*0 + 3*603*FLEN/8, x4, x1, x2)

inst_41308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2003ffffffffff; valaddr_reg:x3; val_offset:123924*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123924*0 + 3*604*FLEN/8, x4, x1, x2)

inst_41309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2007ffffffffff; valaddr_reg:x3; val_offset:123927*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123927*0 + 3*605*FLEN/8, x4, x1, x2)

inst_41310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x200fffffffffff; valaddr_reg:x3; val_offset:123930*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123930*0 + 3*606*FLEN/8, x4, x1, x2)

inst_41311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x201fffffffffff; valaddr_reg:x3; val_offset:123933*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123933*0 + 3*607*FLEN/8, x4, x1, x2)

inst_41312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x203fffffffffff; valaddr_reg:x3; val_offset:123936*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123936*0 + 3*608*FLEN/8, x4, x1, x2)

inst_41313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x207fffffffffff; valaddr_reg:x3; val_offset:123939*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123939*0 + 3*609*FLEN/8, x4, x1, x2)

inst_41314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x20ffffffffffff; valaddr_reg:x3; val_offset:123942*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123942*0 + 3*610*FLEN/8, x4, x1, x2)

inst_41315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x21ffffffffffff; valaddr_reg:x3; val_offset:123945*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123945*0 + 3*611*FLEN/8, x4, x1, x2)

inst_41316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x23ffffffffffff; valaddr_reg:x3; val_offset:123948*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123948*0 + 3*612*FLEN/8, x4, x1, x2)

inst_41317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x27ffffffffffff; valaddr_reg:x3; val_offset:123951*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123951*0 + 3*613*FLEN/8, x4, x1, x2)

inst_41318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x28000000000000; valaddr_reg:x3; val_offset:123954*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123954*0 + 3*614*FLEN/8, x4, x1, x2)

inst_41319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2c000000000000; valaddr_reg:x3; val_offset:123957*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123957*0 + 3*615*FLEN/8, x4, x1, x2)

inst_41320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2e000000000000; valaddr_reg:x3; val_offset:123960*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123960*0 + 3*616*FLEN/8, x4, x1, x2)

inst_41321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2f000000000000; valaddr_reg:x3; val_offset:123963*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123963*0 + 3*617*FLEN/8, x4, x1, x2)

inst_41322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2f800000000000; valaddr_reg:x3; val_offset:123966*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123966*0 + 3*618*FLEN/8, x4, x1, x2)

inst_41323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fc00000000000; valaddr_reg:x3; val_offset:123969*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123969*0 + 3*619*FLEN/8, x4, x1, x2)

inst_41324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fe00000000000; valaddr_reg:x3; val_offset:123972*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123972*0 + 3*620*FLEN/8, x4, x1, x2)

inst_41325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ff00000000000; valaddr_reg:x3; val_offset:123975*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123975*0 + 3*621*FLEN/8, x4, x1, x2)

inst_41326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ff80000000000; valaddr_reg:x3; val_offset:123978*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123978*0 + 3*622*FLEN/8, x4, x1, x2)

inst_41327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffc0000000000; valaddr_reg:x3; val_offset:123981*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123981*0 + 3*623*FLEN/8, x4, x1, x2)

inst_41328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffe0000000000; valaddr_reg:x3; val_offset:123984*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123984*0 + 3*624*FLEN/8, x4, x1, x2)

inst_41329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fff0000000000; valaddr_reg:x3; val_offset:123987*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123987*0 + 3*625*FLEN/8, x4, x1, x2)

inst_41330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fff8000000000; valaddr_reg:x3; val_offset:123990*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123990*0 + 3*626*FLEN/8, x4, x1, x2)

inst_41331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffc000000000; valaddr_reg:x3; val_offset:123993*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123993*0 + 3*627*FLEN/8, x4, x1, x2)

inst_41332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffe000000000; valaddr_reg:x3; val_offset:123996*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123996*0 + 3*628*FLEN/8, x4, x1, x2)

inst_41333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffff000000000; valaddr_reg:x3; val_offset:123999*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123999*0 + 3*629*FLEN/8, x4, x1, x2)

inst_41334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffff800000000; valaddr_reg:x3; val_offset:124002*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124002*0 + 3*630*FLEN/8, x4, x1, x2)

inst_41335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffc00000000; valaddr_reg:x3; val_offset:124005*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124005*0 + 3*631*FLEN/8, x4, x1, x2)

inst_41336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffe00000000; valaddr_reg:x3; val_offset:124008*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124008*0 + 3*632*FLEN/8, x4, x1, x2)

inst_41337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffff00000000; valaddr_reg:x3; val_offset:124011*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124011*0 + 3*633*FLEN/8, x4, x1, x2)

inst_41338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffff80000000; valaddr_reg:x3; val_offset:124014*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124014*0 + 3*634*FLEN/8, x4, x1, x2)

inst_41339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffc0000000; valaddr_reg:x3; val_offset:124017*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124017*0 + 3*635*FLEN/8, x4, x1, x2)

inst_41340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffe0000000; valaddr_reg:x3; val_offset:124020*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124020*0 + 3*636*FLEN/8, x4, x1, x2)

inst_41341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffff0000000; valaddr_reg:x3; val_offset:124023*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124023*0 + 3*637*FLEN/8, x4, x1, x2)

inst_41342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffff8000000; valaddr_reg:x3; val_offset:124026*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124026*0 + 3*638*FLEN/8, x4, x1, x2)

inst_41343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffc000000; valaddr_reg:x3; val_offset:124029*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124029*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_41344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffe000000; valaddr_reg:x3; val_offset:124032*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124032*0 + 3*640*FLEN/8, x4, x1, x2)

inst_41345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffff000000; valaddr_reg:x3; val_offset:124035*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124035*0 + 3*641*FLEN/8, x4, x1, x2)

inst_41346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffff800000; valaddr_reg:x3; val_offset:124038*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124038*0 + 3*642*FLEN/8, x4, x1, x2)

inst_41347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffffc00000; valaddr_reg:x3; val_offset:124041*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124041*0 + 3*643*FLEN/8, x4, x1, x2)

inst_41348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffffe00000; valaddr_reg:x3; val_offset:124044*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124044*0 + 3*644*FLEN/8, x4, x1, x2)

inst_41349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffff00000; valaddr_reg:x3; val_offset:124047*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124047*0 + 3*645*FLEN/8, x4, x1, x2)

inst_41350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffff80000; valaddr_reg:x3; val_offset:124050*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124050*0 + 3*646*FLEN/8, x4, x1, x2)

inst_41351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffffc0000; valaddr_reg:x3; val_offset:124053*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124053*0 + 3*647*FLEN/8, x4, x1, x2)

inst_41352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffffe0000; valaddr_reg:x3; val_offset:124056*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124056*0 + 3*648*FLEN/8, x4, x1, x2)

inst_41353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffffff0000; valaddr_reg:x3; val_offset:124059*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124059*0 + 3*649*FLEN/8, x4, x1, x2)

inst_41354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffffff8000; valaddr_reg:x3; val_offset:124062*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124062*0 + 3*650*FLEN/8, x4, x1, x2)

inst_41355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffffffc000; valaddr_reg:x3; val_offset:124065*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124065*0 + 3*651*FLEN/8, x4, x1, x2)

inst_41356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffffffe000; valaddr_reg:x3; val_offset:124068*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124068*0 + 3*652*FLEN/8, x4, x1, x2)

inst_41357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffffff000; valaddr_reg:x3; val_offset:124071*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124071*0 + 3*653*FLEN/8, x4, x1, x2)

inst_41358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffffff800; valaddr_reg:x3; val_offset:124074*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124074*0 + 3*654*FLEN/8, x4, x1, x2)

inst_41359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffffffc00; valaddr_reg:x3; val_offset:124077*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124077*0 + 3*655*FLEN/8, x4, x1, x2)

inst_41360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffffffe00; valaddr_reg:x3; val_offset:124080*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124080*0 + 3*656*FLEN/8, x4, x1, x2)

inst_41361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffffffff00; valaddr_reg:x3; val_offset:124083*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124083*0 + 3*657*FLEN/8, x4, x1, x2)

inst_41362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffffffff80; valaddr_reg:x3; val_offset:124086*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124086*0 + 3*658*FLEN/8, x4, x1, x2)

inst_41363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffffffffc0; valaddr_reg:x3; val_offset:124089*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124089*0 + 3*659*FLEN/8, x4, x1, x2)

inst_41364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffffffffe0; valaddr_reg:x3; val_offset:124092*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124092*0 + 3*660*FLEN/8, x4, x1, x2)

inst_41365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffffffff0; valaddr_reg:x3; val_offset:124095*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124095*0 + 3*661*FLEN/8, x4, x1, x2)

inst_41366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffffffff8; valaddr_reg:x3; val_offset:124098*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124098*0 + 3*662*FLEN/8, x4, x1, x2)

inst_41367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffffffffc; valaddr_reg:x3; val_offset:124101*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124101*0 + 3*663*FLEN/8, x4, x1, x2)

inst_41368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2ffffffffffffe; valaddr_reg:x3; val_offset:124104*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124104*0 + 3*664*FLEN/8, x4, x1, x2)

inst_41369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x93409d09f9519 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f993409d09f9519; op2val:0x0;
op3val:0x2fffffffffffff; valaddr_reg:x3; val_offset:124107*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124107*0 + 3*665*FLEN/8, x4, x1, x2)

inst_41370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000000000000; valaddr_reg:x3; val_offset:124110*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124110*0 + 3*666*FLEN/8, x4, x1, x2)

inst_41371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000000000001; valaddr_reg:x3; val_offset:124113*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124113*0 + 3*667*FLEN/8, x4, x1, x2)

inst_41372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000000000003; valaddr_reg:x3; val_offset:124116*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124116*0 + 3*668*FLEN/8, x4, x1, x2)

inst_41373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000000000007; valaddr_reg:x3; val_offset:124119*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124119*0 + 3*669*FLEN/8, x4, x1, x2)

inst_41374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000000000000f; valaddr_reg:x3; val_offset:124122*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124122*0 + 3*670*FLEN/8, x4, x1, x2)

inst_41375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000000000001f; valaddr_reg:x3; val_offset:124125*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124125*0 + 3*671*FLEN/8, x4, x1, x2)

inst_41376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000000000003f; valaddr_reg:x3; val_offset:124128*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124128*0 + 3*672*FLEN/8, x4, x1, x2)

inst_41377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000000000007f; valaddr_reg:x3; val_offset:124131*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124131*0 + 3*673*FLEN/8, x4, x1, x2)

inst_41378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100000000000ff; valaddr_reg:x3; val_offset:124134*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124134*0 + 3*674*FLEN/8, x4, x1, x2)

inst_41379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100000000001ff; valaddr_reg:x3; val_offset:124137*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124137*0 + 3*675*FLEN/8, x4, x1, x2)

inst_41380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100000000003ff; valaddr_reg:x3; val_offset:124140*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124140*0 + 3*676*FLEN/8, x4, x1, x2)

inst_41381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100000000007ff; valaddr_reg:x3; val_offset:124143*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124143*0 + 3*677*FLEN/8, x4, x1, x2)

inst_41382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000000000fff; valaddr_reg:x3; val_offset:124146*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124146*0 + 3*678*FLEN/8, x4, x1, x2)

inst_41383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000000001fff; valaddr_reg:x3; val_offset:124149*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124149*0 + 3*679*FLEN/8, x4, x1, x2)

inst_41384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000000003fff; valaddr_reg:x3; val_offset:124152*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124152*0 + 3*680*FLEN/8, x4, x1, x2)

inst_41385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000000007fff; valaddr_reg:x3; val_offset:124155*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124155*0 + 3*681*FLEN/8, x4, x1, x2)

inst_41386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000000000ffff; valaddr_reg:x3; val_offset:124158*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124158*0 + 3*682*FLEN/8, x4, x1, x2)

inst_41387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000000001ffff; valaddr_reg:x3; val_offset:124161*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124161*0 + 3*683*FLEN/8, x4, x1, x2)

inst_41388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000000003ffff; valaddr_reg:x3; val_offset:124164*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124164*0 + 3*684*FLEN/8, x4, x1, x2)

inst_41389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000000007ffff; valaddr_reg:x3; val_offset:124167*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124167*0 + 3*685*FLEN/8, x4, x1, x2)

inst_41390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100000000fffff; valaddr_reg:x3; val_offset:124170*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124170*0 + 3*686*FLEN/8, x4, x1, x2)

inst_41391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100000001fffff; valaddr_reg:x3; val_offset:124173*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124173*0 + 3*687*FLEN/8, x4, x1, x2)

inst_41392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100000003fffff; valaddr_reg:x3; val_offset:124176*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124176*0 + 3*688*FLEN/8, x4, x1, x2)

inst_41393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100000007fffff; valaddr_reg:x3; val_offset:124179*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124179*0 + 3*689*FLEN/8, x4, x1, x2)

inst_41394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000000ffffff; valaddr_reg:x3; val_offset:124182*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124182*0 + 3*690*FLEN/8, x4, x1, x2)

inst_41395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000001ffffff; valaddr_reg:x3; val_offset:124185*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124185*0 + 3*691*FLEN/8, x4, x1, x2)

inst_41396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000003ffffff; valaddr_reg:x3; val_offset:124188*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124188*0 + 3*692*FLEN/8, x4, x1, x2)

inst_41397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000007ffffff; valaddr_reg:x3; val_offset:124191*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124191*0 + 3*693*FLEN/8, x4, x1, x2)

inst_41398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000000fffffff; valaddr_reg:x3; val_offset:124194*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124194*0 + 3*694*FLEN/8, x4, x1, x2)

inst_41399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000001fffffff; valaddr_reg:x3; val_offset:124197*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124197*0 + 3*695*FLEN/8, x4, x1, x2)

inst_41400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000003fffffff; valaddr_reg:x3; val_offset:124200*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124200*0 + 3*696*FLEN/8, x4, x1, x2)

inst_41401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000007fffffff; valaddr_reg:x3; val_offset:124203*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124203*0 + 3*697*FLEN/8, x4, x1, x2)

inst_41402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100000ffffffff; valaddr_reg:x3; val_offset:124206*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124206*0 + 3*698*FLEN/8, x4, x1, x2)

inst_41403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100001ffffffff; valaddr_reg:x3; val_offset:124209*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124209*0 + 3*699*FLEN/8, x4, x1, x2)

inst_41404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100003ffffffff; valaddr_reg:x3; val_offset:124212*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124212*0 + 3*700*FLEN/8, x4, x1, x2)

inst_41405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100007ffffffff; valaddr_reg:x3; val_offset:124215*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124215*0 + 3*701*FLEN/8, x4, x1, x2)

inst_41406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10000fffffffff; valaddr_reg:x3; val_offset:124218*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124218*0 + 3*702*FLEN/8, x4, x1, x2)

inst_41407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10001fffffffff; valaddr_reg:x3; val_offset:124221*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124221*0 + 3*703*FLEN/8, x4, x1, x2)

inst_41408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10003fffffffff; valaddr_reg:x3; val_offset:124224*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124224*0 + 3*704*FLEN/8, x4, x1, x2)

inst_41409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10007fffffffff; valaddr_reg:x3; val_offset:124227*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124227*0 + 3*705*FLEN/8, x4, x1, x2)

inst_41410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1000ffffffffff; valaddr_reg:x3; val_offset:124230*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124230*0 + 3*706*FLEN/8, x4, x1, x2)

inst_41411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1001ffffffffff; valaddr_reg:x3; val_offset:124233*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124233*0 + 3*707*FLEN/8, x4, x1, x2)

inst_41412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1003ffffffffff; valaddr_reg:x3; val_offset:124236*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124236*0 + 3*708*FLEN/8, x4, x1, x2)

inst_41413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1007ffffffffff; valaddr_reg:x3; val_offset:124239*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124239*0 + 3*709*FLEN/8, x4, x1, x2)

inst_41414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba100fffffffffff; valaddr_reg:x3; val_offset:124242*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124242*0 + 3*710*FLEN/8, x4, x1, x2)

inst_41415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba101fffffffffff; valaddr_reg:x3; val_offset:124245*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124245*0 + 3*711*FLEN/8, x4, x1, x2)

inst_41416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba103fffffffffff; valaddr_reg:x3; val_offset:124248*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124248*0 + 3*712*FLEN/8, x4, x1, x2)

inst_41417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba107fffffffffff; valaddr_reg:x3; val_offset:124251*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124251*0 + 3*713*FLEN/8, x4, x1, x2)

inst_41418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba10ffffffffffff; valaddr_reg:x3; val_offset:124254*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124254*0 + 3*714*FLEN/8, x4, x1, x2)

inst_41419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba11ffffffffffff; valaddr_reg:x3; val_offset:124257*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124257*0 + 3*715*FLEN/8, x4, x1, x2)

inst_41420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba13ffffffffffff; valaddr_reg:x3; val_offset:124260*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124260*0 + 3*716*FLEN/8, x4, x1, x2)

inst_41421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba17ffffffffffff; valaddr_reg:x3; val_offset:124263*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124263*0 + 3*717*FLEN/8, x4, x1, x2)

inst_41422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba18000000000000; valaddr_reg:x3; val_offset:124266*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124266*0 + 3*718*FLEN/8, x4, x1, x2)

inst_41423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1c000000000000; valaddr_reg:x3; val_offset:124269*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124269*0 + 3*719*FLEN/8, x4, x1, x2)

inst_41424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1e000000000000; valaddr_reg:x3; val_offset:124272*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124272*0 + 3*720*FLEN/8, x4, x1, x2)

inst_41425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1f000000000000; valaddr_reg:x3; val_offset:124275*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124275*0 + 3*721*FLEN/8, x4, x1, x2)

inst_41426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1f800000000000; valaddr_reg:x3; val_offset:124278*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124278*0 + 3*722*FLEN/8, x4, x1, x2)

inst_41427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fc00000000000; valaddr_reg:x3; val_offset:124281*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124281*0 + 3*723*FLEN/8, x4, x1, x2)

inst_41428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fe00000000000; valaddr_reg:x3; val_offset:124284*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124284*0 + 3*724*FLEN/8, x4, x1, x2)

inst_41429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ff00000000000; valaddr_reg:x3; val_offset:124287*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124287*0 + 3*725*FLEN/8, x4, x1, x2)

inst_41430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ff80000000000; valaddr_reg:x3; val_offset:124290*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124290*0 + 3*726*FLEN/8, x4, x1, x2)

inst_41431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffc0000000000; valaddr_reg:x3; val_offset:124293*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124293*0 + 3*727*FLEN/8, x4, x1, x2)

inst_41432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffe0000000000; valaddr_reg:x3; val_offset:124296*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124296*0 + 3*728*FLEN/8, x4, x1, x2)

inst_41433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fff0000000000; valaddr_reg:x3; val_offset:124299*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124299*0 + 3*729*FLEN/8, x4, x1, x2)

inst_41434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fff8000000000; valaddr_reg:x3; val_offset:124302*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124302*0 + 3*730*FLEN/8, x4, x1, x2)

inst_41435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffc000000000; valaddr_reg:x3; val_offset:124305*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124305*0 + 3*731*FLEN/8, x4, x1, x2)

inst_41436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffe000000000; valaddr_reg:x3; val_offset:124308*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124308*0 + 3*732*FLEN/8, x4, x1, x2)

inst_41437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffff000000000; valaddr_reg:x3; val_offset:124311*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124311*0 + 3*733*FLEN/8, x4, x1, x2)

inst_41438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffff800000000; valaddr_reg:x3; val_offset:124314*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124314*0 + 3*734*FLEN/8, x4, x1, x2)

inst_41439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffc00000000; valaddr_reg:x3; val_offset:124317*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124317*0 + 3*735*FLEN/8, x4, x1, x2)

inst_41440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffe00000000; valaddr_reg:x3; val_offset:124320*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124320*0 + 3*736*FLEN/8, x4, x1, x2)

inst_41441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffff00000000; valaddr_reg:x3; val_offset:124323*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124323*0 + 3*737*FLEN/8, x4, x1, x2)

inst_41442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffff80000000; valaddr_reg:x3; val_offset:124326*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124326*0 + 3*738*FLEN/8, x4, x1, x2)

inst_41443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffc0000000; valaddr_reg:x3; val_offset:124329*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124329*0 + 3*739*FLEN/8, x4, x1, x2)

inst_41444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffe0000000; valaddr_reg:x3; val_offset:124332*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124332*0 + 3*740*FLEN/8, x4, x1, x2)

inst_41445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffff0000000; valaddr_reg:x3; val_offset:124335*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124335*0 + 3*741*FLEN/8, x4, x1, x2)

inst_41446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffff8000000; valaddr_reg:x3; val_offset:124338*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124338*0 + 3*742*FLEN/8, x4, x1, x2)

inst_41447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffc000000; valaddr_reg:x3; val_offset:124341*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124341*0 + 3*743*FLEN/8, x4, x1, x2)

inst_41448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffe000000; valaddr_reg:x3; val_offset:124344*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124344*0 + 3*744*FLEN/8, x4, x1, x2)

inst_41449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffff000000; valaddr_reg:x3; val_offset:124347*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124347*0 + 3*745*FLEN/8, x4, x1, x2)

inst_41450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffff800000; valaddr_reg:x3; val_offset:124350*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124350*0 + 3*746*FLEN/8, x4, x1, x2)

inst_41451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffffc00000; valaddr_reg:x3; val_offset:124353*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124353*0 + 3*747*FLEN/8, x4, x1, x2)

inst_41452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffffe00000; valaddr_reg:x3; val_offset:124356*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124356*0 + 3*748*FLEN/8, x4, x1, x2)

inst_41453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffff00000; valaddr_reg:x3; val_offset:124359*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124359*0 + 3*749*FLEN/8, x4, x1, x2)

inst_41454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffff80000; valaddr_reg:x3; val_offset:124362*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124362*0 + 3*750*FLEN/8, x4, x1, x2)

inst_41455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffffc0000; valaddr_reg:x3; val_offset:124365*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124365*0 + 3*751*FLEN/8, x4, x1, x2)

inst_41456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffffe0000; valaddr_reg:x3; val_offset:124368*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124368*0 + 3*752*FLEN/8, x4, x1, x2)

inst_41457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffffff0000; valaddr_reg:x3; val_offset:124371*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124371*0 + 3*753*FLEN/8, x4, x1, x2)

inst_41458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffffff8000; valaddr_reg:x3; val_offset:124374*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124374*0 + 3*754*FLEN/8, x4, x1, x2)

inst_41459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffffffc000; valaddr_reg:x3; val_offset:124377*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124377*0 + 3*755*FLEN/8, x4, x1, x2)

inst_41460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffffffe000; valaddr_reg:x3; val_offset:124380*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124380*0 + 3*756*FLEN/8, x4, x1, x2)

inst_41461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffffff000; valaddr_reg:x3; val_offset:124383*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124383*0 + 3*757*FLEN/8, x4, x1, x2)

inst_41462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffffff800; valaddr_reg:x3; val_offset:124386*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124386*0 + 3*758*FLEN/8, x4, x1, x2)

inst_41463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffffffc00; valaddr_reg:x3; val_offset:124389*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124389*0 + 3*759*FLEN/8, x4, x1, x2)

inst_41464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffffffe00; valaddr_reg:x3; val_offset:124392*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124392*0 + 3*760*FLEN/8, x4, x1, x2)

inst_41465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffffffff00; valaddr_reg:x3; val_offset:124395*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124395*0 + 3*761*FLEN/8, x4, x1, x2)

inst_41466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffffffff80; valaddr_reg:x3; val_offset:124398*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124398*0 + 3*762*FLEN/8, x4, x1, x2)

inst_41467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffffffffc0; valaddr_reg:x3; val_offset:124401*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124401*0 + 3*763*FLEN/8, x4, x1, x2)

inst_41468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1fffffffffffe0; valaddr_reg:x3; val_offset:124404*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124404*0 + 3*764*FLEN/8, x4, x1, x2)

inst_41469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffffffff0; valaddr_reg:x3; val_offset:124407*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124407*0 + 3*765*FLEN/8, x4, x1, x2)

inst_41470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffffffff8; valaddr_reg:x3; val_offset:124410*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124410*0 + 3*766*FLEN/8, x4, x1, x2)

inst_41471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x934264473a8f3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x4508122b05dbd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9934264473a8f3; op2val:0x9fd4508122b05dbd;
op3val:0xba1ffffffffffffc; valaddr_reg:x3; val_offset:124413*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 124413*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062959616,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062963712,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062965760,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062966784,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062967296,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062967552,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062967680,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062967744,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062967776,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062967792,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062967800,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062967804,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062967806,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4156822456062967807,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6888501386862102449,64,FLEN)
NAN_BOXED(2325147825229094383,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671104,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671105,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671107,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671111,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671119,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671135,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671167,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671231,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671359,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671615,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850672127,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850673151,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850675199,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850679295,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850687487,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850703871,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850736639,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850802175,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850933247,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851195391,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851719679,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617852768255,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617854865407,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617859059711,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617867448319,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617884225535,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617917779967,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617984888831,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618119106559,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618387542015,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618924412927,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055619998154751,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055622145638399,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055626440605695,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055635030540287,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055652210409471,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055686570147839,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055755289624575,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055892728578047,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056167606484991,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056717362298879,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453057816873926655,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453060015897182207,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453064413943693311,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453073210036715519,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453090802222759935,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453125986594848767,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453196355339026431,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453337092827381759,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453618567804092415,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9454181517757513727,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356351,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356352,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456433317571198976,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456996267524620288,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457277742501330944,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457418479989686272,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457488848733863936,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457524033105952768,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457541625291997184,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457550421385019392,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457554819431530496,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457557018454786048,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558117966413824,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558667722227712,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558942600134656,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559080039088128,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559148758564864,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559183118303232,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559200298172416,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559208888107008,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559213183074304,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559215330557952,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216404299776,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216941170688,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217209606144,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217343823872,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217410932736,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217444487168,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217461264384,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217469652992,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217473847296,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217475944448,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217476993024,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477517312,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477779456,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477910528,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477976064,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478008832,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478025216,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478033408,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478037504,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478039552,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478040576,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041088,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041344,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041472,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041536,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041568,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041584,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041592,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041596,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041598,64,FLEN)
NAN_BOXED(6888547632822318347,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041599,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633446400,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633446401,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633446403,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633446407,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633446415,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633446431,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633446463,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633446527,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633446655,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633446911,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633447423,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633448447,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633450495,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633454591,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633462783,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633479167,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633511935,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633577471,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633708543,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664633970687,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664634494975,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664635543551,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664637640703,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664641835007,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664650223615,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664667000831,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664700555263,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664767664127,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239664901881855,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239665170317311,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239665707188223,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239666780930047,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239668928413695,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239673223380991,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239681813315583,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239698993184767,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239733352923135,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239802072399871,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053239939511353343,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053240214389260287,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053240764145074175,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053241863656701951,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053244062679957503,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053248460726468607,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053257256819490815,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053274849005535231,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053310033377624063,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053380402121801727,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053521139610157055,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4053802614586867711,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4054365564540289023,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4055491464447131647,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4055491464447131648,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4056617364353974272,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057180314307395584,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057461789284106240,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057602526772461568,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057672895516639232,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057708079888728064,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057725672074772480,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057734468167794688,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057738866214305792,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057741065237561344,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057742164749189120,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057742714505003008,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057742989382909952,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743126821863424,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743195541340160,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743229901078528,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743247080947712,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743255670882304,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743259965849600,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743262113333248,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743263187075072,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743263723945984,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743263992381440,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264126599168,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264193708032,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264227262464,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264244039680,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264252428288,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264256622592,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264258719744,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264259768320,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260292608,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260554752,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260685824,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260751360,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260784128,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260800512,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260808704,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260812800,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260814848,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260815872,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260816384,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260816640,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260816768,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260816832,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260816864,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260816880,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260816888,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260816892,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260816894,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4057743264260816895,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6888548835964504023,64,FLEN)
NAN_BOXED(2325108821639175582,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592256,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592257,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592259,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592263,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592271,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592287,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592319,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592383,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592511,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592767,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010593279,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010594303,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010596351,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010600447,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010608639,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010625023,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010657791,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010723327,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010854399,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011116543,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011640831,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832012689407,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832014786559,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832018980863,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832027369471,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832044146687,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832077701119,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832144809983,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832279027711,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832547463167,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918833084334079,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918834158075903,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918836305559551,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918840600526847,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918849190461439,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918866370330623,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918900730068991,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918969449545727,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919106888499199,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919381766406143,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919931522220031,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281921031033847807,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281923230057103359,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281927628103614463,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281936424196636671,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281954016382681087,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281989200754769919,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282059569498947583,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282200306987302911,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282481781964013567,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9283044731917434879,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277503,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277504,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285296531731120128,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285859481684541440,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286140956661252096,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286281694149607424,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286352062893785088,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286387247265873920,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286404839451918336,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286413635544940544,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286418033591451648,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286420232614707200,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421332126334976,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421881882148864,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422156760055808,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422294199009280,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422362918486016,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422397278224384,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422414458093568,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422423048028160,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422427342995456,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422429490479104,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422430564220928,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431101091840,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431369527296,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431503745024,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431570853888,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431604408320,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431621185536,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431629574144,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431633768448,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431635865600,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431636914176,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637438464,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637700608,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637831680,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637897216,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637929984,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637946368,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637954560,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637958656,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637960704,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637961728,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962240,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962496,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962624,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962688,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962720,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962736,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962744,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962748,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962750,64,FLEN)
NAN_BOXED(6888549193606230701,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962751,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636288,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636289,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636291,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636295,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636303,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636319,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636351,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636415,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636543,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636799,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250637311,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250638335,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250640383,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250644479,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250652671,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250669055,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250701823,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250767359,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250898431,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780251160575,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780251684863,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780252733439,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780254830591,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780259024895,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780267413503,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780284190719,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780317745151,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780384854015,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780519071743,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780787507199,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690781324378111,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690782398119935,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690784545603583,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690788840570879,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690797430505471,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690814610374655,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690848970113023,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690917689589759,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238691055128543231,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238691330006450175,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238691879762264063,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238692979273891839,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238695178297147391,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238699576343658495,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238708372436680703,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238725964622725119,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238761148994813951,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238831517738991615,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238972255227346943,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(239253730204057599,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(239816680157478911,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(240942580064321535,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(240942580064321536,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(242068479971164160,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(242631429924585472,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(242912904901296128,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243053642389651456,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243124011133829120,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243159195505917952,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243176787691962368,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243185583784984576,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243189981831495680,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243192180854751232,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243193280366379008,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243193830122192896,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194105000099840,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194242439053312,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194311158530048,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194345518268416,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194362698137600,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194371288072192,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194375583039488,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194377730523136,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194378804264960,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379341135872,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379609571328,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379743789056,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379810897920,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379844452352,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379861229568,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379869618176,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379873812480,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379875909632,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379876958208,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877482496,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877744640,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877875712,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877941248,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877974016,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877990400,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877998592,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878002688,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878004736,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878005760,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006272,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006528,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006656,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006720,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006752,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006768,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006776,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006780,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006782,64,FLEN)
NAN_BOXED(6888562350246231999,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006783,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740992,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740993,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740995,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740999,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741007,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741023,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741055,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741119,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741247,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741503,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254742015,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254743039,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254745087,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254749183,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254757375,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254773759,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254806527,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254872063,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255003135,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255265279,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255789567,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199256838143,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199258935295,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199263129599,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199271518207,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199288295423,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199321849855,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199388958719,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199523176447,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199791611903,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007200328482815,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007201402224639,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007203549708287,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007207844675583,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007216434610175,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007233614479359,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007267974217727,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007336693694463,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007474132647935,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007749010554879,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9008298766368767,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9009398277996543,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9011597301252095,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9015995347763199,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9024791440785407,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9042383626829823,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9077567998918655,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9147936743096319,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9288674231451647,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9570149208162303,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(10133099161583615,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426239,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426240,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12384898975268864,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12947848928690176,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13229323905400832,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13370061393756160,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13440430137933824,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13475614510022656,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13493206696067072,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13502002789089280,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13506400835600384,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13508599858855936,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13509699370483712,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510249126297600,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510524004204544,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510661443158016,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510730162634752,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510764522373120,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510781702242304,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510790292176896,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510794587144192,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510796734627840,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510797808369664,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798345240576,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798613676032,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798747893760,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798815002624,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798848557056,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798865334272,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798873722880,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798877917184,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798880014336,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881062912,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881587200,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881849344,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881980416,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882045952,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882078720,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882095104,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882103296,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882107392,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882109440,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110464,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110976,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111232,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111360,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111424,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111456,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111472,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111480,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111484,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111486,64,FLEN)
NAN_BOXED(6888594321799353625,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111487,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681966592,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681966593,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681966595,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681966599,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681966607,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681966623,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681966655,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681966719,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681966847,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681967103,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681967615,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681968639,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681970687,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681974783,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681982975,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090681999359,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090682032127,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090682097663,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090682228735,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090682490879,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090683015167,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090684063743,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090686160895,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090690355199,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090698743807,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090715521023,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090749075455,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090816184319,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216090950402047,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216091218837503,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216091755708415,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216092829450239,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216094976933887,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216099271901183,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216107861835775,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216125041704959,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216159401443327,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216228120920063,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216365559873535,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407216640437780479,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407217190193594367,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407218289705222143,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407220488728477695,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407224886774988799,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407233682868011007,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407251275054055423,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407286459426144255,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407356828170321919,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407497565658677247,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13407779040635387903,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13408341990588809215,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13409467890495651839,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13409467890495651840,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13410593790402494464,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411156740355915776,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411438215332626432,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411578952820981760,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411649321565159424,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411684505937248256,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411702098123292672,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411710894216314880,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411715292262825984,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411717491286081536,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411718590797709312,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719140553523200,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719415431430144,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719552870383616,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719621589860352,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719655949598720,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719673129467904,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719681719402496,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719686014369792,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719688161853440,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719689235595264,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719689772466176,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690040901632,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690175119360,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690242228224,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690275782656,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690292559872,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690300948480,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690305142784,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690307239936,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690308288512,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690308812800,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309074944,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309206016,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309271552,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309304320,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309320704,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309328896,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309332992,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309335040,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309336064,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309336576,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309336832,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309336960,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309337024,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309337056,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309337072,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309337080,64,FLEN)
NAN_BOXED(6888594444001716467,64,FLEN)
NAN_BOXED(11516918662656187837,64,FLEN)
NAN_BOXED(13411719690309337084,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
