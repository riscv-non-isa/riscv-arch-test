
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_73728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:221184*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221184*0 + 3*0*FLEN/8, x4, x1, x2)

inst_73729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:221187*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221187*0 + 3*1*FLEN/8, x4, x1, x2)

inst_73730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:221190*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221190*0 + 3*2*FLEN/8, x4, x1, x2)

inst_73731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:221193*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221193*0 + 3*3*FLEN/8, x4, x1, x2)

inst_73732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:221196*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221196*0 + 3*4*FLEN/8, x4, x1, x2)

inst_73733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:221199*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221199*0 + 3*5*FLEN/8, x4, x1, x2)

inst_73734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:221202*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221202*0 + 3*6*FLEN/8, x4, x1, x2)

inst_73735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:221205*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221205*0 + 3*7*FLEN/8, x4, x1, x2)

inst_73736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:221208*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221208*0 + 3*8*FLEN/8, x4, x1, x2)

inst_73737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:221211*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221211*0 + 3*9*FLEN/8, x4, x1, x2)

inst_73738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:221214*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221214*0 + 3*10*FLEN/8, x4, x1, x2)

inst_73739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:221217*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221217*0 + 3*11*FLEN/8, x4, x1, x2)

inst_73740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:221220*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221220*0 + 3*12*FLEN/8, x4, x1, x2)

inst_73741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:221223*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221223*0 + 3*13*FLEN/8, x4, x1, x2)

inst_73742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:221226*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221226*0 + 3*14*FLEN/8, x4, x1, x2)

inst_73743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:221229*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221229*0 + 3*15*FLEN/8, x4, x1, x2)

inst_73744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:221232*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221232*0 + 3*16*FLEN/8, x4, x1, x2)

inst_73745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:221235*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221235*0 + 3*17*FLEN/8, x4, x1, x2)

inst_73746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:221238*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221238*0 + 3*18*FLEN/8, x4, x1, x2)

inst_73747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:221241*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221241*0 + 3*19*FLEN/8, x4, x1, x2)

inst_73748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:221244*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221244*0 + 3*20*FLEN/8, x4, x1, x2)

inst_73749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:221247*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221247*0 + 3*21*FLEN/8, x4, x1, x2)

inst_73750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000000000000; valaddr_reg:x3; val_offset:221250*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221250*0 + 3*22*FLEN/8, x4, x1, x2)

inst_73751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000000000001; valaddr_reg:x3; val_offset:221253*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221253*0 + 3*23*FLEN/8, x4, x1, x2)

inst_73752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000000000003; valaddr_reg:x3; val_offset:221256*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221256*0 + 3*24*FLEN/8, x4, x1, x2)

inst_73753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000000000007; valaddr_reg:x3; val_offset:221259*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221259*0 + 3*25*FLEN/8, x4, x1, x2)

inst_73754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000000000000f; valaddr_reg:x3; val_offset:221262*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221262*0 + 3*26*FLEN/8, x4, x1, x2)

inst_73755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000000000001f; valaddr_reg:x3; val_offset:221265*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221265*0 + 3*27*FLEN/8, x4, x1, x2)

inst_73756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000000000003f; valaddr_reg:x3; val_offset:221268*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221268*0 + 3*28*FLEN/8, x4, x1, x2)

inst_73757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000000000007f; valaddr_reg:x3; val_offset:221271*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221271*0 + 3*29*FLEN/8, x4, x1, x2)

inst_73758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800000000000ff; valaddr_reg:x3; val_offset:221274*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221274*0 + 3*30*FLEN/8, x4, x1, x2)

inst_73759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800000000001ff; valaddr_reg:x3; val_offset:221277*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221277*0 + 3*31*FLEN/8, x4, x1, x2)

inst_73760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800000000003ff; valaddr_reg:x3; val_offset:221280*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221280*0 + 3*32*FLEN/8, x4, x1, x2)

inst_73761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800000000007ff; valaddr_reg:x3; val_offset:221283*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221283*0 + 3*33*FLEN/8, x4, x1, x2)

inst_73762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000000000fff; valaddr_reg:x3; val_offset:221286*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221286*0 + 3*34*FLEN/8, x4, x1, x2)

inst_73763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000000001fff; valaddr_reg:x3; val_offset:221289*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221289*0 + 3*35*FLEN/8, x4, x1, x2)

inst_73764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000000003fff; valaddr_reg:x3; val_offset:221292*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221292*0 + 3*36*FLEN/8, x4, x1, x2)

inst_73765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000000007fff; valaddr_reg:x3; val_offset:221295*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221295*0 + 3*37*FLEN/8, x4, x1, x2)

inst_73766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000000000ffff; valaddr_reg:x3; val_offset:221298*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221298*0 + 3*38*FLEN/8, x4, x1, x2)

inst_73767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000000001ffff; valaddr_reg:x3; val_offset:221301*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221301*0 + 3*39*FLEN/8, x4, x1, x2)

inst_73768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000000003ffff; valaddr_reg:x3; val_offset:221304*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221304*0 + 3*40*FLEN/8, x4, x1, x2)

inst_73769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000000007ffff; valaddr_reg:x3; val_offset:221307*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221307*0 + 3*41*FLEN/8, x4, x1, x2)

inst_73770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800000000fffff; valaddr_reg:x3; val_offset:221310*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221310*0 + 3*42*FLEN/8, x4, x1, x2)

inst_73771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800000001fffff; valaddr_reg:x3; val_offset:221313*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221313*0 + 3*43*FLEN/8, x4, x1, x2)

inst_73772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800000003fffff; valaddr_reg:x3; val_offset:221316*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221316*0 + 3*44*FLEN/8, x4, x1, x2)

inst_73773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800000007fffff; valaddr_reg:x3; val_offset:221319*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221319*0 + 3*45*FLEN/8, x4, x1, x2)

inst_73774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000000ffffff; valaddr_reg:x3; val_offset:221322*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221322*0 + 3*46*FLEN/8, x4, x1, x2)

inst_73775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000001ffffff; valaddr_reg:x3; val_offset:221325*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221325*0 + 3*47*FLEN/8, x4, x1, x2)

inst_73776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000003ffffff; valaddr_reg:x3; val_offset:221328*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221328*0 + 3*48*FLEN/8, x4, x1, x2)

inst_73777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000007ffffff; valaddr_reg:x3; val_offset:221331*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221331*0 + 3*49*FLEN/8, x4, x1, x2)

inst_73778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000000fffffff; valaddr_reg:x3; val_offset:221334*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221334*0 + 3*50*FLEN/8, x4, x1, x2)

inst_73779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000001fffffff; valaddr_reg:x3; val_offset:221337*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221337*0 + 3*51*FLEN/8, x4, x1, x2)

inst_73780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000003fffffff; valaddr_reg:x3; val_offset:221340*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221340*0 + 3*52*FLEN/8, x4, x1, x2)

inst_73781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000007fffffff; valaddr_reg:x3; val_offset:221343*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221343*0 + 3*53*FLEN/8, x4, x1, x2)

inst_73782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800000ffffffff; valaddr_reg:x3; val_offset:221346*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221346*0 + 3*54*FLEN/8, x4, x1, x2)

inst_73783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800001ffffffff; valaddr_reg:x3; val_offset:221349*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221349*0 + 3*55*FLEN/8, x4, x1, x2)

inst_73784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800003ffffffff; valaddr_reg:x3; val_offset:221352*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221352*0 + 3*56*FLEN/8, x4, x1, x2)

inst_73785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800007ffffffff; valaddr_reg:x3; val_offset:221355*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221355*0 + 3*57*FLEN/8, x4, x1, x2)

inst_73786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80000fffffffff; valaddr_reg:x3; val_offset:221358*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221358*0 + 3*58*FLEN/8, x4, x1, x2)

inst_73787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80001fffffffff; valaddr_reg:x3; val_offset:221361*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221361*0 + 3*59*FLEN/8, x4, x1, x2)

inst_73788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80003fffffffff; valaddr_reg:x3; val_offset:221364*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221364*0 + 3*60*FLEN/8, x4, x1, x2)

inst_73789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80007fffffffff; valaddr_reg:x3; val_offset:221367*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221367*0 + 3*61*FLEN/8, x4, x1, x2)

inst_73790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8000ffffffffff; valaddr_reg:x3; val_offset:221370*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221370*0 + 3*62*FLEN/8, x4, x1, x2)

inst_73791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8001ffffffffff; valaddr_reg:x3; val_offset:221373*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221373*0 + 3*63*FLEN/8, x4, x1, x2)

inst_73792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8003ffffffffff; valaddr_reg:x3; val_offset:221376*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221376*0 + 3*64*FLEN/8, x4, x1, x2)

inst_73793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8007ffffffffff; valaddr_reg:x3; val_offset:221379*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221379*0 + 3*65*FLEN/8, x4, x1, x2)

inst_73794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x800fffffffffff; valaddr_reg:x3; val_offset:221382*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221382*0 + 3*66*FLEN/8, x4, x1, x2)

inst_73795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x801fffffffffff; valaddr_reg:x3; val_offset:221385*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221385*0 + 3*67*FLEN/8, x4, x1, x2)

inst_73796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x803fffffffffff; valaddr_reg:x3; val_offset:221388*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221388*0 + 3*68*FLEN/8, x4, x1, x2)

inst_73797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x807fffffffffff; valaddr_reg:x3; val_offset:221391*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221391*0 + 3*69*FLEN/8, x4, x1, x2)

inst_73798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x80ffffffffffff; valaddr_reg:x3; val_offset:221394*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221394*0 + 3*70*FLEN/8, x4, x1, x2)

inst_73799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x81ffffffffffff; valaddr_reg:x3; val_offset:221397*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221397*0 + 3*71*FLEN/8, x4, x1, x2)

inst_73800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x83ffffffffffff; valaddr_reg:x3; val_offset:221400*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221400*0 + 3*72*FLEN/8, x4, x1, x2)

inst_73801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x87ffffffffffff; valaddr_reg:x3; val_offset:221403*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221403*0 + 3*73*FLEN/8, x4, x1, x2)

inst_73802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x88000000000000; valaddr_reg:x3; val_offset:221406*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221406*0 + 3*74*FLEN/8, x4, x1, x2)

inst_73803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8c000000000000; valaddr_reg:x3; val_offset:221409*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221409*0 + 3*75*FLEN/8, x4, x1, x2)

inst_73804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8e000000000000; valaddr_reg:x3; val_offset:221412*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221412*0 + 3*76*FLEN/8, x4, x1, x2)

inst_73805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8f000000000000; valaddr_reg:x3; val_offset:221415*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221415*0 + 3*77*FLEN/8, x4, x1, x2)

inst_73806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8f800000000000; valaddr_reg:x3; val_offset:221418*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221418*0 + 3*78*FLEN/8, x4, x1, x2)

inst_73807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fc00000000000; valaddr_reg:x3; val_offset:221421*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221421*0 + 3*79*FLEN/8, x4, x1, x2)

inst_73808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fe00000000000; valaddr_reg:x3; val_offset:221424*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221424*0 + 3*80*FLEN/8, x4, x1, x2)

inst_73809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ff00000000000; valaddr_reg:x3; val_offset:221427*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221427*0 + 3*81*FLEN/8, x4, x1, x2)

inst_73810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ff80000000000; valaddr_reg:x3; val_offset:221430*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221430*0 + 3*82*FLEN/8, x4, x1, x2)

inst_73811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffc0000000000; valaddr_reg:x3; val_offset:221433*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221433*0 + 3*83*FLEN/8, x4, x1, x2)

inst_73812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffe0000000000; valaddr_reg:x3; val_offset:221436*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221436*0 + 3*84*FLEN/8, x4, x1, x2)

inst_73813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fff0000000000; valaddr_reg:x3; val_offset:221439*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221439*0 + 3*85*FLEN/8, x4, x1, x2)

inst_73814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fff8000000000; valaddr_reg:x3; val_offset:221442*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221442*0 + 3*86*FLEN/8, x4, x1, x2)

inst_73815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffc000000000; valaddr_reg:x3; val_offset:221445*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221445*0 + 3*87*FLEN/8, x4, x1, x2)

inst_73816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffe000000000; valaddr_reg:x3; val_offset:221448*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221448*0 + 3*88*FLEN/8, x4, x1, x2)

inst_73817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffff000000000; valaddr_reg:x3; val_offset:221451*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221451*0 + 3*89*FLEN/8, x4, x1, x2)

inst_73818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffff800000000; valaddr_reg:x3; val_offset:221454*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221454*0 + 3*90*FLEN/8, x4, x1, x2)

inst_73819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffc00000000; valaddr_reg:x3; val_offset:221457*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221457*0 + 3*91*FLEN/8, x4, x1, x2)

inst_73820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffe00000000; valaddr_reg:x3; val_offset:221460*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221460*0 + 3*92*FLEN/8, x4, x1, x2)

inst_73821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffff00000000; valaddr_reg:x3; val_offset:221463*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221463*0 + 3*93*FLEN/8, x4, x1, x2)

inst_73822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffff80000000; valaddr_reg:x3; val_offset:221466*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221466*0 + 3*94*FLEN/8, x4, x1, x2)

inst_73823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffc0000000; valaddr_reg:x3; val_offset:221469*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221469*0 + 3*95*FLEN/8, x4, x1, x2)

inst_73824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffe0000000; valaddr_reg:x3; val_offset:221472*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221472*0 + 3*96*FLEN/8, x4, x1, x2)

inst_73825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffff0000000; valaddr_reg:x3; val_offset:221475*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221475*0 + 3*97*FLEN/8, x4, x1, x2)

inst_73826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffff8000000; valaddr_reg:x3; val_offset:221478*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221478*0 + 3*98*FLEN/8, x4, x1, x2)

inst_73827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffc000000; valaddr_reg:x3; val_offset:221481*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221481*0 + 3*99*FLEN/8, x4, x1, x2)

inst_73828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffe000000; valaddr_reg:x3; val_offset:221484*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221484*0 + 3*100*FLEN/8, x4, x1, x2)

inst_73829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffff000000; valaddr_reg:x3; val_offset:221487*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221487*0 + 3*101*FLEN/8, x4, x1, x2)

inst_73830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffff800000; valaddr_reg:x3; val_offset:221490*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221490*0 + 3*102*FLEN/8, x4, x1, x2)

inst_73831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffffc00000; valaddr_reg:x3; val_offset:221493*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221493*0 + 3*103*FLEN/8, x4, x1, x2)

inst_73832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffffe00000; valaddr_reg:x3; val_offset:221496*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221496*0 + 3*104*FLEN/8, x4, x1, x2)

inst_73833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffff00000; valaddr_reg:x3; val_offset:221499*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221499*0 + 3*105*FLEN/8, x4, x1, x2)

inst_73834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffff80000; valaddr_reg:x3; val_offset:221502*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221502*0 + 3*106*FLEN/8, x4, x1, x2)

inst_73835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffffc0000; valaddr_reg:x3; val_offset:221505*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221505*0 + 3*107*FLEN/8, x4, x1, x2)

inst_73836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffffe0000; valaddr_reg:x3; val_offset:221508*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221508*0 + 3*108*FLEN/8, x4, x1, x2)

inst_73837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffffff0000; valaddr_reg:x3; val_offset:221511*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221511*0 + 3*109*FLEN/8, x4, x1, x2)

inst_73838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffffff8000; valaddr_reg:x3; val_offset:221514*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221514*0 + 3*110*FLEN/8, x4, x1, x2)

inst_73839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffffffc000; valaddr_reg:x3; val_offset:221517*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221517*0 + 3*111*FLEN/8, x4, x1, x2)

inst_73840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffffffe000; valaddr_reg:x3; val_offset:221520*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221520*0 + 3*112*FLEN/8, x4, x1, x2)

inst_73841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffffff000; valaddr_reg:x3; val_offset:221523*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221523*0 + 3*113*FLEN/8, x4, x1, x2)

inst_73842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffffff800; valaddr_reg:x3; val_offset:221526*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221526*0 + 3*114*FLEN/8, x4, x1, x2)

inst_73843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffffffc00; valaddr_reg:x3; val_offset:221529*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221529*0 + 3*115*FLEN/8, x4, x1, x2)

inst_73844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffffffe00; valaddr_reg:x3; val_offset:221532*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221532*0 + 3*116*FLEN/8, x4, x1, x2)

inst_73845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffffffff00; valaddr_reg:x3; val_offset:221535*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221535*0 + 3*117*FLEN/8, x4, x1, x2)

inst_73846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffffffff80; valaddr_reg:x3; val_offset:221538*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221538*0 + 3*118*FLEN/8, x4, x1, x2)

inst_73847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffffffffc0; valaddr_reg:x3; val_offset:221541*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221541*0 + 3*119*FLEN/8, x4, x1, x2)

inst_73848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffffffffe0; valaddr_reg:x3; val_offset:221544*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221544*0 + 3*120*FLEN/8, x4, x1, x2)

inst_73849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffffffff0; valaddr_reg:x3; val_offset:221547*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221547*0 + 3*121*FLEN/8, x4, x1, x2)

inst_73850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffffffff8; valaddr_reg:x3; val_offset:221550*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221550*0 + 3*122*FLEN/8, x4, x1, x2)

inst_73851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffffffffc; valaddr_reg:x3; val_offset:221553*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221553*0 + 3*123*FLEN/8, x4, x1, x2)

inst_73852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8ffffffffffffe; valaddr_reg:x3; val_offset:221556*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221556*0 + 3*124*FLEN/8, x4, x1, x2)

inst_73853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757a8eb51dbf7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa757a8eb51dbf7; op2val:0x0;
op3val:0x8fffffffffffff; valaddr_reg:x3; val_offset:221559*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221559*0 + 3*125*FLEN/8, x4, x1, x2)

inst_73854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:221562*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221562*0 + 3*126*FLEN/8, x4, x1, x2)

inst_73855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:221565*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221565*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_73856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:221568*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221568*0 + 3*128*FLEN/8, x4, x1, x2)

inst_73857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:221571*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221571*0 + 3*129*FLEN/8, x4, x1, x2)

inst_73858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:221574*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221574*0 + 3*130*FLEN/8, x4, x1, x2)

inst_73859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:221577*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221577*0 + 3*131*FLEN/8, x4, x1, x2)

inst_73860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:221580*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221580*0 + 3*132*FLEN/8, x4, x1, x2)

inst_73861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:221583*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221583*0 + 3*133*FLEN/8, x4, x1, x2)

inst_73862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:221586*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221586*0 + 3*134*FLEN/8, x4, x1, x2)

inst_73863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:221589*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221589*0 + 3*135*FLEN/8, x4, x1, x2)

inst_73864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:221592*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221592*0 + 3*136*FLEN/8, x4, x1, x2)

inst_73865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:221595*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221595*0 + 3*137*FLEN/8, x4, x1, x2)

inst_73866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:221598*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221598*0 + 3*138*FLEN/8, x4, x1, x2)

inst_73867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:221601*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221601*0 + 3*139*FLEN/8, x4, x1, x2)

inst_73868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:221604*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221604*0 + 3*140*FLEN/8, x4, x1, x2)

inst_73869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:221607*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221607*0 + 3*141*FLEN/8, x4, x1, x2)

inst_73870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:221610*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221610*0 + 3*142*FLEN/8, x4, x1, x2)

inst_73871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:221613*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221613*0 + 3*143*FLEN/8, x4, x1, x2)

inst_73872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:221616*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221616*0 + 3*144*FLEN/8, x4, x1, x2)

inst_73873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:221619*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221619*0 + 3*145*FLEN/8, x4, x1, x2)

inst_73874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:221622*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221622*0 + 3*146*FLEN/8, x4, x1, x2)

inst_73875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:221625*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221625*0 + 3*147*FLEN/8, x4, x1, x2)

inst_73876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000000000000; valaddr_reg:x3; val_offset:221628*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221628*0 + 3*148*FLEN/8, x4, x1, x2)

inst_73877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000000000001; valaddr_reg:x3; val_offset:221631*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221631*0 + 3*149*FLEN/8, x4, x1, x2)

inst_73878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000000000003; valaddr_reg:x3; val_offset:221634*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221634*0 + 3*150*FLEN/8, x4, x1, x2)

inst_73879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000000000007; valaddr_reg:x3; val_offset:221637*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221637*0 + 3*151*FLEN/8, x4, x1, x2)

inst_73880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000000000000f; valaddr_reg:x3; val_offset:221640*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221640*0 + 3*152*FLEN/8, x4, x1, x2)

inst_73881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000000000001f; valaddr_reg:x3; val_offset:221643*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221643*0 + 3*153*FLEN/8, x4, x1, x2)

inst_73882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000000000003f; valaddr_reg:x3; val_offset:221646*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221646*0 + 3*154*FLEN/8, x4, x1, x2)

inst_73883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000000000007f; valaddr_reg:x3; val_offset:221649*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221649*0 + 3*155*FLEN/8, x4, x1, x2)

inst_73884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00000000000ff; valaddr_reg:x3; val_offset:221652*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221652*0 + 3*156*FLEN/8, x4, x1, x2)

inst_73885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00000000001ff; valaddr_reg:x3; val_offset:221655*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221655*0 + 3*157*FLEN/8, x4, x1, x2)

inst_73886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00000000003ff; valaddr_reg:x3; val_offset:221658*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221658*0 + 3*158*FLEN/8, x4, x1, x2)

inst_73887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00000000007ff; valaddr_reg:x3; val_offset:221661*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221661*0 + 3*159*FLEN/8, x4, x1, x2)

inst_73888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000000000fff; valaddr_reg:x3; val_offset:221664*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221664*0 + 3*160*FLEN/8, x4, x1, x2)

inst_73889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000000001fff; valaddr_reg:x3; val_offset:221667*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221667*0 + 3*161*FLEN/8, x4, x1, x2)

inst_73890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000000003fff; valaddr_reg:x3; val_offset:221670*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221670*0 + 3*162*FLEN/8, x4, x1, x2)

inst_73891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000000007fff; valaddr_reg:x3; val_offset:221673*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221673*0 + 3*163*FLEN/8, x4, x1, x2)

inst_73892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000000000ffff; valaddr_reg:x3; val_offset:221676*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221676*0 + 3*164*FLEN/8, x4, x1, x2)

inst_73893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000000001ffff; valaddr_reg:x3; val_offset:221679*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221679*0 + 3*165*FLEN/8, x4, x1, x2)

inst_73894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000000003ffff; valaddr_reg:x3; val_offset:221682*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221682*0 + 3*166*FLEN/8, x4, x1, x2)

inst_73895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000000007ffff; valaddr_reg:x3; val_offset:221685*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221685*0 + 3*167*FLEN/8, x4, x1, x2)

inst_73896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00000000fffff; valaddr_reg:x3; val_offset:221688*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221688*0 + 3*168*FLEN/8, x4, x1, x2)

inst_73897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00000001fffff; valaddr_reg:x3; val_offset:221691*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221691*0 + 3*169*FLEN/8, x4, x1, x2)

inst_73898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00000003fffff; valaddr_reg:x3; val_offset:221694*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221694*0 + 3*170*FLEN/8, x4, x1, x2)

inst_73899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00000007fffff; valaddr_reg:x3; val_offset:221697*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221697*0 + 3*171*FLEN/8, x4, x1, x2)

inst_73900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000000ffffff; valaddr_reg:x3; val_offset:221700*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221700*0 + 3*172*FLEN/8, x4, x1, x2)

inst_73901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000001ffffff; valaddr_reg:x3; val_offset:221703*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221703*0 + 3*173*FLEN/8, x4, x1, x2)

inst_73902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000003ffffff; valaddr_reg:x3; val_offset:221706*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221706*0 + 3*174*FLEN/8, x4, x1, x2)

inst_73903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000007ffffff; valaddr_reg:x3; val_offset:221709*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221709*0 + 3*175*FLEN/8, x4, x1, x2)

inst_73904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000000fffffff; valaddr_reg:x3; val_offset:221712*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221712*0 + 3*176*FLEN/8, x4, x1, x2)

inst_73905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000001fffffff; valaddr_reg:x3; val_offset:221715*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221715*0 + 3*177*FLEN/8, x4, x1, x2)

inst_73906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000003fffffff; valaddr_reg:x3; val_offset:221718*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221718*0 + 3*178*FLEN/8, x4, x1, x2)

inst_73907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000007fffffff; valaddr_reg:x3; val_offset:221721*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221721*0 + 3*179*FLEN/8, x4, x1, x2)

inst_73908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00000ffffffff; valaddr_reg:x3; val_offset:221724*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221724*0 + 3*180*FLEN/8, x4, x1, x2)

inst_73909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00001ffffffff; valaddr_reg:x3; val_offset:221727*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221727*0 + 3*181*FLEN/8, x4, x1, x2)

inst_73910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00003ffffffff; valaddr_reg:x3; val_offset:221730*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221730*0 + 3*182*FLEN/8, x4, x1, x2)

inst_73911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00007ffffffff; valaddr_reg:x3; val_offset:221733*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221733*0 + 3*183*FLEN/8, x4, x1, x2)

inst_73912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0000fffffffff; valaddr_reg:x3; val_offset:221736*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221736*0 + 3*184*FLEN/8, x4, x1, x2)

inst_73913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0001fffffffff; valaddr_reg:x3; val_offset:221739*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221739*0 + 3*185*FLEN/8, x4, x1, x2)

inst_73914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0003fffffffff; valaddr_reg:x3; val_offset:221742*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221742*0 + 3*186*FLEN/8, x4, x1, x2)

inst_73915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0007fffffffff; valaddr_reg:x3; val_offset:221745*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221745*0 + 3*187*FLEN/8, x4, x1, x2)

inst_73916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc000ffffffffff; valaddr_reg:x3; val_offset:221748*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221748*0 + 3*188*FLEN/8, x4, x1, x2)

inst_73917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc001ffffffffff; valaddr_reg:x3; val_offset:221751*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221751*0 + 3*189*FLEN/8, x4, x1, x2)

inst_73918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc003ffffffffff; valaddr_reg:x3; val_offset:221754*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221754*0 + 3*190*FLEN/8, x4, x1, x2)

inst_73919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc007ffffffffff; valaddr_reg:x3; val_offset:221757*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221757*0 + 3*191*FLEN/8, x4, x1, x2)

inst_73920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc00fffffffffff; valaddr_reg:x3; val_offset:221760*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221760*0 + 3*192*FLEN/8, x4, x1, x2)

inst_73921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc01fffffffffff; valaddr_reg:x3; val_offset:221763*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221763*0 + 3*193*FLEN/8, x4, x1, x2)

inst_73922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc03fffffffffff; valaddr_reg:x3; val_offset:221766*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221766*0 + 3*194*FLEN/8, x4, x1, x2)

inst_73923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc07fffffffffff; valaddr_reg:x3; val_offset:221769*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221769*0 + 3*195*FLEN/8, x4, x1, x2)

inst_73924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc0ffffffffffff; valaddr_reg:x3; val_offset:221772*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221772*0 + 3*196*FLEN/8, x4, x1, x2)

inst_73925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc1ffffffffffff; valaddr_reg:x3; val_offset:221775*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221775*0 + 3*197*FLEN/8, x4, x1, x2)

inst_73926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc3ffffffffffff; valaddr_reg:x3; val_offset:221778*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221778*0 + 3*198*FLEN/8, x4, x1, x2)

inst_73927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc7ffffffffffff; valaddr_reg:x3; val_offset:221781*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221781*0 + 3*199*FLEN/8, x4, x1, x2)

inst_73928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xc8000000000000; valaddr_reg:x3; val_offset:221784*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221784*0 + 3*200*FLEN/8, x4, x1, x2)

inst_73929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcc000000000000; valaddr_reg:x3; val_offset:221787*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221787*0 + 3*201*FLEN/8, x4, x1, x2)

inst_73930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xce000000000000; valaddr_reg:x3; val_offset:221790*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221790*0 + 3*202*FLEN/8, x4, x1, x2)

inst_73931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcf000000000000; valaddr_reg:x3; val_offset:221793*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221793*0 + 3*203*FLEN/8, x4, x1, x2)

inst_73932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcf800000000000; valaddr_reg:x3; val_offset:221796*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221796*0 + 3*204*FLEN/8, x4, x1, x2)

inst_73933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfc00000000000; valaddr_reg:x3; val_offset:221799*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221799*0 + 3*205*FLEN/8, x4, x1, x2)

inst_73934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfe00000000000; valaddr_reg:x3; val_offset:221802*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221802*0 + 3*206*FLEN/8, x4, x1, x2)

inst_73935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcff00000000000; valaddr_reg:x3; val_offset:221805*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221805*0 + 3*207*FLEN/8, x4, x1, x2)

inst_73936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcff80000000000; valaddr_reg:x3; val_offset:221808*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221808*0 + 3*208*FLEN/8, x4, x1, x2)

inst_73937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffc0000000000; valaddr_reg:x3; val_offset:221811*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221811*0 + 3*209*FLEN/8, x4, x1, x2)

inst_73938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffe0000000000; valaddr_reg:x3; val_offset:221814*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221814*0 + 3*210*FLEN/8, x4, x1, x2)

inst_73939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfff0000000000; valaddr_reg:x3; val_offset:221817*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221817*0 + 3*211*FLEN/8, x4, x1, x2)

inst_73940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfff8000000000; valaddr_reg:x3; val_offset:221820*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221820*0 + 3*212*FLEN/8, x4, x1, x2)

inst_73941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffc000000000; valaddr_reg:x3; val_offset:221823*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221823*0 + 3*213*FLEN/8, x4, x1, x2)

inst_73942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffe000000000; valaddr_reg:x3; val_offset:221826*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221826*0 + 3*214*FLEN/8, x4, x1, x2)

inst_73943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffff000000000; valaddr_reg:x3; val_offset:221829*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221829*0 + 3*215*FLEN/8, x4, x1, x2)

inst_73944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffff800000000; valaddr_reg:x3; val_offset:221832*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221832*0 + 3*216*FLEN/8, x4, x1, x2)

inst_73945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffc00000000; valaddr_reg:x3; val_offset:221835*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221835*0 + 3*217*FLEN/8, x4, x1, x2)

inst_73946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffe00000000; valaddr_reg:x3; val_offset:221838*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221838*0 + 3*218*FLEN/8, x4, x1, x2)

inst_73947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffff00000000; valaddr_reg:x3; val_offset:221841*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221841*0 + 3*219*FLEN/8, x4, x1, x2)

inst_73948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffff80000000; valaddr_reg:x3; val_offset:221844*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221844*0 + 3*220*FLEN/8, x4, x1, x2)

inst_73949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffc0000000; valaddr_reg:x3; val_offset:221847*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221847*0 + 3*221*FLEN/8, x4, x1, x2)

inst_73950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffe0000000; valaddr_reg:x3; val_offset:221850*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221850*0 + 3*222*FLEN/8, x4, x1, x2)

inst_73951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffff0000000; valaddr_reg:x3; val_offset:221853*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221853*0 + 3*223*FLEN/8, x4, x1, x2)

inst_73952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffff8000000; valaddr_reg:x3; val_offset:221856*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221856*0 + 3*224*FLEN/8, x4, x1, x2)

inst_73953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffc000000; valaddr_reg:x3; val_offset:221859*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221859*0 + 3*225*FLEN/8, x4, x1, x2)

inst_73954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffe000000; valaddr_reg:x3; val_offset:221862*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221862*0 + 3*226*FLEN/8, x4, x1, x2)

inst_73955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffff000000; valaddr_reg:x3; val_offset:221865*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221865*0 + 3*227*FLEN/8, x4, x1, x2)

inst_73956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffff800000; valaddr_reg:x3; val_offset:221868*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221868*0 + 3*228*FLEN/8, x4, x1, x2)

inst_73957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffffc00000; valaddr_reg:x3; val_offset:221871*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221871*0 + 3*229*FLEN/8, x4, x1, x2)

inst_73958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffffe00000; valaddr_reg:x3; val_offset:221874*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221874*0 + 3*230*FLEN/8, x4, x1, x2)

inst_73959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffff00000; valaddr_reg:x3; val_offset:221877*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221877*0 + 3*231*FLEN/8, x4, x1, x2)

inst_73960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffff80000; valaddr_reg:x3; val_offset:221880*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221880*0 + 3*232*FLEN/8, x4, x1, x2)

inst_73961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffffc0000; valaddr_reg:x3; val_offset:221883*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221883*0 + 3*233*FLEN/8, x4, x1, x2)

inst_73962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffffe0000; valaddr_reg:x3; val_offset:221886*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221886*0 + 3*234*FLEN/8, x4, x1, x2)

inst_73963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffffff0000; valaddr_reg:x3; val_offset:221889*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221889*0 + 3*235*FLEN/8, x4, x1, x2)

inst_73964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffffff8000; valaddr_reg:x3; val_offset:221892*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221892*0 + 3*236*FLEN/8, x4, x1, x2)

inst_73965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffffffc000; valaddr_reg:x3; val_offset:221895*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221895*0 + 3*237*FLEN/8, x4, x1, x2)

inst_73966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffffffe000; valaddr_reg:x3; val_offset:221898*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221898*0 + 3*238*FLEN/8, x4, x1, x2)

inst_73967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffffff000; valaddr_reg:x3; val_offset:221901*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221901*0 + 3*239*FLEN/8, x4, x1, x2)

inst_73968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffffff800; valaddr_reg:x3; val_offset:221904*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221904*0 + 3*240*FLEN/8, x4, x1, x2)

inst_73969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffffffc00; valaddr_reg:x3; val_offset:221907*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221907*0 + 3*241*FLEN/8, x4, x1, x2)

inst_73970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffffffe00; valaddr_reg:x3; val_offset:221910*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221910*0 + 3*242*FLEN/8, x4, x1, x2)

inst_73971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffffffff00; valaddr_reg:x3; val_offset:221913*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221913*0 + 3*243*FLEN/8, x4, x1, x2)

inst_73972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffffffff80; valaddr_reg:x3; val_offset:221916*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221916*0 + 3*244*FLEN/8, x4, x1, x2)

inst_73973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffffffffc0; valaddr_reg:x3; val_offset:221919*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221919*0 + 3*245*FLEN/8, x4, x1, x2)

inst_73974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffffffffe0; valaddr_reg:x3; val_offset:221922*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221922*0 + 3*246*FLEN/8, x4, x1, x2)

inst_73975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffffffff0; valaddr_reg:x3; val_offset:221925*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221925*0 + 3*247*FLEN/8, x4, x1, x2)

inst_73976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffffffff8; valaddr_reg:x3; val_offset:221928*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221928*0 + 3*248*FLEN/8, x4, x1, x2)

inst_73977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffffffffc; valaddr_reg:x3; val_offset:221931*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221931*0 + 3*249*FLEN/8, x4, x1, x2)

inst_73978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcffffffffffffe; valaddr_reg:x3; val_offset:221934*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221934*0 + 3*250*FLEN/8, x4, x1, x2)

inst_73979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75a622ce1717e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75a622ce1717e; op2val:0x0;
op3val:0xcfffffffffffff; valaddr_reg:x3; val_offset:221937*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221937*0 + 3*251*FLEN/8, x4, x1, x2)

inst_73980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:221940*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221940*0 + 3*252*FLEN/8, x4, x1, x2)

inst_73981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:221943*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221943*0 + 3*253*FLEN/8, x4, x1, x2)

inst_73982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:221946*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221946*0 + 3*254*FLEN/8, x4, x1, x2)

inst_73983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:221949*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221949*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_73984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:221952*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221952*0 + 3*256*FLEN/8, x4, x1, x2)

inst_73985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:221955*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221955*0 + 3*257*FLEN/8, x4, x1, x2)

inst_73986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:221958*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221958*0 + 3*258*FLEN/8, x4, x1, x2)

inst_73987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:221961*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221961*0 + 3*259*FLEN/8, x4, x1, x2)

inst_73988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:221964*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221964*0 + 3*260*FLEN/8, x4, x1, x2)

inst_73989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:221967*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221967*0 + 3*261*FLEN/8, x4, x1, x2)

inst_73990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:221970*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221970*0 + 3*262*FLEN/8, x4, x1, x2)

inst_73991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:221973*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221973*0 + 3*263*FLEN/8, x4, x1, x2)

inst_73992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:221976*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221976*0 + 3*264*FLEN/8, x4, x1, x2)

inst_73993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:221979*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221979*0 + 3*265*FLEN/8, x4, x1, x2)

inst_73994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:221982*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221982*0 + 3*266*FLEN/8, x4, x1, x2)

inst_73995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:221985*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221985*0 + 3*267*FLEN/8, x4, x1, x2)

inst_73996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:221988*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221988*0 + 3*268*FLEN/8, x4, x1, x2)

inst_73997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:221991*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221991*0 + 3*269*FLEN/8, x4, x1, x2)

inst_73998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:221994*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221994*0 + 3*270*FLEN/8, x4, x1, x2)

inst_73999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:221997*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 221997*0 + 3*271*FLEN/8, x4, x1, x2)

inst_74000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:222000*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222000*0 + 3*272*FLEN/8, x4, x1, x2)

inst_74001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:222003*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222003*0 + 3*273*FLEN/8, x4, x1, x2)

inst_74002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000000000000; valaddr_reg:x3; val_offset:222006*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222006*0 + 3*274*FLEN/8, x4, x1, x2)

inst_74003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000000000001; valaddr_reg:x3; val_offset:222009*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222009*0 + 3*275*FLEN/8, x4, x1, x2)

inst_74004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000000000003; valaddr_reg:x3; val_offset:222012*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222012*0 + 3*276*FLEN/8, x4, x1, x2)

inst_74005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000000000007; valaddr_reg:x3; val_offset:222015*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222015*0 + 3*277*FLEN/8, x4, x1, x2)

inst_74006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000000000000f; valaddr_reg:x3; val_offset:222018*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222018*0 + 3*278*FLEN/8, x4, x1, x2)

inst_74007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000000000001f; valaddr_reg:x3; val_offset:222021*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222021*0 + 3*279*FLEN/8, x4, x1, x2)

inst_74008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000000000003f; valaddr_reg:x3; val_offset:222024*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222024*0 + 3*280*FLEN/8, x4, x1, x2)

inst_74009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000000000007f; valaddr_reg:x3; val_offset:222027*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222027*0 + 3*281*FLEN/8, x4, x1, x2)

inst_74010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900000000000ff; valaddr_reg:x3; val_offset:222030*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222030*0 + 3*282*FLEN/8, x4, x1, x2)

inst_74011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900000000001ff; valaddr_reg:x3; val_offset:222033*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222033*0 + 3*283*FLEN/8, x4, x1, x2)

inst_74012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900000000003ff; valaddr_reg:x3; val_offset:222036*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222036*0 + 3*284*FLEN/8, x4, x1, x2)

inst_74013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900000000007ff; valaddr_reg:x3; val_offset:222039*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222039*0 + 3*285*FLEN/8, x4, x1, x2)

inst_74014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000000000fff; valaddr_reg:x3; val_offset:222042*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222042*0 + 3*286*FLEN/8, x4, x1, x2)

inst_74015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000000001fff; valaddr_reg:x3; val_offset:222045*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222045*0 + 3*287*FLEN/8, x4, x1, x2)

inst_74016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000000003fff; valaddr_reg:x3; val_offset:222048*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222048*0 + 3*288*FLEN/8, x4, x1, x2)

inst_74017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000000007fff; valaddr_reg:x3; val_offset:222051*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222051*0 + 3*289*FLEN/8, x4, x1, x2)

inst_74018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000000000ffff; valaddr_reg:x3; val_offset:222054*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222054*0 + 3*290*FLEN/8, x4, x1, x2)

inst_74019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000000001ffff; valaddr_reg:x3; val_offset:222057*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222057*0 + 3*291*FLEN/8, x4, x1, x2)

inst_74020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000000003ffff; valaddr_reg:x3; val_offset:222060*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222060*0 + 3*292*FLEN/8, x4, x1, x2)

inst_74021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000000007ffff; valaddr_reg:x3; val_offset:222063*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222063*0 + 3*293*FLEN/8, x4, x1, x2)

inst_74022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900000000fffff; valaddr_reg:x3; val_offset:222066*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222066*0 + 3*294*FLEN/8, x4, x1, x2)

inst_74023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900000001fffff; valaddr_reg:x3; val_offset:222069*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222069*0 + 3*295*FLEN/8, x4, x1, x2)

inst_74024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900000003fffff; valaddr_reg:x3; val_offset:222072*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222072*0 + 3*296*FLEN/8, x4, x1, x2)

inst_74025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900000007fffff; valaddr_reg:x3; val_offset:222075*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222075*0 + 3*297*FLEN/8, x4, x1, x2)

inst_74026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000000ffffff; valaddr_reg:x3; val_offset:222078*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222078*0 + 3*298*FLEN/8, x4, x1, x2)

inst_74027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000001ffffff; valaddr_reg:x3; val_offset:222081*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222081*0 + 3*299*FLEN/8, x4, x1, x2)

inst_74028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000003ffffff; valaddr_reg:x3; val_offset:222084*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222084*0 + 3*300*FLEN/8, x4, x1, x2)

inst_74029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000007ffffff; valaddr_reg:x3; val_offset:222087*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222087*0 + 3*301*FLEN/8, x4, x1, x2)

inst_74030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000000fffffff; valaddr_reg:x3; val_offset:222090*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222090*0 + 3*302*FLEN/8, x4, x1, x2)

inst_74031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000001fffffff; valaddr_reg:x3; val_offset:222093*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222093*0 + 3*303*FLEN/8, x4, x1, x2)

inst_74032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000003fffffff; valaddr_reg:x3; val_offset:222096*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222096*0 + 3*304*FLEN/8, x4, x1, x2)

inst_74033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000007fffffff; valaddr_reg:x3; val_offset:222099*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222099*0 + 3*305*FLEN/8, x4, x1, x2)

inst_74034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900000ffffffff; valaddr_reg:x3; val_offset:222102*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222102*0 + 3*306*FLEN/8, x4, x1, x2)

inst_74035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900001ffffffff; valaddr_reg:x3; val_offset:222105*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222105*0 + 3*307*FLEN/8, x4, x1, x2)

inst_74036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900003ffffffff; valaddr_reg:x3; val_offset:222108*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222108*0 + 3*308*FLEN/8, x4, x1, x2)

inst_74037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900007ffffffff; valaddr_reg:x3; val_offset:222111*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222111*0 + 3*309*FLEN/8, x4, x1, x2)

inst_74038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290000fffffffff; valaddr_reg:x3; val_offset:222114*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222114*0 + 3*310*FLEN/8, x4, x1, x2)

inst_74039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290001fffffffff; valaddr_reg:x3; val_offset:222117*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222117*0 + 3*311*FLEN/8, x4, x1, x2)

inst_74040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290003fffffffff; valaddr_reg:x3; val_offset:222120*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222120*0 + 3*312*FLEN/8, x4, x1, x2)

inst_74041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290007fffffffff; valaddr_reg:x3; val_offset:222123*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222123*0 + 3*313*FLEN/8, x4, x1, x2)

inst_74042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29000ffffffffff; valaddr_reg:x3; val_offset:222126*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222126*0 + 3*314*FLEN/8, x4, x1, x2)

inst_74043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29001ffffffffff; valaddr_reg:x3; val_offset:222129*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222129*0 + 3*315*FLEN/8, x4, x1, x2)

inst_74044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29003ffffffffff; valaddr_reg:x3; val_offset:222132*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222132*0 + 3*316*FLEN/8, x4, x1, x2)

inst_74045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29007ffffffffff; valaddr_reg:x3; val_offset:222135*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222135*0 + 3*317*FLEN/8, x4, x1, x2)

inst_74046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2900fffffffffff; valaddr_reg:x3; val_offset:222138*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222138*0 + 3*318*FLEN/8, x4, x1, x2)

inst_74047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2901fffffffffff; valaddr_reg:x3; val_offset:222141*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222141*0 + 3*319*FLEN/8, x4, x1, x2)

inst_74048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2903fffffffffff; valaddr_reg:x3; val_offset:222144*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222144*0 + 3*320*FLEN/8, x4, x1, x2)

inst_74049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x2907fffffffffff; valaddr_reg:x3; val_offset:222147*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222147*0 + 3*321*FLEN/8, x4, x1, x2)

inst_74050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x290ffffffffffff; valaddr_reg:x3; val_offset:222150*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222150*0 + 3*322*FLEN/8, x4, x1, x2)

inst_74051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x291ffffffffffff; valaddr_reg:x3; val_offset:222153*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222153*0 + 3*323*FLEN/8, x4, x1, x2)

inst_74052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x293ffffffffffff; valaddr_reg:x3; val_offset:222156*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222156*0 + 3*324*FLEN/8, x4, x1, x2)

inst_74053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x297ffffffffffff; valaddr_reg:x3; val_offset:222159*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222159*0 + 3*325*FLEN/8, x4, x1, x2)

inst_74054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x298000000000000; valaddr_reg:x3; val_offset:222162*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222162*0 + 3*326*FLEN/8, x4, x1, x2)

inst_74055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29c000000000000; valaddr_reg:x3; val_offset:222165*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222165*0 + 3*327*FLEN/8, x4, x1, x2)

inst_74056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29e000000000000; valaddr_reg:x3; val_offset:222168*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222168*0 + 3*328*FLEN/8, x4, x1, x2)

inst_74057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29f000000000000; valaddr_reg:x3; val_offset:222171*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222171*0 + 3*329*FLEN/8, x4, x1, x2)

inst_74058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29f800000000000; valaddr_reg:x3; val_offset:222174*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222174*0 + 3*330*FLEN/8, x4, x1, x2)

inst_74059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fc00000000000; valaddr_reg:x3; val_offset:222177*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222177*0 + 3*331*FLEN/8, x4, x1, x2)

inst_74060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fe00000000000; valaddr_reg:x3; val_offset:222180*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222180*0 + 3*332*FLEN/8, x4, x1, x2)

inst_74061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ff00000000000; valaddr_reg:x3; val_offset:222183*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222183*0 + 3*333*FLEN/8, x4, x1, x2)

inst_74062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ff80000000000; valaddr_reg:x3; val_offset:222186*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222186*0 + 3*334*FLEN/8, x4, x1, x2)

inst_74063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffc0000000000; valaddr_reg:x3; val_offset:222189*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222189*0 + 3*335*FLEN/8, x4, x1, x2)

inst_74064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffe0000000000; valaddr_reg:x3; val_offset:222192*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222192*0 + 3*336*FLEN/8, x4, x1, x2)

inst_74065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fff0000000000; valaddr_reg:x3; val_offset:222195*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222195*0 + 3*337*FLEN/8, x4, x1, x2)

inst_74066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fff8000000000; valaddr_reg:x3; val_offset:222198*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222198*0 + 3*338*FLEN/8, x4, x1, x2)

inst_74067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffc000000000; valaddr_reg:x3; val_offset:222201*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222201*0 + 3*339*FLEN/8, x4, x1, x2)

inst_74068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffe000000000; valaddr_reg:x3; val_offset:222204*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222204*0 + 3*340*FLEN/8, x4, x1, x2)

inst_74069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffff000000000; valaddr_reg:x3; val_offset:222207*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222207*0 + 3*341*FLEN/8, x4, x1, x2)

inst_74070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffff800000000; valaddr_reg:x3; val_offset:222210*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222210*0 + 3*342*FLEN/8, x4, x1, x2)

inst_74071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffc00000000; valaddr_reg:x3; val_offset:222213*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222213*0 + 3*343*FLEN/8, x4, x1, x2)

inst_74072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffe00000000; valaddr_reg:x3; val_offset:222216*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222216*0 + 3*344*FLEN/8, x4, x1, x2)

inst_74073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffff00000000; valaddr_reg:x3; val_offset:222219*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222219*0 + 3*345*FLEN/8, x4, x1, x2)

inst_74074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffff80000000; valaddr_reg:x3; val_offset:222222*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222222*0 + 3*346*FLEN/8, x4, x1, x2)

inst_74075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffc0000000; valaddr_reg:x3; val_offset:222225*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222225*0 + 3*347*FLEN/8, x4, x1, x2)

inst_74076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffe0000000; valaddr_reg:x3; val_offset:222228*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222228*0 + 3*348*FLEN/8, x4, x1, x2)

inst_74077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffff0000000; valaddr_reg:x3; val_offset:222231*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222231*0 + 3*349*FLEN/8, x4, x1, x2)

inst_74078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffff8000000; valaddr_reg:x3; val_offset:222234*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222234*0 + 3*350*FLEN/8, x4, x1, x2)

inst_74079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffc000000; valaddr_reg:x3; val_offset:222237*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222237*0 + 3*351*FLEN/8, x4, x1, x2)

inst_74080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffe000000; valaddr_reg:x3; val_offset:222240*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222240*0 + 3*352*FLEN/8, x4, x1, x2)

inst_74081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffff000000; valaddr_reg:x3; val_offset:222243*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222243*0 + 3*353*FLEN/8, x4, x1, x2)

inst_74082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffff800000; valaddr_reg:x3; val_offset:222246*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222246*0 + 3*354*FLEN/8, x4, x1, x2)

inst_74083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffffc00000; valaddr_reg:x3; val_offset:222249*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222249*0 + 3*355*FLEN/8, x4, x1, x2)

inst_74084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffffe00000; valaddr_reg:x3; val_offset:222252*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222252*0 + 3*356*FLEN/8, x4, x1, x2)

inst_74085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffff00000; valaddr_reg:x3; val_offset:222255*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222255*0 + 3*357*FLEN/8, x4, x1, x2)

inst_74086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffff80000; valaddr_reg:x3; val_offset:222258*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222258*0 + 3*358*FLEN/8, x4, x1, x2)

inst_74087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffffc0000; valaddr_reg:x3; val_offset:222261*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222261*0 + 3*359*FLEN/8, x4, x1, x2)

inst_74088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffffe0000; valaddr_reg:x3; val_offset:222264*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222264*0 + 3*360*FLEN/8, x4, x1, x2)

inst_74089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffffff0000; valaddr_reg:x3; val_offset:222267*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222267*0 + 3*361*FLEN/8, x4, x1, x2)

inst_74090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffffff8000; valaddr_reg:x3; val_offset:222270*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222270*0 + 3*362*FLEN/8, x4, x1, x2)

inst_74091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffffffc000; valaddr_reg:x3; val_offset:222273*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222273*0 + 3*363*FLEN/8, x4, x1, x2)

inst_74092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffffffe000; valaddr_reg:x3; val_offset:222276*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222276*0 + 3*364*FLEN/8, x4, x1, x2)

inst_74093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffffff000; valaddr_reg:x3; val_offset:222279*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222279*0 + 3*365*FLEN/8, x4, x1, x2)

inst_74094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffffff800; valaddr_reg:x3; val_offset:222282*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222282*0 + 3*366*FLEN/8, x4, x1, x2)

inst_74095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffffffc00; valaddr_reg:x3; val_offset:222285*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222285*0 + 3*367*FLEN/8, x4, x1, x2)

inst_74096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffffffe00; valaddr_reg:x3; val_offset:222288*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222288*0 + 3*368*FLEN/8, x4, x1, x2)

inst_74097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffffffff00; valaddr_reg:x3; val_offset:222291*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222291*0 + 3*369*FLEN/8, x4, x1, x2)

inst_74098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffffffff80; valaddr_reg:x3; val_offset:222294*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222294*0 + 3*370*FLEN/8, x4, x1, x2)

inst_74099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffffffffc0; valaddr_reg:x3; val_offset:222297*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222297*0 + 3*371*FLEN/8, x4, x1, x2)

inst_74100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffffffffe0; valaddr_reg:x3; val_offset:222300*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222300*0 + 3*372*FLEN/8, x4, x1, x2)

inst_74101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffffffff0; valaddr_reg:x3; val_offset:222303*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222303*0 + 3*373*FLEN/8, x4, x1, x2)

inst_74102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffffffff8; valaddr_reg:x3; val_offset:222306*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222306*0 + 3*374*FLEN/8, x4, x1, x2)

inst_74103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffffffffc; valaddr_reg:x3; val_offset:222309*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222309*0 + 3*375*FLEN/8, x4, x1, x2)

inst_74104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29ffffffffffffe; valaddr_reg:x3; val_offset:222312*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222312*0 + 3*376*FLEN/8, x4, x1, x2)

inst_74105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75e712d4d025e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa75e712d4d025e; op2val:0x0;
op3val:0x29fffffffffffff; valaddr_reg:x3; val_offset:222315*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222315*0 + 3*377*FLEN/8, x4, x1, x2)

inst_74106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:222318*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222318*0 + 3*378*FLEN/8, x4, x1, x2)

inst_74107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:222321*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222321*0 + 3*379*FLEN/8, x4, x1, x2)

inst_74108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:222324*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222324*0 + 3*380*FLEN/8, x4, x1, x2)

inst_74109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:222327*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222327*0 + 3*381*FLEN/8, x4, x1, x2)

inst_74110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:222330*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222330*0 + 3*382*FLEN/8, x4, x1, x2)

inst_74111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:222333*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222333*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_74112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:222336*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222336*0 + 3*384*FLEN/8, x4, x1, x2)

inst_74113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:222339*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222339*0 + 3*385*FLEN/8, x4, x1, x2)

inst_74114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:222342*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222342*0 + 3*386*FLEN/8, x4, x1, x2)

inst_74115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:222345*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222345*0 + 3*387*FLEN/8, x4, x1, x2)

inst_74116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:222348*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222348*0 + 3*388*FLEN/8, x4, x1, x2)

inst_74117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:222351*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222351*0 + 3*389*FLEN/8, x4, x1, x2)

inst_74118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:222354*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222354*0 + 3*390*FLEN/8, x4, x1, x2)

inst_74119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:222357*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222357*0 + 3*391*FLEN/8, x4, x1, x2)

inst_74120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:222360*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222360*0 + 3*392*FLEN/8, x4, x1, x2)

inst_74121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:222363*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222363*0 + 3*393*FLEN/8, x4, x1, x2)

inst_74122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:222366*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222366*0 + 3*394*FLEN/8, x4, x1, x2)

inst_74123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:222369*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222369*0 + 3*395*FLEN/8, x4, x1, x2)

inst_74124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:222372*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222372*0 + 3*396*FLEN/8, x4, x1, x2)

inst_74125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:222375*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222375*0 + 3*397*FLEN/8, x4, x1, x2)

inst_74126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:222378*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222378*0 + 3*398*FLEN/8, x4, x1, x2)

inst_74127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:222381*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222381*0 + 3*399*FLEN/8, x4, x1, x2)

inst_74128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000000000000; valaddr_reg:x3; val_offset:222384*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222384*0 + 3*400*FLEN/8, x4, x1, x2)

inst_74129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000000000001; valaddr_reg:x3; val_offset:222387*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222387*0 + 3*401*FLEN/8, x4, x1, x2)

inst_74130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000000000003; valaddr_reg:x3; val_offset:222390*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222390*0 + 3*402*FLEN/8, x4, x1, x2)

inst_74131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000000000007; valaddr_reg:x3; val_offset:222393*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222393*0 + 3*403*FLEN/8, x4, x1, x2)

inst_74132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000000000000f; valaddr_reg:x3; val_offset:222396*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222396*0 + 3*404*FLEN/8, x4, x1, x2)

inst_74133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000000000001f; valaddr_reg:x3; val_offset:222399*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222399*0 + 3*405*FLEN/8, x4, x1, x2)

inst_74134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000000000003f; valaddr_reg:x3; val_offset:222402*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222402*0 + 3*406*FLEN/8, x4, x1, x2)

inst_74135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000000000007f; valaddr_reg:x3; val_offset:222405*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222405*0 + 3*407*FLEN/8, x4, x1, x2)

inst_74136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100000000000ff; valaddr_reg:x3; val_offset:222408*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222408*0 + 3*408*FLEN/8, x4, x1, x2)

inst_74137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100000000001ff; valaddr_reg:x3; val_offset:222411*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222411*0 + 3*409*FLEN/8, x4, x1, x2)

inst_74138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100000000003ff; valaddr_reg:x3; val_offset:222414*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222414*0 + 3*410*FLEN/8, x4, x1, x2)

inst_74139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100000000007ff; valaddr_reg:x3; val_offset:222417*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222417*0 + 3*411*FLEN/8, x4, x1, x2)

inst_74140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000000000fff; valaddr_reg:x3; val_offset:222420*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222420*0 + 3*412*FLEN/8, x4, x1, x2)

inst_74141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000000001fff; valaddr_reg:x3; val_offset:222423*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222423*0 + 3*413*FLEN/8, x4, x1, x2)

inst_74142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000000003fff; valaddr_reg:x3; val_offset:222426*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222426*0 + 3*414*FLEN/8, x4, x1, x2)

inst_74143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000000007fff; valaddr_reg:x3; val_offset:222429*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222429*0 + 3*415*FLEN/8, x4, x1, x2)

inst_74144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000000000ffff; valaddr_reg:x3; val_offset:222432*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222432*0 + 3*416*FLEN/8, x4, x1, x2)

inst_74145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000000001ffff; valaddr_reg:x3; val_offset:222435*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222435*0 + 3*417*FLEN/8, x4, x1, x2)

inst_74146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000000003ffff; valaddr_reg:x3; val_offset:222438*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222438*0 + 3*418*FLEN/8, x4, x1, x2)

inst_74147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000000007ffff; valaddr_reg:x3; val_offset:222441*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222441*0 + 3*419*FLEN/8, x4, x1, x2)

inst_74148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100000000fffff; valaddr_reg:x3; val_offset:222444*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222444*0 + 3*420*FLEN/8, x4, x1, x2)

inst_74149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100000001fffff; valaddr_reg:x3; val_offset:222447*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222447*0 + 3*421*FLEN/8, x4, x1, x2)

inst_74150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100000003fffff; valaddr_reg:x3; val_offset:222450*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222450*0 + 3*422*FLEN/8, x4, x1, x2)

inst_74151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100000007fffff; valaddr_reg:x3; val_offset:222453*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222453*0 + 3*423*FLEN/8, x4, x1, x2)

inst_74152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000000ffffff; valaddr_reg:x3; val_offset:222456*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222456*0 + 3*424*FLEN/8, x4, x1, x2)

inst_74153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000001ffffff; valaddr_reg:x3; val_offset:222459*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222459*0 + 3*425*FLEN/8, x4, x1, x2)

inst_74154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000003ffffff; valaddr_reg:x3; val_offset:222462*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222462*0 + 3*426*FLEN/8, x4, x1, x2)

inst_74155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000007ffffff; valaddr_reg:x3; val_offset:222465*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222465*0 + 3*427*FLEN/8, x4, x1, x2)

inst_74156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000000fffffff; valaddr_reg:x3; val_offset:222468*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222468*0 + 3*428*FLEN/8, x4, x1, x2)

inst_74157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000001fffffff; valaddr_reg:x3; val_offset:222471*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222471*0 + 3*429*FLEN/8, x4, x1, x2)

inst_74158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000003fffffff; valaddr_reg:x3; val_offset:222474*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222474*0 + 3*430*FLEN/8, x4, x1, x2)

inst_74159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000007fffffff; valaddr_reg:x3; val_offset:222477*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222477*0 + 3*431*FLEN/8, x4, x1, x2)

inst_74160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100000ffffffff; valaddr_reg:x3; val_offset:222480*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222480*0 + 3*432*FLEN/8, x4, x1, x2)

inst_74161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100001ffffffff; valaddr_reg:x3; val_offset:222483*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222483*0 + 3*433*FLEN/8, x4, x1, x2)

inst_74162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100003ffffffff; valaddr_reg:x3; val_offset:222486*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222486*0 + 3*434*FLEN/8, x4, x1, x2)

inst_74163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100007ffffffff; valaddr_reg:x3; val_offset:222489*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222489*0 + 3*435*FLEN/8, x4, x1, x2)

inst_74164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210000fffffffff; valaddr_reg:x3; val_offset:222492*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222492*0 + 3*436*FLEN/8, x4, x1, x2)

inst_74165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210001fffffffff; valaddr_reg:x3; val_offset:222495*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222495*0 + 3*437*FLEN/8, x4, x1, x2)

inst_74166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210003fffffffff; valaddr_reg:x3; val_offset:222498*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222498*0 + 3*438*FLEN/8, x4, x1, x2)

inst_74167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210007fffffffff; valaddr_reg:x3; val_offset:222501*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222501*0 + 3*439*FLEN/8, x4, x1, x2)

inst_74168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821000ffffffffff; valaddr_reg:x3; val_offset:222504*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222504*0 + 3*440*FLEN/8, x4, x1, x2)

inst_74169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821001ffffffffff; valaddr_reg:x3; val_offset:222507*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222507*0 + 3*441*FLEN/8, x4, x1, x2)

inst_74170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821003ffffffffff; valaddr_reg:x3; val_offset:222510*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222510*0 + 3*442*FLEN/8, x4, x1, x2)

inst_74171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821007ffffffffff; valaddr_reg:x3; val_offset:222513*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222513*0 + 3*443*FLEN/8, x4, x1, x2)

inst_74172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82100fffffffffff; valaddr_reg:x3; val_offset:222516*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222516*0 + 3*444*FLEN/8, x4, x1, x2)

inst_74173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82101fffffffffff; valaddr_reg:x3; val_offset:222519*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222519*0 + 3*445*FLEN/8, x4, x1, x2)

inst_74174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82103fffffffffff; valaddr_reg:x3; val_offset:222522*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222522*0 + 3*446*FLEN/8, x4, x1, x2)

inst_74175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x82107fffffffffff; valaddr_reg:x3; val_offset:222525*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222525*0 + 3*447*FLEN/8, x4, x1, x2)

inst_74176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8210ffffffffffff; valaddr_reg:x3; val_offset:222528*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222528*0 + 3*448*FLEN/8, x4, x1, x2)

inst_74177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8211ffffffffffff; valaddr_reg:x3; val_offset:222531*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222531*0 + 3*449*FLEN/8, x4, x1, x2)

inst_74178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8213ffffffffffff; valaddr_reg:x3; val_offset:222534*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222534*0 + 3*450*FLEN/8, x4, x1, x2)

inst_74179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8217ffffffffffff; valaddr_reg:x3; val_offset:222537*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222537*0 + 3*451*FLEN/8, x4, x1, x2)

inst_74180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x8218000000000000; valaddr_reg:x3; val_offset:222540*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222540*0 + 3*452*FLEN/8, x4, x1, x2)

inst_74181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821c000000000000; valaddr_reg:x3; val_offset:222543*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222543*0 + 3*453*FLEN/8, x4, x1, x2)

inst_74182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821e000000000000; valaddr_reg:x3; val_offset:222546*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222546*0 + 3*454*FLEN/8, x4, x1, x2)

inst_74183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821f000000000000; valaddr_reg:x3; val_offset:222549*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222549*0 + 3*455*FLEN/8, x4, x1, x2)

inst_74184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821f800000000000; valaddr_reg:x3; val_offset:222552*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222552*0 + 3*456*FLEN/8, x4, x1, x2)

inst_74185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fc00000000000; valaddr_reg:x3; val_offset:222555*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222555*0 + 3*457*FLEN/8, x4, x1, x2)

inst_74186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fe00000000000; valaddr_reg:x3; val_offset:222558*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222558*0 + 3*458*FLEN/8, x4, x1, x2)

inst_74187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ff00000000000; valaddr_reg:x3; val_offset:222561*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222561*0 + 3*459*FLEN/8, x4, x1, x2)

inst_74188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ff80000000000; valaddr_reg:x3; val_offset:222564*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222564*0 + 3*460*FLEN/8, x4, x1, x2)

inst_74189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffc0000000000; valaddr_reg:x3; val_offset:222567*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222567*0 + 3*461*FLEN/8, x4, x1, x2)

inst_74190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffe0000000000; valaddr_reg:x3; val_offset:222570*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222570*0 + 3*462*FLEN/8, x4, x1, x2)

inst_74191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fff0000000000; valaddr_reg:x3; val_offset:222573*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222573*0 + 3*463*FLEN/8, x4, x1, x2)

inst_74192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fff8000000000; valaddr_reg:x3; val_offset:222576*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222576*0 + 3*464*FLEN/8, x4, x1, x2)

inst_74193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffc000000000; valaddr_reg:x3; val_offset:222579*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222579*0 + 3*465*FLEN/8, x4, x1, x2)

inst_74194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffe000000000; valaddr_reg:x3; val_offset:222582*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222582*0 + 3*466*FLEN/8, x4, x1, x2)

inst_74195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffff000000000; valaddr_reg:x3; val_offset:222585*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222585*0 + 3*467*FLEN/8, x4, x1, x2)

inst_74196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffff800000000; valaddr_reg:x3; val_offset:222588*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222588*0 + 3*468*FLEN/8, x4, x1, x2)

inst_74197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffc00000000; valaddr_reg:x3; val_offset:222591*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222591*0 + 3*469*FLEN/8, x4, x1, x2)

inst_74198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffe00000000; valaddr_reg:x3; val_offset:222594*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222594*0 + 3*470*FLEN/8, x4, x1, x2)

inst_74199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffff00000000; valaddr_reg:x3; val_offset:222597*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222597*0 + 3*471*FLEN/8, x4, x1, x2)

inst_74200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffff80000000; valaddr_reg:x3; val_offset:222600*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222600*0 + 3*472*FLEN/8, x4, x1, x2)

inst_74201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffc0000000; valaddr_reg:x3; val_offset:222603*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222603*0 + 3*473*FLEN/8, x4, x1, x2)

inst_74202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffe0000000; valaddr_reg:x3; val_offset:222606*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222606*0 + 3*474*FLEN/8, x4, x1, x2)

inst_74203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffff0000000; valaddr_reg:x3; val_offset:222609*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222609*0 + 3*475*FLEN/8, x4, x1, x2)

inst_74204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffff8000000; valaddr_reg:x3; val_offset:222612*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222612*0 + 3*476*FLEN/8, x4, x1, x2)

inst_74205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffc000000; valaddr_reg:x3; val_offset:222615*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222615*0 + 3*477*FLEN/8, x4, x1, x2)

inst_74206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffe000000; valaddr_reg:x3; val_offset:222618*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222618*0 + 3*478*FLEN/8, x4, x1, x2)

inst_74207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffff000000; valaddr_reg:x3; val_offset:222621*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222621*0 + 3*479*FLEN/8, x4, x1, x2)

inst_74208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffff800000; valaddr_reg:x3; val_offset:222624*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222624*0 + 3*480*FLEN/8, x4, x1, x2)

inst_74209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffffc00000; valaddr_reg:x3; val_offset:222627*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222627*0 + 3*481*FLEN/8, x4, x1, x2)

inst_74210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffffe00000; valaddr_reg:x3; val_offset:222630*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222630*0 + 3*482*FLEN/8, x4, x1, x2)

inst_74211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffff00000; valaddr_reg:x3; val_offset:222633*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222633*0 + 3*483*FLEN/8, x4, x1, x2)

inst_74212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffff80000; valaddr_reg:x3; val_offset:222636*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222636*0 + 3*484*FLEN/8, x4, x1, x2)

inst_74213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffffc0000; valaddr_reg:x3; val_offset:222639*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222639*0 + 3*485*FLEN/8, x4, x1, x2)

inst_74214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffffe0000; valaddr_reg:x3; val_offset:222642*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222642*0 + 3*486*FLEN/8, x4, x1, x2)

inst_74215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffffff0000; valaddr_reg:x3; val_offset:222645*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222645*0 + 3*487*FLEN/8, x4, x1, x2)

inst_74216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffffff8000; valaddr_reg:x3; val_offset:222648*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222648*0 + 3*488*FLEN/8, x4, x1, x2)

inst_74217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffffffc000; valaddr_reg:x3; val_offset:222651*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222651*0 + 3*489*FLEN/8, x4, x1, x2)

inst_74218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffffffe000; valaddr_reg:x3; val_offset:222654*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222654*0 + 3*490*FLEN/8, x4, x1, x2)

inst_74219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffffff000; valaddr_reg:x3; val_offset:222657*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222657*0 + 3*491*FLEN/8, x4, x1, x2)

inst_74220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffffff800; valaddr_reg:x3; val_offset:222660*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222660*0 + 3*492*FLEN/8, x4, x1, x2)

inst_74221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffffffc00; valaddr_reg:x3; val_offset:222663*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222663*0 + 3*493*FLEN/8, x4, x1, x2)

inst_74222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffffffe00; valaddr_reg:x3; val_offset:222666*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222666*0 + 3*494*FLEN/8, x4, x1, x2)

inst_74223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffffffff00; valaddr_reg:x3; val_offset:222669*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222669*0 + 3*495*FLEN/8, x4, x1, x2)

inst_74224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffffffff80; valaddr_reg:x3; val_offset:222672*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222672*0 + 3*496*FLEN/8, x4, x1, x2)

inst_74225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffffffffc0; valaddr_reg:x3; val_offset:222675*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222675*0 + 3*497*FLEN/8, x4, x1, x2)

inst_74226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffffffffe0; valaddr_reg:x3; val_offset:222678*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222678*0 + 3*498*FLEN/8, x4, x1, x2)

inst_74227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffffffff0; valaddr_reg:x3; val_offset:222681*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222681*0 + 3*499*FLEN/8, x4, x1, x2)

inst_74228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffffffff8; valaddr_reg:x3; val_offset:222684*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222684*0 + 3*500*FLEN/8, x4, x1, x2)

inst_74229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffffffffc; valaddr_reg:x3; val_offset:222687*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222687*0 + 3*501*FLEN/8, x4, x1, x2)

inst_74230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821ffffffffffffe; valaddr_reg:x3; val_offset:222690*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222690*0 + 3*502*FLEN/8, x4, x1, x2)

inst_74231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7685c15158af8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x021 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7685c15158af8; op2val:0x8000;
op3val:0x821fffffffffffff; valaddr_reg:x3; val_offset:222693*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222693*0 + 3*503*FLEN/8, x4, x1, x2)

inst_74232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:222696*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222696*0 + 3*504*FLEN/8, x4, x1, x2)

inst_74233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:222699*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222699*0 + 3*505*FLEN/8, x4, x1, x2)

inst_74234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:222702*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222702*0 + 3*506*FLEN/8, x4, x1, x2)

inst_74235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:222705*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222705*0 + 3*507*FLEN/8, x4, x1, x2)

inst_74236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:222708*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222708*0 + 3*508*FLEN/8, x4, x1, x2)

inst_74237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:222711*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222711*0 + 3*509*FLEN/8, x4, x1, x2)

inst_74238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:222714*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222714*0 + 3*510*FLEN/8, x4, x1, x2)

inst_74239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:222717*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222717*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_74240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:222720*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222720*0 + 3*512*FLEN/8, x4, x1, x2)

inst_74241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:222723*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222723*0 + 3*513*FLEN/8, x4, x1, x2)

inst_74242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:222726*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222726*0 + 3*514*FLEN/8, x4, x1, x2)

inst_74243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:222729*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222729*0 + 3*515*FLEN/8, x4, x1, x2)

inst_74244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:222732*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222732*0 + 3*516*FLEN/8, x4, x1, x2)

inst_74245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:222735*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222735*0 + 3*517*FLEN/8, x4, x1, x2)

inst_74246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:222738*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222738*0 + 3*518*FLEN/8, x4, x1, x2)

inst_74247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:222741*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222741*0 + 3*519*FLEN/8, x4, x1, x2)

inst_74248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:222744*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222744*0 + 3*520*FLEN/8, x4, x1, x2)

inst_74249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:222747*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222747*0 + 3*521*FLEN/8, x4, x1, x2)

inst_74250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:222750*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222750*0 + 3*522*FLEN/8, x4, x1, x2)

inst_74251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:222753*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222753*0 + 3*523*FLEN/8, x4, x1, x2)

inst_74252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:222756*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222756*0 + 3*524*FLEN/8, x4, x1, x2)

inst_74253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:222759*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222759*0 + 3*525*FLEN/8, x4, x1, x2)

inst_74254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000000000000; valaddr_reg:x3; val_offset:222762*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222762*0 + 3*526*FLEN/8, x4, x1, x2)

inst_74255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000000000001; valaddr_reg:x3; val_offset:222765*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222765*0 + 3*527*FLEN/8, x4, x1, x2)

inst_74256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000000000003; valaddr_reg:x3; val_offset:222768*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222768*0 + 3*528*FLEN/8, x4, x1, x2)

inst_74257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000000000007; valaddr_reg:x3; val_offset:222771*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222771*0 + 3*529*FLEN/8, x4, x1, x2)

inst_74258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000000000000f; valaddr_reg:x3; val_offset:222774*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222774*0 + 3*530*FLEN/8, x4, x1, x2)

inst_74259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000000000001f; valaddr_reg:x3; val_offset:222777*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222777*0 + 3*531*FLEN/8, x4, x1, x2)

inst_74260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000000000003f; valaddr_reg:x3; val_offset:222780*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222780*0 + 3*532*FLEN/8, x4, x1, x2)

inst_74261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000000000007f; valaddr_reg:x3; val_offset:222783*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222783*0 + 3*533*FLEN/8, x4, x1, x2)

inst_74262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000000000000ff; valaddr_reg:x3; val_offset:222786*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222786*0 + 3*534*FLEN/8, x4, x1, x2)

inst_74263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000000000001ff; valaddr_reg:x3; val_offset:222789*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222789*0 + 3*535*FLEN/8, x4, x1, x2)

inst_74264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000000000003ff; valaddr_reg:x3; val_offset:222792*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222792*0 + 3*536*FLEN/8, x4, x1, x2)

inst_74265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000000000007ff; valaddr_reg:x3; val_offset:222795*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222795*0 + 3*537*FLEN/8, x4, x1, x2)

inst_74266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000000000fff; valaddr_reg:x3; val_offset:222798*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222798*0 + 3*538*FLEN/8, x4, x1, x2)

inst_74267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000000001fff; valaddr_reg:x3; val_offset:222801*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222801*0 + 3*539*FLEN/8, x4, x1, x2)

inst_74268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000000003fff; valaddr_reg:x3; val_offset:222804*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222804*0 + 3*540*FLEN/8, x4, x1, x2)

inst_74269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000000007fff; valaddr_reg:x3; val_offset:222807*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222807*0 + 3*541*FLEN/8, x4, x1, x2)

inst_74270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000000000ffff; valaddr_reg:x3; val_offset:222810*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222810*0 + 3*542*FLEN/8, x4, x1, x2)

inst_74271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000000001ffff; valaddr_reg:x3; val_offset:222813*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222813*0 + 3*543*FLEN/8, x4, x1, x2)

inst_74272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000000003ffff; valaddr_reg:x3; val_offset:222816*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222816*0 + 3*544*FLEN/8, x4, x1, x2)

inst_74273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000000007ffff; valaddr_reg:x3; val_offset:222819*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222819*0 + 3*545*FLEN/8, x4, x1, x2)

inst_74274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000000000fffff; valaddr_reg:x3; val_offset:222822*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222822*0 + 3*546*FLEN/8, x4, x1, x2)

inst_74275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000000001fffff; valaddr_reg:x3; val_offset:222825*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222825*0 + 3*547*FLEN/8, x4, x1, x2)

inst_74276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000000003fffff; valaddr_reg:x3; val_offset:222828*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222828*0 + 3*548*FLEN/8, x4, x1, x2)

inst_74277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000000007fffff; valaddr_reg:x3; val_offset:222831*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222831*0 + 3*549*FLEN/8, x4, x1, x2)

inst_74278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000000ffffff; valaddr_reg:x3; val_offset:222834*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222834*0 + 3*550*FLEN/8, x4, x1, x2)

inst_74279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000001ffffff; valaddr_reg:x3; val_offset:222837*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222837*0 + 3*551*FLEN/8, x4, x1, x2)

inst_74280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000003ffffff; valaddr_reg:x3; val_offset:222840*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222840*0 + 3*552*FLEN/8, x4, x1, x2)

inst_74281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000007ffffff; valaddr_reg:x3; val_offset:222843*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222843*0 + 3*553*FLEN/8, x4, x1, x2)

inst_74282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000000fffffff; valaddr_reg:x3; val_offset:222846*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222846*0 + 3*554*FLEN/8, x4, x1, x2)

inst_74283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000001fffffff; valaddr_reg:x3; val_offset:222849*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222849*0 + 3*555*FLEN/8, x4, x1, x2)

inst_74284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000003fffffff; valaddr_reg:x3; val_offset:222852*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222852*0 + 3*556*FLEN/8, x4, x1, x2)

inst_74285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000007fffffff; valaddr_reg:x3; val_offset:222855*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222855*0 + 3*557*FLEN/8, x4, x1, x2)

inst_74286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000000ffffffff; valaddr_reg:x3; val_offset:222858*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222858*0 + 3*558*FLEN/8, x4, x1, x2)

inst_74287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000001ffffffff; valaddr_reg:x3; val_offset:222861*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222861*0 + 3*559*FLEN/8, x4, x1, x2)

inst_74288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000003ffffffff; valaddr_reg:x3; val_offset:222864*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222864*0 + 3*560*FLEN/8, x4, x1, x2)

inst_74289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000007ffffffff; valaddr_reg:x3; val_offset:222867*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222867*0 + 3*561*FLEN/8, x4, x1, x2)

inst_74290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300000fffffffff; valaddr_reg:x3; val_offset:222870*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222870*0 + 3*562*FLEN/8, x4, x1, x2)

inst_74291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300001fffffffff; valaddr_reg:x3; val_offset:222873*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222873*0 + 3*563*FLEN/8, x4, x1, x2)

inst_74292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300003fffffffff; valaddr_reg:x3; val_offset:222876*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222876*0 + 3*564*FLEN/8, x4, x1, x2)

inst_74293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300007fffffffff; valaddr_reg:x3; val_offset:222879*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222879*0 + 3*565*FLEN/8, x4, x1, x2)

inst_74294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830000ffffffffff; valaddr_reg:x3; val_offset:222882*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222882*0 + 3*566*FLEN/8, x4, x1, x2)

inst_74295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830001ffffffffff; valaddr_reg:x3; val_offset:222885*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222885*0 + 3*567*FLEN/8, x4, x1, x2)

inst_74296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830003ffffffffff; valaddr_reg:x3; val_offset:222888*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222888*0 + 3*568*FLEN/8, x4, x1, x2)

inst_74297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830007ffffffffff; valaddr_reg:x3; val_offset:222891*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222891*0 + 3*569*FLEN/8, x4, x1, x2)

inst_74298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83000fffffffffff; valaddr_reg:x3; val_offset:222894*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222894*0 + 3*570*FLEN/8, x4, x1, x2)

inst_74299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83001fffffffffff; valaddr_reg:x3; val_offset:222897*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222897*0 + 3*571*FLEN/8, x4, x1, x2)

inst_74300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83003fffffffffff; valaddr_reg:x3; val_offset:222900*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222900*0 + 3*572*FLEN/8, x4, x1, x2)

inst_74301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x83007fffffffffff; valaddr_reg:x3; val_offset:222903*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222903*0 + 3*573*FLEN/8, x4, x1, x2)

inst_74302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8300ffffffffffff; valaddr_reg:x3; val_offset:222906*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222906*0 + 3*574*FLEN/8, x4, x1, x2)

inst_74303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8301ffffffffffff; valaddr_reg:x3; val_offset:222909*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222909*0 + 3*575*FLEN/8, x4, x1, x2)

inst_74304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8303ffffffffffff; valaddr_reg:x3; val_offset:222912*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222912*0 + 3*576*FLEN/8, x4, x1, x2)

inst_74305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8307ffffffffffff; valaddr_reg:x3; val_offset:222915*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222915*0 + 3*577*FLEN/8, x4, x1, x2)

inst_74306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x8308000000000000; valaddr_reg:x3; val_offset:222918*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222918*0 + 3*578*FLEN/8, x4, x1, x2)

inst_74307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830c000000000000; valaddr_reg:x3; val_offset:222921*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222921*0 + 3*579*FLEN/8, x4, x1, x2)

inst_74308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830e000000000000; valaddr_reg:x3; val_offset:222924*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222924*0 + 3*580*FLEN/8, x4, x1, x2)

inst_74309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830f000000000000; valaddr_reg:x3; val_offset:222927*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222927*0 + 3*581*FLEN/8, x4, x1, x2)

inst_74310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830f800000000000; valaddr_reg:x3; val_offset:222930*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222930*0 + 3*582*FLEN/8, x4, x1, x2)

inst_74311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fc00000000000; valaddr_reg:x3; val_offset:222933*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222933*0 + 3*583*FLEN/8, x4, x1, x2)

inst_74312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fe00000000000; valaddr_reg:x3; val_offset:222936*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222936*0 + 3*584*FLEN/8, x4, x1, x2)

inst_74313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ff00000000000; valaddr_reg:x3; val_offset:222939*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222939*0 + 3*585*FLEN/8, x4, x1, x2)

inst_74314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ff80000000000; valaddr_reg:x3; val_offset:222942*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222942*0 + 3*586*FLEN/8, x4, x1, x2)

inst_74315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffc0000000000; valaddr_reg:x3; val_offset:222945*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222945*0 + 3*587*FLEN/8, x4, x1, x2)

inst_74316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffe0000000000; valaddr_reg:x3; val_offset:222948*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222948*0 + 3*588*FLEN/8, x4, x1, x2)

inst_74317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fff0000000000; valaddr_reg:x3; val_offset:222951*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222951*0 + 3*589*FLEN/8, x4, x1, x2)

inst_74318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fff8000000000; valaddr_reg:x3; val_offset:222954*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222954*0 + 3*590*FLEN/8, x4, x1, x2)

inst_74319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffc000000000; valaddr_reg:x3; val_offset:222957*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222957*0 + 3*591*FLEN/8, x4, x1, x2)

inst_74320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffe000000000; valaddr_reg:x3; val_offset:222960*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222960*0 + 3*592*FLEN/8, x4, x1, x2)

inst_74321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffff000000000; valaddr_reg:x3; val_offset:222963*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222963*0 + 3*593*FLEN/8, x4, x1, x2)

inst_74322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffff800000000; valaddr_reg:x3; val_offset:222966*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222966*0 + 3*594*FLEN/8, x4, x1, x2)

inst_74323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffc00000000; valaddr_reg:x3; val_offset:222969*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222969*0 + 3*595*FLEN/8, x4, x1, x2)

inst_74324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffe00000000; valaddr_reg:x3; val_offset:222972*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222972*0 + 3*596*FLEN/8, x4, x1, x2)

inst_74325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffff00000000; valaddr_reg:x3; val_offset:222975*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222975*0 + 3*597*FLEN/8, x4, x1, x2)

inst_74326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffff80000000; valaddr_reg:x3; val_offset:222978*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222978*0 + 3*598*FLEN/8, x4, x1, x2)

inst_74327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffc0000000; valaddr_reg:x3; val_offset:222981*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222981*0 + 3*599*FLEN/8, x4, x1, x2)

inst_74328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffe0000000; valaddr_reg:x3; val_offset:222984*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222984*0 + 3*600*FLEN/8, x4, x1, x2)

inst_74329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffff0000000; valaddr_reg:x3; val_offset:222987*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222987*0 + 3*601*FLEN/8, x4, x1, x2)

inst_74330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffff8000000; valaddr_reg:x3; val_offset:222990*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222990*0 + 3*602*FLEN/8, x4, x1, x2)

inst_74331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffc000000; valaddr_reg:x3; val_offset:222993*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222993*0 + 3*603*FLEN/8, x4, x1, x2)

inst_74332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffe000000; valaddr_reg:x3; val_offset:222996*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222996*0 + 3*604*FLEN/8, x4, x1, x2)

inst_74333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffff000000; valaddr_reg:x3; val_offset:222999*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222999*0 + 3*605*FLEN/8, x4, x1, x2)

inst_74334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffff800000; valaddr_reg:x3; val_offset:223002*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223002*0 + 3*606*FLEN/8, x4, x1, x2)

inst_74335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffffc00000; valaddr_reg:x3; val_offset:223005*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223005*0 + 3*607*FLEN/8, x4, x1, x2)

inst_74336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffffe00000; valaddr_reg:x3; val_offset:223008*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223008*0 + 3*608*FLEN/8, x4, x1, x2)

inst_74337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffff00000; valaddr_reg:x3; val_offset:223011*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223011*0 + 3*609*FLEN/8, x4, x1, x2)

inst_74338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffff80000; valaddr_reg:x3; val_offset:223014*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223014*0 + 3*610*FLEN/8, x4, x1, x2)

inst_74339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffffc0000; valaddr_reg:x3; val_offset:223017*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223017*0 + 3*611*FLEN/8, x4, x1, x2)

inst_74340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffffe0000; valaddr_reg:x3; val_offset:223020*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223020*0 + 3*612*FLEN/8, x4, x1, x2)

inst_74341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffffff0000; valaddr_reg:x3; val_offset:223023*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223023*0 + 3*613*FLEN/8, x4, x1, x2)

inst_74342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffffff8000; valaddr_reg:x3; val_offset:223026*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223026*0 + 3*614*FLEN/8, x4, x1, x2)

inst_74343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffffffc000; valaddr_reg:x3; val_offset:223029*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223029*0 + 3*615*FLEN/8, x4, x1, x2)

inst_74344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffffffe000; valaddr_reg:x3; val_offset:223032*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223032*0 + 3*616*FLEN/8, x4, x1, x2)

inst_74345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffffff000; valaddr_reg:x3; val_offset:223035*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223035*0 + 3*617*FLEN/8, x4, x1, x2)

inst_74346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffffff800; valaddr_reg:x3; val_offset:223038*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223038*0 + 3*618*FLEN/8, x4, x1, x2)

inst_74347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffffffc00; valaddr_reg:x3; val_offset:223041*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223041*0 + 3*619*FLEN/8, x4, x1, x2)

inst_74348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffffffe00; valaddr_reg:x3; val_offset:223044*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223044*0 + 3*620*FLEN/8, x4, x1, x2)

inst_74349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffffffff00; valaddr_reg:x3; val_offset:223047*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223047*0 + 3*621*FLEN/8, x4, x1, x2)

inst_74350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffffffff80; valaddr_reg:x3; val_offset:223050*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223050*0 + 3*622*FLEN/8, x4, x1, x2)

inst_74351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffffffffc0; valaddr_reg:x3; val_offset:223053*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223053*0 + 3*623*FLEN/8, x4, x1, x2)

inst_74352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffffffffe0; valaddr_reg:x3; val_offset:223056*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223056*0 + 3*624*FLEN/8, x4, x1, x2)

inst_74353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffffffff0; valaddr_reg:x3; val_offset:223059*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223059*0 + 3*625*FLEN/8, x4, x1, x2)

inst_74354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffffffff8; valaddr_reg:x3; val_offset:223062*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223062*0 + 3*626*FLEN/8, x4, x1, x2)

inst_74355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffffffffc; valaddr_reg:x3; val_offset:223065*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223065*0 + 3*627*FLEN/8, x4, x1, x2)

inst_74356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830ffffffffffffe; valaddr_reg:x3; val_offset:223068*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223068*0 + 3*628*FLEN/8, x4, x1, x2)

inst_74357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x773cb41a89c8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa773cb41a89c8f; op2val:0x8000;
op3val:0x830fffffffffffff; valaddr_reg:x3; val_offset:223071*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223071*0 + 3*629*FLEN/8, x4, x1, x2)

inst_74358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:223074*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223074*0 + 3*630*FLEN/8, x4, x1, x2)

inst_74359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:223077*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223077*0 + 3*631*FLEN/8, x4, x1, x2)

inst_74360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:223080*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223080*0 + 3*632*FLEN/8, x4, x1, x2)

inst_74361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:223083*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223083*0 + 3*633*FLEN/8, x4, x1, x2)

inst_74362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:223086*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223086*0 + 3*634*FLEN/8, x4, x1, x2)

inst_74363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:223089*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223089*0 + 3*635*FLEN/8, x4, x1, x2)

inst_74364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:223092*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223092*0 + 3*636*FLEN/8, x4, x1, x2)

inst_74365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:223095*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223095*0 + 3*637*FLEN/8, x4, x1, x2)

inst_74366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:223098*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223098*0 + 3*638*FLEN/8, x4, x1, x2)

inst_74367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:223101*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223101*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_74368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:223104*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223104*0 + 3*640*FLEN/8, x4, x1, x2)

inst_74369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:223107*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223107*0 + 3*641*FLEN/8, x4, x1, x2)

inst_74370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:223110*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223110*0 + 3*642*FLEN/8, x4, x1, x2)

inst_74371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:223113*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223113*0 + 3*643*FLEN/8, x4, x1, x2)

inst_74372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:223116*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223116*0 + 3*644*FLEN/8, x4, x1, x2)

inst_74373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:223119*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223119*0 + 3*645*FLEN/8, x4, x1, x2)

inst_74374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:223122*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223122*0 + 3*646*FLEN/8, x4, x1, x2)

inst_74375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:223125*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223125*0 + 3*647*FLEN/8, x4, x1, x2)

inst_74376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:223128*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223128*0 + 3*648*FLEN/8, x4, x1, x2)

inst_74377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:223131*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223131*0 + 3*649*FLEN/8, x4, x1, x2)

inst_74378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:223134*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223134*0 + 3*650*FLEN/8, x4, x1, x2)

inst_74379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:223137*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223137*0 + 3*651*FLEN/8, x4, x1, x2)

inst_74380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000000000000; valaddr_reg:x3; val_offset:223140*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223140*0 + 3*652*FLEN/8, x4, x1, x2)

inst_74381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000000000001; valaddr_reg:x3; val_offset:223143*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223143*0 + 3*653*FLEN/8, x4, x1, x2)

inst_74382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000000000003; valaddr_reg:x3; val_offset:223146*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223146*0 + 3*654*FLEN/8, x4, x1, x2)

inst_74383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000000000007; valaddr_reg:x3; val_offset:223149*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223149*0 + 3*655*FLEN/8, x4, x1, x2)

inst_74384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000000000000f; valaddr_reg:x3; val_offset:223152*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223152*0 + 3*656*FLEN/8, x4, x1, x2)

inst_74385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000000000001f; valaddr_reg:x3; val_offset:223155*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223155*0 + 3*657*FLEN/8, x4, x1, x2)

inst_74386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000000000003f; valaddr_reg:x3; val_offset:223158*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223158*0 + 3*658*FLEN/8, x4, x1, x2)

inst_74387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000000000007f; valaddr_reg:x3; val_offset:223161*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223161*0 + 3*659*FLEN/8, x4, x1, x2)

inst_74388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00000000000ff; valaddr_reg:x3; val_offset:223164*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223164*0 + 3*660*FLEN/8, x4, x1, x2)

inst_74389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00000000001ff; valaddr_reg:x3; val_offset:223167*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223167*0 + 3*661*FLEN/8, x4, x1, x2)

inst_74390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00000000003ff; valaddr_reg:x3; val_offset:223170*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223170*0 + 3*662*FLEN/8, x4, x1, x2)

inst_74391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00000000007ff; valaddr_reg:x3; val_offset:223173*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223173*0 + 3*663*FLEN/8, x4, x1, x2)

inst_74392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000000000fff; valaddr_reg:x3; val_offset:223176*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223176*0 + 3*664*FLEN/8, x4, x1, x2)

inst_74393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000000001fff; valaddr_reg:x3; val_offset:223179*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223179*0 + 3*665*FLEN/8, x4, x1, x2)

inst_74394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000000003fff; valaddr_reg:x3; val_offset:223182*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223182*0 + 3*666*FLEN/8, x4, x1, x2)

inst_74395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000000007fff; valaddr_reg:x3; val_offset:223185*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223185*0 + 3*667*FLEN/8, x4, x1, x2)

inst_74396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000000000ffff; valaddr_reg:x3; val_offset:223188*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223188*0 + 3*668*FLEN/8, x4, x1, x2)

inst_74397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000000001ffff; valaddr_reg:x3; val_offset:223191*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223191*0 + 3*669*FLEN/8, x4, x1, x2)

inst_74398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000000003ffff; valaddr_reg:x3; val_offset:223194*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223194*0 + 3*670*FLEN/8, x4, x1, x2)

inst_74399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000000007ffff; valaddr_reg:x3; val_offset:223197*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223197*0 + 3*671*FLEN/8, x4, x1, x2)

inst_74400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00000000fffff; valaddr_reg:x3; val_offset:223200*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223200*0 + 3*672*FLEN/8, x4, x1, x2)

inst_74401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00000001fffff; valaddr_reg:x3; val_offset:223203*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223203*0 + 3*673*FLEN/8, x4, x1, x2)

inst_74402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00000003fffff; valaddr_reg:x3; val_offset:223206*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223206*0 + 3*674*FLEN/8, x4, x1, x2)

inst_74403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00000007fffff; valaddr_reg:x3; val_offset:223209*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223209*0 + 3*675*FLEN/8, x4, x1, x2)

inst_74404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000000ffffff; valaddr_reg:x3; val_offset:223212*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223212*0 + 3*676*FLEN/8, x4, x1, x2)

inst_74405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000001ffffff; valaddr_reg:x3; val_offset:223215*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223215*0 + 3*677*FLEN/8, x4, x1, x2)

inst_74406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000003ffffff; valaddr_reg:x3; val_offset:223218*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223218*0 + 3*678*FLEN/8, x4, x1, x2)

inst_74407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000007ffffff; valaddr_reg:x3; val_offset:223221*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223221*0 + 3*679*FLEN/8, x4, x1, x2)

inst_74408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000000fffffff; valaddr_reg:x3; val_offset:223224*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223224*0 + 3*680*FLEN/8, x4, x1, x2)

inst_74409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000001fffffff; valaddr_reg:x3; val_offset:223227*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223227*0 + 3*681*FLEN/8, x4, x1, x2)

inst_74410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000003fffffff; valaddr_reg:x3; val_offset:223230*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223230*0 + 3*682*FLEN/8, x4, x1, x2)

inst_74411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000007fffffff; valaddr_reg:x3; val_offset:223233*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223233*0 + 3*683*FLEN/8, x4, x1, x2)

inst_74412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00000ffffffff; valaddr_reg:x3; val_offset:223236*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223236*0 + 3*684*FLEN/8, x4, x1, x2)

inst_74413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00001ffffffff; valaddr_reg:x3; val_offset:223239*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223239*0 + 3*685*FLEN/8, x4, x1, x2)

inst_74414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00003ffffffff; valaddr_reg:x3; val_offset:223242*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223242*0 + 3*686*FLEN/8, x4, x1, x2)

inst_74415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00007ffffffff; valaddr_reg:x3; val_offset:223245*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223245*0 + 3*687*FLEN/8, x4, x1, x2)

inst_74416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0000fffffffff; valaddr_reg:x3; val_offset:223248*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223248*0 + 3*688*FLEN/8, x4, x1, x2)

inst_74417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0001fffffffff; valaddr_reg:x3; val_offset:223251*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223251*0 + 3*689*FLEN/8, x4, x1, x2)

inst_74418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0003fffffffff; valaddr_reg:x3; val_offset:223254*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223254*0 + 3*690*FLEN/8, x4, x1, x2)

inst_74419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0007fffffffff; valaddr_reg:x3; val_offset:223257*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223257*0 + 3*691*FLEN/8, x4, x1, x2)

inst_74420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e000ffffffffff; valaddr_reg:x3; val_offset:223260*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223260*0 + 3*692*FLEN/8, x4, x1, x2)

inst_74421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e001ffffffffff; valaddr_reg:x3; val_offset:223263*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223263*0 + 3*693*FLEN/8, x4, x1, x2)

inst_74422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e003ffffffffff; valaddr_reg:x3; val_offset:223266*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223266*0 + 3*694*FLEN/8, x4, x1, x2)

inst_74423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e007ffffffffff; valaddr_reg:x3; val_offset:223269*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223269*0 + 3*695*FLEN/8, x4, x1, x2)

inst_74424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e00fffffffffff; valaddr_reg:x3; val_offset:223272*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223272*0 + 3*696*FLEN/8, x4, x1, x2)

inst_74425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e01fffffffffff; valaddr_reg:x3; val_offset:223275*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223275*0 + 3*697*FLEN/8, x4, x1, x2)

inst_74426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e03fffffffffff; valaddr_reg:x3; val_offset:223278*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223278*0 + 3*698*FLEN/8, x4, x1, x2)

inst_74427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e07fffffffffff; valaddr_reg:x3; val_offset:223281*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223281*0 + 3*699*FLEN/8, x4, x1, x2)

inst_74428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e0ffffffffffff; valaddr_reg:x3; val_offset:223284*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223284*0 + 3*700*FLEN/8, x4, x1, x2)

inst_74429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e1ffffffffffff; valaddr_reg:x3; val_offset:223287*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223287*0 + 3*701*FLEN/8, x4, x1, x2)

inst_74430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e3ffffffffffff; valaddr_reg:x3; val_offset:223290*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223290*0 + 3*702*FLEN/8, x4, x1, x2)

inst_74431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e7ffffffffffff; valaddr_reg:x3; val_offset:223293*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223293*0 + 3*703*FLEN/8, x4, x1, x2)

inst_74432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80e8000000000000; valaddr_reg:x3; val_offset:223296*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223296*0 + 3*704*FLEN/8, x4, x1, x2)

inst_74433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80ec000000000000; valaddr_reg:x3; val_offset:223299*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223299*0 + 3*705*FLEN/8, x4, x1, x2)

inst_74434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80ee000000000000; valaddr_reg:x3; val_offset:223302*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223302*0 + 3*706*FLEN/8, x4, x1, x2)

inst_74435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80ef000000000000; valaddr_reg:x3; val_offset:223305*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223305*0 + 3*707*FLEN/8, x4, x1, x2)

inst_74436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80ef800000000000; valaddr_reg:x3; val_offset:223308*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223308*0 + 3*708*FLEN/8, x4, x1, x2)

inst_74437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efc00000000000; valaddr_reg:x3; val_offset:223311*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223311*0 + 3*709*FLEN/8, x4, x1, x2)

inst_74438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efe00000000000; valaddr_reg:x3; val_offset:223314*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223314*0 + 3*710*FLEN/8, x4, x1, x2)

inst_74439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80eff00000000000; valaddr_reg:x3; val_offset:223317*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223317*0 + 3*711*FLEN/8, x4, x1, x2)

inst_74440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80eff80000000000; valaddr_reg:x3; val_offset:223320*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223320*0 + 3*712*FLEN/8, x4, x1, x2)

inst_74441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effc0000000000; valaddr_reg:x3; val_offset:223323*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223323*0 + 3*713*FLEN/8, x4, x1, x2)

inst_74442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effe0000000000; valaddr_reg:x3; val_offset:223326*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223326*0 + 3*714*FLEN/8, x4, x1, x2)

inst_74443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efff0000000000; valaddr_reg:x3; val_offset:223329*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223329*0 + 3*715*FLEN/8, x4, x1, x2)

inst_74444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efff8000000000; valaddr_reg:x3; val_offset:223332*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223332*0 + 3*716*FLEN/8, x4, x1, x2)

inst_74445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffc000000000; valaddr_reg:x3; val_offset:223335*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223335*0 + 3*717*FLEN/8, x4, x1, x2)

inst_74446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffe000000000; valaddr_reg:x3; val_offset:223338*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223338*0 + 3*718*FLEN/8, x4, x1, x2)

inst_74447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effff000000000; valaddr_reg:x3; val_offset:223341*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223341*0 + 3*719*FLEN/8, x4, x1, x2)

inst_74448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effff800000000; valaddr_reg:x3; val_offset:223344*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223344*0 + 3*720*FLEN/8, x4, x1, x2)

inst_74449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffc00000000; valaddr_reg:x3; val_offset:223347*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223347*0 + 3*721*FLEN/8, x4, x1, x2)

inst_74450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffe00000000; valaddr_reg:x3; val_offset:223350*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223350*0 + 3*722*FLEN/8, x4, x1, x2)

inst_74451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffff00000000; valaddr_reg:x3; val_offset:223353*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223353*0 + 3*723*FLEN/8, x4, x1, x2)

inst_74452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffff80000000; valaddr_reg:x3; val_offset:223356*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223356*0 + 3*724*FLEN/8, x4, x1, x2)

inst_74453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffc0000000; valaddr_reg:x3; val_offset:223359*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223359*0 + 3*725*FLEN/8, x4, x1, x2)

inst_74454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffe0000000; valaddr_reg:x3; val_offset:223362*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223362*0 + 3*726*FLEN/8, x4, x1, x2)

inst_74455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffff0000000; valaddr_reg:x3; val_offset:223365*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223365*0 + 3*727*FLEN/8, x4, x1, x2)

inst_74456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffff8000000; valaddr_reg:x3; val_offset:223368*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223368*0 + 3*728*FLEN/8, x4, x1, x2)

inst_74457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffc000000; valaddr_reg:x3; val_offset:223371*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223371*0 + 3*729*FLEN/8, x4, x1, x2)

inst_74458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffe000000; valaddr_reg:x3; val_offset:223374*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223374*0 + 3*730*FLEN/8, x4, x1, x2)

inst_74459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffff000000; valaddr_reg:x3; val_offset:223377*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223377*0 + 3*731*FLEN/8, x4, x1, x2)

inst_74460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffff800000; valaddr_reg:x3; val_offset:223380*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223380*0 + 3*732*FLEN/8, x4, x1, x2)

inst_74461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffffc00000; valaddr_reg:x3; val_offset:223383*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223383*0 + 3*733*FLEN/8, x4, x1, x2)

inst_74462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffffe00000; valaddr_reg:x3; val_offset:223386*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223386*0 + 3*734*FLEN/8, x4, x1, x2)

inst_74463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffff00000; valaddr_reg:x3; val_offset:223389*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223389*0 + 3*735*FLEN/8, x4, x1, x2)

inst_74464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffff80000; valaddr_reg:x3; val_offset:223392*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223392*0 + 3*736*FLEN/8, x4, x1, x2)

inst_74465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffffc0000; valaddr_reg:x3; val_offset:223395*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223395*0 + 3*737*FLEN/8, x4, x1, x2)

inst_74466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffffe0000; valaddr_reg:x3; val_offset:223398*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223398*0 + 3*738*FLEN/8, x4, x1, x2)

inst_74467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffffff0000; valaddr_reg:x3; val_offset:223401*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223401*0 + 3*739*FLEN/8, x4, x1, x2)

inst_74468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffffff8000; valaddr_reg:x3; val_offset:223404*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223404*0 + 3*740*FLEN/8, x4, x1, x2)

inst_74469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffffffc000; valaddr_reg:x3; val_offset:223407*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223407*0 + 3*741*FLEN/8, x4, x1, x2)

inst_74470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffffffe000; valaddr_reg:x3; val_offset:223410*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223410*0 + 3*742*FLEN/8, x4, x1, x2)

inst_74471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffffff000; valaddr_reg:x3; val_offset:223413*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223413*0 + 3*743*FLEN/8, x4, x1, x2)

inst_74472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffffff800; valaddr_reg:x3; val_offset:223416*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223416*0 + 3*744*FLEN/8, x4, x1, x2)

inst_74473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffffffc00; valaddr_reg:x3; val_offset:223419*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223419*0 + 3*745*FLEN/8, x4, x1, x2)

inst_74474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffffffe00; valaddr_reg:x3; val_offset:223422*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223422*0 + 3*746*FLEN/8, x4, x1, x2)

inst_74475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffffffff00; valaddr_reg:x3; val_offset:223425*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223425*0 + 3*747*FLEN/8, x4, x1, x2)

inst_74476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffffffff80; valaddr_reg:x3; val_offset:223428*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223428*0 + 3*748*FLEN/8, x4, x1, x2)

inst_74477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffffffffc0; valaddr_reg:x3; val_offset:223431*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223431*0 + 3*749*FLEN/8, x4, x1, x2)

inst_74478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffffffffe0; valaddr_reg:x3; val_offset:223434*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223434*0 + 3*750*FLEN/8, x4, x1, x2)

inst_74479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffffffff0; valaddr_reg:x3; val_offset:223437*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223437*0 + 3*751*FLEN/8, x4, x1, x2)

inst_74480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffffffff8; valaddr_reg:x3; val_offset:223440*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223440*0 + 3*752*FLEN/8, x4, x1, x2)

inst_74481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffffffffc; valaddr_reg:x3; val_offset:223443*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223443*0 + 3*753*FLEN/8, x4, x1, x2)

inst_74482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80effffffffffffe; valaddr_reg:x3; val_offset:223446*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223446*0 + 3*754*FLEN/8, x4, x1, x2)

inst_74483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa77f3763d1768f; op2val:0x8000;
op3val:0x80efffffffffffff; valaddr_reg:x3; val_offset:223449*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223449*0 + 3*755*FLEN/8, x4, x1, x2)

inst_74484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x780574fbc7e81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa780574fbc7e81; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:223452*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223452*0 + 3*756*FLEN/8, x4, x1, x2)

inst_74485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x780574fbc7e81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa780574fbc7e81; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:223455*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223455*0 + 3*757*FLEN/8, x4, x1, x2)

inst_74486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x780574fbc7e81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa780574fbc7e81; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:223458*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223458*0 + 3*758*FLEN/8, x4, x1, x2)

inst_74487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x780574fbc7e81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa780574fbc7e81; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:223461*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223461*0 + 3*759*FLEN/8, x4, x1, x2)

inst_74488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x780574fbc7e81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa780574fbc7e81; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:223464*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223464*0 + 3*760*FLEN/8, x4, x1, x2)

inst_74489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x780574fbc7e81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa780574fbc7e81; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:223467*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223467*0 + 3*761*FLEN/8, x4, x1, x2)

inst_74490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x780574fbc7e81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa780574fbc7e81; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:223470*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223470*0 + 3*762*FLEN/8, x4, x1, x2)

inst_74491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x780574fbc7e81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa780574fbc7e81; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:223473*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223473*0 + 3*763*FLEN/8, x4, x1, x2)

inst_74492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x780574fbc7e81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa780574fbc7e81; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:223476*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223476*0 + 3*764*FLEN/8, x4, x1, x2)

inst_74493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x780574fbc7e81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa780574fbc7e81; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:223479*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223479*0 + 3*765*FLEN/8, x4, x1, x2)

inst_74494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x780574fbc7e81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa780574fbc7e81; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:223482*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223482*0 + 3*766*FLEN/8, x4, x1, x2)

inst_74495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x780574fbc7e81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa780574fbc7e81; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:223485*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 223485*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963968,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963969,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963971,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963975,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963983,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963999,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964031,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964095,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964223,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964479,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964991,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018966015,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018968063,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018972159,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018980351,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018996735,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019029503,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019095039,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019226111,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019488255,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797020012543,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797021061119,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797023158271,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797027352575,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797035741183,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797052518399,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797086072831,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797153181695,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797287399423,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797555834879,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028798092705791,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028799166447615,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028801313931263,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028805608898559,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028814198833151,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028831378702335,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028865738440703,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028934457917439,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029071896870911,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029346774777855,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029896530591743,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36030996042219519,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36033195065475071,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36037593111986175,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36046389205008383,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36063981391052799,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36099165763141631,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36169534507319295,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36310271995674623,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36591746972385279,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(37154696925806591,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649215,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649216,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39406496739491840,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39969446692913152,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40250921669623808,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40391659157979136,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40462027902156800,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40497212274245632,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40514804460290048,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40523600553312256,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40527998599823360,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40530197623078912,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531297134706688,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531846890520576,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532121768427520,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532259207380992,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532327926857728,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532362286596096,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532379466465280,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532388056399872,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532392351367168,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532394498850816,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532395572592640,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396109463552,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396377899008,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396512116736,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396579225600,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396612780032,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396629557248,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396637945856,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396642140160,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396644237312,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645285888,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645810176,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646072320,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646203392,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646268928,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646301696,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646318080,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646326272,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646330368,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646332416,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333440,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333952,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334208,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334336,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334400,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334432,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334448,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334456,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334460,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334462,64,FLEN)
NAN_BOXED(6892574137727966199,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334463,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445952,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445953,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445955,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445959,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445967,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445983,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446015,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446079,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446207,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446463,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446975,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528447999,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528450047,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528454143,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528462335,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528478719,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528511487,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528577023,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528708095,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528970239,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195529494527,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195530543103,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195532640255,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195536834559,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195545223167,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195562000383,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195595554815,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195662663679,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195796881407,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196065316863,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196602187775,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043197675929599,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043199823413247,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043204118380543,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043212708315135,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043229888184319,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043264247922687,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043332967399423,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043470406352895,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043745284259839,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54044295040073727,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54045394551701503,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54047593574957055,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54051991621468159,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54060787714490367,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54078379900534783,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54113564272623615,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54183933016801279,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54324670505156607,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54606145481867263,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(55169095435288575,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131199,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131200,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57420895248973824,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57983845202395136,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58265320179105792,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58406057667461120,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58476426411638784,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58511610783727616,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58529202969772032,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58537999062794240,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58542397109305344,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58544596132560896,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58545695644188672,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546245400002560,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546520277909504,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546657716862976,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546726436339712,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546760796078080,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546777975947264,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546786565881856,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546790860849152,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546793008332800,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794082074624,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794618945536,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794887380992,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795021598720,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795088707584,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795122262016,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795139039232,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795147427840,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795151622144,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795153719296,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795154767872,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155292160,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155554304,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155685376,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155750912,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155783680,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155800064,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155808256,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155812352,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155814400,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815424,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815936,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816192,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816320,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816384,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816416,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816432,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816440,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816444,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816446,64,FLEN)
NAN_BOXED(6892577132420100478,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816447,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190336,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190337,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190339,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190343,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190351,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190367,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190399,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190463,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190591,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190847,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722191359,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722192383,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722194431,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722198527,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722206719,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722223103,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722255871,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722321407,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722452479,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722714623,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584723238911,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584724287487,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584726384639,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584730578943,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584738967551,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584755744767,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584789299199,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584856408063,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584990625791,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585259061247,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585795932159,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647586869673983,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647589017157631,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647593312124927,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647601902059519,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647619081928703,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647653441667071,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647722161143807,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647859600097279,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648134478004223,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648684233818111,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184649783745445887,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184651982768701439,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184656380815212543,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184665176908234751,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184682769094279167,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184717953466367999,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184788322210545663,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184929059698900991,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185210534675611647,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185773484629032959,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875583,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875584,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188025284442718208,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188588234396139520,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188869709372850176,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189010446861205504,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189080815605383168,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189115999977472000,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189133592163516416,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189142388256538624,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189146786303049728,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189148985326305280,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150084837933056,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150634593746944,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150909471653888,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151046910607360,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151115630084096,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151149989822464,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151167169691648,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151175759626240,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151180054593536,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151182202077184,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183275819008,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183812689920,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184081125376,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184215343104,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184282451968,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184316006400,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184332783616,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184341172224,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184345366528,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184347463680,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184348512256,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349036544,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349298688,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349429760,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349495296,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349528064,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349544448,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349552640,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349556736,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349558784,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349559808,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560320,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560576,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560704,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560768,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560800,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560816,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560824,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560828,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560830,64,FLEN)
NAN_BOXED(6892581594898170462,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560831,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002176,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002177,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002179,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002183,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002191,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002207,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002239,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002303,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002431,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002687,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558003199,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558004223,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558006271,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558010367,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558018559,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558034943,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558067711,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558133247,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558264319,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558526463,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824559050751,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824560099327,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824562196479,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824566390783,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824574779391,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824591556607,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824625111039,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824692219903,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824826437631,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990825094873087,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990825631743999,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990826705485823,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990828852969471,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990833147936767,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990841737871359,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990858917740543,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990893277478911,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990961996955647,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371991099435909119,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371991374313816063,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371991924069629951,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371993023581257727,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371995222604513279,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371999620651024383,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372008416744046591,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372026008930091007,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372061193302179839,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372131562046357503,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372272299534712831,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9372553774511423487,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9373116724464844799,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9374242624371687423,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9374242624371687424,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9375368524278530048,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9375931474231951360,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376212949208662016,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376353686697017344,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376424055441195008,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376459239813283840,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376476831999328256,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376485628092350464,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376490026138861568,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376492225162117120,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376493324673744896,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376493874429558784,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494149307465728,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494286746419200,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494355465895936,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494389825634304,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494407005503488,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494415595438080,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494419890405376,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494422037889024,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494423111630848,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494423648501760,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494423916937216,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424051154944,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424118263808,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424151818240,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424168595456,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424176984064,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424181178368,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424183275520,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424184324096,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424184848384,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185110528,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185241600,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185307136,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185339904,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185356288,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185364480,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185368576,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185370624,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185371648,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372160,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372416,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372544,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372608,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372640,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372656,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372664,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372668,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372670,64,FLEN)
NAN_BOXED(6892592499413846776,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372671,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559616,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559617,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559619,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559623,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559631,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559647,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559679,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559743,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559871,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968560127,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968560639,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968561663,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968563711,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968567807,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968575999,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968592383,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968625151,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968690687,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968821759,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818969083903,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818969608191,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818970656767,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818972753919,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818976948223,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818985336831,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819002114047,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819035668479,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819102777343,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819236995071,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544819505430527,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544820042301439,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544821116043263,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544823263526911,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544827558494207,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544836148428799,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544853328297983,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544887688036351,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544956407513087,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545093846466559,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545368724373503,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439545918480187391,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439547017991815167,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439549217015070719,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439553615061581823,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439562411154604031,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439580003340648447,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439615187712737279,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439685556456914943,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439826293945270271,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9440107768921980927,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9440670718875402239,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9441796618782244863,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9441796618782244864,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9442922518689087488,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443485468642508800,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443766943619219456,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443907681107574784,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9443978049851752448,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444013234223841280,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444030826409885696,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444039622502907904,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444044020549419008,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444046219572674560,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444047319084302336,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444047868840116224,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048143718023168,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048281156976640,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048349876453376,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048384236191744,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048401416060928,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048410005995520,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048414300962816,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048416448446464,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048417522188288,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418059059200,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418327494656,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418461712384,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418528821248,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418562375680,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418579152896,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418587541504,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418591735808,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418593832960,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418594881536,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595405824,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595667968,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595799040,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595864576,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595897344,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595913728,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595921920,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595926016,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595928064,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929088,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929600,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929856,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929984,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930048,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930080,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930096,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930104,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930108,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930110,64,FLEN)
NAN_BOXED(6892605071530957967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930111,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962752,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962753,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962755,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962759,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962767,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962783,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962815,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962879,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963007,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963263,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963775,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637964799,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637966847,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637970943,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637979135,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637995519,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638028287,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638093823,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638224895,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638487039,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431639011327,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431640059903,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431642157055,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431646351359,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431654739967,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431671517183,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431705071615,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431772180479,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431906398207,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422432174833663,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422432711704575,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422433785446399,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422435932930047,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422440227897343,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422448817831935,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422465997701119,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422500357439487,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422569076916223,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422706515869695,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422981393776639,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286423531149590527,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286424630661218303,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286426829684473855,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286431227730984959,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286440023824007167,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286457616010051583,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286492800382140415,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286563169126318079,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286703906614673407,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286985381591384063,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9287548331544805375,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9288674231451647999,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9288674231451648000,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9289800131358490624,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290363081311911936,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290644556288622592,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290785293776977920,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290855662521155584,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290890846893244416,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290908439079288832,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290917235172311040,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290921633218822144,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290923832242077696,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290924931753705472,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925481509519360,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925756387426304,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925893826379776,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925962545856512,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925996905594880,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926014085464064,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926022675398656,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926026970365952,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926029117849600,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030191591424,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030728462336,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030996897792,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031131115520,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031198224384,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031231778816,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031248556032,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031256944640,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031261138944,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031263236096,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031264284672,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031264808960,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265071104,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265202176,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265267712,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265300480,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265316864,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265325056,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265329152,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265331200,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332224,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332736,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332992,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333120,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333184,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333216,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333232,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333240,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333244,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333246,64,FLEN)
NAN_BOXED(6892617630588434063,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333247,64,FLEN)
NAN_BOXED(6892618867202096769,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6892618867202096769,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6892618867202096769,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6892618867202096769,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6892618867202096769,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6892618867202096769,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6892618867202096769,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6892618867202096769,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6892618867202096769,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6892618867202096769,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6892618867202096769,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6892618867202096769,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
