
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_59904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310000000000003; valaddr_reg:x3; val_offset:179712*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179712*0 + 3*0*FLEN/8, x4, x1, x2)

inst_59905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310000000000007; valaddr_reg:x3; val_offset:179715*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179715*0 + 3*1*FLEN/8, x4, x1, x2)

inst_59906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000000000000f; valaddr_reg:x3; val_offset:179718*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179718*0 + 3*2*FLEN/8, x4, x1, x2)

inst_59907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000000000001f; valaddr_reg:x3; val_offset:179721*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179721*0 + 3*3*FLEN/8, x4, x1, x2)

inst_59908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000000000003f; valaddr_reg:x3; val_offset:179724*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179724*0 + 3*4*FLEN/8, x4, x1, x2)

inst_59909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000000000007f; valaddr_reg:x3; val_offset:179727*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179727*0 + 3*5*FLEN/8, x4, x1, x2)

inst_59910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100000000000ff; valaddr_reg:x3; val_offset:179730*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179730*0 + 3*6*FLEN/8, x4, x1, x2)

inst_59911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100000000001ff; valaddr_reg:x3; val_offset:179733*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179733*0 + 3*7*FLEN/8, x4, x1, x2)

inst_59912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100000000003ff; valaddr_reg:x3; val_offset:179736*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179736*0 + 3*8*FLEN/8, x4, x1, x2)

inst_59913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100000000007ff; valaddr_reg:x3; val_offset:179739*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179739*0 + 3*9*FLEN/8, x4, x1, x2)

inst_59914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310000000000fff; valaddr_reg:x3; val_offset:179742*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179742*0 + 3*10*FLEN/8, x4, x1, x2)

inst_59915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310000000001fff; valaddr_reg:x3; val_offset:179745*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179745*0 + 3*11*FLEN/8, x4, x1, x2)

inst_59916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310000000003fff; valaddr_reg:x3; val_offset:179748*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179748*0 + 3*12*FLEN/8, x4, x1, x2)

inst_59917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310000000007fff; valaddr_reg:x3; val_offset:179751*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179751*0 + 3*13*FLEN/8, x4, x1, x2)

inst_59918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000000000ffff; valaddr_reg:x3; val_offset:179754*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179754*0 + 3*14*FLEN/8, x4, x1, x2)

inst_59919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000000001ffff; valaddr_reg:x3; val_offset:179757*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179757*0 + 3*15*FLEN/8, x4, x1, x2)

inst_59920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000000003ffff; valaddr_reg:x3; val_offset:179760*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179760*0 + 3*16*FLEN/8, x4, x1, x2)

inst_59921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000000007ffff; valaddr_reg:x3; val_offset:179763*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179763*0 + 3*17*FLEN/8, x4, x1, x2)

inst_59922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100000000fffff; valaddr_reg:x3; val_offset:179766*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179766*0 + 3*18*FLEN/8, x4, x1, x2)

inst_59923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100000001fffff; valaddr_reg:x3; val_offset:179769*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179769*0 + 3*19*FLEN/8, x4, x1, x2)

inst_59924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100000003fffff; valaddr_reg:x3; val_offset:179772*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179772*0 + 3*20*FLEN/8, x4, x1, x2)

inst_59925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100000007fffff; valaddr_reg:x3; val_offset:179775*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179775*0 + 3*21*FLEN/8, x4, x1, x2)

inst_59926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310000000ffffff; valaddr_reg:x3; val_offset:179778*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179778*0 + 3*22*FLEN/8, x4, x1, x2)

inst_59927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310000001ffffff; valaddr_reg:x3; val_offset:179781*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179781*0 + 3*23*FLEN/8, x4, x1, x2)

inst_59928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310000003ffffff; valaddr_reg:x3; val_offset:179784*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179784*0 + 3*24*FLEN/8, x4, x1, x2)

inst_59929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310000007ffffff; valaddr_reg:x3; val_offset:179787*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179787*0 + 3*25*FLEN/8, x4, x1, x2)

inst_59930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000000fffffff; valaddr_reg:x3; val_offset:179790*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179790*0 + 3*26*FLEN/8, x4, x1, x2)

inst_59931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000001fffffff; valaddr_reg:x3; val_offset:179793*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179793*0 + 3*27*FLEN/8, x4, x1, x2)

inst_59932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000003fffffff; valaddr_reg:x3; val_offset:179796*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179796*0 + 3*28*FLEN/8, x4, x1, x2)

inst_59933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000007fffffff; valaddr_reg:x3; val_offset:179799*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179799*0 + 3*29*FLEN/8, x4, x1, x2)

inst_59934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100000ffffffff; valaddr_reg:x3; val_offset:179802*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179802*0 + 3*30*FLEN/8, x4, x1, x2)

inst_59935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100001ffffffff; valaddr_reg:x3; val_offset:179805*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179805*0 + 3*31*FLEN/8, x4, x1, x2)

inst_59936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100003ffffffff; valaddr_reg:x3; val_offset:179808*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179808*0 + 3*32*FLEN/8, x4, x1, x2)

inst_59937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100007ffffffff; valaddr_reg:x3; val_offset:179811*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179811*0 + 3*33*FLEN/8, x4, x1, x2)

inst_59938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310000fffffffff; valaddr_reg:x3; val_offset:179814*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179814*0 + 3*34*FLEN/8, x4, x1, x2)

inst_59939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310001fffffffff; valaddr_reg:x3; val_offset:179817*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179817*0 + 3*35*FLEN/8, x4, x1, x2)

inst_59940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310003fffffffff; valaddr_reg:x3; val_offset:179820*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179820*0 + 3*36*FLEN/8, x4, x1, x2)

inst_59941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310007fffffffff; valaddr_reg:x3; val_offset:179823*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179823*0 + 3*37*FLEN/8, x4, x1, x2)

inst_59942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831000ffffffffff; valaddr_reg:x3; val_offset:179826*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179826*0 + 3*38*FLEN/8, x4, x1, x2)

inst_59943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831001ffffffffff; valaddr_reg:x3; val_offset:179829*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179829*0 + 3*39*FLEN/8, x4, x1, x2)

inst_59944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831003ffffffffff; valaddr_reg:x3; val_offset:179832*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179832*0 + 3*40*FLEN/8, x4, x1, x2)

inst_59945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831007ffffffffff; valaddr_reg:x3; val_offset:179835*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179835*0 + 3*41*FLEN/8, x4, x1, x2)

inst_59946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83100fffffffffff; valaddr_reg:x3; val_offset:179838*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179838*0 + 3*42*FLEN/8, x4, x1, x2)

inst_59947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83101fffffffffff; valaddr_reg:x3; val_offset:179841*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179841*0 + 3*43*FLEN/8, x4, x1, x2)

inst_59948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83103fffffffffff; valaddr_reg:x3; val_offset:179844*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179844*0 + 3*44*FLEN/8, x4, x1, x2)

inst_59949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x83107fffffffffff; valaddr_reg:x3; val_offset:179847*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179847*0 + 3*45*FLEN/8, x4, x1, x2)

inst_59950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8310ffffffffffff; valaddr_reg:x3; val_offset:179850*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179850*0 + 3*46*FLEN/8, x4, x1, x2)

inst_59951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8311ffffffffffff; valaddr_reg:x3; val_offset:179853*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179853*0 + 3*47*FLEN/8, x4, x1, x2)

inst_59952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8313ffffffffffff; valaddr_reg:x3; val_offset:179856*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179856*0 + 3*48*FLEN/8, x4, x1, x2)

inst_59953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8317ffffffffffff; valaddr_reg:x3; val_offset:179859*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179859*0 + 3*49*FLEN/8, x4, x1, x2)

inst_59954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x8318000000000000; valaddr_reg:x3; val_offset:179862*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179862*0 + 3*50*FLEN/8, x4, x1, x2)

inst_59955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831c000000000000; valaddr_reg:x3; val_offset:179865*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179865*0 + 3*51*FLEN/8, x4, x1, x2)

inst_59956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831e000000000000; valaddr_reg:x3; val_offset:179868*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179868*0 + 3*52*FLEN/8, x4, x1, x2)

inst_59957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831f000000000000; valaddr_reg:x3; val_offset:179871*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179871*0 + 3*53*FLEN/8, x4, x1, x2)

inst_59958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831f800000000000; valaddr_reg:x3; val_offset:179874*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179874*0 + 3*54*FLEN/8, x4, x1, x2)

inst_59959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fc00000000000; valaddr_reg:x3; val_offset:179877*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179877*0 + 3*55*FLEN/8, x4, x1, x2)

inst_59960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fe00000000000; valaddr_reg:x3; val_offset:179880*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179880*0 + 3*56*FLEN/8, x4, x1, x2)

inst_59961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ff00000000000; valaddr_reg:x3; val_offset:179883*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179883*0 + 3*57*FLEN/8, x4, x1, x2)

inst_59962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ff80000000000; valaddr_reg:x3; val_offset:179886*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179886*0 + 3*58*FLEN/8, x4, x1, x2)

inst_59963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffc0000000000; valaddr_reg:x3; val_offset:179889*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179889*0 + 3*59*FLEN/8, x4, x1, x2)

inst_59964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffe0000000000; valaddr_reg:x3; val_offset:179892*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179892*0 + 3*60*FLEN/8, x4, x1, x2)

inst_59965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fff0000000000; valaddr_reg:x3; val_offset:179895*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179895*0 + 3*61*FLEN/8, x4, x1, x2)

inst_59966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fff8000000000; valaddr_reg:x3; val_offset:179898*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179898*0 + 3*62*FLEN/8, x4, x1, x2)

inst_59967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffc000000000; valaddr_reg:x3; val_offset:179901*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179901*0 + 3*63*FLEN/8, x4, x1, x2)

inst_59968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffe000000000; valaddr_reg:x3; val_offset:179904*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179904*0 + 3*64*FLEN/8, x4, x1, x2)

inst_59969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffff000000000; valaddr_reg:x3; val_offset:179907*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179907*0 + 3*65*FLEN/8, x4, x1, x2)

inst_59970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffff800000000; valaddr_reg:x3; val_offset:179910*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179910*0 + 3*66*FLEN/8, x4, x1, x2)

inst_59971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffc00000000; valaddr_reg:x3; val_offset:179913*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179913*0 + 3*67*FLEN/8, x4, x1, x2)

inst_59972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffe00000000; valaddr_reg:x3; val_offset:179916*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179916*0 + 3*68*FLEN/8, x4, x1, x2)

inst_59973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffff00000000; valaddr_reg:x3; val_offset:179919*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179919*0 + 3*69*FLEN/8, x4, x1, x2)

inst_59974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffff80000000; valaddr_reg:x3; val_offset:179922*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179922*0 + 3*70*FLEN/8, x4, x1, x2)

inst_59975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffc0000000; valaddr_reg:x3; val_offset:179925*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179925*0 + 3*71*FLEN/8, x4, x1, x2)

inst_59976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffe0000000; valaddr_reg:x3; val_offset:179928*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179928*0 + 3*72*FLEN/8, x4, x1, x2)

inst_59977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffff0000000; valaddr_reg:x3; val_offset:179931*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179931*0 + 3*73*FLEN/8, x4, x1, x2)

inst_59978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffff8000000; valaddr_reg:x3; val_offset:179934*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179934*0 + 3*74*FLEN/8, x4, x1, x2)

inst_59979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffc000000; valaddr_reg:x3; val_offset:179937*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179937*0 + 3*75*FLEN/8, x4, x1, x2)

inst_59980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffe000000; valaddr_reg:x3; val_offset:179940*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179940*0 + 3*76*FLEN/8, x4, x1, x2)

inst_59981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffff000000; valaddr_reg:x3; val_offset:179943*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179943*0 + 3*77*FLEN/8, x4, x1, x2)

inst_59982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffff800000; valaddr_reg:x3; val_offset:179946*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179946*0 + 3*78*FLEN/8, x4, x1, x2)

inst_59983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffffc00000; valaddr_reg:x3; val_offset:179949*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179949*0 + 3*79*FLEN/8, x4, x1, x2)

inst_59984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffffe00000; valaddr_reg:x3; val_offset:179952*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179952*0 + 3*80*FLEN/8, x4, x1, x2)

inst_59985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffff00000; valaddr_reg:x3; val_offset:179955*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179955*0 + 3*81*FLEN/8, x4, x1, x2)

inst_59986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffff80000; valaddr_reg:x3; val_offset:179958*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179958*0 + 3*82*FLEN/8, x4, x1, x2)

inst_59987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffffc0000; valaddr_reg:x3; val_offset:179961*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179961*0 + 3*83*FLEN/8, x4, x1, x2)

inst_59988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffffe0000; valaddr_reg:x3; val_offset:179964*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179964*0 + 3*84*FLEN/8, x4, x1, x2)

inst_59989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffffff0000; valaddr_reg:x3; val_offset:179967*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179967*0 + 3*85*FLEN/8, x4, x1, x2)

inst_59990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffffff8000; valaddr_reg:x3; val_offset:179970*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179970*0 + 3*86*FLEN/8, x4, x1, x2)

inst_59991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffffffc000; valaddr_reg:x3; val_offset:179973*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179973*0 + 3*87*FLEN/8, x4, x1, x2)

inst_59992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffffffe000; valaddr_reg:x3; val_offset:179976*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179976*0 + 3*88*FLEN/8, x4, x1, x2)

inst_59993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffffff000; valaddr_reg:x3; val_offset:179979*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179979*0 + 3*89*FLEN/8, x4, x1, x2)

inst_59994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffffff800; valaddr_reg:x3; val_offset:179982*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179982*0 + 3*90*FLEN/8, x4, x1, x2)

inst_59995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffffffc00; valaddr_reg:x3; val_offset:179985*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179985*0 + 3*91*FLEN/8, x4, x1, x2)

inst_59996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffffffe00; valaddr_reg:x3; val_offset:179988*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179988*0 + 3*92*FLEN/8, x4, x1, x2)

inst_59997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffffffff00; valaddr_reg:x3; val_offset:179991*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179991*0 + 3*93*FLEN/8, x4, x1, x2)

inst_59998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffffffff80; valaddr_reg:x3; val_offset:179994*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179994*0 + 3*94*FLEN/8, x4, x1, x2)

inst_59999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffffffffc0; valaddr_reg:x3; val_offset:179997*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 179997*0 + 3*95*FLEN/8, x4, x1, x2)

inst_60000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffffffffe0; valaddr_reg:x3; val_offset:180000*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180000*0 + 3*96*FLEN/8, x4, x1, x2)

inst_60001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffffffff0; valaddr_reg:x3; val_offset:180003*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180003*0 + 3*97*FLEN/8, x4, x1, x2)

inst_60002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffffffff8; valaddr_reg:x3; val_offset:180006*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180006*0 + 3*98*FLEN/8, x4, x1, x2)

inst_60003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffffffffc; valaddr_reg:x3; val_offset:180009*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180009*0 + 3*99*FLEN/8, x4, x1, x2)

inst_60004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831ffffffffffffe; valaddr_reg:x3; val_offset:180012*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180012*0 + 3*100*FLEN/8, x4, x1, x2)

inst_60005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3671fd3520218 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3671fd3520218; op2val:0x8000;
op3val:0x831fffffffffffff; valaddr_reg:x3; val_offset:180015*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180015*0 + 3*101*FLEN/8, x4, x1, x2)

inst_60006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:180018*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180018*0 + 3*102*FLEN/8, x4, x1, x2)

inst_60007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:180021*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180021*0 + 3*103*FLEN/8, x4, x1, x2)

inst_60008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:180024*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180024*0 + 3*104*FLEN/8, x4, x1, x2)

inst_60009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:180027*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180027*0 + 3*105*FLEN/8, x4, x1, x2)

inst_60010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:180030*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180030*0 + 3*106*FLEN/8, x4, x1, x2)

inst_60011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:180033*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180033*0 + 3*107*FLEN/8, x4, x1, x2)

inst_60012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:180036*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180036*0 + 3*108*FLEN/8, x4, x1, x2)

inst_60013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:180039*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180039*0 + 3*109*FLEN/8, x4, x1, x2)

inst_60014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:180042*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180042*0 + 3*110*FLEN/8, x4, x1, x2)

inst_60015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:180045*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180045*0 + 3*111*FLEN/8, x4, x1, x2)

inst_60016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:180048*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180048*0 + 3*112*FLEN/8, x4, x1, x2)

inst_60017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:180051*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180051*0 + 3*113*FLEN/8, x4, x1, x2)

inst_60018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:180054*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180054*0 + 3*114*FLEN/8, x4, x1, x2)

inst_60019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:180057*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180057*0 + 3*115*FLEN/8, x4, x1, x2)

inst_60020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:180060*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180060*0 + 3*116*FLEN/8, x4, x1, x2)

inst_60021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:180063*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180063*0 + 3*117*FLEN/8, x4, x1, x2)

inst_60022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:180066*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180066*0 + 3*118*FLEN/8, x4, x1, x2)

inst_60023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:180069*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180069*0 + 3*119*FLEN/8, x4, x1, x2)

inst_60024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:180072*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180072*0 + 3*120*FLEN/8, x4, x1, x2)

inst_60025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:180075*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180075*0 + 3*121*FLEN/8, x4, x1, x2)

inst_60026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:180078*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180078*0 + 3*122*FLEN/8, x4, x1, x2)

inst_60027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:180081*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180081*0 + 3*123*FLEN/8, x4, x1, x2)

inst_60028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000000000000; valaddr_reg:x3; val_offset:180084*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180084*0 + 3*124*FLEN/8, x4, x1, x2)

inst_60029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000000000001; valaddr_reg:x3; val_offset:180087*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180087*0 + 3*125*FLEN/8, x4, x1, x2)

inst_60030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000000000003; valaddr_reg:x3; val_offset:180090*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180090*0 + 3*126*FLEN/8, x4, x1, x2)

inst_60031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000000000007; valaddr_reg:x3; val_offset:180093*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180093*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_60032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000000000000f; valaddr_reg:x3; val_offset:180096*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180096*0 + 3*128*FLEN/8, x4, x1, x2)

inst_60033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000000000001f; valaddr_reg:x3; val_offset:180099*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180099*0 + 3*129*FLEN/8, x4, x1, x2)

inst_60034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000000000003f; valaddr_reg:x3; val_offset:180102*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180102*0 + 3*130*FLEN/8, x4, x1, x2)

inst_60035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000000000007f; valaddr_reg:x3; val_offset:180105*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180105*0 + 3*131*FLEN/8, x4, x1, x2)

inst_60036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800000000000ff; valaddr_reg:x3; val_offset:180108*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180108*0 + 3*132*FLEN/8, x4, x1, x2)

inst_60037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800000000001ff; valaddr_reg:x3; val_offset:180111*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180111*0 + 3*133*FLEN/8, x4, x1, x2)

inst_60038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800000000003ff; valaddr_reg:x3; val_offset:180114*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180114*0 + 3*134*FLEN/8, x4, x1, x2)

inst_60039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800000000007ff; valaddr_reg:x3; val_offset:180117*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180117*0 + 3*135*FLEN/8, x4, x1, x2)

inst_60040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000000000fff; valaddr_reg:x3; val_offset:180120*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180120*0 + 3*136*FLEN/8, x4, x1, x2)

inst_60041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000000001fff; valaddr_reg:x3; val_offset:180123*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180123*0 + 3*137*FLEN/8, x4, x1, x2)

inst_60042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000000003fff; valaddr_reg:x3; val_offset:180126*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180126*0 + 3*138*FLEN/8, x4, x1, x2)

inst_60043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000000007fff; valaddr_reg:x3; val_offset:180129*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180129*0 + 3*139*FLEN/8, x4, x1, x2)

inst_60044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000000000ffff; valaddr_reg:x3; val_offset:180132*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180132*0 + 3*140*FLEN/8, x4, x1, x2)

inst_60045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000000001ffff; valaddr_reg:x3; val_offset:180135*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180135*0 + 3*141*FLEN/8, x4, x1, x2)

inst_60046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000000003ffff; valaddr_reg:x3; val_offset:180138*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180138*0 + 3*142*FLEN/8, x4, x1, x2)

inst_60047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000000007ffff; valaddr_reg:x3; val_offset:180141*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180141*0 + 3*143*FLEN/8, x4, x1, x2)

inst_60048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800000000fffff; valaddr_reg:x3; val_offset:180144*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180144*0 + 3*144*FLEN/8, x4, x1, x2)

inst_60049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800000001fffff; valaddr_reg:x3; val_offset:180147*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180147*0 + 3*145*FLEN/8, x4, x1, x2)

inst_60050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800000003fffff; valaddr_reg:x3; val_offset:180150*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180150*0 + 3*146*FLEN/8, x4, x1, x2)

inst_60051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800000007fffff; valaddr_reg:x3; val_offset:180153*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180153*0 + 3*147*FLEN/8, x4, x1, x2)

inst_60052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000000ffffff; valaddr_reg:x3; val_offset:180156*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180156*0 + 3*148*FLEN/8, x4, x1, x2)

inst_60053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000001ffffff; valaddr_reg:x3; val_offset:180159*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180159*0 + 3*149*FLEN/8, x4, x1, x2)

inst_60054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000003ffffff; valaddr_reg:x3; val_offset:180162*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180162*0 + 3*150*FLEN/8, x4, x1, x2)

inst_60055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000007ffffff; valaddr_reg:x3; val_offset:180165*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180165*0 + 3*151*FLEN/8, x4, x1, x2)

inst_60056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000000fffffff; valaddr_reg:x3; val_offset:180168*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180168*0 + 3*152*FLEN/8, x4, x1, x2)

inst_60057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000001fffffff; valaddr_reg:x3; val_offset:180171*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180171*0 + 3*153*FLEN/8, x4, x1, x2)

inst_60058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000003fffffff; valaddr_reg:x3; val_offset:180174*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180174*0 + 3*154*FLEN/8, x4, x1, x2)

inst_60059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000007fffffff; valaddr_reg:x3; val_offset:180177*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180177*0 + 3*155*FLEN/8, x4, x1, x2)

inst_60060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800000ffffffff; valaddr_reg:x3; val_offset:180180*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180180*0 + 3*156*FLEN/8, x4, x1, x2)

inst_60061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800001ffffffff; valaddr_reg:x3; val_offset:180183*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180183*0 + 3*157*FLEN/8, x4, x1, x2)

inst_60062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800003ffffffff; valaddr_reg:x3; val_offset:180186*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180186*0 + 3*158*FLEN/8, x4, x1, x2)

inst_60063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800007ffffffff; valaddr_reg:x3; val_offset:180189*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180189*0 + 3*159*FLEN/8, x4, x1, x2)

inst_60064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380000fffffffff; valaddr_reg:x3; val_offset:180192*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180192*0 + 3*160*FLEN/8, x4, x1, x2)

inst_60065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380001fffffffff; valaddr_reg:x3; val_offset:180195*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180195*0 + 3*161*FLEN/8, x4, x1, x2)

inst_60066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380003fffffffff; valaddr_reg:x3; val_offset:180198*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180198*0 + 3*162*FLEN/8, x4, x1, x2)

inst_60067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380007fffffffff; valaddr_reg:x3; val_offset:180201*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180201*0 + 3*163*FLEN/8, x4, x1, x2)

inst_60068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38000ffffffffff; valaddr_reg:x3; val_offset:180204*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180204*0 + 3*164*FLEN/8, x4, x1, x2)

inst_60069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38001ffffffffff; valaddr_reg:x3; val_offset:180207*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180207*0 + 3*165*FLEN/8, x4, x1, x2)

inst_60070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38003ffffffffff; valaddr_reg:x3; val_offset:180210*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180210*0 + 3*166*FLEN/8, x4, x1, x2)

inst_60071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38007ffffffffff; valaddr_reg:x3; val_offset:180213*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180213*0 + 3*167*FLEN/8, x4, x1, x2)

inst_60072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3800fffffffffff; valaddr_reg:x3; val_offset:180216*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180216*0 + 3*168*FLEN/8, x4, x1, x2)

inst_60073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3801fffffffffff; valaddr_reg:x3; val_offset:180219*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180219*0 + 3*169*FLEN/8, x4, x1, x2)

inst_60074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3803fffffffffff; valaddr_reg:x3; val_offset:180222*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180222*0 + 3*170*FLEN/8, x4, x1, x2)

inst_60075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x3807fffffffffff; valaddr_reg:x3; val_offset:180225*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180225*0 + 3*171*FLEN/8, x4, x1, x2)

inst_60076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x380ffffffffffff; valaddr_reg:x3; val_offset:180228*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180228*0 + 3*172*FLEN/8, x4, x1, x2)

inst_60077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x381ffffffffffff; valaddr_reg:x3; val_offset:180231*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180231*0 + 3*173*FLEN/8, x4, x1, x2)

inst_60078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x383ffffffffffff; valaddr_reg:x3; val_offset:180234*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180234*0 + 3*174*FLEN/8, x4, x1, x2)

inst_60079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x387ffffffffffff; valaddr_reg:x3; val_offset:180237*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180237*0 + 3*175*FLEN/8, x4, x1, x2)

inst_60080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x388000000000000; valaddr_reg:x3; val_offset:180240*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180240*0 + 3*176*FLEN/8, x4, x1, x2)

inst_60081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38c000000000000; valaddr_reg:x3; val_offset:180243*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180243*0 + 3*177*FLEN/8, x4, x1, x2)

inst_60082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38e000000000000; valaddr_reg:x3; val_offset:180246*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180246*0 + 3*178*FLEN/8, x4, x1, x2)

inst_60083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38f000000000000; valaddr_reg:x3; val_offset:180249*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180249*0 + 3*179*FLEN/8, x4, x1, x2)

inst_60084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38f800000000000; valaddr_reg:x3; val_offset:180252*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180252*0 + 3*180*FLEN/8, x4, x1, x2)

inst_60085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fc00000000000; valaddr_reg:x3; val_offset:180255*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180255*0 + 3*181*FLEN/8, x4, x1, x2)

inst_60086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fe00000000000; valaddr_reg:x3; val_offset:180258*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180258*0 + 3*182*FLEN/8, x4, x1, x2)

inst_60087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ff00000000000; valaddr_reg:x3; val_offset:180261*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180261*0 + 3*183*FLEN/8, x4, x1, x2)

inst_60088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ff80000000000; valaddr_reg:x3; val_offset:180264*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180264*0 + 3*184*FLEN/8, x4, x1, x2)

inst_60089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffc0000000000; valaddr_reg:x3; val_offset:180267*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180267*0 + 3*185*FLEN/8, x4, x1, x2)

inst_60090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffe0000000000; valaddr_reg:x3; val_offset:180270*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180270*0 + 3*186*FLEN/8, x4, x1, x2)

inst_60091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fff0000000000; valaddr_reg:x3; val_offset:180273*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180273*0 + 3*187*FLEN/8, x4, x1, x2)

inst_60092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fff8000000000; valaddr_reg:x3; val_offset:180276*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180276*0 + 3*188*FLEN/8, x4, x1, x2)

inst_60093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffc000000000; valaddr_reg:x3; val_offset:180279*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180279*0 + 3*189*FLEN/8, x4, x1, x2)

inst_60094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffe000000000; valaddr_reg:x3; val_offset:180282*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180282*0 + 3*190*FLEN/8, x4, x1, x2)

inst_60095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffff000000000; valaddr_reg:x3; val_offset:180285*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180285*0 + 3*191*FLEN/8, x4, x1, x2)

inst_60096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffff800000000; valaddr_reg:x3; val_offset:180288*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180288*0 + 3*192*FLEN/8, x4, x1, x2)

inst_60097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffc00000000; valaddr_reg:x3; val_offset:180291*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180291*0 + 3*193*FLEN/8, x4, x1, x2)

inst_60098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffe00000000; valaddr_reg:x3; val_offset:180294*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180294*0 + 3*194*FLEN/8, x4, x1, x2)

inst_60099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffff00000000; valaddr_reg:x3; val_offset:180297*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180297*0 + 3*195*FLEN/8, x4, x1, x2)

inst_60100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffff80000000; valaddr_reg:x3; val_offset:180300*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180300*0 + 3*196*FLEN/8, x4, x1, x2)

inst_60101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffc0000000; valaddr_reg:x3; val_offset:180303*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180303*0 + 3*197*FLEN/8, x4, x1, x2)

inst_60102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffe0000000; valaddr_reg:x3; val_offset:180306*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180306*0 + 3*198*FLEN/8, x4, x1, x2)

inst_60103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffff0000000; valaddr_reg:x3; val_offset:180309*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180309*0 + 3*199*FLEN/8, x4, x1, x2)

inst_60104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffff8000000; valaddr_reg:x3; val_offset:180312*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180312*0 + 3*200*FLEN/8, x4, x1, x2)

inst_60105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffc000000; valaddr_reg:x3; val_offset:180315*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180315*0 + 3*201*FLEN/8, x4, x1, x2)

inst_60106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffe000000; valaddr_reg:x3; val_offset:180318*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180318*0 + 3*202*FLEN/8, x4, x1, x2)

inst_60107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffff000000; valaddr_reg:x3; val_offset:180321*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180321*0 + 3*203*FLEN/8, x4, x1, x2)

inst_60108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffff800000; valaddr_reg:x3; val_offset:180324*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180324*0 + 3*204*FLEN/8, x4, x1, x2)

inst_60109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffffc00000; valaddr_reg:x3; val_offset:180327*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180327*0 + 3*205*FLEN/8, x4, x1, x2)

inst_60110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffffe00000; valaddr_reg:x3; val_offset:180330*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180330*0 + 3*206*FLEN/8, x4, x1, x2)

inst_60111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffff00000; valaddr_reg:x3; val_offset:180333*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180333*0 + 3*207*FLEN/8, x4, x1, x2)

inst_60112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffff80000; valaddr_reg:x3; val_offset:180336*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180336*0 + 3*208*FLEN/8, x4, x1, x2)

inst_60113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffffc0000; valaddr_reg:x3; val_offset:180339*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180339*0 + 3*209*FLEN/8, x4, x1, x2)

inst_60114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffffe0000; valaddr_reg:x3; val_offset:180342*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180342*0 + 3*210*FLEN/8, x4, x1, x2)

inst_60115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffffff0000; valaddr_reg:x3; val_offset:180345*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180345*0 + 3*211*FLEN/8, x4, x1, x2)

inst_60116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffffff8000; valaddr_reg:x3; val_offset:180348*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180348*0 + 3*212*FLEN/8, x4, x1, x2)

inst_60117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffffffc000; valaddr_reg:x3; val_offset:180351*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180351*0 + 3*213*FLEN/8, x4, x1, x2)

inst_60118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffffffe000; valaddr_reg:x3; val_offset:180354*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180354*0 + 3*214*FLEN/8, x4, x1, x2)

inst_60119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffffff000; valaddr_reg:x3; val_offset:180357*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180357*0 + 3*215*FLEN/8, x4, x1, x2)

inst_60120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffffff800; valaddr_reg:x3; val_offset:180360*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180360*0 + 3*216*FLEN/8, x4, x1, x2)

inst_60121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffffffc00; valaddr_reg:x3; val_offset:180363*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180363*0 + 3*217*FLEN/8, x4, x1, x2)

inst_60122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffffffe00; valaddr_reg:x3; val_offset:180366*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180366*0 + 3*218*FLEN/8, x4, x1, x2)

inst_60123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffffffff00; valaddr_reg:x3; val_offset:180369*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180369*0 + 3*219*FLEN/8, x4, x1, x2)

inst_60124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffffffff80; valaddr_reg:x3; val_offset:180372*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180372*0 + 3*220*FLEN/8, x4, x1, x2)

inst_60125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffffffffc0; valaddr_reg:x3; val_offset:180375*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180375*0 + 3*221*FLEN/8, x4, x1, x2)

inst_60126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffffffffe0; valaddr_reg:x3; val_offset:180378*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180378*0 + 3*222*FLEN/8, x4, x1, x2)

inst_60127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffffffff0; valaddr_reg:x3; val_offset:180381*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180381*0 + 3*223*FLEN/8, x4, x1, x2)

inst_60128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffffffff8; valaddr_reg:x3; val_offset:180384*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180384*0 + 3*224*FLEN/8, x4, x1, x2)

inst_60129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffffffffc; valaddr_reg:x3; val_offset:180387*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180387*0 + 3*225*FLEN/8, x4, x1, x2)

inst_60130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38ffffffffffffe; valaddr_reg:x3; val_offset:180390*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180390*0 + 3*226*FLEN/8, x4, x1, x2)

inst_60131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3674193880528 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3674193880528; op2val:0x0;
op3val:0x38fffffffffffff; valaddr_reg:x3; val_offset:180393*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180393*0 + 3*227*FLEN/8, x4, x1, x2)

inst_60132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000000000000; valaddr_reg:x3; val_offset:180396*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180396*0 + 3*228*FLEN/8, x4, x1, x2)

inst_60133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000000000001; valaddr_reg:x3; val_offset:180399*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180399*0 + 3*229*FLEN/8, x4, x1, x2)

inst_60134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000000000003; valaddr_reg:x3; val_offset:180402*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180402*0 + 3*230*FLEN/8, x4, x1, x2)

inst_60135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000000000007; valaddr_reg:x3; val_offset:180405*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180405*0 + 3*231*FLEN/8, x4, x1, x2)

inst_60136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000000000000f; valaddr_reg:x3; val_offset:180408*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180408*0 + 3*232*FLEN/8, x4, x1, x2)

inst_60137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000000000001f; valaddr_reg:x3; val_offset:180411*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180411*0 + 3*233*FLEN/8, x4, x1, x2)

inst_60138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000000000003f; valaddr_reg:x3; val_offset:180414*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180414*0 + 3*234*FLEN/8, x4, x1, x2)

inst_60139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000000000007f; valaddr_reg:x3; val_offset:180417*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180417*0 + 3*235*FLEN/8, x4, x1, x2)

inst_60140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600000000000ff; valaddr_reg:x3; val_offset:180420*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180420*0 + 3*236*FLEN/8, x4, x1, x2)

inst_60141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600000000001ff; valaddr_reg:x3; val_offset:180423*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180423*0 + 3*237*FLEN/8, x4, x1, x2)

inst_60142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600000000003ff; valaddr_reg:x3; val_offset:180426*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180426*0 + 3*238*FLEN/8, x4, x1, x2)

inst_60143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600000000007ff; valaddr_reg:x3; val_offset:180429*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180429*0 + 3*239*FLEN/8, x4, x1, x2)

inst_60144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000000000fff; valaddr_reg:x3; val_offset:180432*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180432*0 + 3*240*FLEN/8, x4, x1, x2)

inst_60145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000000001fff; valaddr_reg:x3; val_offset:180435*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180435*0 + 3*241*FLEN/8, x4, x1, x2)

inst_60146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000000003fff; valaddr_reg:x3; val_offset:180438*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180438*0 + 3*242*FLEN/8, x4, x1, x2)

inst_60147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000000007fff; valaddr_reg:x3; val_offset:180441*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180441*0 + 3*243*FLEN/8, x4, x1, x2)

inst_60148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000000000ffff; valaddr_reg:x3; val_offset:180444*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180444*0 + 3*244*FLEN/8, x4, x1, x2)

inst_60149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000000001ffff; valaddr_reg:x3; val_offset:180447*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180447*0 + 3*245*FLEN/8, x4, x1, x2)

inst_60150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000000003ffff; valaddr_reg:x3; val_offset:180450*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180450*0 + 3*246*FLEN/8, x4, x1, x2)

inst_60151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000000007ffff; valaddr_reg:x3; val_offset:180453*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180453*0 + 3*247*FLEN/8, x4, x1, x2)

inst_60152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600000000fffff; valaddr_reg:x3; val_offset:180456*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180456*0 + 3*248*FLEN/8, x4, x1, x2)

inst_60153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600000001fffff; valaddr_reg:x3; val_offset:180459*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180459*0 + 3*249*FLEN/8, x4, x1, x2)

inst_60154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600000003fffff; valaddr_reg:x3; val_offset:180462*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180462*0 + 3*250*FLEN/8, x4, x1, x2)

inst_60155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600000007fffff; valaddr_reg:x3; val_offset:180465*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180465*0 + 3*251*FLEN/8, x4, x1, x2)

inst_60156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000000ffffff; valaddr_reg:x3; val_offset:180468*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180468*0 + 3*252*FLEN/8, x4, x1, x2)

inst_60157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000001ffffff; valaddr_reg:x3; val_offset:180471*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180471*0 + 3*253*FLEN/8, x4, x1, x2)

inst_60158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000003ffffff; valaddr_reg:x3; val_offset:180474*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180474*0 + 3*254*FLEN/8, x4, x1, x2)

inst_60159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000007ffffff; valaddr_reg:x3; val_offset:180477*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180477*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_60160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000000fffffff; valaddr_reg:x3; val_offset:180480*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180480*0 + 3*256*FLEN/8, x4, x1, x2)

inst_60161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000001fffffff; valaddr_reg:x3; val_offset:180483*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180483*0 + 3*257*FLEN/8, x4, x1, x2)

inst_60162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000003fffffff; valaddr_reg:x3; val_offset:180486*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180486*0 + 3*258*FLEN/8, x4, x1, x2)

inst_60163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000007fffffff; valaddr_reg:x3; val_offset:180489*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180489*0 + 3*259*FLEN/8, x4, x1, x2)

inst_60164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600000ffffffff; valaddr_reg:x3; val_offset:180492*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180492*0 + 3*260*FLEN/8, x4, x1, x2)

inst_60165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600001ffffffff; valaddr_reg:x3; val_offset:180495*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180495*0 + 3*261*FLEN/8, x4, x1, x2)

inst_60166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600003ffffffff; valaddr_reg:x3; val_offset:180498*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180498*0 + 3*262*FLEN/8, x4, x1, x2)

inst_60167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600007ffffffff; valaddr_reg:x3; val_offset:180501*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180501*0 + 3*263*FLEN/8, x4, x1, x2)

inst_60168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60000fffffffff; valaddr_reg:x3; val_offset:180504*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180504*0 + 3*264*FLEN/8, x4, x1, x2)

inst_60169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60001fffffffff; valaddr_reg:x3; val_offset:180507*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180507*0 + 3*265*FLEN/8, x4, x1, x2)

inst_60170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60003fffffffff; valaddr_reg:x3; val_offset:180510*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180510*0 + 3*266*FLEN/8, x4, x1, x2)

inst_60171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60007fffffffff; valaddr_reg:x3; val_offset:180513*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180513*0 + 3*267*FLEN/8, x4, x1, x2)

inst_60172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6000ffffffffff; valaddr_reg:x3; val_offset:180516*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180516*0 + 3*268*FLEN/8, x4, x1, x2)

inst_60173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6001ffffffffff; valaddr_reg:x3; val_offset:180519*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180519*0 + 3*269*FLEN/8, x4, x1, x2)

inst_60174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6003ffffffffff; valaddr_reg:x3; val_offset:180522*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180522*0 + 3*270*FLEN/8, x4, x1, x2)

inst_60175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6007ffffffffff; valaddr_reg:x3; val_offset:180525*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180525*0 + 3*271*FLEN/8, x4, x1, x2)

inst_60176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f600fffffffffff; valaddr_reg:x3; val_offset:180528*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180528*0 + 3*272*FLEN/8, x4, x1, x2)

inst_60177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f601fffffffffff; valaddr_reg:x3; val_offset:180531*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180531*0 + 3*273*FLEN/8, x4, x1, x2)

inst_60178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f603fffffffffff; valaddr_reg:x3; val_offset:180534*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180534*0 + 3*274*FLEN/8, x4, x1, x2)

inst_60179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f607fffffffffff; valaddr_reg:x3; val_offset:180537*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180537*0 + 3*275*FLEN/8, x4, x1, x2)

inst_60180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f60ffffffffffff; valaddr_reg:x3; val_offset:180540*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180540*0 + 3*276*FLEN/8, x4, x1, x2)

inst_60181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f61ffffffffffff; valaddr_reg:x3; val_offset:180543*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180543*0 + 3*277*FLEN/8, x4, x1, x2)

inst_60182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f63ffffffffffff; valaddr_reg:x3; val_offset:180546*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180546*0 + 3*278*FLEN/8, x4, x1, x2)

inst_60183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f67ffffffffffff; valaddr_reg:x3; val_offset:180549*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180549*0 + 3*279*FLEN/8, x4, x1, x2)

inst_60184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f68000000000000; valaddr_reg:x3; val_offset:180552*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180552*0 + 3*280*FLEN/8, x4, x1, x2)

inst_60185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6c000000000000; valaddr_reg:x3; val_offset:180555*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180555*0 + 3*281*FLEN/8, x4, x1, x2)

inst_60186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6e000000000000; valaddr_reg:x3; val_offset:180558*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180558*0 + 3*282*FLEN/8, x4, x1, x2)

inst_60187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6f000000000000; valaddr_reg:x3; val_offset:180561*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180561*0 + 3*283*FLEN/8, x4, x1, x2)

inst_60188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6f800000000000; valaddr_reg:x3; val_offset:180564*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180564*0 + 3*284*FLEN/8, x4, x1, x2)

inst_60189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fc00000000000; valaddr_reg:x3; val_offset:180567*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180567*0 + 3*285*FLEN/8, x4, x1, x2)

inst_60190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fe00000000000; valaddr_reg:x3; val_offset:180570*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180570*0 + 3*286*FLEN/8, x4, x1, x2)

inst_60191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ff00000000000; valaddr_reg:x3; val_offset:180573*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180573*0 + 3*287*FLEN/8, x4, x1, x2)

inst_60192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ff80000000000; valaddr_reg:x3; val_offset:180576*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180576*0 + 3*288*FLEN/8, x4, x1, x2)

inst_60193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffc0000000000; valaddr_reg:x3; val_offset:180579*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180579*0 + 3*289*FLEN/8, x4, x1, x2)

inst_60194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffe0000000000; valaddr_reg:x3; val_offset:180582*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180582*0 + 3*290*FLEN/8, x4, x1, x2)

inst_60195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fff0000000000; valaddr_reg:x3; val_offset:180585*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180585*0 + 3*291*FLEN/8, x4, x1, x2)

inst_60196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fff8000000000; valaddr_reg:x3; val_offset:180588*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180588*0 + 3*292*FLEN/8, x4, x1, x2)

inst_60197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffc000000000; valaddr_reg:x3; val_offset:180591*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180591*0 + 3*293*FLEN/8, x4, x1, x2)

inst_60198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffe000000000; valaddr_reg:x3; val_offset:180594*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180594*0 + 3*294*FLEN/8, x4, x1, x2)

inst_60199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffff000000000; valaddr_reg:x3; val_offset:180597*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180597*0 + 3*295*FLEN/8, x4, x1, x2)

inst_60200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffff800000000; valaddr_reg:x3; val_offset:180600*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180600*0 + 3*296*FLEN/8, x4, x1, x2)

inst_60201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffc00000000; valaddr_reg:x3; val_offset:180603*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180603*0 + 3*297*FLEN/8, x4, x1, x2)

inst_60202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffe00000000; valaddr_reg:x3; val_offset:180606*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180606*0 + 3*298*FLEN/8, x4, x1, x2)

inst_60203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffff00000000; valaddr_reg:x3; val_offset:180609*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180609*0 + 3*299*FLEN/8, x4, x1, x2)

inst_60204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffff80000000; valaddr_reg:x3; val_offset:180612*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180612*0 + 3*300*FLEN/8, x4, x1, x2)

inst_60205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffc0000000; valaddr_reg:x3; val_offset:180615*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180615*0 + 3*301*FLEN/8, x4, x1, x2)

inst_60206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffe0000000; valaddr_reg:x3; val_offset:180618*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180618*0 + 3*302*FLEN/8, x4, x1, x2)

inst_60207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffff0000000; valaddr_reg:x3; val_offset:180621*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180621*0 + 3*303*FLEN/8, x4, x1, x2)

inst_60208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffff8000000; valaddr_reg:x3; val_offset:180624*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180624*0 + 3*304*FLEN/8, x4, x1, x2)

inst_60209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffc000000; valaddr_reg:x3; val_offset:180627*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180627*0 + 3*305*FLEN/8, x4, x1, x2)

inst_60210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffe000000; valaddr_reg:x3; val_offset:180630*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180630*0 + 3*306*FLEN/8, x4, x1, x2)

inst_60211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffff000000; valaddr_reg:x3; val_offset:180633*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180633*0 + 3*307*FLEN/8, x4, x1, x2)

inst_60212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffff800000; valaddr_reg:x3; val_offset:180636*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180636*0 + 3*308*FLEN/8, x4, x1, x2)

inst_60213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffffc00000; valaddr_reg:x3; val_offset:180639*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180639*0 + 3*309*FLEN/8, x4, x1, x2)

inst_60214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffffe00000; valaddr_reg:x3; val_offset:180642*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180642*0 + 3*310*FLEN/8, x4, x1, x2)

inst_60215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffff00000; valaddr_reg:x3; val_offset:180645*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180645*0 + 3*311*FLEN/8, x4, x1, x2)

inst_60216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffff80000; valaddr_reg:x3; val_offset:180648*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180648*0 + 3*312*FLEN/8, x4, x1, x2)

inst_60217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffffc0000; valaddr_reg:x3; val_offset:180651*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180651*0 + 3*313*FLEN/8, x4, x1, x2)

inst_60218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffffe0000; valaddr_reg:x3; val_offset:180654*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180654*0 + 3*314*FLEN/8, x4, x1, x2)

inst_60219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffffff0000; valaddr_reg:x3; val_offset:180657*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180657*0 + 3*315*FLEN/8, x4, x1, x2)

inst_60220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffffff8000; valaddr_reg:x3; val_offset:180660*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180660*0 + 3*316*FLEN/8, x4, x1, x2)

inst_60221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffffffc000; valaddr_reg:x3; val_offset:180663*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180663*0 + 3*317*FLEN/8, x4, x1, x2)

inst_60222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffffffe000; valaddr_reg:x3; val_offset:180666*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180666*0 + 3*318*FLEN/8, x4, x1, x2)

inst_60223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffffff000; valaddr_reg:x3; val_offset:180669*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180669*0 + 3*319*FLEN/8, x4, x1, x2)

inst_60224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffffff800; valaddr_reg:x3; val_offset:180672*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180672*0 + 3*320*FLEN/8, x4, x1, x2)

inst_60225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffffffc00; valaddr_reg:x3; val_offset:180675*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180675*0 + 3*321*FLEN/8, x4, x1, x2)

inst_60226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffffffe00; valaddr_reg:x3; val_offset:180678*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180678*0 + 3*322*FLEN/8, x4, x1, x2)

inst_60227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffffffff00; valaddr_reg:x3; val_offset:180681*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180681*0 + 3*323*FLEN/8, x4, x1, x2)

inst_60228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffffffff80; valaddr_reg:x3; val_offset:180684*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180684*0 + 3*324*FLEN/8, x4, x1, x2)

inst_60229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffffffffc0; valaddr_reg:x3; val_offset:180687*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180687*0 + 3*325*FLEN/8, x4, x1, x2)

inst_60230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffffffffe0; valaddr_reg:x3; val_offset:180690*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180690*0 + 3*326*FLEN/8, x4, x1, x2)

inst_60231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffffffff0; valaddr_reg:x3; val_offset:180693*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180693*0 + 3*327*FLEN/8, x4, x1, x2)

inst_60232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffffffff8; valaddr_reg:x3; val_offset:180696*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180696*0 + 3*328*FLEN/8, x4, x1, x2)

inst_60233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffffffffc; valaddr_reg:x3; val_offset:180699*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180699*0 + 3*329*FLEN/8, x4, x1, x2)

inst_60234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6ffffffffffffe; valaddr_reg:x3; val_offset:180702*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180702*0 + 3*330*FLEN/8, x4, x1, x2)

inst_60235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3f6fffffffffffff; valaddr_reg:x3; val_offset:180705*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180705*0 + 3*331*FLEN/8, x4, x1, x2)

inst_60236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:180708*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180708*0 + 3*332*FLEN/8, x4, x1, x2)

inst_60237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:180711*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180711*0 + 3*333*FLEN/8, x4, x1, x2)

inst_60238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:180714*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180714*0 + 3*334*FLEN/8, x4, x1, x2)

inst_60239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:180717*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180717*0 + 3*335*FLEN/8, x4, x1, x2)

inst_60240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:180720*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180720*0 + 3*336*FLEN/8, x4, x1, x2)

inst_60241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:180723*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180723*0 + 3*337*FLEN/8, x4, x1, x2)

inst_60242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:180726*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180726*0 + 3*338*FLEN/8, x4, x1, x2)

inst_60243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:180729*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180729*0 + 3*339*FLEN/8, x4, x1, x2)

inst_60244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:180732*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180732*0 + 3*340*FLEN/8, x4, x1, x2)

inst_60245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:180735*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180735*0 + 3*341*FLEN/8, x4, x1, x2)

inst_60246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:180738*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180738*0 + 3*342*FLEN/8, x4, x1, x2)

inst_60247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:180741*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180741*0 + 3*343*FLEN/8, x4, x1, x2)

inst_60248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:180744*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180744*0 + 3*344*FLEN/8, x4, x1, x2)

inst_60249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:180747*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180747*0 + 3*345*FLEN/8, x4, x1, x2)

inst_60250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:180750*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180750*0 + 3*346*FLEN/8, x4, x1, x2)

inst_60251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:180753*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180753*0 + 3*347*FLEN/8, x4, x1, x2)

inst_60252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:180756*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180756*0 + 3*348*FLEN/8, x4, x1, x2)

inst_60253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:180759*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180759*0 + 3*349*FLEN/8, x4, x1, x2)

inst_60254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:180762*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180762*0 + 3*350*FLEN/8, x4, x1, x2)

inst_60255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:180765*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180765*0 + 3*351*FLEN/8, x4, x1, x2)

inst_60256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:180768*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180768*0 + 3*352*FLEN/8, x4, x1, x2)

inst_60257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3716e369f172d and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa5550e53f2acb and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa3716e369f172d; op2val:0x203a5550e53f2acb;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:180771*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180771*0 + 3*353*FLEN/8, x4, x1, x2)

inst_60258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:180774*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180774*0 + 3*354*FLEN/8, x4, x1, x2)

inst_60259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:180777*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180777*0 + 3*355*FLEN/8, x4, x1, x2)

inst_60260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:180780*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180780*0 + 3*356*FLEN/8, x4, x1, x2)

inst_60261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:180783*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180783*0 + 3*357*FLEN/8, x4, x1, x2)

inst_60262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:180786*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180786*0 + 3*358*FLEN/8, x4, x1, x2)

inst_60263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:180789*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180789*0 + 3*359*FLEN/8, x4, x1, x2)

inst_60264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:180792*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180792*0 + 3*360*FLEN/8, x4, x1, x2)

inst_60265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:180795*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180795*0 + 3*361*FLEN/8, x4, x1, x2)

inst_60266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:180798*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180798*0 + 3*362*FLEN/8, x4, x1, x2)

inst_60267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:180801*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180801*0 + 3*363*FLEN/8, x4, x1, x2)

inst_60268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:180804*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180804*0 + 3*364*FLEN/8, x4, x1, x2)

inst_60269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:180807*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180807*0 + 3*365*FLEN/8, x4, x1, x2)

inst_60270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:180810*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180810*0 + 3*366*FLEN/8, x4, x1, x2)

inst_60271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:180813*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180813*0 + 3*367*FLEN/8, x4, x1, x2)

inst_60272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:180816*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180816*0 + 3*368*FLEN/8, x4, x1, x2)

inst_60273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:180819*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180819*0 + 3*369*FLEN/8, x4, x1, x2)

inst_60274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:180822*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180822*0 + 3*370*FLEN/8, x4, x1, x2)

inst_60275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:180825*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180825*0 + 3*371*FLEN/8, x4, x1, x2)

inst_60276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:180828*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180828*0 + 3*372*FLEN/8, x4, x1, x2)

inst_60277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:180831*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180831*0 + 3*373*FLEN/8, x4, x1, x2)

inst_60278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:180834*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180834*0 + 3*374*FLEN/8, x4, x1, x2)

inst_60279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:180837*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180837*0 + 3*375*FLEN/8, x4, x1, x2)

inst_60280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000000000000; valaddr_reg:x3; val_offset:180840*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180840*0 + 3*376*FLEN/8, x4, x1, x2)

inst_60281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000000000001; valaddr_reg:x3; val_offset:180843*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180843*0 + 3*377*FLEN/8, x4, x1, x2)

inst_60282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000000000003; valaddr_reg:x3; val_offset:180846*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180846*0 + 3*378*FLEN/8, x4, x1, x2)

inst_60283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000000000007; valaddr_reg:x3; val_offset:180849*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180849*0 + 3*379*FLEN/8, x4, x1, x2)

inst_60284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000000000000f; valaddr_reg:x3; val_offset:180852*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180852*0 + 3*380*FLEN/8, x4, x1, x2)

inst_60285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000000000001f; valaddr_reg:x3; val_offset:180855*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180855*0 + 3*381*FLEN/8, x4, x1, x2)

inst_60286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000000000003f; valaddr_reg:x3; val_offset:180858*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180858*0 + 3*382*FLEN/8, x4, x1, x2)

inst_60287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000000000007f; valaddr_reg:x3; val_offset:180861*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180861*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_60288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700000000000ff; valaddr_reg:x3; val_offset:180864*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180864*0 + 3*384*FLEN/8, x4, x1, x2)

inst_60289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700000000001ff; valaddr_reg:x3; val_offset:180867*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180867*0 + 3*385*FLEN/8, x4, x1, x2)

inst_60290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700000000003ff; valaddr_reg:x3; val_offset:180870*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180870*0 + 3*386*FLEN/8, x4, x1, x2)

inst_60291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700000000007ff; valaddr_reg:x3; val_offset:180873*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180873*0 + 3*387*FLEN/8, x4, x1, x2)

inst_60292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000000000fff; valaddr_reg:x3; val_offset:180876*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180876*0 + 3*388*FLEN/8, x4, x1, x2)

inst_60293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000000001fff; valaddr_reg:x3; val_offset:180879*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180879*0 + 3*389*FLEN/8, x4, x1, x2)

inst_60294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000000003fff; valaddr_reg:x3; val_offset:180882*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180882*0 + 3*390*FLEN/8, x4, x1, x2)

inst_60295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000000007fff; valaddr_reg:x3; val_offset:180885*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180885*0 + 3*391*FLEN/8, x4, x1, x2)

inst_60296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000000000ffff; valaddr_reg:x3; val_offset:180888*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180888*0 + 3*392*FLEN/8, x4, x1, x2)

inst_60297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000000001ffff; valaddr_reg:x3; val_offset:180891*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180891*0 + 3*393*FLEN/8, x4, x1, x2)

inst_60298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000000003ffff; valaddr_reg:x3; val_offset:180894*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180894*0 + 3*394*FLEN/8, x4, x1, x2)

inst_60299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000000007ffff; valaddr_reg:x3; val_offset:180897*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180897*0 + 3*395*FLEN/8, x4, x1, x2)

inst_60300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700000000fffff; valaddr_reg:x3; val_offset:180900*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180900*0 + 3*396*FLEN/8, x4, x1, x2)

inst_60301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700000001fffff; valaddr_reg:x3; val_offset:180903*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180903*0 + 3*397*FLEN/8, x4, x1, x2)

inst_60302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700000003fffff; valaddr_reg:x3; val_offset:180906*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180906*0 + 3*398*FLEN/8, x4, x1, x2)

inst_60303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700000007fffff; valaddr_reg:x3; val_offset:180909*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180909*0 + 3*399*FLEN/8, x4, x1, x2)

inst_60304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000000ffffff; valaddr_reg:x3; val_offset:180912*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180912*0 + 3*400*FLEN/8, x4, x1, x2)

inst_60305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000001ffffff; valaddr_reg:x3; val_offset:180915*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180915*0 + 3*401*FLEN/8, x4, x1, x2)

inst_60306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000003ffffff; valaddr_reg:x3; val_offset:180918*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180918*0 + 3*402*FLEN/8, x4, x1, x2)

inst_60307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000007ffffff; valaddr_reg:x3; val_offset:180921*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180921*0 + 3*403*FLEN/8, x4, x1, x2)

inst_60308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000000fffffff; valaddr_reg:x3; val_offset:180924*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180924*0 + 3*404*FLEN/8, x4, x1, x2)

inst_60309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000001fffffff; valaddr_reg:x3; val_offset:180927*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180927*0 + 3*405*FLEN/8, x4, x1, x2)

inst_60310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000003fffffff; valaddr_reg:x3; val_offset:180930*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180930*0 + 3*406*FLEN/8, x4, x1, x2)

inst_60311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000007fffffff; valaddr_reg:x3; val_offset:180933*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180933*0 + 3*407*FLEN/8, x4, x1, x2)

inst_60312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700000ffffffff; valaddr_reg:x3; val_offset:180936*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180936*0 + 3*408*FLEN/8, x4, x1, x2)

inst_60313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700001ffffffff; valaddr_reg:x3; val_offset:180939*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180939*0 + 3*409*FLEN/8, x4, x1, x2)

inst_60314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700003ffffffff; valaddr_reg:x3; val_offset:180942*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180942*0 + 3*410*FLEN/8, x4, x1, x2)

inst_60315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700007ffffffff; valaddr_reg:x3; val_offset:180945*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180945*0 + 3*411*FLEN/8, x4, x1, x2)

inst_60316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370000fffffffff; valaddr_reg:x3; val_offset:180948*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180948*0 + 3*412*FLEN/8, x4, x1, x2)

inst_60317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370001fffffffff; valaddr_reg:x3; val_offset:180951*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180951*0 + 3*413*FLEN/8, x4, x1, x2)

inst_60318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370003fffffffff; valaddr_reg:x3; val_offset:180954*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180954*0 + 3*414*FLEN/8, x4, x1, x2)

inst_60319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370007fffffffff; valaddr_reg:x3; val_offset:180957*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180957*0 + 3*415*FLEN/8, x4, x1, x2)

inst_60320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37000ffffffffff; valaddr_reg:x3; val_offset:180960*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180960*0 + 3*416*FLEN/8, x4, x1, x2)

inst_60321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37001ffffffffff; valaddr_reg:x3; val_offset:180963*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180963*0 + 3*417*FLEN/8, x4, x1, x2)

inst_60322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37003ffffffffff; valaddr_reg:x3; val_offset:180966*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180966*0 + 3*418*FLEN/8, x4, x1, x2)

inst_60323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37007ffffffffff; valaddr_reg:x3; val_offset:180969*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180969*0 + 3*419*FLEN/8, x4, x1, x2)

inst_60324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3700fffffffffff; valaddr_reg:x3; val_offset:180972*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180972*0 + 3*420*FLEN/8, x4, x1, x2)

inst_60325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3701fffffffffff; valaddr_reg:x3; val_offset:180975*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180975*0 + 3*421*FLEN/8, x4, x1, x2)

inst_60326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3703fffffffffff; valaddr_reg:x3; val_offset:180978*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180978*0 + 3*422*FLEN/8, x4, x1, x2)

inst_60327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x3707fffffffffff; valaddr_reg:x3; val_offset:180981*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180981*0 + 3*423*FLEN/8, x4, x1, x2)

inst_60328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x370ffffffffffff; valaddr_reg:x3; val_offset:180984*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180984*0 + 3*424*FLEN/8, x4, x1, x2)

inst_60329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x371ffffffffffff; valaddr_reg:x3; val_offset:180987*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180987*0 + 3*425*FLEN/8, x4, x1, x2)

inst_60330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x373ffffffffffff; valaddr_reg:x3; val_offset:180990*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180990*0 + 3*426*FLEN/8, x4, x1, x2)

inst_60331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x377ffffffffffff; valaddr_reg:x3; val_offset:180993*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180993*0 + 3*427*FLEN/8, x4, x1, x2)

inst_60332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x378000000000000; valaddr_reg:x3; val_offset:180996*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180996*0 + 3*428*FLEN/8, x4, x1, x2)

inst_60333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37c000000000000; valaddr_reg:x3; val_offset:180999*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180999*0 + 3*429*FLEN/8, x4, x1, x2)

inst_60334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37e000000000000; valaddr_reg:x3; val_offset:181002*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181002*0 + 3*430*FLEN/8, x4, x1, x2)

inst_60335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37f000000000000; valaddr_reg:x3; val_offset:181005*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181005*0 + 3*431*FLEN/8, x4, x1, x2)

inst_60336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37f800000000000; valaddr_reg:x3; val_offset:181008*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181008*0 + 3*432*FLEN/8, x4, x1, x2)

inst_60337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fc00000000000; valaddr_reg:x3; val_offset:181011*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181011*0 + 3*433*FLEN/8, x4, x1, x2)

inst_60338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fe00000000000; valaddr_reg:x3; val_offset:181014*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181014*0 + 3*434*FLEN/8, x4, x1, x2)

inst_60339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ff00000000000; valaddr_reg:x3; val_offset:181017*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181017*0 + 3*435*FLEN/8, x4, x1, x2)

inst_60340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ff80000000000; valaddr_reg:x3; val_offset:181020*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181020*0 + 3*436*FLEN/8, x4, x1, x2)

inst_60341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffc0000000000; valaddr_reg:x3; val_offset:181023*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181023*0 + 3*437*FLEN/8, x4, x1, x2)

inst_60342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffe0000000000; valaddr_reg:x3; val_offset:181026*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181026*0 + 3*438*FLEN/8, x4, x1, x2)

inst_60343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fff0000000000; valaddr_reg:x3; val_offset:181029*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181029*0 + 3*439*FLEN/8, x4, x1, x2)

inst_60344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fff8000000000; valaddr_reg:x3; val_offset:181032*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181032*0 + 3*440*FLEN/8, x4, x1, x2)

inst_60345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffc000000000; valaddr_reg:x3; val_offset:181035*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181035*0 + 3*441*FLEN/8, x4, x1, x2)

inst_60346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffe000000000; valaddr_reg:x3; val_offset:181038*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181038*0 + 3*442*FLEN/8, x4, x1, x2)

inst_60347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffff000000000; valaddr_reg:x3; val_offset:181041*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181041*0 + 3*443*FLEN/8, x4, x1, x2)

inst_60348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffff800000000; valaddr_reg:x3; val_offset:181044*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181044*0 + 3*444*FLEN/8, x4, x1, x2)

inst_60349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffc00000000; valaddr_reg:x3; val_offset:181047*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181047*0 + 3*445*FLEN/8, x4, x1, x2)

inst_60350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffe00000000; valaddr_reg:x3; val_offset:181050*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181050*0 + 3*446*FLEN/8, x4, x1, x2)

inst_60351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffff00000000; valaddr_reg:x3; val_offset:181053*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181053*0 + 3*447*FLEN/8, x4, x1, x2)

inst_60352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffff80000000; valaddr_reg:x3; val_offset:181056*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181056*0 + 3*448*FLEN/8, x4, x1, x2)

inst_60353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffc0000000; valaddr_reg:x3; val_offset:181059*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181059*0 + 3*449*FLEN/8, x4, x1, x2)

inst_60354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffe0000000; valaddr_reg:x3; val_offset:181062*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181062*0 + 3*450*FLEN/8, x4, x1, x2)

inst_60355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffff0000000; valaddr_reg:x3; val_offset:181065*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181065*0 + 3*451*FLEN/8, x4, x1, x2)

inst_60356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffff8000000; valaddr_reg:x3; val_offset:181068*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181068*0 + 3*452*FLEN/8, x4, x1, x2)

inst_60357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffc000000; valaddr_reg:x3; val_offset:181071*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181071*0 + 3*453*FLEN/8, x4, x1, x2)

inst_60358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffe000000; valaddr_reg:x3; val_offset:181074*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181074*0 + 3*454*FLEN/8, x4, x1, x2)

inst_60359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffff000000; valaddr_reg:x3; val_offset:181077*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181077*0 + 3*455*FLEN/8, x4, x1, x2)

inst_60360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffff800000; valaddr_reg:x3; val_offset:181080*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181080*0 + 3*456*FLEN/8, x4, x1, x2)

inst_60361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffffc00000; valaddr_reg:x3; val_offset:181083*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181083*0 + 3*457*FLEN/8, x4, x1, x2)

inst_60362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffffe00000; valaddr_reg:x3; val_offset:181086*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181086*0 + 3*458*FLEN/8, x4, x1, x2)

inst_60363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffff00000; valaddr_reg:x3; val_offset:181089*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181089*0 + 3*459*FLEN/8, x4, x1, x2)

inst_60364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffff80000; valaddr_reg:x3; val_offset:181092*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181092*0 + 3*460*FLEN/8, x4, x1, x2)

inst_60365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffffc0000; valaddr_reg:x3; val_offset:181095*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181095*0 + 3*461*FLEN/8, x4, x1, x2)

inst_60366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffffe0000; valaddr_reg:x3; val_offset:181098*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181098*0 + 3*462*FLEN/8, x4, x1, x2)

inst_60367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffffff0000; valaddr_reg:x3; val_offset:181101*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181101*0 + 3*463*FLEN/8, x4, x1, x2)

inst_60368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffffff8000; valaddr_reg:x3; val_offset:181104*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181104*0 + 3*464*FLEN/8, x4, x1, x2)

inst_60369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffffffc000; valaddr_reg:x3; val_offset:181107*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181107*0 + 3*465*FLEN/8, x4, x1, x2)

inst_60370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffffffe000; valaddr_reg:x3; val_offset:181110*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181110*0 + 3*466*FLEN/8, x4, x1, x2)

inst_60371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffffff000; valaddr_reg:x3; val_offset:181113*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181113*0 + 3*467*FLEN/8, x4, x1, x2)

inst_60372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffffff800; valaddr_reg:x3; val_offset:181116*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181116*0 + 3*468*FLEN/8, x4, x1, x2)

inst_60373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffffffc00; valaddr_reg:x3; val_offset:181119*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181119*0 + 3*469*FLEN/8, x4, x1, x2)

inst_60374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffffffe00; valaddr_reg:x3; val_offset:181122*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181122*0 + 3*470*FLEN/8, x4, x1, x2)

inst_60375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffffffff00; valaddr_reg:x3; val_offset:181125*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181125*0 + 3*471*FLEN/8, x4, x1, x2)

inst_60376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffffffff80; valaddr_reg:x3; val_offset:181128*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181128*0 + 3*472*FLEN/8, x4, x1, x2)

inst_60377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffffffffc0; valaddr_reg:x3; val_offset:181131*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181131*0 + 3*473*FLEN/8, x4, x1, x2)

inst_60378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffffffffe0; valaddr_reg:x3; val_offset:181134*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181134*0 + 3*474*FLEN/8, x4, x1, x2)

inst_60379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffffffff0; valaddr_reg:x3; val_offset:181137*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181137*0 + 3*475*FLEN/8, x4, x1, x2)

inst_60380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffffffff8; valaddr_reg:x3; val_offset:181140*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181140*0 + 3*476*FLEN/8, x4, x1, x2)

inst_60381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffffffffc; valaddr_reg:x3; val_offset:181143*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181143*0 + 3*477*FLEN/8, x4, x1, x2)

inst_60382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37ffffffffffffe; valaddr_reg:x3; val_offset:181146*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181146*0 + 3*478*FLEN/8, x4, x1, x2)

inst_60383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377590468cb84 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377590468cb84; op2val:0x0;
op3val:0x37fffffffffffff; valaddr_reg:x3; val_offset:181149*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181149*0 + 3*479*FLEN/8, x4, x1, x2)

inst_60384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000000000000; valaddr_reg:x3; val_offset:181152*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181152*0 + 3*480*FLEN/8, x4, x1, x2)

inst_60385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000000000001; valaddr_reg:x3; val_offset:181155*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181155*0 + 3*481*FLEN/8, x4, x1, x2)

inst_60386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000000000003; valaddr_reg:x3; val_offset:181158*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181158*0 + 3*482*FLEN/8, x4, x1, x2)

inst_60387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000000000007; valaddr_reg:x3; val_offset:181161*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181161*0 + 3*483*FLEN/8, x4, x1, x2)

inst_60388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000000000000f; valaddr_reg:x3; val_offset:181164*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181164*0 + 3*484*FLEN/8, x4, x1, x2)

inst_60389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000000000001f; valaddr_reg:x3; val_offset:181167*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181167*0 + 3*485*FLEN/8, x4, x1, x2)

inst_60390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000000000003f; valaddr_reg:x3; val_offset:181170*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181170*0 + 3*486*FLEN/8, x4, x1, x2)

inst_60391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000000000007f; valaddr_reg:x3; val_offset:181173*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181173*0 + 3*487*FLEN/8, x4, x1, x2)

inst_60392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00000000000ff; valaddr_reg:x3; val_offset:181176*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181176*0 + 3*488*FLEN/8, x4, x1, x2)

inst_60393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00000000001ff; valaddr_reg:x3; val_offset:181179*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181179*0 + 3*489*FLEN/8, x4, x1, x2)

inst_60394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00000000003ff; valaddr_reg:x3; val_offset:181182*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181182*0 + 3*490*FLEN/8, x4, x1, x2)

inst_60395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00000000007ff; valaddr_reg:x3; val_offset:181185*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181185*0 + 3*491*FLEN/8, x4, x1, x2)

inst_60396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000000000fff; valaddr_reg:x3; val_offset:181188*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181188*0 + 3*492*FLEN/8, x4, x1, x2)

inst_60397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000000001fff; valaddr_reg:x3; val_offset:181191*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181191*0 + 3*493*FLEN/8, x4, x1, x2)

inst_60398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000000003fff; valaddr_reg:x3; val_offset:181194*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181194*0 + 3*494*FLEN/8, x4, x1, x2)

inst_60399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000000007fff; valaddr_reg:x3; val_offset:181197*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181197*0 + 3*495*FLEN/8, x4, x1, x2)

inst_60400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000000000ffff; valaddr_reg:x3; val_offset:181200*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181200*0 + 3*496*FLEN/8, x4, x1, x2)

inst_60401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000000001ffff; valaddr_reg:x3; val_offset:181203*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181203*0 + 3*497*FLEN/8, x4, x1, x2)

inst_60402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000000003ffff; valaddr_reg:x3; val_offset:181206*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181206*0 + 3*498*FLEN/8, x4, x1, x2)

inst_60403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000000007ffff; valaddr_reg:x3; val_offset:181209*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181209*0 + 3*499*FLEN/8, x4, x1, x2)

inst_60404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00000000fffff; valaddr_reg:x3; val_offset:181212*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181212*0 + 3*500*FLEN/8, x4, x1, x2)

inst_60405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00000001fffff; valaddr_reg:x3; val_offset:181215*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181215*0 + 3*501*FLEN/8, x4, x1, x2)

inst_60406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00000003fffff; valaddr_reg:x3; val_offset:181218*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181218*0 + 3*502*FLEN/8, x4, x1, x2)

inst_60407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00000007fffff; valaddr_reg:x3; val_offset:181221*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181221*0 + 3*503*FLEN/8, x4, x1, x2)

inst_60408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000000ffffff; valaddr_reg:x3; val_offset:181224*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181224*0 + 3*504*FLEN/8, x4, x1, x2)

inst_60409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000001ffffff; valaddr_reg:x3; val_offset:181227*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181227*0 + 3*505*FLEN/8, x4, x1, x2)

inst_60410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000003ffffff; valaddr_reg:x3; val_offset:181230*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181230*0 + 3*506*FLEN/8, x4, x1, x2)

inst_60411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000007ffffff; valaddr_reg:x3; val_offset:181233*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181233*0 + 3*507*FLEN/8, x4, x1, x2)

inst_60412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000000fffffff; valaddr_reg:x3; val_offset:181236*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181236*0 + 3*508*FLEN/8, x4, x1, x2)

inst_60413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000001fffffff; valaddr_reg:x3; val_offset:181239*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181239*0 + 3*509*FLEN/8, x4, x1, x2)

inst_60414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000003fffffff; valaddr_reg:x3; val_offset:181242*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181242*0 + 3*510*FLEN/8, x4, x1, x2)

inst_60415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000007fffffff; valaddr_reg:x3; val_offset:181245*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181245*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_60416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00000ffffffff; valaddr_reg:x3; val_offset:181248*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181248*0 + 3*512*FLEN/8, x4, x1, x2)

inst_60417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00001ffffffff; valaddr_reg:x3; val_offset:181251*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181251*0 + 3*513*FLEN/8, x4, x1, x2)

inst_60418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00003ffffffff; valaddr_reg:x3; val_offset:181254*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181254*0 + 3*514*FLEN/8, x4, x1, x2)

inst_60419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00007ffffffff; valaddr_reg:x3; val_offset:181257*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181257*0 + 3*515*FLEN/8, x4, x1, x2)

inst_60420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0000fffffffff; valaddr_reg:x3; val_offset:181260*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181260*0 + 3*516*FLEN/8, x4, x1, x2)

inst_60421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0001fffffffff; valaddr_reg:x3; val_offset:181263*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181263*0 + 3*517*FLEN/8, x4, x1, x2)

inst_60422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0003fffffffff; valaddr_reg:x3; val_offset:181266*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181266*0 + 3*518*FLEN/8, x4, x1, x2)

inst_60423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0007fffffffff; valaddr_reg:x3; val_offset:181269*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181269*0 + 3*519*FLEN/8, x4, x1, x2)

inst_60424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da000ffffffffff; valaddr_reg:x3; val_offset:181272*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181272*0 + 3*520*FLEN/8, x4, x1, x2)

inst_60425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da001ffffffffff; valaddr_reg:x3; val_offset:181275*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181275*0 + 3*521*FLEN/8, x4, x1, x2)

inst_60426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da003ffffffffff; valaddr_reg:x3; val_offset:181278*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181278*0 + 3*522*FLEN/8, x4, x1, x2)

inst_60427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da007ffffffffff; valaddr_reg:x3; val_offset:181281*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181281*0 + 3*523*FLEN/8, x4, x1, x2)

inst_60428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da00fffffffffff; valaddr_reg:x3; val_offset:181284*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181284*0 + 3*524*FLEN/8, x4, x1, x2)

inst_60429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da01fffffffffff; valaddr_reg:x3; val_offset:181287*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181287*0 + 3*525*FLEN/8, x4, x1, x2)

inst_60430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da03fffffffffff; valaddr_reg:x3; val_offset:181290*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181290*0 + 3*526*FLEN/8, x4, x1, x2)

inst_60431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da07fffffffffff; valaddr_reg:x3; val_offset:181293*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181293*0 + 3*527*FLEN/8, x4, x1, x2)

inst_60432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da0ffffffffffff; valaddr_reg:x3; val_offset:181296*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181296*0 + 3*528*FLEN/8, x4, x1, x2)

inst_60433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da1ffffffffffff; valaddr_reg:x3; val_offset:181299*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181299*0 + 3*529*FLEN/8, x4, x1, x2)

inst_60434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da3ffffffffffff; valaddr_reg:x3; val_offset:181302*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181302*0 + 3*530*FLEN/8, x4, x1, x2)

inst_60435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da7ffffffffffff; valaddr_reg:x3; val_offset:181305*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181305*0 + 3*531*FLEN/8, x4, x1, x2)

inst_60436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3da8000000000000; valaddr_reg:x3; val_offset:181308*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181308*0 + 3*532*FLEN/8, x4, x1, x2)

inst_60437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dac000000000000; valaddr_reg:x3; val_offset:181311*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181311*0 + 3*533*FLEN/8, x4, x1, x2)

inst_60438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dae000000000000; valaddr_reg:x3; val_offset:181314*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181314*0 + 3*534*FLEN/8, x4, x1, x2)

inst_60439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daf000000000000; valaddr_reg:x3; val_offset:181317*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181317*0 + 3*535*FLEN/8, x4, x1, x2)

inst_60440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daf800000000000; valaddr_reg:x3; val_offset:181320*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181320*0 + 3*536*FLEN/8, x4, x1, x2)

inst_60441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafc00000000000; valaddr_reg:x3; val_offset:181323*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181323*0 + 3*537*FLEN/8, x4, x1, x2)

inst_60442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafe00000000000; valaddr_reg:x3; val_offset:181326*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181326*0 + 3*538*FLEN/8, x4, x1, x2)

inst_60443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daff00000000000; valaddr_reg:x3; val_offset:181329*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181329*0 + 3*539*FLEN/8, x4, x1, x2)

inst_60444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daff80000000000; valaddr_reg:x3; val_offset:181332*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181332*0 + 3*540*FLEN/8, x4, x1, x2)

inst_60445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffc0000000000; valaddr_reg:x3; val_offset:181335*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181335*0 + 3*541*FLEN/8, x4, x1, x2)

inst_60446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffe0000000000; valaddr_reg:x3; val_offset:181338*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181338*0 + 3*542*FLEN/8, x4, x1, x2)

inst_60447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafff0000000000; valaddr_reg:x3; val_offset:181341*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181341*0 + 3*543*FLEN/8, x4, x1, x2)

inst_60448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafff8000000000; valaddr_reg:x3; val_offset:181344*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181344*0 + 3*544*FLEN/8, x4, x1, x2)

inst_60449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffc000000000; valaddr_reg:x3; val_offset:181347*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181347*0 + 3*545*FLEN/8, x4, x1, x2)

inst_60450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffe000000000; valaddr_reg:x3; val_offset:181350*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181350*0 + 3*546*FLEN/8, x4, x1, x2)

inst_60451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffff000000000; valaddr_reg:x3; val_offset:181353*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181353*0 + 3*547*FLEN/8, x4, x1, x2)

inst_60452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffff800000000; valaddr_reg:x3; val_offset:181356*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181356*0 + 3*548*FLEN/8, x4, x1, x2)

inst_60453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffc00000000; valaddr_reg:x3; val_offset:181359*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181359*0 + 3*549*FLEN/8, x4, x1, x2)

inst_60454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffe00000000; valaddr_reg:x3; val_offset:181362*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181362*0 + 3*550*FLEN/8, x4, x1, x2)

inst_60455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffff00000000; valaddr_reg:x3; val_offset:181365*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181365*0 + 3*551*FLEN/8, x4, x1, x2)

inst_60456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffff80000000; valaddr_reg:x3; val_offset:181368*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181368*0 + 3*552*FLEN/8, x4, x1, x2)

inst_60457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffc0000000; valaddr_reg:x3; val_offset:181371*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181371*0 + 3*553*FLEN/8, x4, x1, x2)

inst_60458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffe0000000; valaddr_reg:x3; val_offset:181374*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181374*0 + 3*554*FLEN/8, x4, x1, x2)

inst_60459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffff0000000; valaddr_reg:x3; val_offset:181377*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181377*0 + 3*555*FLEN/8, x4, x1, x2)

inst_60460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffff8000000; valaddr_reg:x3; val_offset:181380*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181380*0 + 3*556*FLEN/8, x4, x1, x2)

inst_60461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffc000000; valaddr_reg:x3; val_offset:181383*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181383*0 + 3*557*FLEN/8, x4, x1, x2)

inst_60462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffe000000; valaddr_reg:x3; val_offset:181386*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181386*0 + 3*558*FLEN/8, x4, x1, x2)

inst_60463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffff000000; valaddr_reg:x3; val_offset:181389*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181389*0 + 3*559*FLEN/8, x4, x1, x2)

inst_60464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffff800000; valaddr_reg:x3; val_offset:181392*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181392*0 + 3*560*FLEN/8, x4, x1, x2)

inst_60465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffffc00000; valaddr_reg:x3; val_offset:181395*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181395*0 + 3*561*FLEN/8, x4, x1, x2)

inst_60466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffffe00000; valaddr_reg:x3; val_offset:181398*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181398*0 + 3*562*FLEN/8, x4, x1, x2)

inst_60467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffff00000; valaddr_reg:x3; val_offset:181401*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181401*0 + 3*563*FLEN/8, x4, x1, x2)

inst_60468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffff80000; valaddr_reg:x3; val_offset:181404*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181404*0 + 3*564*FLEN/8, x4, x1, x2)

inst_60469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffffc0000; valaddr_reg:x3; val_offset:181407*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181407*0 + 3*565*FLEN/8, x4, x1, x2)

inst_60470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffffe0000; valaddr_reg:x3; val_offset:181410*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181410*0 + 3*566*FLEN/8, x4, x1, x2)

inst_60471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffffff0000; valaddr_reg:x3; val_offset:181413*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181413*0 + 3*567*FLEN/8, x4, x1, x2)

inst_60472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffffff8000; valaddr_reg:x3; val_offset:181416*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181416*0 + 3*568*FLEN/8, x4, x1, x2)

inst_60473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffffffc000; valaddr_reg:x3; val_offset:181419*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181419*0 + 3*569*FLEN/8, x4, x1, x2)

inst_60474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffffffe000; valaddr_reg:x3; val_offset:181422*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181422*0 + 3*570*FLEN/8, x4, x1, x2)

inst_60475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffffff000; valaddr_reg:x3; val_offset:181425*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181425*0 + 3*571*FLEN/8, x4, x1, x2)

inst_60476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffffff800; valaddr_reg:x3; val_offset:181428*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181428*0 + 3*572*FLEN/8, x4, x1, x2)

inst_60477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffffffc00; valaddr_reg:x3; val_offset:181431*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181431*0 + 3*573*FLEN/8, x4, x1, x2)

inst_60478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffffffe00; valaddr_reg:x3; val_offset:181434*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181434*0 + 3*574*FLEN/8, x4, x1, x2)

inst_60479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffffffff00; valaddr_reg:x3; val_offset:181437*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181437*0 + 3*575*FLEN/8, x4, x1, x2)

inst_60480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffffffff80; valaddr_reg:x3; val_offset:181440*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181440*0 + 3*576*FLEN/8, x4, x1, x2)

inst_60481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffffffffc0; valaddr_reg:x3; val_offset:181443*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181443*0 + 3*577*FLEN/8, x4, x1, x2)

inst_60482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffffffffe0; valaddr_reg:x3; val_offset:181446*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181446*0 + 3*578*FLEN/8, x4, x1, x2)

inst_60483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffffffff0; valaddr_reg:x3; val_offset:181449*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181449*0 + 3*579*FLEN/8, x4, x1, x2)

inst_60484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffffffff8; valaddr_reg:x3; val_offset:181452*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181452*0 + 3*580*FLEN/8, x4, x1, x2)

inst_60485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffffffffc; valaddr_reg:x3; val_offset:181455*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181455*0 + 3*581*FLEN/8, x4, x1, x2)

inst_60486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3daffffffffffffe; valaddr_reg:x3; val_offset:181458*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181458*0 + 3*582*FLEN/8, x4, x1, x2)

inst_60487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3dafffffffffffff; valaddr_reg:x3; val_offset:181461*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181461*0 + 3*583*FLEN/8, x4, x1, x2)

inst_60488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:181464*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181464*0 + 3*584*FLEN/8, x4, x1, x2)

inst_60489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:181467*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181467*0 + 3*585*FLEN/8, x4, x1, x2)

inst_60490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:181470*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181470*0 + 3*586*FLEN/8, x4, x1, x2)

inst_60491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:181473*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181473*0 + 3*587*FLEN/8, x4, x1, x2)

inst_60492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:181476*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181476*0 + 3*588*FLEN/8, x4, x1, x2)

inst_60493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:181479*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181479*0 + 3*589*FLEN/8, x4, x1, x2)

inst_60494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:181482*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181482*0 + 3*590*FLEN/8, x4, x1, x2)

inst_60495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:181485*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181485*0 + 3*591*FLEN/8, x4, x1, x2)

inst_60496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:181488*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181488*0 + 3*592*FLEN/8, x4, x1, x2)

inst_60497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:181491*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181491*0 + 3*593*FLEN/8, x4, x1, x2)

inst_60498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:181494*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181494*0 + 3*594*FLEN/8, x4, x1, x2)

inst_60499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:181497*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181497*0 + 3*595*FLEN/8, x4, x1, x2)

inst_60500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:181500*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181500*0 + 3*596*FLEN/8, x4, x1, x2)

inst_60501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:181503*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181503*0 + 3*597*FLEN/8, x4, x1, x2)

inst_60502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:181506*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181506*0 + 3*598*FLEN/8, x4, x1, x2)

inst_60503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:181509*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181509*0 + 3*599*FLEN/8, x4, x1, x2)

inst_60504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:181512*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181512*0 + 3*600*FLEN/8, x4, x1, x2)

inst_60505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:181515*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181515*0 + 3*601*FLEN/8, x4, x1, x2)

inst_60506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:181518*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181518*0 + 3*602*FLEN/8, x4, x1, x2)

inst_60507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:181521*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181521*0 + 3*603*FLEN/8, x4, x1, x2)

inst_60508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:181524*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181524*0 + 3*604*FLEN/8, x4, x1, x2)

inst_60509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x377aea298d908 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xa4cdc0a6202c9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa377aea298d908; op2val:0x203a4cdc0a6202c9;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:181527*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181527*0 + 3*605*FLEN/8, x4, x1, x2)

inst_60510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:181530*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181530*0 + 3*606*FLEN/8, x4, x1, x2)

inst_60511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:181533*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181533*0 + 3*607*FLEN/8, x4, x1, x2)

inst_60512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:181536*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181536*0 + 3*608*FLEN/8, x4, x1, x2)

inst_60513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:181539*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181539*0 + 3*609*FLEN/8, x4, x1, x2)

inst_60514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:181542*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181542*0 + 3*610*FLEN/8, x4, x1, x2)

inst_60515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:181545*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181545*0 + 3*611*FLEN/8, x4, x1, x2)

inst_60516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:181548*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181548*0 + 3*612*FLEN/8, x4, x1, x2)

inst_60517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:181551*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181551*0 + 3*613*FLEN/8, x4, x1, x2)

inst_60518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:181554*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181554*0 + 3*614*FLEN/8, x4, x1, x2)

inst_60519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:181557*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181557*0 + 3*615*FLEN/8, x4, x1, x2)

inst_60520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:181560*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181560*0 + 3*616*FLEN/8, x4, x1, x2)

inst_60521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:181563*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181563*0 + 3*617*FLEN/8, x4, x1, x2)

inst_60522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:181566*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181566*0 + 3*618*FLEN/8, x4, x1, x2)

inst_60523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:181569*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181569*0 + 3*619*FLEN/8, x4, x1, x2)

inst_60524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:181572*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181572*0 + 3*620*FLEN/8, x4, x1, x2)

inst_60525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:181575*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181575*0 + 3*621*FLEN/8, x4, x1, x2)

inst_60526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:181578*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181578*0 + 3*622*FLEN/8, x4, x1, x2)

inst_60527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:181581*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181581*0 + 3*623*FLEN/8, x4, x1, x2)

inst_60528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:181584*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181584*0 + 3*624*FLEN/8, x4, x1, x2)

inst_60529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:181587*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181587*0 + 3*625*FLEN/8, x4, x1, x2)

inst_60530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:181590*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181590*0 + 3*626*FLEN/8, x4, x1, x2)

inst_60531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:181593*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181593*0 + 3*627*FLEN/8, x4, x1, x2)

inst_60532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000000000000; valaddr_reg:x3; val_offset:181596*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181596*0 + 3*628*FLEN/8, x4, x1, x2)

inst_60533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000000000001; valaddr_reg:x3; val_offset:181599*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181599*0 + 3*629*FLEN/8, x4, x1, x2)

inst_60534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000000000003; valaddr_reg:x3; val_offset:181602*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181602*0 + 3*630*FLEN/8, x4, x1, x2)

inst_60535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000000000007; valaddr_reg:x3; val_offset:181605*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181605*0 + 3*631*FLEN/8, x4, x1, x2)

inst_60536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000000000000f; valaddr_reg:x3; val_offset:181608*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181608*0 + 3*632*FLEN/8, x4, x1, x2)

inst_60537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000000000001f; valaddr_reg:x3; val_offset:181611*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181611*0 + 3*633*FLEN/8, x4, x1, x2)

inst_60538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000000000003f; valaddr_reg:x3; val_offset:181614*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181614*0 + 3*634*FLEN/8, x4, x1, x2)

inst_60539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000000000007f; valaddr_reg:x3; val_offset:181617*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181617*0 + 3*635*FLEN/8, x4, x1, x2)

inst_60540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300000000000ff; valaddr_reg:x3; val_offset:181620*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181620*0 + 3*636*FLEN/8, x4, x1, x2)

inst_60541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300000000001ff; valaddr_reg:x3; val_offset:181623*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181623*0 + 3*637*FLEN/8, x4, x1, x2)

inst_60542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300000000003ff; valaddr_reg:x3; val_offset:181626*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181626*0 + 3*638*FLEN/8, x4, x1, x2)

inst_60543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300000000007ff; valaddr_reg:x3; val_offset:181629*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181629*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_60544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000000000fff; valaddr_reg:x3; val_offset:181632*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181632*0 + 3*640*FLEN/8, x4, x1, x2)

inst_60545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000000001fff; valaddr_reg:x3; val_offset:181635*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181635*0 + 3*641*FLEN/8, x4, x1, x2)

inst_60546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000000003fff; valaddr_reg:x3; val_offset:181638*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181638*0 + 3*642*FLEN/8, x4, x1, x2)

inst_60547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000000007fff; valaddr_reg:x3; val_offset:181641*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181641*0 + 3*643*FLEN/8, x4, x1, x2)

inst_60548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000000000ffff; valaddr_reg:x3; val_offset:181644*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181644*0 + 3*644*FLEN/8, x4, x1, x2)

inst_60549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000000001ffff; valaddr_reg:x3; val_offset:181647*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181647*0 + 3*645*FLEN/8, x4, x1, x2)

inst_60550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000000003ffff; valaddr_reg:x3; val_offset:181650*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181650*0 + 3*646*FLEN/8, x4, x1, x2)

inst_60551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000000007ffff; valaddr_reg:x3; val_offset:181653*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181653*0 + 3*647*FLEN/8, x4, x1, x2)

inst_60552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300000000fffff; valaddr_reg:x3; val_offset:181656*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181656*0 + 3*648*FLEN/8, x4, x1, x2)

inst_60553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300000001fffff; valaddr_reg:x3; val_offset:181659*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181659*0 + 3*649*FLEN/8, x4, x1, x2)

inst_60554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300000003fffff; valaddr_reg:x3; val_offset:181662*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181662*0 + 3*650*FLEN/8, x4, x1, x2)

inst_60555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300000007fffff; valaddr_reg:x3; val_offset:181665*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181665*0 + 3*651*FLEN/8, x4, x1, x2)

inst_60556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000000ffffff; valaddr_reg:x3; val_offset:181668*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181668*0 + 3*652*FLEN/8, x4, x1, x2)

inst_60557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000001ffffff; valaddr_reg:x3; val_offset:181671*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181671*0 + 3*653*FLEN/8, x4, x1, x2)

inst_60558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000003ffffff; valaddr_reg:x3; val_offset:181674*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181674*0 + 3*654*FLEN/8, x4, x1, x2)

inst_60559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000007ffffff; valaddr_reg:x3; val_offset:181677*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181677*0 + 3*655*FLEN/8, x4, x1, x2)

inst_60560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000000fffffff; valaddr_reg:x3; val_offset:181680*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181680*0 + 3*656*FLEN/8, x4, x1, x2)

inst_60561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000001fffffff; valaddr_reg:x3; val_offset:181683*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181683*0 + 3*657*FLEN/8, x4, x1, x2)

inst_60562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000003fffffff; valaddr_reg:x3; val_offset:181686*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181686*0 + 3*658*FLEN/8, x4, x1, x2)

inst_60563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000007fffffff; valaddr_reg:x3; val_offset:181689*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181689*0 + 3*659*FLEN/8, x4, x1, x2)

inst_60564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300000ffffffff; valaddr_reg:x3; val_offset:181692*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181692*0 + 3*660*FLEN/8, x4, x1, x2)

inst_60565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300001ffffffff; valaddr_reg:x3; val_offset:181695*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181695*0 + 3*661*FLEN/8, x4, x1, x2)

inst_60566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300003ffffffff; valaddr_reg:x3; val_offset:181698*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181698*0 + 3*662*FLEN/8, x4, x1, x2)

inst_60567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300007ffffffff; valaddr_reg:x3; val_offset:181701*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181701*0 + 3*663*FLEN/8, x4, x1, x2)

inst_60568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330000fffffffff; valaddr_reg:x3; val_offset:181704*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181704*0 + 3*664*FLEN/8, x4, x1, x2)

inst_60569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330001fffffffff; valaddr_reg:x3; val_offset:181707*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181707*0 + 3*665*FLEN/8, x4, x1, x2)

inst_60570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330003fffffffff; valaddr_reg:x3; val_offset:181710*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181710*0 + 3*666*FLEN/8, x4, x1, x2)

inst_60571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330007fffffffff; valaddr_reg:x3; val_offset:181713*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181713*0 + 3*667*FLEN/8, x4, x1, x2)

inst_60572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33000ffffffffff; valaddr_reg:x3; val_offset:181716*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181716*0 + 3*668*FLEN/8, x4, x1, x2)

inst_60573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33001ffffffffff; valaddr_reg:x3; val_offset:181719*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181719*0 + 3*669*FLEN/8, x4, x1, x2)

inst_60574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33003ffffffffff; valaddr_reg:x3; val_offset:181722*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181722*0 + 3*670*FLEN/8, x4, x1, x2)

inst_60575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33007ffffffffff; valaddr_reg:x3; val_offset:181725*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181725*0 + 3*671*FLEN/8, x4, x1, x2)

inst_60576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3300fffffffffff; valaddr_reg:x3; val_offset:181728*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181728*0 + 3*672*FLEN/8, x4, x1, x2)

inst_60577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3301fffffffffff; valaddr_reg:x3; val_offset:181731*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181731*0 + 3*673*FLEN/8, x4, x1, x2)

inst_60578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3303fffffffffff; valaddr_reg:x3; val_offset:181734*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181734*0 + 3*674*FLEN/8, x4, x1, x2)

inst_60579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x3307fffffffffff; valaddr_reg:x3; val_offset:181737*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181737*0 + 3*675*FLEN/8, x4, x1, x2)

inst_60580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x330ffffffffffff; valaddr_reg:x3; val_offset:181740*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181740*0 + 3*676*FLEN/8, x4, x1, x2)

inst_60581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x331ffffffffffff; valaddr_reg:x3; val_offset:181743*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181743*0 + 3*677*FLEN/8, x4, x1, x2)

inst_60582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x333ffffffffffff; valaddr_reg:x3; val_offset:181746*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181746*0 + 3*678*FLEN/8, x4, x1, x2)

inst_60583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x337ffffffffffff; valaddr_reg:x3; val_offset:181749*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181749*0 + 3*679*FLEN/8, x4, x1, x2)

inst_60584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x338000000000000; valaddr_reg:x3; val_offset:181752*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181752*0 + 3*680*FLEN/8, x4, x1, x2)

inst_60585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33c000000000000; valaddr_reg:x3; val_offset:181755*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181755*0 + 3*681*FLEN/8, x4, x1, x2)

inst_60586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33e000000000000; valaddr_reg:x3; val_offset:181758*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181758*0 + 3*682*FLEN/8, x4, x1, x2)

inst_60587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33f000000000000; valaddr_reg:x3; val_offset:181761*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181761*0 + 3*683*FLEN/8, x4, x1, x2)

inst_60588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33f800000000000; valaddr_reg:x3; val_offset:181764*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181764*0 + 3*684*FLEN/8, x4, x1, x2)

inst_60589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fc00000000000; valaddr_reg:x3; val_offset:181767*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181767*0 + 3*685*FLEN/8, x4, x1, x2)

inst_60590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fe00000000000; valaddr_reg:x3; val_offset:181770*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181770*0 + 3*686*FLEN/8, x4, x1, x2)

inst_60591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ff00000000000; valaddr_reg:x3; val_offset:181773*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181773*0 + 3*687*FLEN/8, x4, x1, x2)

inst_60592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ff80000000000; valaddr_reg:x3; val_offset:181776*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181776*0 + 3*688*FLEN/8, x4, x1, x2)

inst_60593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffc0000000000; valaddr_reg:x3; val_offset:181779*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181779*0 + 3*689*FLEN/8, x4, x1, x2)

inst_60594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffe0000000000; valaddr_reg:x3; val_offset:181782*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181782*0 + 3*690*FLEN/8, x4, x1, x2)

inst_60595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fff0000000000; valaddr_reg:x3; val_offset:181785*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181785*0 + 3*691*FLEN/8, x4, x1, x2)

inst_60596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fff8000000000; valaddr_reg:x3; val_offset:181788*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181788*0 + 3*692*FLEN/8, x4, x1, x2)

inst_60597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffc000000000; valaddr_reg:x3; val_offset:181791*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181791*0 + 3*693*FLEN/8, x4, x1, x2)

inst_60598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffe000000000; valaddr_reg:x3; val_offset:181794*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181794*0 + 3*694*FLEN/8, x4, x1, x2)

inst_60599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffff000000000; valaddr_reg:x3; val_offset:181797*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181797*0 + 3*695*FLEN/8, x4, x1, x2)

inst_60600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffff800000000; valaddr_reg:x3; val_offset:181800*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181800*0 + 3*696*FLEN/8, x4, x1, x2)

inst_60601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffc00000000; valaddr_reg:x3; val_offset:181803*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181803*0 + 3*697*FLEN/8, x4, x1, x2)

inst_60602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffe00000000; valaddr_reg:x3; val_offset:181806*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181806*0 + 3*698*FLEN/8, x4, x1, x2)

inst_60603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffff00000000; valaddr_reg:x3; val_offset:181809*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181809*0 + 3*699*FLEN/8, x4, x1, x2)

inst_60604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffff80000000; valaddr_reg:x3; val_offset:181812*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181812*0 + 3*700*FLEN/8, x4, x1, x2)

inst_60605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffc0000000; valaddr_reg:x3; val_offset:181815*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181815*0 + 3*701*FLEN/8, x4, x1, x2)

inst_60606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffe0000000; valaddr_reg:x3; val_offset:181818*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181818*0 + 3*702*FLEN/8, x4, x1, x2)

inst_60607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffff0000000; valaddr_reg:x3; val_offset:181821*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181821*0 + 3*703*FLEN/8, x4, x1, x2)

inst_60608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffff8000000; valaddr_reg:x3; val_offset:181824*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181824*0 + 3*704*FLEN/8, x4, x1, x2)

inst_60609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffc000000; valaddr_reg:x3; val_offset:181827*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181827*0 + 3*705*FLEN/8, x4, x1, x2)

inst_60610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffe000000; valaddr_reg:x3; val_offset:181830*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181830*0 + 3*706*FLEN/8, x4, x1, x2)

inst_60611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffff000000; valaddr_reg:x3; val_offset:181833*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181833*0 + 3*707*FLEN/8, x4, x1, x2)

inst_60612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffff800000; valaddr_reg:x3; val_offset:181836*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181836*0 + 3*708*FLEN/8, x4, x1, x2)

inst_60613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffffc00000; valaddr_reg:x3; val_offset:181839*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181839*0 + 3*709*FLEN/8, x4, x1, x2)

inst_60614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffffe00000; valaddr_reg:x3; val_offset:181842*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181842*0 + 3*710*FLEN/8, x4, x1, x2)

inst_60615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffff00000; valaddr_reg:x3; val_offset:181845*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181845*0 + 3*711*FLEN/8, x4, x1, x2)

inst_60616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffff80000; valaddr_reg:x3; val_offset:181848*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181848*0 + 3*712*FLEN/8, x4, x1, x2)

inst_60617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffffc0000; valaddr_reg:x3; val_offset:181851*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181851*0 + 3*713*FLEN/8, x4, x1, x2)

inst_60618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffffe0000; valaddr_reg:x3; val_offset:181854*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181854*0 + 3*714*FLEN/8, x4, x1, x2)

inst_60619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffffff0000; valaddr_reg:x3; val_offset:181857*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181857*0 + 3*715*FLEN/8, x4, x1, x2)

inst_60620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffffff8000; valaddr_reg:x3; val_offset:181860*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181860*0 + 3*716*FLEN/8, x4, x1, x2)

inst_60621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffffffc000; valaddr_reg:x3; val_offset:181863*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181863*0 + 3*717*FLEN/8, x4, x1, x2)

inst_60622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffffffe000; valaddr_reg:x3; val_offset:181866*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181866*0 + 3*718*FLEN/8, x4, x1, x2)

inst_60623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffffff000; valaddr_reg:x3; val_offset:181869*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181869*0 + 3*719*FLEN/8, x4, x1, x2)

inst_60624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffffff800; valaddr_reg:x3; val_offset:181872*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181872*0 + 3*720*FLEN/8, x4, x1, x2)

inst_60625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffffffc00; valaddr_reg:x3; val_offset:181875*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181875*0 + 3*721*FLEN/8, x4, x1, x2)

inst_60626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffffffe00; valaddr_reg:x3; val_offset:181878*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181878*0 + 3*722*FLEN/8, x4, x1, x2)

inst_60627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffffffff00; valaddr_reg:x3; val_offset:181881*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181881*0 + 3*723*FLEN/8, x4, x1, x2)

inst_60628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffffffff80; valaddr_reg:x3; val_offset:181884*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181884*0 + 3*724*FLEN/8, x4, x1, x2)

inst_60629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffffffffc0; valaddr_reg:x3; val_offset:181887*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181887*0 + 3*725*FLEN/8, x4, x1, x2)

inst_60630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffffffffe0; valaddr_reg:x3; val_offset:181890*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181890*0 + 3*726*FLEN/8, x4, x1, x2)

inst_60631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffffffff0; valaddr_reg:x3; val_offset:181893*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181893*0 + 3*727*FLEN/8, x4, x1, x2)

inst_60632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffffffff8; valaddr_reg:x3; val_offset:181896*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181896*0 + 3*728*FLEN/8, x4, x1, x2)

inst_60633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffffffffc; valaddr_reg:x3; val_offset:181899*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181899*0 + 3*729*FLEN/8, x4, x1, x2)

inst_60634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33ffffffffffffe; valaddr_reg:x3; val_offset:181902*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181902*0 + 3*730*FLEN/8, x4, x1, x2)

inst_60635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x379f6399607e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x033 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa379f6399607e3; op2val:0x0;
op3val:0x33fffffffffffff; valaddr_reg:x3; val_offset:181905*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181905*0 + 3*731*FLEN/8, x4, x1, x2)

inst_60636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:181908*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181908*0 + 3*732*FLEN/8, x4, x1, x2)

inst_60637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:181911*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181911*0 + 3*733*FLEN/8, x4, x1, x2)

inst_60638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:181914*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181914*0 + 3*734*FLEN/8, x4, x1, x2)

inst_60639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:181917*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181917*0 + 3*735*FLEN/8, x4, x1, x2)

inst_60640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:181920*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181920*0 + 3*736*FLEN/8, x4, x1, x2)

inst_60641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:181923*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181923*0 + 3*737*FLEN/8, x4, x1, x2)

inst_60642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:181926*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181926*0 + 3*738*FLEN/8, x4, x1, x2)

inst_60643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:181929*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181929*0 + 3*739*FLEN/8, x4, x1, x2)

inst_60644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:181932*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181932*0 + 3*740*FLEN/8, x4, x1, x2)

inst_60645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:181935*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181935*0 + 3*741*FLEN/8, x4, x1, x2)

inst_60646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:181938*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181938*0 + 3*742*FLEN/8, x4, x1, x2)

inst_60647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:181941*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181941*0 + 3*743*FLEN/8, x4, x1, x2)

inst_60648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:181944*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181944*0 + 3*744*FLEN/8, x4, x1, x2)

inst_60649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:181947*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181947*0 + 3*745*FLEN/8, x4, x1, x2)

inst_60650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:181950*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181950*0 + 3*746*FLEN/8, x4, x1, x2)

inst_60651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:181953*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181953*0 + 3*747*FLEN/8, x4, x1, x2)

inst_60652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:181956*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181956*0 + 3*748*FLEN/8, x4, x1, x2)

inst_60653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:181959*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181959*0 + 3*749*FLEN/8, x4, x1, x2)

inst_60654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:181962*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181962*0 + 3*750*FLEN/8, x4, x1, x2)

inst_60655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:181965*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181965*0 + 3*751*FLEN/8, x4, x1, x2)

inst_60656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:181968*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181968*0 + 3*752*FLEN/8, x4, x1, x2)

inst_60657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:181971*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181971*0 + 3*753*FLEN/8, x4, x1, x2)

inst_60658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x300000000000000; valaddr_reg:x3; val_offset:181974*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181974*0 + 3*754*FLEN/8, x4, x1, x2)

inst_60659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x300000000000001; valaddr_reg:x3; val_offset:181977*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181977*0 + 3*755*FLEN/8, x4, x1, x2)

inst_60660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x300000000000003; valaddr_reg:x3; val_offset:181980*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181980*0 + 3*756*FLEN/8, x4, x1, x2)

inst_60661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x300000000000007; valaddr_reg:x3; val_offset:181983*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181983*0 + 3*757*FLEN/8, x4, x1, x2)

inst_60662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x30000000000000f; valaddr_reg:x3; val_offset:181986*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181986*0 + 3*758*FLEN/8, x4, x1, x2)

inst_60663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x30000000000001f; valaddr_reg:x3; val_offset:181989*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181989*0 + 3*759*FLEN/8, x4, x1, x2)

inst_60664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x30000000000003f; valaddr_reg:x3; val_offset:181992*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181992*0 + 3*760*FLEN/8, x4, x1, x2)

inst_60665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x30000000000007f; valaddr_reg:x3; val_offset:181995*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181995*0 + 3*761*FLEN/8, x4, x1, x2)

inst_60666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x3000000000000ff; valaddr_reg:x3; val_offset:181998*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 181998*0 + 3*762*FLEN/8, x4, x1, x2)

inst_60667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x3000000000001ff; valaddr_reg:x3; val_offset:182001*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182001*0 + 3*763*FLEN/8, x4, x1, x2)

inst_60668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x3000000000003ff; valaddr_reg:x3; val_offset:182004*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182004*0 + 3*764*FLEN/8, x4, x1, x2)

inst_60669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x3000000000007ff; valaddr_reg:x3; val_offset:182007*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182007*0 + 3*765*FLEN/8, x4, x1, x2)

inst_60670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x300000000000fff; valaddr_reg:x3; val_offset:182010*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182010*0 + 3*766*FLEN/8, x4, x1, x2)

inst_60671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x37e3e389ff86c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa37e3e389ff86c; op2val:0x0;
op3val:0x300000000001fff; valaddr_reg:x3; val_offset:182013*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 182013*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930115,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930119,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930127,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930143,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930175,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930239,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930367,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930623,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595931135,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595932159,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595934207,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595938303,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595946495,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595962879,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595995647,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596061183,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596192255,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596454399,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596978687,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418598027263,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418600124415,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418604318719,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418612707327,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418629484543,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418663038975,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418730147839,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418864365567,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419132801023,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419669671935,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048420743413759,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048422890897407,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048427185864703,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048435775799295,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048452955668479,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048487315406847,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048556034883583,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048693473837055,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048968351743999,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444049518107557887,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444050617619185663,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444052816642441215,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444057214688952319,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444066010781974527,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444083602968018943,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444118787340107775,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444189156084285439,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444329893572640767,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444611368549351423,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9445174318502772735,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615359,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615360,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447426118316457984,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447989068269879296,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448270543246589952,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448411280734945280,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448481649479122944,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448516833851211776,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448534426037256192,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448543222130278400,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448547620176789504,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448549819200045056,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448550918711672832,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551468467486720,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551743345393664,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551880784347136,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551949503823872,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551983863562240,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552001043431424,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552009633366016,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552013928333312,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552016075816960,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017149558784,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017686429696,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017954865152,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018089082880,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018156191744,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018189746176,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018206523392,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018214912000,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018219106304,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018221203456,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222252032,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222776320,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223038464,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223169536,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223235072,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223267840,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223284224,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223292416,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223296512,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223298560,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223299584,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300096,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300352,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300480,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300544,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300576,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300592,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300600,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300604,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300606,64,FLEN)
NAN_BOXED(6891465241194005016,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300607,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747776,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747777,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747779,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747783,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747791,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747807,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747839,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747903,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748031,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748287,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748799,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132749823,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132751871,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132755967,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132764159,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132780543,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132813311,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132878847,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133009919,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133272063,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133796351,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579134844927,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579136942079,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579141136383,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579149524991,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579166302207,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579199856639,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579266965503,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579401183231,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579669618687,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201580206489599,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201581280231423,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201583427715071,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201587722682367,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201596312616959,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201613492486143,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201647852224511,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201716571701247,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201854010654719,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252202128888561663,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252202678644375551,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252203778156003327,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252205977179258879,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252210375225769983,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252219171318792191,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252236763504836607,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252271947876925439,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252342316621103103,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252483054109458431,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252764529086169087,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(253327479039590399,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(254453378946433023,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(254453378946433024,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255579278853275648,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256142228806696960,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256423703783407616,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256564441271762944,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256634810015940608,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256669994388029440,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256687586574073856,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256696382667096064,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256700780713607168,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256702979736862720,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704079248490496,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704629004304384,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704903882211328,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705041321164800,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705110040641536,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705144400379904,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705161580249088,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705170170183680,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705174465150976,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705176612634624,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705177686376448,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178223247360,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178491682816,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178625900544,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178693009408,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178726563840,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178743341056,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178751729664,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178755923968,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178758021120,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759069696,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759593984,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759856128,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759987200,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760052736,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760085504,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760101888,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760110080,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760114176,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760116224,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760117248,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760117760,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118016,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118144,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118208,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118240,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118256,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118264,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118268,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118270,64,FLEN)
NAN_BOXED(6891465386152690984,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118271,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153682944,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153682945,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153682947,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153682951,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153682959,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153682975,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153683007,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153683071,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153683199,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153683455,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153683967,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153684991,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153687039,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153691135,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153699327,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153715711,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153748479,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153814015,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022153945087,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022154207231,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022154731519,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022155780095,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022157877247,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022162071551,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022170460159,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022187237375,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022220791807,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022287900671,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022422118399,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650022690553855,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650023227424767,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650024301166591,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650026448650239,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650030743617535,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650039333552127,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650056513421311,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650090873159679,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650159592636415,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650297031589887,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566650571909496831,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566651121665310719,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566652221176938495,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566654420200194047,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566658818246705151,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566667614339727359,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566685206525771775,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566720390897860607,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566790759642038271,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4566931497130393599,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4567212972107104255,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4567775922060525567,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4568901821967368191,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4568901821967368192,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4570027721874210816,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4570590671827632128,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4570872146804342784,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571012884292698112,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571083253036875776,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571118437408964608,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571136029595009024,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571144825688031232,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571149223734542336,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571151422757797888,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571152522269425664,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153072025239552,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153346903146496,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153484342099968,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153553061576704,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153587421315072,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153604601184256,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153613191118848,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153617486086144,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153619633569792,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153620707311616,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621244182528,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621512617984,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621646835712,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621713944576,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621747499008,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621764276224,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621772664832,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621776859136,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621778956288,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621780004864,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621780529152,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621780791296,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621780922368,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621780987904,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781020672,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781037056,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781045248,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781049344,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781051392,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781052416,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781052928,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781053184,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781053312,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781053376,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781053408,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781053424,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781053432,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781053436,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781053438,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4571153621781053439,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891476572983727917,64,FLEN)
NAN_BOXED(2322262363794778827,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377280,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377281,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377283,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377287,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377295,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377311,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377343,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377407,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377535,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377791,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505378303,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505379327,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505381375,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505385471,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505393663,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505410047,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505442815,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505508351,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505639423,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505901567,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979506425855,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979507474431,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979509571583,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979513765887,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979522154495,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979538931711,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979572486143,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979639595007,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979773812735,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980042248191,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980579119103,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697981652860927,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697983800344575,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697988095311871,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697996685246463,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698013865115647,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698048224854015,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698116944330751,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698254383284223,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698529261191167,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247699079017005055,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247700178528632831,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247702377551888383,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247706775598399487,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247715571691421695,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247733163877466111,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247768348249554943,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247838716993732607,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247979454482087935,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248260929458798591,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248823879412219903,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062527,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062528,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251075679225905152,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251638629179326464,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251920104156037120,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252060841644392448,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252131210388570112,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252166394760658944,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252183986946703360,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252192783039725568,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252197181086236672,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252199380109492224,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252200479621120000,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201029376933888,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201304254840832,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201441693794304,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201510413271040,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201544773009408,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201561952878592,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201570542813184,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201574837780480,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201576985264128,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578059005952,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578595876864,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578864312320,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578998530048,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579065638912,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579099193344,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579115970560,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579124359168,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579128553472,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579130650624,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579131699200,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132223488,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132485632,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132616704,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132682240,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132715008,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132731392,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132739584,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132743680,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132745728,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132746752,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747264,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747520,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747648,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747712,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747744,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747760,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747768,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747772,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747774,64,FLEN)
NAN_BOXED(6891483079016762244,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747775,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587309056,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587309057,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587309059,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587309063,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587309071,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587309087,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587309119,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587309183,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587309311,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587309567,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587310079,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587311103,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587313151,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587317247,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587325439,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587341823,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587374591,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587440127,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587571199,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232587833343,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232588357631,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232589406207,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232591503359,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232595697663,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232604086271,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232620863487,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232654417919,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232721526783,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549232855744511,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549233124179967,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549233661050879,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549234734792703,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549236882276351,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549241177243647,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549249767178239,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549266947047423,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549301306785791,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549370026262527,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549507465215999,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440549782343122943,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440550332098936831,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440551431610564607,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440553630633820159,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440558028680331263,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440566824773353471,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440584416959397887,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440619601331486719,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440689970075664383,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4440830707564019711,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4441112182540730367,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4441675132494151679,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4442801032400994303,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4442801032400994304,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4443926932307836928,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4444489882261258240,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4444771357237968896,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4444912094726324224,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4444982463470501888,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445017647842590720,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445035240028635136,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445044036121657344,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445048434168168448,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445050633191424000,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445051732703051776,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052282458865664,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052557336772608,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052694775726080,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052763495202816,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052797854941184,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052815034810368,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052823624744960,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052827919712256,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052830067195904,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052831140937728,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052831677808640,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052831946244096,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832080461824,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832147570688,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832181125120,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832197902336,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832206290944,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832210485248,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832212582400,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832213630976,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214155264,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214417408,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214548480,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214614016,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214646784,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214663168,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214671360,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214675456,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214677504,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214678528,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214679040,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214679296,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214679424,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214679488,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214679520,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214679536,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214679544,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214679548,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214679550,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4445052832214679551,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891483446742931720,64,FLEN)
NAN_BOXED(2322253065813623497,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895296,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895297,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895299,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895303,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895311,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895327,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895359,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895423,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895551,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895807,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995896319,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995897343,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995899391,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995903487,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995911679,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995928063,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995960831,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996026367,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996157439,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996419583,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580996943871,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580997992447,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581000089599,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581004283903,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581012672511,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581029449727,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581063004159,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581130113023,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581264330751,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683581532766207,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683582069637119,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683583143378943,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683585290862591,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683589585829887,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683598175764479,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683615355633663,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683649715372031,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683718434848767,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683855873802239,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229684130751709183,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229684680507523071,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229685780019150847,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229687979042406399,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229692377088917503,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229701173181939711,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229718765367984127,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229753949740072959,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229824318484250623,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229965055972605951,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(230246530949316607,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(230809480902737919,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(231935380809580543,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(231935380809580544,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233061280716423168,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233624230669844480,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(233905705646555136,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234046443134910464,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234116811879088128,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234151996251176960,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234169588437221376,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234178384530243584,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234182782576754688,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234184981600010240,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186081111638016,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186630867451904,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234186905745358848,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187043184312320,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187111903789056,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187146263527424,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187163443396608,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187172033331200,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187176328298496,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187178475782144,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187179549523968,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180086394880,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180354830336,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180489048064,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180556156928,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180589711360,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180606488576,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180614877184,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180619071488,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180621168640,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180622217216,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180622741504,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623003648,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623134720,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623200256,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623233024,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623249408,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623257600,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623261696,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623263744,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623264768,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265280,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265536,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265664,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265728,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265760,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265776,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265784,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265788,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265790,64,FLEN)
NAN_BOXED(6891485953242040291,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265791,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783808,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783809,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783811,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783815,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783823,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783839,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783871,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783935,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113784063,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113784319,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113784831,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113785855,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113787903,64,FLEN)
NAN_BOXED(6891490660510070892,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113791999,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
