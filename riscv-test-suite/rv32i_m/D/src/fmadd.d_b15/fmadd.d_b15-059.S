
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_44544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180000000000003; valaddr_reg:x3; val_offset:133632*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133632*0 + 3*0*FLEN/8, x4, x1, x2)

inst_44545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180000000000007; valaddr_reg:x3; val_offset:133635*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133635*0 + 3*1*FLEN/8, x4, x1, x2)

inst_44546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000000000000f; valaddr_reg:x3; val_offset:133638*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133638*0 + 3*2*FLEN/8, x4, x1, x2)

inst_44547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000000000001f; valaddr_reg:x3; val_offset:133641*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133641*0 + 3*3*FLEN/8, x4, x1, x2)

inst_44548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000000000003f; valaddr_reg:x3; val_offset:133644*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133644*0 + 3*4*FLEN/8, x4, x1, x2)

inst_44549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000000000007f; valaddr_reg:x3; val_offset:133647*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133647*0 + 3*5*FLEN/8, x4, x1, x2)

inst_44550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800000000000ff; valaddr_reg:x3; val_offset:133650*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133650*0 + 3*6*FLEN/8, x4, x1, x2)

inst_44551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800000000001ff; valaddr_reg:x3; val_offset:133653*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133653*0 + 3*7*FLEN/8, x4, x1, x2)

inst_44552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800000000003ff; valaddr_reg:x3; val_offset:133656*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133656*0 + 3*8*FLEN/8, x4, x1, x2)

inst_44553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800000000007ff; valaddr_reg:x3; val_offset:133659*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133659*0 + 3*9*FLEN/8, x4, x1, x2)

inst_44554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180000000000fff; valaddr_reg:x3; val_offset:133662*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133662*0 + 3*10*FLEN/8, x4, x1, x2)

inst_44555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180000000001fff; valaddr_reg:x3; val_offset:133665*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133665*0 + 3*11*FLEN/8, x4, x1, x2)

inst_44556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180000000003fff; valaddr_reg:x3; val_offset:133668*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133668*0 + 3*12*FLEN/8, x4, x1, x2)

inst_44557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180000000007fff; valaddr_reg:x3; val_offset:133671*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133671*0 + 3*13*FLEN/8, x4, x1, x2)

inst_44558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000000000ffff; valaddr_reg:x3; val_offset:133674*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133674*0 + 3*14*FLEN/8, x4, x1, x2)

inst_44559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000000001ffff; valaddr_reg:x3; val_offset:133677*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133677*0 + 3*15*FLEN/8, x4, x1, x2)

inst_44560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000000003ffff; valaddr_reg:x3; val_offset:133680*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133680*0 + 3*16*FLEN/8, x4, x1, x2)

inst_44561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000000007ffff; valaddr_reg:x3; val_offset:133683*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133683*0 + 3*17*FLEN/8, x4, x1, x2)

inst_44562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800000000fffff; valaddr_reg:x3; val_offset:133686*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133686*0 + 3*18*FLEN/8, x4, x1, x2)

inst_44563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800000001fffff; valaddr_reg:x3; val_offset:133689*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133689*0 + 3*19*FLEN/8, x4, x1, x2)

inst_44564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800000003fffff; valaddr_reg:x3; val_offset:133692*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133692*0 + 3*20*FLEN/8, x4, x1, x2)

inst_44565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800000007fffff; valaddr_reg:x3; val_offset:133695*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133695*0 + 3*21*FLEN/8, x4, x1, x2)

inst_44566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180000000ffffff; valaddr_reg:x3; val_offset:133698*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133698*0 + 3*22*FLEN/8, x4, x1, x2)

inst_44567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180000001ffffff; valaddr_reg:x3; val_offset:133701*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133701*0 + 3*23*FLEN/8, x4, x1, x2)

inst_44568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180000003ffffff; valaddr_reg:x3; val_offset:133704*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133704*0 + 3*24*FLEN/8, x4, x1, x2)

inst_44569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180000007ffffff; valaddr_reg:x3; val_offset:133707*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133707*0 + 3*25*FLEN/8, x4, x1, x2)

inst_44570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000000fffffff; valaddr_reg:x3; val_offset:133710*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133710*0 + 3*26*FLEN/8, x4, x1, x2)

inst_44571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000001fffffff; valaddr_reg:x3; val_offset:133713*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133713*0 + 3*27*FLEN/8, x4, x1, x2)

inst_44572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000003fffffff; valaddr_reg:x3; val_offset:133716*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133716*0 + 3*28*FLEN/8, x4, x1, x2)

inst_44573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000007fffffff; valaddr_reg:x3; val_offset:133719*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133719*0 + 3*29*FLEN/8, x4, x1, x2)

inst_44574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800000ffffffff; valaddr_reg:x3; val_offset:133722*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133722*0 + 3*30*FLEN/8, x4, x1, x2)

inst_44575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800001ffffffff; valaddr_reg:x3; val_offset:133725*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133725*0 + 3*31*FLEN/8, x4, x1, x2)

inst_44576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800003ffffffff; valaddr_reg:x3; val_offset:133728*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133728*0 + 3*32*FLEN/8, x4, x1, x2)

inst_44577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800007ffffffff; valaddr_reg:x3; val_offset:133731*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133731*0 + 3*33*FLEN/8, x4, x1, x2)

inst_44578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180000fffffffff; valaddr_reg:x3; val_offset:133734*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133734*0 + 3*34*FLEN/8, x4, x1, x2)

inst_44579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180001fffffffff; valaddr_reg:x3; val_offset:133737*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133737*0 + 3*35*FLEN/8, x4, x1, x2)

inst_44580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180003fffffffff; valaddr_reg:x3; val_offset:133740*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133740*0 + 3*36*FLEN/8, x4, x1, x2)

inst_44581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180007fffffffff; valaddr_reg:x3; val_offset:133743*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133743*0 + 3*37*FLEN/8, x4, x1, x2)

inst_44582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818000ffffffffff; valaddr_reg:x3; val_offset:133746*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133746*0 + 3*38*FLEN/8, x4, x1, x2)

inst_44583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818001ffffffffff; valaddr_reg:x3; val_offset:133749*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133749*0 + 3*39*FLEN/8, x4, x1, x2)

inst_44584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818003ffffffffff; valaddr_reg:x3; val_offset:133752*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133752*0 + 3*40*FLEN/8, x4, x1, x2)

inst_44585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818007ffffffffff; valaddr_reg:x3; val_offset:133755*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133755*0 + 3*41*FLEN/8, x4, x1, x2)

inst_44586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81800fffffffffff; valaddr_reg:x3; val_offset:133758*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133758*0 + 3*42*FLEN/8, x4, x1, x2)

inst_44587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81801fffffffffff; valaddr_reg:x3; val_offset:133761*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133761*0 + 3*43*FLEN/8, x4, x1, x2)

inst_44588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81803fffffffffff; valaddr_reg:x3; val_offset:133764*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133764*0 + 3*44*FLEN/8, x4, x1, x2)

inst_44589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x81807fffffffffff; valaddr_reg:x3; val_offset:133767*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133767*0 + 3*45*FLEN/8, x4, x1, x2)

inst_44590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8180ffffffffffff; valaddr_reg:x3; val_offset:133770*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133770*0 + 3*46*FLEN/8, x4, x1, x2)

inst_44591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8181ffffffffffff; valaddr_reg:x3; val_offset:133773*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133773*0 + 3*47*FLEN/8, x4, x1, x2)

inst_44592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8183ffffffffffff; valaddr_reg:x3; val_offset:133776*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133776*0 + 3*48*FLEN/8, x4, x1, x2)

inst_44593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8187ffffffffffff; valaddr_reg:x3; val_offset:133779*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133779*0 + 3*49*FLEN/8, x4, x1, x2)

inst_44594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x8188000000000000; valaddr_reg:x3; val_offset:133782*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133782*0 + 3*50*FLEN/8, x4, x1, x2)

inst_44595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818c000000000000; valaddr_reg:x3; val_offset:133785*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133785*0 + 3*51*FLEN/8, x4, x1, x2)

inst_44596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818e000000000000; valaddr_reg:x3; val_offset:133788*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133788*0 + 3*52*FLEN/8, x4, x1, x2)

inst_44597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818f000000000000; valaddr_reg:x3; val_offset:133791*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133791*0 + 3*53*FLEN/8, x4, x1, x2)

inst_44598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818f800000000000; valaddr_reg:x3; val_offset:133794*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133794*0 + 3*54*FLEN/8, x4, x1, x2)

inst_44599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fc00000000000; valaddr_reg:x3; val_offset:133797*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133797*0 + 3*55*FLEN/8, x4, x1, x2)

inst_44600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fe00000000000; valaddr_reg:x3; val_offset:133800*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133800*0 + 3*56*FLEN/8, x4, x1, x2)

inst_44601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ff00000000000; valaddr_reg:x3; val_offset:133803*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133803*0 + 3*57*FLEN/8, x4, x1, x2)

inst_44602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ff80000000000; valaddr_reg:x3; val_offset:133806*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133806*0 + 3*58*FLEN/8, x4, x1, x2)

inst_44603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffc0000000000; valaddr_reg:x3; val_offset:133809*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133809*0 + 3*59*FLEN/8, x4, x1, x2)

inst_44604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffe0000000000; valaddr_reg:x3; val_offset:133812*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133812*0 + 3*60*FLEN/8, x4, x1, x2)

inst_44605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fff0000000000; valaddr_reg:x3; val_offset:133815*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133815*0 + 3*61*FLEN/8, x4, x1, x2)

inst_44606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fff8000000000; valaddr_reg:x3; val_offset:133818*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133818*0 + 3*62*FLEN/8, x4, x1, x2)

inst_44607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffc000000000; valaddr_reg:x3; val_offset:133821*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133821*0 + 3*63*FLEN/8, x4, x1, x2)

inst_44608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffe000000000; valaddr_reg:x3; val_offset:133824*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133824*0 + 3*64*FLEN/8, x4, x1, x2)

inst_44609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffff000000000; valaddr_reg:x3; val_offset:133827*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133827*0 + 3*65*FLEN/8, x4, x1, x2)

inst_44610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffff800000000; valaddr_reg:x3; val_offset:133830*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133830*0 + 3*66*FLEN/8, x4, x1, x2)

inst_44611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffc00000000; valaddr_reg:x3; val_offset:133833*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133833*0 + 3*67*FLEN/8, x4, x1, x2)

inst_44612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffe00000000; valaddr_reg:x3; val_offset:133836*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133836*0 + 3*68*FLEN/8, x4, x1, x2)

inst_44613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffff00000000; valaddr_reg:x3; val_offset:133839*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133839*0 + 3*69*FLEN/8, x4, x1, x2)

inst_44614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffff80000000; valaddr_reg:x3; val_offset:133842*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133842*0 + 3*70*FLEN/8, x4, x1, x2)

inst_44615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffc0000000; valaddr_reg:x3; val_offset:133845*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133845*0 + 3*71*FLEN/8, x4, x1, x2)

inst_44616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffe0000000; valaddr_reg:x3; val_offset:133848*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133848*0 + 3*72*FLEN/8, x4, x1, x2)

inst_44617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffff0000000; valaddr_reg:x3; val_offset:133851*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133851*0 + 3*73*FLEN/8, x4, x1, x2)

inst_44618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffff8000000; valaddr_reg:x3; val_offset:133854*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133854*0 + 3*74*FLEN/8, x4, x1, x2)

inst_44619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffc000000; valaddr_reg:x3; val_offset:133857*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133857*0 + 3*75*FLEN/8, x4, x1, x2)

inst_44620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffe000000; valaddr_reg:x3; val_offset:133860*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133860*0 + 3*76*FLEN/8, x4, x1, x2)

inst_44621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffff000000; valaddr_reg:x3; val_offset:133863*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133863*0 + 3*77*FLEN/8, x4, x1, x2)

inst_44622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffff800000; valaddr_reg:x3; val_offset:133866*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133866*0 + 3*78*FLEN/8, x4, x1, x2)

inst_44623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffffc00000; valaddr_reg:x3; val_offset:133869*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133869*0 + 3*79*FLEN/8, x4, x1, x2)

inst_44624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffffe00000; valaddr_reg:x3; val_offset:133872*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133872*0 + 3*80*FLEN/8, x4, x1, x2)

inst_44625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffff00000; valaddr_reg:x3; val_offset:133875*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133875*0 + 3*81*FLEN/8, x4, x1, x2)

inst_44626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffff80000; valaddr_reg:x3; val_offset:133878*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133878*0 + 3*82*FLEN/8, x4, x1, x2)

inst_44627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffffc0000; valaddr_reg:x3; val_offset:133881*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133881*0 + 3*83*FLEN/8, x4, x1, x2)

inst_44628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffffe0000; valaddr_reg:x3; val_offset:133884*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133884*0 + 3*84*FLEN/8, x4, x1, x2)

inst_44629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffffff0000; valaddr_reg:x3; val_offset:133887*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133887*0 + 3*85*FLEN/8, x4, x1, x2)

inst_44630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffffff8000; valaddr_reg:x3; val_offset:133890*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133890*0 + 3*86*FLEN/8, x4, x1, x2)

inst_44631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffffffc000; valaddr_reg:x3; val_offset:133893*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133893*0 + 3*87*FLEN/8, x4, x1, x2)

inst_44632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffffffe000; valaddr_reg:x3; val_offset:133896*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133896*0 + 3*88*FLEN/8, x4, x1, x2)

inst_44633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffffff000; valaddr_reg:x3; val_offset:133899*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133899*0 + 3*89*FLEN/8, x4, x1, x2)

inst_44634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffffff800; valaddr_reg:x3; val_offset:133902*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133902*0 + 3*90*FLEN/8, x4, x1, x2)

inst_44635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffffffc00; valaddr_reg:x3; val_offset:133905*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133905*0 + 3*91*FLEN/8, x4, x1, x2)

inst_44636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffffffe00; valaddr_reg:x3; val_offset:133908*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133908*0 + 3*92*FLEN/8, x4, x1, x2)

inst_44637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffffffff00; valaddr_reg:x3; val_offset:133911*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133911*0 + 3*93*FLEN/8, x4, x1, x2)

inst_44638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffffffff80; valaddr_reg:x3; val_offset:133914*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133914*0 + 3*94*FLEN/8, x4, x1, x2)

inst_44639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffffffffc0; valaddr_reg:x3; val_offset:133917*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133917*0 + 3*95*FLEN/8, x4, x1, x2)

inst_44640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffffffffe0; valaddr_reg:x3; val_offset:133920*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133920*0 + 3*96*FLEN/8, x4, x1, x2)

inst_44641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffffffff0; valaddr_reg:x3; val_offset:133923*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133923*0 + 3*97*FLEN/8, x4, x1, x2)

inst_44642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffffffff8; valaddr_reg:x3; val_offset:133926*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133926*0 + 3*98*FLEN/8, x4, x1, x2)

inst_44643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffffffffc; valaddr_reg:x3; val_offset:133929*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133929*0 + 3*99*FLEN/8, x4, x1, x2)

inst_44644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818ffffffffffffe; valaddr_reg:x3; val_offset:133932*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133932*0 + 3*100*FLEN/8, x4, x1, x2)

inst_44645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb52e9a478dadd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x018 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b52e9a478dadd; op2val:0x8000;
op3val:0x818fffffffffffff; valaddr_reg:x3; val_offset:133935*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133935*0 + 3*101*FLEN/8, x4, x1, x2)

inst_44646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:133938*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133938*0 + 3*102*FLEN/8, x4, x1, x2)

inst_44647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:133941*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133941*0 + 3*103*FLEN/8, x4, x1, x2)

inst_44648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:133944*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133944*0 + 3*104*FLEN/8, x4, x1, x2)

inst_44649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:133947*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133947*0 + 3*105*FLEN/8, x4, x1, x2)

inst_44650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:133950*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133950*0 + 3*106*FLEN/8, x4, x1, x2)

inst_44651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:133953*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133953*0 + 3*107*FLEN/8, x4, x1, x2)

inst_44652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:133956*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133956*0 + 3*108*FLEN/8, x4, x1, x2)

inst_44653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:133959*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133959*0 + 3*109*FLEN/8, x4, x1, x2)

inst_44654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:133962*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133962*0 + 3*110*FLEN/8, x4, x1, x2)

inst_44655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:133965*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133965*0 + 3*111*FLEN/8, x4, x1, x2)

inst_44656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:133968*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133968*0 + 3*112*FLEN/8, x4, x1, x2)

inst_44657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:133971*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133971*0 + 3*113*FLEN/8, x4, x1, x2)

inst_44658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:133974*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133974*0 + 3*114*FLEN/8, x4, x1, x2)

inst_44659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:133977*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133977*0 + 3*115*FLEN/8, x4, x1, x2)

inst_44660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:133980*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133980*0 + 3*116*FLEN/8, x4, x1, x2)

inst_44661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:133983*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133983*0 + 3*117*FLEN/8, x4, x1, x2)

inst_44662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:133986*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133986*0 + 3*118*FLEN/8, x4, x1, x2)

inst_44663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:133989*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133989*0 + 3*119*FLEN/8, x4, x1, x2)

inst_44664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:133992*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133992*0 + 3*120*FLEN/8, x4, x1, x2)

inst_44665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:133995*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133995*0 + 3*121*FLEN/8, x4, x1, x2)

inst_44666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:133998*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133998*0 + 3*122*FLEN/8, x4, x1, x2)

inst_44667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:134001*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134001*0 + 3*123*FLEN/8, x4, x1, x2)

inst_44668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000000000000; valaddr_reg:x3; val_offset:134004*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134004*0 + 3*124*FLEN/8, x4, x1, x2)

inst_44669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000000000001; valaddr_reg:x3; val_offset:134007*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134007*0 + 3*125*FLEN/8, x4, x1, x2)

inst_44670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000000000003; valaddr_reg:x3; val_offset:134010*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134010*0 + 3*126*FLEN/8, x4, x1, x2)

inst_44671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000000000007; valaddr_reg:x3; val_offset:134013*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134013*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_44672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000000000000f; valaddr_reg:x3; val_offset:134016*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134016*0 + 3*128*FLEN/8, x4, x1, x2)

inst_44673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000000000001f; valaddr_reg:x3; val_offset:134019*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134019*0 + 3*129*FLEN/8, x4, x1, x2)

inst_44674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000000000003f; valaddr_reg:x3; val_offset:134022*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134022*0 + 3*130*FLEN/8, x4, x1, x2)

inst_44675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000000000007f; valaddr_reg:x3; val_offset:134025*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134025*0 + 3*131*FLEN/8, x4, x1, x2)

inst_44676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00000000000ff; valaddr_reg:x3; val_offset:134028*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134028*0 + 3*132*FLEN/8, x4, x1, x2)

inst_44677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00000000001ff; valaddr_reg:x3; val_offset:134031*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134031*0 + 3*133*FLEN/8, x4, x1, x2)

inst_44678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00000000003ff; valaddr_reg:x3; val_offset:134034*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134034*0 + 3*134*FLEN/8, x4, x1, x2)

inst_44679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00000000007ff; valaddr_reg:x3; val_offset:134037*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134037*0 + 3*135*FLEN/8, x4, x1, x2)

inst_44680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000000000fff; valaddr_reg:x3; val_offset:134040*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134040*0 + 3*136*FLEN/8, x4, x1, x2)

inst_44681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000000001fff; valaddr_reg:x3; val_offset:134043*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134043*0 + 3*137*FLEN/8, x4, x1, x2)

inst_44682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000000003fff; valaddr_reg:x3; val_offset:134046*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134046*0 + 3*138*FLEN/8, x4, x1, x2)

inst_44683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000000007fff; valaddr_reg:x3; val_offset:134049*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134049*0 + 3*139*FLEN/8, x4, x1, x2)

inst_44684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000000000ffff; valaddr_reg:x3; val_offset:134052*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134052*0 + 3*140*FLEN/8, x4, x1, x2)

inst_44685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000000001ffff; valaddr_reg:x3; val_offset:134055*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134055*0 + 3*141*FLEN/8, x4, x1, x2)

inst_44686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000000003ffff; valaddr_reg:x3; val_offset:134058*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134058*0 + 3*142*FLEN/8, x4, x1, x2)

inst_44687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000000007ffff; valaddr_reg:x3; val_offset:134061*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134061*0 + 3*143*FLEN/8, x4, x1, x2)

inst_44688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00000000fffff; valaddr_reg:x3; val_offset:134064*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134064*0 + 3*144*FLEN/8, x4, x1, x2)

inst_44689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00000001fffff; valaddr_reg:x3; val_offset:134067*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134067*0 + 3*145*FLEN/8, x4, x1, x2)

inst_44690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00000003fffff; valaddr_reg:x3; val_offset:134070*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134070*0 + 3*146*FLEN/8, x4, x1, x2)

inst_44691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00000007fffff; valaddr_reg:x3; val_offset:134073*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134073*0 + 3*147*FLEN/8, x4, x1, x2)

inst_44692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000000ffffff; valaddr_reg:x3; val_offset:134076*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134076*0 + 3*148*FLEN/8, x4, x1, x2)

inst_44693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000001ffffff; valaddr_reg:x3; val_offset:134079*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134079*0 + 3*149*FLEN/8, x4, x1, x2)

inst_44694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000003ffffff; valaddr_reg:x3; val_offset:134082*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134082*0 + 3*150*FLEN/8, x4, x1, x2)

inst_44695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000007ffffff; valaddr_reg:x3; val_offset:134085*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134085*0 + 3*151*FLEN/8, x4, x1, x2)

inst_44696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000000fffffff; valaddr_reg:x3; val_offset:134088*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134088*0 + 3*152*FLEN/8, x4, x1, x2)

inst_44697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000001fffffff; valaddr_reg:x3; val_offset:134091*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134091*0 + 3*153*FLEN/8, x4, x1, x2)

inst_44698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000003fffffff; valaddr_reg:x3; val_offset:134094*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134094*0 + 3*154*FLEN/8, x4, x1, x2)

inst_44699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000007fffffff; valaddr_reg:x3; val_offset:134097*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134097*0 + 3*155*FLEN/8, x4, x1, x2)

inst_44700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00000ffffffff; valaddr_reg:x3; val_offset:134100*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134100*0 + 3*156*FLEN/8, x4, x1, x2)

inst_44701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00001ffffffff; valaddr_reg:x3; val_offset:134103*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134103*0 + 3*157*FLEN/8, x4, x1, x2)

inst_44702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00003ffffffff; valaddr_reg:x3; val_offset:134106*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134106*0 + 3*158*FLEN/8, x4, x1, x2)

inst_44703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00007ffffffff; valaddr_reg:x3; val_offset:134109*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134109*0 + 3*159*FLEN/8, x4, x1, x2)

inst_44704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0000fffffffff; valaddr_reg:x3; val_offset:134112*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134112*0 + 3*160*FLEN/8, x4, x1, x2)

inst_44705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0001fffffffff; valaddr_reg:x3; val_offset:134115*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134115*0 + 3*161*FLEN/8, x4, x1, x2)

inst_44706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0003fffffffff; valaddr_reg:x3; val_offset:134118*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134118*0 + 3*162*FLEN/8, x4, x1, x2)

inst_44707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0007fffffffff; valaddr_reg:x3; val_offset:134121*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134121*0 + 3*163*FLEN/8, x4, x1, x2)

inst_44708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa000ffffffffff; valaddr_reg:x3; val_offset:134124*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134124*0 + 3*164*FLEN/8, x4, x1, x2)

inst_44709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa001ffffffffff; valaddr_reg:x3; val_offset:134127*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134127*0 + 3*165*FLEN/8, x4, x1, x2)

inst_44710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa003ffffffffff; valaddr_reg:x3; val_offset:134130*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134130*0 + 3*166*FLEN/8, x4, x1, x2)

inst_44711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa007ffffffffff; valaddr_reg:x3; val_offset:134133*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134133*0 + 3*167*FLEN/8, x4, x1, x2)

inst_44712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa00fffffffffff; valaddr_reg:x3; val_offset:134136*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134136*0 + 3*168*FLEN/8, x4, x1, x2)

inst_44713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa01fffffffffff; valaddr_reg:x3; val_offset:134139*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134139*0 + 3*169*FLEN/8, x4, x1, x2)

inst_44714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa03fffffffffff; valaddr_reg:x3; val_offset:134142*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134142*0 + 3*170*FLEN/8, x4, x1, x2)

inst_44715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa07fffffffffff; valaddr_reg:x3; val_offset:134145*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134145*0 + 3*171*FLEN/8, x4, x1, x2)

inst_44716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa0ffffffffffff; valaddr_reg:x3; val_offset:134148*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134148*0 + 3*172*FLEN/8, x4, x1, x2)

inst_44717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa1ffffffffffff; valaddr_reg:x3; val_offset:134151*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134151*0 + 3*173*FLEN/8, x4, x1, x2)

inst_44718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa3ffffffffffff; valaddr_reg:x3; val_offset:134154*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134154*0 + 3*174*FLEN/8, x4, x1, x2)

inst_44719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa7ffffffffffff; valaddr_reg:x3; val_offset:134157*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134157*0 + 3*175*FLEN/8, x4, x1, x2)

inst_44720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xa8000000000000; valaddr_reg:x3; val_offset:134160*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134160*0 + 3*176*FLEN/8, x4, x1, x2)

inst_44721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xac000000000000; valaddr_reg:x3; val_offset:134163*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134163*0 + 3*177*FLEN/8, x4, x1, x2)

inst_44722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xae000000000000; valaddr_reg:x3; val_offset:134166*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134166*0 + 3*178*FLEN/8, x4, x1, x2)

inst_44723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaf000000000000; valaddr_reg:x3; val_offset:134169*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134169*0 + 3*179*FLEN/8, x4, x1, x2)

inst_44724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaf800000000000; valaddr_reg:x3; val_offset:134172*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134172*0 + 3*180*FLEN/8, x4, x1, x2)

inst_44725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafc00000000000; valaddr_reg:x3; val_offset:134175*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134175*0 + 3*181*FLEN/8, x4, x1, x2)

inst_44726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafe00000000000; valaddr_reg:x3; val_offset:134178*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134178*0 + 3*182*FLEN/8, x4, x1, x2)

inst_44727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaff00000000000; valaddr_reg:x3; val_offset:134181*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134181*0 + 3*183*FLEN/8, x4, x1, x2)

inst_44728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaff80000000000; valaddr_reg:x3; val_offset:134184*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134184*0 + 3*184*FLEN/8, x4, x1, x2)

inst_44729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffc0000000000; valaddr_reg:x3; val_offset:134187*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134187*0 + 3*185*FLEN/8, x4, x1, x2)

inst_44730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffe0000000000; valaddr_reg:x3; val_offset:134190*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134190*0 + 3*186*FLEN/8, x4, x1, x2)

inst_44731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafff0000000000; valaddr_reg:x3; val_offset:134193*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134193*0 + 3*187*FLEN/8, x4, x1, x2)

inst_44732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafff8000000000; valaddr_reg:x3; val_offset:134196*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134196*0 + 3*188*FLEN/8, x4, x1, x2)

inst_44733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffc000000000; valaddr_reg:x3; val_offset:134199*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134199*0 + 3*189*FLEN/8, x4, x1, x2)

inst_44734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffe000000000; valaddr_reg:x3; val_offset:134202*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134202*0 + 3*190*FLEN/8, x4, x1, x2)

inst_44735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffff000000000; valaddr_reg:x3; val_offset:134205*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134205*0 + 3*191*FLEN/8, x4, x1, x2)

inst_44736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffff800000000; valaddr_reg:x3; val_offset:134208*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134208*0 + 3*192*FLEN/8, x4, x1, x2)

inst_44737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffc00000000; valaddr_reg:x3; val_offset:134211*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134211*0 + 3*193*FLEN/8, x4, x1, x2)

inst_44738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffe00000000; valaddr_reg:x3; val_offset:134214*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134214*0 + 3*194*FLEN/8, x4, x1, x2)

inst_44739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffff00000000; valaddr_reg:x3; val_offset:134217*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134217*0 + 3*195*FLEN/8, x4, x1, x2)

inst_44740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffff80000000; valaddr_reg:x3; val_offset:134220*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134220*0 + 3*196*FLEN/8, x4, x1, x2)

inst_44741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffc0000000; valaddr_reg:x3; val_offset:134223*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134223*0 + 3*197*FLEN/8, x4, x1, x2)

inst_44742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffe0000000; valaddr_reg:x3; val_offset:134226*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134226*0 + 3*198*FLEN/8, x4, x1, x2)

inst_44743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffff0000000; valaddr_reg:x3; val_offset:134229*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134229*0 + 3*199*FLEN/8, x4, x1, x2)

inst_44744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffff8000000; valaddr_reg:x3; val_offset:134232*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134232*0 + 3*200*FLEN/8, x4, x1, x2)

inst_44745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffc000000; valaddr_reg:x3; val_offset:134235*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134235*0 + 3*201*FLEN/8, x4, x1, x2)

inst_44746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffe000000; valaddr_reg:x3; val_offset:134238*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134238*0 + 3*202*FLEN/8, x4, x1, x2)

inst_44747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffff000000; valaddr_reg:x3; val_offset:134241*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134241*0 + 3*203*FLEN/8, x4, x1, x2)

inst_44748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffff800000; valaddr_reg:x3; val_offset:134244*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134244*0 + 3*204*FLEN/8, x4, x1, x2)

inst_44749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffffc00000; valaddr_reg:x3; val_offset:134247*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134247*0 + 3*205*FLEN/8, x4, x1, x2)

inst_44750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffffe00000; valaddr_reg:x3; val_offset:134250*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134250*0 + 3*206*FLEN/8, x4, x1, x2)

inst_44751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffff00000; valaddr_reg:x3; val_offset:134253*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134253*0 + 3*207*FLEN/8, x4, x1, x2)

inst_44752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffff80000; valaddr_reg:x3; val_offset:134256*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134256*0 + 3*208*FLEN/8, x4, x1, x2)

inst_44753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffffc0000; valaddr_reg:x3; val_offset:134259*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134259*0 + 3*209*FLEN/8, x4, x1, x2)

inst_44754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffffe0000; valaddr_reg:x3; val_offset:134262*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134262*0 + 3*210*FLEN/8, x4, x1, x2)

inst_44755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffffff0000; valaddr_reg:x3; val_offset:134265*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134265*0 + 3*211*FLEN/8, x4, x1, x2)

inst_44756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffffff8000; valaddr_reg:x3; val_offset:134268*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134268*0 + 3*212*FLEN/8, x4, x1, x2)

inst_44757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffffffc000; valaddr_reg:x3; val_offset:134271*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134271*0 + 3*213*FLEN/8, x4, x1, x2)

inst_44758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffffffe000; valaddr_reg:x3; val_offset:134274*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134274*0 + 3*214*FLEN/8, x4, x1, x2)

inst_44759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffffff000; valaddr_reg:x3; val_offset:134277*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134277*0 + 3*215*FLEN/8, x4, x1, x2)

inst_44760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffffff800; valaddr_reg:x3; val_offset:134280*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134280*0 + 3*216*FLEN/8, x4, x1, x2)

inst_44761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffffffc00; valaddr_reg:x3; val_offset:134283*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134283*0 + 3*217*FLEN/8, x4, x1, x2)

inst_44762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffffffe00; valaddr_reg:x3; val_offset:134286*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134286*0 + 3*218*FLEN/8, x4, x1, x2)

inst_44763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffffffff00; valaddr_reg:x3; val_offset:134289*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134289*0 + 3*219*FLEN/8, x4, x1, x2)

inst_44764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffffffff80; valaddr_reg:x3; val_offset:134292*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134292*0 + 3*220*FLEN/8, x4, x1, x2)

inst_44765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffffffffc0; valaddr_reg:x3; val_offset:134295*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134295*0 + 3*221*FLEN/8, x4, x1, x2)

inst_44766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffffffffe0; valaddr_reg:x3; val_offset:134298*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134298*0 + 3*222*FLEN/8, x4, x1, x2)

inst_44767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffffffff0; valaddr_reg:x3; val_offset:134301*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134301*0 + 3*223*FLEN/8, x4, x1, x2)

inst_44768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffffffff8; valaddr_reg:x3; val_offset:134304*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134304*0 + 3*224*FLEN/8, x4, x1, x2)

inst_44769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffffffffc; valaddr_reg:x3; val_offset:134307*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134307*0 + 3*225*FLEN/8, x4, x1, x2)

inst_44770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xaffffffffffffe; valaddr_reg:x3; val_offset:134310*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134310*0 + 3*226*FLEN/8, x4, x1, x2)

inst_44771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb58b906746bad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b58b906746bad; op2val:0x0;
op3val:0xafffffffffffff; valaddr_reg:x3; val_offset:134313*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134313*0 + 3*227*FLEN/8, x4, x1, x2)

inst_44772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:134316*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134316*0 + 3*228*FLEN/8, x4, x1, x2)

inst_44773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:134319*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134319*0 + 3*229*FLEN/8, x4, x1, x2)

inst_44774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:134322*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134322*0 + 3*230*FLEN/8, x4, x1, x2)

inst_44775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:134325*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134325*0 + 3*231*FLEN/8, x4, x1, x2)

inst_44776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:134328*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134328*0 + 3*232*FLEN/8, x4, x1, x2)

inst_44777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:134331*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134331*0 + 3*233*FLEN/8, x4, x1, x2)

inst_44778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:134334*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134334*0 + 3*234*FLEN/8, x4, x1, x2)

inst_44779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:134337*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134337*0 + 3*235*FLEN/8, x4, x1, x2)

inst_44780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:134340*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134340*0 + 3*236*FLEN/8, x4, x1, x2)

inst_44781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:134343*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134343*0 + 3*237*FLEN/8, x4, x1, x2)

inst_44782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:134346*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134346*0 + 3*238*FLEN/8, x4, x1, x2)

inst_44783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:134349*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134349*0 + 3*239*FLEN/8, x4, x1, x2)

inst_44784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:134352*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134352*0 + 3*240*FLEN/8, x4, x1, x2)

inst_44785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:134355*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134355*0 + 3*241*FLEN/8, x4, x1, x2)

inst_44786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:134358*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134358*0 + 3*242*FLEN/8, x4, x1, x2)

inst_44787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:134361*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134361*0 + 3*243*FLEN/8, x4, x1, x2)

inst_44788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:134364*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134364*0 + 3*244*FLEN/8, x4, x1, x2)

inst_44789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:134367*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134367*0 + 3*245*FLEN/8, x4, x1, x2)

inst_44790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:134370*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134370*0 + 3*246*FLEN/8, x4, x1, x2)

inst_44791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:134373*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134373*0 + 3*247*FLEN/8, x4, x1, x2)

inst_44792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:134376*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134376*0 + 3*248*FLEN/8, x4, x1, x2)

inst_44793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:134379*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134379*0 + 3*249*FLEN/8, x4, x1, x2)

inst_44794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000000000000; valaddr_reg:x3; val_offset:134382*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134382*0 + 3*250*FLEN/8, x4, x1, x2)

inst_44795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000000000001; valaddr_reg:x3; val_offset:134385*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134385*0 + 3*251*FLEN/8, x4, x1, x2)

inst_44796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000000000003; valaddr_reg:x3; val_offset:134388*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134388*0 + 3*252*FLEN/8, x4, x1, x2)

inst_44797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000000000007; valaddr_reg:x3; val_offset:134391*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134391*0 + 3*253*FLEN/8, x4, x1, x2)

inst_44798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000000000000f; valaddr_reg:x3; val_offset:134394*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134394*0 + 3*254*FLEN/8, x4, x1, x2)

inst_44799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000000000001f; valaddr_reg:x3; val_offset:134397*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134397*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_44800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000000000003f; valaddr_reg:x3; val_offset:134400*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134400*0 + 3*256*FLEN/8, x4, x1, x2)

inst_44801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000000000007f; valaddr_reg:x3; val_offset:134403*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134403*0 + 3*257*FLEN/8, x4, x1, x2)

inst_44802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100000000000ff; valaddr_reg:x3; val_offset:134406*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134406*0 + 3*258*FLEN/8, x4, x1, x2)

inst_44803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100000000001ff; valaddr_reg:x3; val_offset:134409*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134409*0 + 3*259*FLEN/8, x4, x1, x2)

inst_44804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100000000003ff; valaddr_reg:x3; val_offset:134412*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134412*0 + 3*260*FLEN/8, x4, x1, x2)

inst_44805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100000000007ff; valaddr_reg:x3; val_offset:134415*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134415*0 + 3*261*FLEN/8, x4, x1, x2)

inst_44806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000000000fff; valaddr_reg:x3; val_offset:134418*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134418*0 + 3*262*FLEN/8, x4, x1, x2)

inst_44807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000000001fff; valaddr_reg:x3; val_offset:134421*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134421*0 + 3*263*FLEN/8, x4, x1, x2)

inst_44808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000000003fff; valaddr_reg:x3; val_offset:134424*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134424*0 + 3*264*FLEN/8, x4, x1, x2)

inst_44809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000000007fff; valaddr_reg:x3; val_offset:134427*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134427*0 + 3*265*FLEN/8, x4, x1, x2)

inst_44810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000000000ffff; valaddr_reg:x3; val_offset:134430*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134430*0 + 3*266*FLEN/8, x4, x1, x2)

inst_44811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000000001ffff; valaddr_reg:x3; val_offset:134433*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134433*0 + 3*267*FLEN/8, x4, x1, x2)

inst_44812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000000003ffff; valaddr_reg:x3; val_offset:134436*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134436*0 + 3*268*FLEN/8, x4, x1, x2)

inst_44813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000000007ffff; valaddr_reg:x3; val_offset:134439*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134439*0 + 3*269*FLEN/8, x4, x1, x2)

inst_44814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100000000fffff; valaddr_reg:x3; val_offset:134442*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134442*0 + 3*270*FLEN/8, x4, x1, x2)

inst_44815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100000001fffff; valaddr_reg:x3; val_offset:134445*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134445*0 + 3*271*FLEN/8, x4, x1, x2)

inst_44816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100000003fffff; valaddr_reg:x3; val_offset:134448*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134448*0 + 3*272*FLEN/8, x4, x1, x2)

inst_44817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100000007fffff; valaddr_reg:x3; val_offset:134451*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134451*0 + 3*273*FLEN/8, x4, x1, x2)

inst_44818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000000ffffff; valaddr_reg:x3; val_offset:134454*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134454*0 + 3*274*FLEN/8, x4, x1, x2)

inst_44819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000001ffffff; valaddr_reg:x3; val_offset:134457*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134457*0 + 3*275*FLEN/8, x4, x1, x2)

inst_44820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000003ffffff; valaddr_reg:x3; val_offset:134460*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134460*0 + 3*276*FLEN/8, x4, x1, x2)

inst_44821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000007ffffff; valaddr_reg:x3; val_offset:134463*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134463*0 + 3*277*FLEN/8, x4, x1, x2)

inst_44822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000000fffffff; valaddr_reg:x3; val_offset:134466*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134466*0 + 3*278*FLEN/8, x4, x1, x2)

inst_44823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000001fffffff; valaddr_reg:x3; val_offset:134469*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134469*0 + 3*279*FLEN/8, x4, x1, x2)

inst_44824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000003fffffff; valaddr_reg:x3; val_offset:134472*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134472*0 + 3*280*FLEN/8, x4, x1, x2)

inst_44825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000007fffffff; valaddr_reg:x3; val_offset:134475*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134475*0 + 3*281*FLEN/8, x4, x1, x2)

inst_44826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100000ffffffff; valaddr_reg:x3; val_offset:134478*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134478*0 + 3*282*FLEN/8, x4, x1, x2)

inst_44827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100001ffffffff; valaddr_reg:x3; val_offset:134481*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134481*0 + 3*283*FLEN/8, x4, x1, x2)

inst_44828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100003ffffffff; valaddr_reg:x3; val_offset:134484*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134484*0 + 3*284*FLEN/8, x4, x1, x2)

inst_44829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100007ffffffff; valaddr_reg:x3; val_offset:134487*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134487*0 + 3*285*FLEN/8, x4, x1, x2)

inst_44830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310000fffffffff; valaddr_reg:x3; val_offset:134490*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134490*0 + 3*286*FLEN/8, x4, x1, x2)

inst_44831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310001fffffffff; valaddr_reg:x3; val_offset:134493*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134493*0 + 3*287*FLEN/8, x4, x1, x2)

inst_44832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310003fffffffff; valaddr_reg:x3; val_offset:134496*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134496*0 + 3*288*FLEN/8, x4, x1, x2)

inst_44833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310007fffffffff; valaddr_reg:x3; val_offset:134499*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134499*0 + 3*289*FLEN/8, x4, x1, x2)

inst_44834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31000ffffffffff; valaddr_reg:x3; val_offset:134502*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134502*0 + 3*290*FLEN/8, x4, x1, x2)

inst_44835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31001ffffffffff; valaddr_reg:x3; val_offset:134505*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134505*0 + 3*291*FLEN/8, x4, x1, x2)

inst_44836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31003ffffffffff; valaddr_reg:x3; val_offset:134508*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134508*0 + 3*292*FLEN/8, x4, x1, x2)

inst_44837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31007ffffffffff; valaddr_reg:x3; val_offset:134511*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134511*0 + 3*293*FLEN/8, x4, x1, x2)

inst_44838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3100fffffffffff; valaddr_reg:x3; val_offset:134514*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134514*0 + 3*294*FLEN/8, x4, x1, x2)

inst_44839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3101fffffffffff; valaddr_reg:x3; val_offset:134517*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134517*0 + 3*295*FLEN/8, x4, x1, x2)

inst_44840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3103fffffffffff; valaddr_reg:x3; val_offset:134520*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134520*0 + 3*296*FLEN/8, x4, x1, x2)

inst_44841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x3107fffffffffff; valaddr_reg:x3; val_offset:134523*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134523*0 + 3*297*FLEN/8, x4, x1, x2)

inst_44842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x310ffffffffffff; valaddr_reg:x3; val_offset:134526*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134526*0 + 3*298*FLEN/8, x4, x1, x2)

inst_44843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x311ffffffffffff; valaddr_reg:x3; val_offset:134529*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134529*0 + 3*299*FLEN/8, x4, x1, x2)

inst_44844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x313ffffffffffff; valaddr_reg:x3; val_offset:134532*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134532*0 + 3*300*FLEN/8, x4, x1, x2)

inst_44845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x317ffffffffffff; valaddr_reg:x3; val_offset:134535*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134535*0 + 3*301*FLEN/8, x4, x1, x2)

inst_44846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x318000000000000; valaddr_reg:x3; val_offset:134538*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134538*0 + 3*302*FLEN/8, x4, x1, x2)

inst_44847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31c000000000000; valaddr_reg:x3; val_offset:134541*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134541*0 + 3*303*FLEN/8, x4, x1, x2)

inst_44848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31e000000000000; valaddr_reg:x3; val_offset:134544*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134544*0 + 3*304*FLEN/8, x4, x1, x2)

inst_44849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31f000000000000; valaddr_reg:x3; val_offset:134547*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134547*0 + 3*305*FLEN/8, x4, x1, x2)

inst_44850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31f800000000000; valaddr_reg:x3; val_offset:134550*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134550*0 + 3*306*FLEN/8, x4, x1, x2)

inst_44851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fc00000000000; valaddr_reg:x3; val_offset:134553*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134553*0 + 3*307*FLEN/8, x4, x1, x2)

inst_44852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fe00000000000; valaddr_reg:x3; val_offset:134556*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134556*0 + 3*308*FLEN/8, x4, x1, x2)

inst_44853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ff00000000000; valaddr_reg:x3; val_offset:134559*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134559*0 + 3*309*FLEN/8, x4, x1, x2)

inst_44854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ff80000000000; valaddr_reg:x3; val_offset:134562*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134562*0 + 3*310*FLEN/8, x4, x1, x2)

inst_44855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffc0000000000; valaddr_reg:x3; val_offset:134565*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134565*0 + 3*311*FLEN/8, x4, x1, x2)

inst_44856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffe0000000000; valaddr_reg:x3; val_offset:134568*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134568*0 + 3*312*FLEN/8, x4, x1, x2)

inst_44857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fff0000000000; valaddr_reg:x3; val_offset:134571*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134571*0 + 3*313*FLEN/8, x4, x1, x2)

inst_44858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fff8000000000; valaddr_reg:x3; val_offset:134574*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134574*0 + 3*314*FLEN/8, x4, x1, x2)

inst_44859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffc000000000; valaddr_reg:x3; val_offset:134577*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134577*0 + 3*315*FLEN/8, x4, x1, x2)

inst_44860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffe000000000; valaddr_reg:x3; val_offset:134580*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134580*0 + 3*316*FLEN/8, x4, x1, x2)

inst_44861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffff000000000; valaddr_reg:x3; val_offset:134583*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134583*0 + 3*317*FLEN/8, x4, x1, x2)

inst_44862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffff800000000; valaddr_reg:x3; val_offset:134586*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134586*0 + 3*318*FLEN/8, x4, x1, x2)

inst_44863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffc00000000; valaddr_reg:x3; val_offset:134589*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134589*0 + 3*319*FLEN/8, x4, x1, x2)

inst_44864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffe00000000; valaddr_reg:x3; val_offset:134592*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134592*0 + 3*320*FLEN/8, x4, x1, x2)

inst_44865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffff00000000; valaddr_reg:x3; val_offset:134595*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134595*0 + 3*321*FLEN/8, x4, x1, x2)

inst_44866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffff80000000; valaddr_reg:x3; val_offset:134598*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134598*0 + 3*322*FLEN/8, x4, x1, x2)

inst_44867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffc0000000; valaddr_reg:x3; val_offset:134601*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134601*0 + 3*323*FLEN/8, x4, x1, x2)

inst_44868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffe0000000; valaddr_reg:x3; val_offset:134604*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134604*0 + 3*324*FLEN/8, x4, x1, x2)

inst_44869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffff0000000; valaddr_reg:x3; val_offset:134607*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134607*0 + 3*325*FLEN/8, x4, x1, x2)

inst_44870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffff8000000; valaddr_reg:x3; val_offset:134610*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134610*0 + 3*326*FLEN/8, x4, x1, x2)

inst_44871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffc000000; valaddr_reg:x3; val_offset:134613*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134613*0 + 3*327*FLEN/8, x4, x1, x2)

inst_44872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffe000000; valaddr_reg:x3; val_offset:134616*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134616*0 + 3*328*FLEN/8, x4, x1, x2)

inst_44873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffff000000; valaddr_reg:x3; val_offset:134619*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134619*0 + 3*329*FLEN/8, x4, x1, x2)

inst_44874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffff800000; valaddr_reg:x3; val_offset:134622*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134622*0 + 3*330*FLEN/8, x4, x1, x2)

inst_44875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffffc00000; valaddr_reg:x3; val_offset:134625*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134625*0 + 3*331*FLEN/8, x4, x1, x2)

inst_44876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffffe00000; valaddr_reg:x3; val_offset:134628*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134628*0 + 3*332*FLEN/8, x4, x1, x2)

inst_44877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffff00000; valaddr_reg:x3; val_offset:134631*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134631*0 + 3*333*FLEN/8, x4, x1, x2)

inst_44878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffff80000; valaddr_reg:x3; val_offset:134634*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134634*0 + 3*334*FLEN/8, x4, x1, x2)

inst_44879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffffc0000; valaddr_reg:x3; val_offset:134637*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134637*0 + 3*335*FLEN/8, x4, x1, x2)

inst_44880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffffe0000; valaddr_reg:x3; val_offset:134640*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134640*0 + 3*336*FLEN/8, x4, x1, x2)

inst_44881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffffff0000; valaddr_reg:x3; val_offset:134643*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134643*0 + 3*337*FLEN/8, x4, x1, x2)

inst_44882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffffff8000; valaddr_reg:x3; val_offset:134646*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134646*0 + 3*338*FLEN/8, x4, x1, x2)

inst_44883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffffffc000; valaddr_reg:x3; val_offset:134649*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134649*0 + 3*339*FLEN/8, x4, x1, x2)

inst_44884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffffffe000; valaddr_reg:x3; val_offset:134652*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134652*0 + 3*340*FLEN/8, x4, x1, x2)

inst_44885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffffff000; valaddr_reg:x3; val_offset:134655*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134655*0 + 3*341*FLEN/8, x4, x1, x2)

inst_44886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffffff800; valaddr_reg:x3; val_offset:134658*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134658*0 + 3*342*FLEN/8, x4, x1, x2)

inst_44887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffffffc00; valaddr_reg:x3; val_offset:134661*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134661*0 + 3*343*FLEN/8, x4, x1, x2)

inst_44888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffffffe00; valaddr_reg:x3; val_offset:134664*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134664*0 + 3*344*FLEN/8, x4, x1, x2)

inst_44889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffffffff00; valaddr_reg:x3; val_offset:134667*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134667*0 + 3*345*FLEN/8, x4, x1, x2)

inst_44890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffffffff80; valaddr_reg:x3; val_offset:134670*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134670*0 + 3*346*FLEN/8, x4, x1, x2)

inst_44891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffffffffc0; valaddr_reg:x3; val_offset:134673*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134673*0 + 3*347*FLEN/8, x4, x1, x2)

inst_44892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffffffffe0; valaddr_reg:x3; val_offset:134676*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134676*0 + 3*348*FLEN/8, x4, x1, x2)

inst_44893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffffffff0; valaddr_reg:x3; val_offset:134679*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134679*0 + 3*349*FLEN/8, x4, x1, x2)

inst_44894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffffffff8; valaddr_reg:x3; val_offset:134682*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134682*0 + 3*350*FLEN/8, x4, x1, x2)

inst_44895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffffffffc; valaddr_reg:x3; val_offset:134685*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134685*0 + 3*351*FLEN/8, x4, x1, x2)

inst_44896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31ffffffffffffe; valaddr_reg:x3; val_offset:134688*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134688*0 + 3*352*FLEN/8, x4, x1, x2)

inst_44897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb602ac571ac13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b602ac571ac13; op2val:0x0;
op3val:0x31fffffffffffff; valaddr_reg:x3; val_offset:134691*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134691*0 + 3*353*FLEN/8, x4, x1, x2)

inst_44898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:134694*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134694*0 + 3*354*FLEN/8, x4, x1, x2)

inst_44899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:134697*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134697*0 + 3*355*FLEN/8, x4, x1, x2)

inst_44900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:134700*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134700*0 + 3*356*FLEN/8, x4, x1, x2)

inst_44901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:134703*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134703*0 + 3*357*FLEN/8, x4, x1, x2)

inst_44902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:134706*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134706*0 + 3*358*FLEN/8, x4, x1, x2)

inst_44903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:134709*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134709*0 + 3*359*FLEN/8, x4, x1, x2)

inst_44904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:134712*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134712*0 + 3*360*FLEN/8, x4, x1, x2)

inst_44905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:134715*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134715*0 + 3*361*FLEN/8, x4, x1, x2)

inst_44906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:134718*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134718*0 + 3*362*FLEN/8, x4, x1, x2)

inst_44907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:134721*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134721*0 + 3*363*FLEN/8, x4, x1, x2)

inst_44908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:134724*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134724*0 + 3*364*FLEN/8, x4, x1, x2)

inst_44909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:134727*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134727*0 + 3*365*FLEN/8, x4, x1, x2)

inst_44910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:134730*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134730*0 + 3*366*FLEN/8, x4, x1, x2)

inst_44911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:134733*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134733*0 + 3*367*FLEN/8, x4, x1, x2)

inst_44912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:134736*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134736*0 + 3*368*FLEN/8, x4, x1, x2)

inst_44913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:134739*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134739*0 + 3*369*FLEN/8, x4, x1, x2)

inst_44914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:134742*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134742*0 + 3*370*FLEN/8, x4, x1, x2)

inst_44915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:134745*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134745*0 + 3*371*FLEN/8, x4, x1, x2)

inst_44916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:134748*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134748*0 + 3*372*FLEN/8, x4, x1, x2)

inst_44917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:134751*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134751*0 + 3*373*FLEN/8, x4, x1, x2)

inst_44918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:134754*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134754*0 + 3*374*FLEN/8, x4, x1, x2)

inst_44919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:134757*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134757*0 + 3*375*FLEN/8, x4, x1, x2)

inst_44920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000000000000; valaddr_reg:x3; val_offset:134760*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134760*0 + 3*376*FLEN/8, x4, x1, x2)

inst_44921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000000000001; valaddr_reg:x3; val_offset:134763*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134763*0 + 3*377*FLEN/8, x4, x1, x2)

inst_44922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000000000003; valaddr_reg:x3; val_offset:134766*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134766*0 + 3*378*FLEN/8, x4, x1, x2)

inst_44923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000000000007; valaddr_reg:x3; val_offset:134769*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134769*0 + 3*379*FLEN/8, x4, x1, x2)

inst_44924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000000000000f; valaddr_reg:x3; val_offset:134772*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134772*0 + 3*380*FLEN/8, x4, x1, x2)

inst_44925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000000000001f; valaddr_reg:x3; val_offset:134775*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134775*0 + 3*381*FLEN/8, x4, x1, x2)

inst_44926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000000000003f; valaddr_reg:x3; val_offset:134778*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134778*0 + 3*382*FLEN/8, x4, x1, x2)

inst_44927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000000000007f; valaddr_reg:x3; val_offset:134781*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134781*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_44928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600000000000ff; valaddr_reg:x3; val_offset:134784*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134784*0 + 3*384*FLEN/8, x4, x1, x2)

inst_44929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600000000001ff; valaddr_reg:x3; val_offset:134787*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134787*0 + 3*385*FLEN/8, x4, x1, x2)

inst_44930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600000000003ff; valaddr_reg:x3; val_offset:134790*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134790*0 + 3*386*FLEN/8, x4, x1, x2)

inst_44931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600000000007ff; valaddr_reg:x3; val_offset:134793*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134793*0 + 3*387*FLEN/8, x4, x1, x2)

inst_44932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000000000fff; valaddr_reg:x3; val_offset:134796*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134796*0 + 3*388*FLEN/8, x4, x1, x2)

inst_44933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000000001fff; valaddr_reg:x3; val_offset:134799*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134799*0 + 3*389*FLEN/8, x4, x1, x2)

inst_44934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000000003fff; valaddr_reg:x3; val_offset:134802*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134802*0 + 3*390*FLEN/8, x4, x1, x2)

inst_44935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000000007fff; valaddr_reg:x3; val_offset:134805*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134805*0 + 3*391*FLEN/8, x4, x1, x2)

inst_44936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000000000ffff; valaddr_reg:x3; val_offset:134808*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134808*0 + 3*392*FLEN/8, x4, x1, x2)

inst_44937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000000001ffff; valaddr_reg:x3; val_offset:134811*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134811*0 + 3*393*FLEN/8, x4, x1, x2)

inst_44938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000000003ffff; valaddr_reg:x3; val_offset:134814*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134814*0 + 3*394*FLEN/8, x4, x1, x2)

inst_44939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000000007ffff; valaddr_reg:x3; val_offset:134817*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134817*0 + 3*395*FLEN/8, x4, x1, x2)

inst_44940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600000000fffff; valaddr_reg:x3; val_offset:134820*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134820*0 + 3*396*FLEN/8, x4, x1, x2)

inst_44941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600000001fffff; valaddr_reg:x3; val_offset:134823*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134823*0 + 3*397*FLEN/8, x4, x1, x2)

inst_44942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600000003fffff; valaddr_reg:x3; val_offset:134826*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134826*0 + 3*398*FLEN/8, x4, x1, x2)

inst_44943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600000007fffff; valaddr_reg:x3; val_offset:134829*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134829*0 + 3*399*FLEN/8, x4, x1, x2)

inst_44944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000000ffffff; valaddr_reg:x3; val_offset:134832*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134832*0 + 3*400*FLEN/8, x4, x1, x2)

inst_44945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000001ffffff; valaddr_reg:x3; val_offset:134835*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134835*0 + 3*401*FLEN/8, x4, x1, x2)

inst_44946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000003ffffff; valaddr_reg:x3; val_offset:134838*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134838*0 + 3*402*FLEN/8, x4, x1, x2)

inst_44947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000007ffffff; valaddr_reg:x3; val_offset:134841*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134841*0 + 3*403*FLEN/8, x4, x1, x2)

inst_44948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000000fffffff; valaddr_reg:x3; val_offset:134844*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134844*0 + 3*404*FLEN/8, x4, x1, x2)

inst_44949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000001fffffff; valaddr_reg:x3; val_offset:134847*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134847*0 + 3*405*FLEN/8, x4, x1, x2)

inst_44950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000003fffffff; valaddr_reg:x3; val_offset:134850*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134850*0 + 3*406*FLEN/8, x4, x1, x2)

inst_44951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000007fffffff; valaddr_reg:x3; val_offset:134853*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134853*0 + 3*407*FLEN/8, x4, x1, x2)

inst_44952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600000ffffffff; valaddr_reg:x3; val_offset:134856*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134856*0 + 3*408*FLEN/8, x4, x1, x2)

inst_44953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600001ffffffff; valaddr_reg:x3; val_offset:134859*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134859*0 + 3*409*FLEN/8, x4, x1, x2)

inst_44954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600003ffffffff; valaddr_reg:x3; val_offset:134862*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134862*0 + 3*410*FLEN/8, x4, x1, x2)

inst_44955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600007ffffffff; valaddr_reg:x3; val_offset:134865*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134865*0 + 3*411*FLEN/8, x4, x1, x2)

inst_44956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260000fffffffff; valaddr_reg:x3; val_offset:134868*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134868*0 + 3*412*FLEN/8, x4, x1, x2)

inst_44957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260001fffffffff; valaddr_reg:x3; val_offset:134871*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134871*0 + 3*413*FLEN/8, x4, x1, x2)

inst_44958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260003fffffffff; valaddr_reg:x3; val_offset:134874*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134874*0 + 3*414*FLEN/8, x4, x1, x2)

inst_44959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260007fffffffff; valaddr_reg:x3; val_offset:134877*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134877*0 + 3*415*FLEN/8, x4, x1, x2)

inst_44960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26000ffffffffff; valaddr_reg:x3; val_offset:134880*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134880*0 + 3*416*FLEN/8, x4, x1, x2)

inst_44961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26001ffffffffff; valaddr_reg:x3; val_offset:134883*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134883*0 + 3*417*FLEN/8, x4, x1, x2)

inst_44962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26003ffffffffff; valaddr_reg:x3; val_offset:134886*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134886*0 + 3*418*FLEN/8, x4, x1, x2)

inst_44963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26007ffffffffff; valaddr_reg:x3; val_offset:134889*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134889*0 + 3*419*FLEN/8, x4, x1, x2)

inst_44964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2600fffffffffff; valaddr_reg:x3; val_offset:134892*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134892*0 + 3*420*FLEN/8, x4, x1, x2)

inst_44965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2601fffffffffff; valaddr_reg:x3; val_offset:134895*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134895*0 + 3*421*FLEN/8, x4, x1, x2)

inst_44966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2603fffffffffff; valaddr_reg:x3; val_offset:134898*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134898*0 + 3*422*FLEN/8, x4, x1, x2)

inst_44967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x2607fffffffffff; valaddr_reg:x3; val_offset:134901*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134901*0 + 3*423*FLEN/8, x4, x1, x2)

inst_44968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x260ffffffffffff; valaddr_reg:x3; val_offset:134904*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134904*0 + 3*424*FLEN/8, x4, x1, x2)

inst_44969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x261ffffffffffff; valaddr_reg:x3; val_offset:134907*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134907*0 + 3*425*FLEN/8, x4, x1, x2)

inst_44970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x263ffffffffffff; valaddr_reg:x3; val_offset:134910*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134910*0 + 3*426*FLEN/8, x4, x1, x2)

inst_44971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x267ffffffffffff; valaddr_reg:x3; val_offset:134913*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134913*0 + 3*427*FLEN/8, x4, x1, x2)

inst_44972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x268000000000000; valaddr_reg:x3; val_offset:134916*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134916*0 + 3*428*FLEN/8, x4, x1, x2)

inst_44973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26c000000000000; valaddr_reg:x3; val_offset:134919*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134919*0 + 3*429*FLEN/8, x4, x1, x2)

inst_44974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26e000000000000; valaddr_reg:x3; val_offset:134922*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134922*0 + 3*430*FLEN/8, x4, x1, x2)

inst_44975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26f000000000000; valaddr_reg:x3; val_offset:134925*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134925*0 + 3*431*FLEN/8, x4, x1, x2)

inst_44976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26f800000000000; valaddr_reg:x3; val_offset:134928*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134928*0 + 3*432*FLEN/8, x4, x1, x2)

inst_44977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fc00000000000; valaddr_reg:x3; val_offset:134931*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134931*0 + 3*433*FLEN/8, x4, x1, x2)

inst_44978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fe00000000000; valaddr_reg:x3; val_offset:134934*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134934*0 + 3*434*FLEN/8, x4, x1, x2)

inst_44979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ff00000000000; valaddr_reg:x3; val_offset:134937*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134937*0 + 3*435*FLEN/8, x4, x1, x2)

inst_44980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ff80000000000; valaddr_reg:x3; val_offset:134940*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134940*0 + 3*436*FLEN/8, x4, x1, x2)

inst_44981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffc0000000000; valaddr_reg:x3; val_offset:134943*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134943*0 + 3*437*FLEN/8, x4, x1, x2)

inst_44982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffe0000000000; valaddr_reg:x3; val_offset:134946*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134946*0 + 3*438*FLEN/8, x4, x1, x2)

inst_44983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fff0000000000; valaddr_reg:x3; val_offset:134949*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134949*0 + 3*439*FLEN/8, x4, x1, x2)

inst_44984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fff8000000000; valaddr_reg:x3; val_offset:134952*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134952*0 + 3*440*FLEN/8, x4, x1, x2)

inst_44985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffc000000000; valaddr_reg:x3; val_offset:134955*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134955*0 + 3*441*FLEN/8, x4, x1, x2)

inst_44986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffe000000000; valaddr_reg:x3; val_offset:134958*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134958*0 + 3*442*FLEN/8, x4, x1, x2)

inst_44987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffff000000000; valaddr_reg:x3; val_offset:134961*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134961*0 + 3*443*FLEN/8, x4, x1, x2)

inst_44988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffff800000000; valaddr_reg:x3; val_offset:134964*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134964*0 + 3*444*FLEN/8, x4, x1, x2)

inst_44989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffc00000000; valaddr_reg:x3; val_offset:134967*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134967*0 + 3*445*FLEN/8, x4, x1, x2)

inst_44990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffe00000000; valaddr_reg:x3; val_offset:134970*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134970*0 + 3*446*FLEN/8, x4, x1, x2)

inst_44991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffff00000000; valaddr_reg:x3; val_offset:134973*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134973*0 + 3*447*FLEN/8, x4, x1, x2)

inst_44992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffff80000000; valaddr_reg:x3; val_offset:134976*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134976*0 + 3*448*FLEN/8, x4, x1, x2)

inst_44993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffc0000000; valaddr_reg:x3; val_offset:134979*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134979*0 + 3*449*FLEN/8, x4, x1, x2)

inst_44994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffe0000000; valaddr_reg:x3; val_offset:134982*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134982*0 + 3*450*FLEN/8, x4, x1, x2)

inst_44995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffff0000000; valaddr_reg:x3; val_offset:134985*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134985*0 + 3*451*FLEN/8, x4, x1, x2)

inst_44996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffff8000000; valaddr_reg:x3; val_offset:134988*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134988*0 + 3*452*FLEN/8, x4, x1, x2)

inst_44997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffc000000; valaddr_reg:x3; val_offset:134991*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134991*0 + 3*453*FLEN/8, x4, x1, x2)

inst_44998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffe000000; valaddr_reg:x3; val_offset:134994*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134994*0 + 3*454*FLEN/8, x4, x1, x2)

inst_44999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffff000000; valaddr_reg:x3; val_offset:134997*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 134997*0 + 3*455*FLEN/8, x4, x1, x2)

inst_45000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffff800000; valaddr_reg:x3; val_offset:135000*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135000*0 + 3*456*FLEN/8, x4, x1, x2)

inst_45001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffffc00000; valaddr_reg:x3; val_offset:135003*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135003*0 + 3*457*FLEN/8, x4, x1, x2)

inst_45002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffffe00000; valaddr_reg:x3; val_offset:135006*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135006*0 + 3*458*FLEN/8, x4, x1, x2)

inst_45003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffff00000; valaddr_reg:x3; val_offset:135009*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135009*0 + 3*459*FLEN/8, x4, x1, x2)

inst_45004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffff80000; valaddr_reg:x3; val_offset:135012*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135012*0 + 3*460*FLEN/8, x4, x1, x2)

inst_45005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffffc0000; valaddr_reg:x3; val_offset:135015*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135015*0 + 3*461*FLEN/8, x4, x1, x2)

inst_45006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffffe0000; valaddr_reg:x3; val_offset:135018*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135018*0 + 3*462*FLEN/8, x4, x1, x2)

inst_45007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffffff0000; valaddr_reg:x3; val_offset:135021*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135021*0 + 3*463*FLEN/8, x4, x1, x2)

inst_45008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffffff8000; valaddr_reg:x3; val_offset:135024*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135024*0 + 3*464*FLEN/8, x4, x1, x2)

inst_45009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffffffc000; valaddr_reg:x3; val_offset:135027*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135027*0 + 3*465*FLEN/8, x4, x1, x2)

inst_45010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffffffe000; valaddr_reg:x3; val_offset:135030*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135030*0 + 3*466*FLEN/8, x4, x1, x2)

inst_45011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffffff000; valaddr_reg:x3; val_offset:135033*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135033*0 + 3*467*FLEN/8, x4, x1, x2)

inst_45012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffffff800; valaddr_reg:x3; val_offset:135036*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135036*0 + 3*468*FLEN/8, x4, x1, x2)

inst_45013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffffffc00; valaddr_reg:x3; val_offset:135039*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135039*0 + 3*469*FLEN/8, x4, x1, x2)

inst_45014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffffffe00; valaddr_reg:x3; val_offset:135042*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135042*0 + 3*470*FLEN/8, x4, x1, x2)

inst_45015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffffffff00; valaddr_reg:x3; val_offset:135045*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135045*0 + 3*471*FLEN/8, x4, x1, x2)

inst_45016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffffffff80; valaddr_reg:x3; val_offset:135048*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135048*0 + 3*472*FLEN/8, x4, x1, x2)

inst_45017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffffffffc0; valaddr_reg:x3; val_offset:135051*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135051*0 + 3*473*FLEN/8, x4, x1, x2)

inst_45018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffffffffe0; valaddr_reg:x3; val_offset:135054*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135054*0 + 3*474*FLEN/8, x4, x1, x2)

inst_45019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffffffff0; valaddr_reg:x3; val_offset:135057*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135057*0 + 3*475*FLEN/8, x4, x1, x2)

inst_45020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffffffff8; valaddr_reg:x3; val_offset:135060*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135060*0 + 3*476*FLEN/8, x4, x1, x2)

inst_45021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffffffffc; valaddr_reg:x3; val_offset:135063*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135063*0 + 3*477*FLEN/8, x4, x1, x2)

inst_45022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26ffffffffffffe; valaddr_reg:x3; val_offset:135066*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135066*0 + 3*478*FLEN/8, x4, x1, x2)

inst_45023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8f0634a5ce6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b8f0634a5ce6b; op2val:0x0;
op3val:0x26fffffffffffff; valaddr_reg:x3; val_offset:135069*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135069*0 + 3*479*FLEN/8, x4, x1, x2)

inst_45024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000000000000; valaddr_reg:x3; val_offset:135072*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135072*0 + 3*480*FLEN/8, x4, x1, x2)

inst_45025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000000000001; valaddr_reg:x3; val_offset:135075*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135075*0 + 3*481*FLEN/8, x4, x1, x2)

inst_45026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000000000003; valaddr_reg:x3; val_offset:135078*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135078*0 + 3*482*FLEN/8, x4, x1, x2)

inst_45027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000000000007; valaddr_reg:x3; val_offset:135081*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135081*0 + 3*483*FLEN/8, x4, x1, x2)

inst_45028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000000000000f; valaddr_reg:x3; val_offset:135084*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135084*0 + 3*484*FLEN/8, x4, x1, x2)

inst_45029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000000000001f; valaddr_reg:x3; val_offset:135087*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135087*0 + 3*485*FLEN/8, x4, x1, x2)

inst_45030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000000000003f; valaddr_reg:x3; val_offset:135090*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135090*0 + 3*486*FLEN/8, x4, x1, x2)

inst_45031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000000000007f; valaddr_reg:x3; val_offset:135093*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135093*0 + 3*487*FLEN/8, x4, x1, x2)

inst_45032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00000000000ff; valaddr_reg:x3; val_offset:135096*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135096*0 + 3*488*FLEN/8, x4, x1, x2)

inst_45033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00000000001ff; valaddr_reg:x3; val_offset:135099*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135099*0 + 3*489*FLEN/8, x4, x1, x2)

inst_45034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00000000003ff; valaddr_reg:x3; val_offset:135102*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135102*0 + 3*490*FLEN/8, x4, x1, x2)

inst_45035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00000000007ff; valaddr_reg:x3; val_offset:135105*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135105*0 + 3*491*FLEN/8, x4, x1, x2)

inst_45036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000000000fff; valaddr_reg:x3; val_offset:135108*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135108*0 + 3*492*FLEN/8, x4, x1, x2)

inst_45037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000000001fff; valaddr_reg:x3; val_offset:135111*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135111*0 + 3*493*FLEN/8, x4, x1, x2)

inst_45038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000000003fff; valaddr_reg:x3; val_offset:135114*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135114*0 + 3*494*FLEN/8, x4, x1, x2)

inst_45039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000000007fff; valaddr_reg:x3; val_offset:135117*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135117*0 + 3*495*FLEN/8, x4, x1, x2)

inst_45040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000000000ffff; valaddr_reg:x3; val_offset:135120*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135120*0 + 3*496*FLEN/8, x4, x1, x2)

inst_45041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000000001ffff; valaddr_reg:x3; val_offset:135123*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135123*0 + 3*497*FLEN/8, x4, x1, x2)

inst_45042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000000003ffff; valaddr_reg:x3; val_offset:135126*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135126*0 + 3*498*FLEN/8, x4, x1, x2)

inst_45043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000000007ffff; valaddr_reg:x3; val_offset:135129*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135129*0 + 3*499*FLEN/8, x4, x1, x2)

inst_45044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00000000fffff; valaddr_reg:x3; val_offset:135132*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135132*0 + 3*500*FLEN/8, x4, x1, x2)

inst_45045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00000001fffff; valaddr_reg:x3; val_offset:135135*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135135*0 + 3*501*FLEN/8, x4, x1, x2)

inst_45046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00000003fffff; valaddr_reg:x3; val_offset:135138*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135138*0 + 3*502*FLEN/8, x4, x1, x2)

inst_45047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00000007fffff; valaddr_reg:x3; val_offset:135141*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135141*0 + 3*503*FLEN/8, x4, x1, x2)

inst_45048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000000ffffff; valaddr_reg:x3; val_offset:135144*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135144*0 + 3*504*FLEN/8, x4, x1, x2)

inst_45049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000001ffffff; valaddr_reg:x3; val_offset:135147*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135147*0 + 3*505*FLEN/8, x4, x1, x2)

inst_45050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000003ffffff; valaddr_reg:x3; val_offset:135150*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135150*0 + 3*506*FLEN/8, x4, x1, x2)

inst_45051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000007ffffff; valaddr_reg:x3; val_offset:135153*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135153*0 + 3*507*FLEN/8, x4, x1, x2)

inst_45052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000000fffffff; valaddr_reg:x3; val_offset:135156*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135156*0 + 3*508*FLEN/8, x4, x1, x2)

inst_45053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000001fffffff; valaddr_reg:x3; val_offset:135159*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135159*0 + 3*509*FLEN/8, x4, x1, x2)

inst_45054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000003fffffff; valaddr_reg:x3; val_offset:135162*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135162*0 + 3*510*FLEN/8, x4, x1, x2)

inst_45055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000007fffffff; valaddr_reg:x3; val_offset:135165*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135165*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_45056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00000ffffffff; valaddr_reg:x3; val_offset:135168*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135168*0 + 3*512*FLEN/8, x4, x1, x2)

inst_45057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00001ffffffff; valaddr_reg:x3; val_offset:135171*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135171*0 + 3*513*FLEN/8, x4, x1, x2)

inst_45058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00003ffffffff; valaddr_reg:x3; val_offset:135174*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135174*0 + 3*514*FLEN/8, x4, x1, x2)

inst_45059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00007ffffffff; valaddr_reg:x3; val_offset:135177*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135177*0 + 3*515*FLEN/8, x4, x1, x2)

inst_45060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0000fffffffff; valaddr_reg:x3; val_offset:135180*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135180*0 + 3*516*FLEN/8, x4, x1, x2)

inst_45061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0001fffffffff; valaddr_reg:x3; val_offset:135183*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135183*0 + 3*517*FLEN/8, x4, x1, x2)

inst_45062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0003fffffffff; valaddr_reg:x3; val_offset:135186*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135186*0 + 3*518*FLEN/8, x4, x1, x2)

inst_45063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0007fffffffff; valaddr_reg:x3; val_offset:135189*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135189*0 + 3*519*FLEN/8, x4, x1, x2)

inst_45064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac000ffffffffff; valaddr_reg:x3; val_offset:135192*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135192*0 + 3*520*FLEN/8, x4, x1, x2)

inst_45065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac001ffffffffff; valaddr_reg:x3; val_offset:135195*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135195*0 + 3*521*FLEN/8, x4, x1, x2)

inst_45066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac003ffffffffff; valaddr_reg:x3; val_offset:135198*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135198*0 + 3*522*FLEN/8, x4, x1, x2)

inst_45067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac007ffffffffff; valaddr_reg:x3; val_offset:135201*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135201*0 + 3*523*FLEN/8, x4, x1, x2)

inst_45068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac00fffffffffff; valaddr_reg:x3; val_offset:135204*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135204*0 + 3*524*FLEN/8, x4, x1, x2)

inst_45069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac01fffffffffff; valaddr_reg:x3; val_offset:135207*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135207*0 + 3*525*FLEN/8, x4, x1, x2)

inst_45070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac03fffffffffff; valaddr_reg:x3; val_offset:135210*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135210*0 + 3*526*FLEN/8, x4, x1, x2)

inst_45071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac07fffffffffff; valaddr_reg:x3; val_offset:135213*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135213*0 + 3*527*FLEN/8, x4, x1, x2)

inst_45072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac0ffffffffffff; valaddr_reg:x3; val_offset:135216*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135216*0 + 3*528*FLEN/8, x4, x1, x2)

inst_45073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac1ffffffffffff; valaddr_reg:x3; val_offset:135219*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135219*0 + 3*529*FLEN/8, x4, x1, x2)

inst_45074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac3ffffffffffff; valaddr_reg:x3; val_offset:135222*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135222*0 + 3*530*FLEN/8, x4, x1, x2)

inst_45075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac7ffffffffffff; valaddr_reg:x3; val_offset:135225*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135225*0 + 3*531*FLEN/8, x4, x1, x2)

inst_45076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbac8000000000000; valaddr_reg:x3; val_offset:135228*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135228*0 + 3*532*FLEN/8, x4, x1, x2)

inst_45077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacc000000000000; valaddr_reg:x3; val_offset:135231*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135231*0 + 3*533*FLEN/8, x4, x1, x2)

inst_45078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbace000000000000; valaddr_reg:x3; val_offset:135234*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135234*0 + 3*534*FLEN/8, x4, x1, x2)

inst_45079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacf000000000000; valaddr_reg:x3; val_offset:135237*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135237*0 + 3*535*FLEN/8, x4, x1, x2)

inst_45080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacf800000000000; valaddr_reg:x3; val_offset:135240*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135240*0 + 3*536*FLEN/8, x4, x1, x2)

inst_45081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfc00000000000; valaddr_reg:x3; val_offset:135243*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135243*0 + 3*537*FLEN/8, x4, x1, x2)

inst_45082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfe00000000000; valaddr_reg:x3; val_offset:135246*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135246*0 + 3*538*FLEN/8, x4, x1, x2)

inst_45083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacff00000000000; valaddr_reg:x3; val_offset:135249*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135249*0 + 3*539*FLEN/8, x4, x1, x2)

inst_45084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacff80000000000; valaddr_reg:x3; val_offset:135252*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135252*0 + 3*540*FLEN/8, x4, x1, x2)

inst_45085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffc0000000000; valaddr_reg:x3; val_offset:135255*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135255*0 + 3*541*FLEN/8, x4, x1, x2)

inst_45086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffe0000000000; valaddr_reg:x3; val_offset:135258*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135258*0 + 3*542*FLEN/8, x4, x1, x2)

inst_45087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfff0000000000; valaddr_reg:x3; val_offset:135261*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135261*0 + 3*543*FLEN/8, x4, x1, x2)

inst_45088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfff8000000000; valaddr_reg:x3; val_offset:135264*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135264*0 + 3*544*FLEN/8, x4, x1, x2)

inst_45089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffc000000000; valaddr_reg:x3; val_offset:135267*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135267*0 + 3*545*FLEN/8, x4, x1, x2)

inst_45090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffe000000000; valaddr_reg:x3; val_offset:135270*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135270*0 + 3*546*FLEN/8, x4, x1, x2)

inst_45091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffff000000000; valaddr_reg:x3; val_offset:135273*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135273*0 + 3*547*FLEN/8, x4, x1, x2)

inst_45092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffff800000000; valaddr_reg:x3; val_offset:135276*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135276*0 + 3*548*FLEN/8, x4, x1, x2)

inst_45093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffc00000000; valaddr_reg:x3; val_offset:135279*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135279*0 + 3*549*FLEN/8, x4, x1, x2)

inst_45094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffe00000000; valaddr_reg:x3; val_offset:135282*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135282*0 + 3*550*FLEN/8, x4, x1, x2)

inst_45095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffff00000000; valaddr_reg:x3; val_offset:135285*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135285*0 + 3*551*FLEN/8, x4, x1, x2)

inst_45096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffff80000000; valaddr_reg:x3; val_offset:135288*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135288*0 + 3*552*FLEN/8, x4, x1, x2)

inst_45097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffc0000000; valaddr_reg:x3; val_offset:135291*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135291*0 + 3*553*FLEN/8, x4, x1, x2)

inst_45098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffe0000000; valaddr_reg:x3; val_offset:135294*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135294*0 + 3*554*FLEN/8, x4, x1, x2)

inst_45099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffff0000000; valaddr_reg:x3; val_offset:135297*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135297*0 + 3*555*FLEN/8, x4, x1, x2)

inst_45100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffff8000000; valaddr_reg:x3; val_offset:135300*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135300*0 + 3*556*FLEN/8, x4, x1, x2)

inst_45101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffc000000; valaddr_reg:x3; val_offset:135303*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135303*0 + 3*557*FLEN/8, x4, x1, x2)

inst_45102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffe000000; valaddr_reg:x3; val_offset:135306*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135306*0 + 3*558*FLEN/8, x4, x1, x2)

inst_45103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffff000000; valaddr_reg:x3; val_offset:135309*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135309*0 + 3*559*FLEN/8, x4, x1, x2)

inst_45104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffff800000; valaddr_reg:x3; val_offset:135312*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135312*0 + 3*560*FLEN/8, x4, x1, x2)

inst_45105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffffc00000; valaddr_reg:x3; val_offset:135315*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135315*0 + 3*561*FLEN/8, x4, x1, x2)

inst_45106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffffe00000; valaddr_reg:x3; val_offset:135318*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135318*0 + 3*562*FLEN/8, x4, x1, x2)

inst_45107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffff00000; valaddr_reg:x3; val_offset:135321*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135321*0 + 3*563*FLEN/8, x4, x1, x2)

inst_45108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffff80000; valaddr_reg:x3; val_offset:135324*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135324*0 + 3*564*FLEN/8, x4, x1, x2)

inst_45109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffffc0000; valaddr_reg:x3; val_offset:135327*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135327*0 + 3*565*FLEN/8, x4, x1, x2)

inst_45110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffffe0000; valaddr_reg:x3; val_offset:135330*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135330*0 + 3*566*FLEN/8, x4, x1, x2)

inst_45111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffffff0000; valaddr_reg:x3; val_offset:135333*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135333*0 + 3*567*FLEN/8, x4, x1, x2)

inst_45112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffffff8000; valaddr_reg:x3; val_offset:135336*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135336*0 + 3*568*FLEN/8, x4, x1, x2)

inst_45113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffffffc000; valaddr_reg:x3; val_offset:135339*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135339*0 + 3*569*FLEN/8, x4, x1, x2)

inst_45114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffffffe000; valaddr_reg:x3; val_offset:135342*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135342*0 + 3*570*FLEN/8, x4, x1, x2)

inst_45115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffffff000; valaddr_reg:x3; val_offset:135345*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135345*0 + 3*571*FLEN/8, x4, x1, x2)

inst_45116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffffff800; valaddr_reg:x3; val_offset:135348*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135348*0 + 3*572*FLEN/8, x4, x1, x2)

inst_45117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffffffc00; valaddr_reg:x3; val_offset:135351*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135351*0 + 3*573*FLEN/8, x4, x1, x2)

inst_45118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffffffe00; valaddr_reg:x3; val_offset:135354*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135354*0 + 3*574*FLEN/8, x4, x1, x2)

inst_45119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffffffff00; valaddr_reg:x3; val_offset:135357*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135357*0 + 3*575*FLEN/8, x4, x1, x2)

inst_45120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffffffff80; valaddr_reg:x3; val_offset:135360*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135360*0 + 3*576*FLEN/8, x4, x1, x2)

inst_45121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffffffffc0; valaddr_reg:x3; val_offset:135363*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135363*0 + 3*577*FLEN/8, x4, x1, x2)

inst_45122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffffffffe0; valaddr_reg:x3; val_offset:135366*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135366*0 + 3*578*FLEN/8, x4, x1, x2)

inst_45123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffffffff0; valaddr_reg:x3; val_offset:135369*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135369*0 + 3*579*FLEN/8, x4, x1, x2)

inst_45124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffffffff8; valaddr_reg:x3; val_offset:135372*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135372*0 + 3*580*FLEN/8, x4, x1, x2)

inst_45125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffffffffc; valaddr_reg:x3; val_offset:135375*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135375*0 + 3*581*FLEN/8, x4, x1, x2)

inst_45126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacffffffffffffe; valaddr_reg:x3; val_offset:135378*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135378*0 + 3*582*FLEN/8, x4, x1, x2)

inst_45127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3ac and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbacfffffffffffff; valaddr_reg:x3; val_offset:135381*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135381*0 + 3*583*FLEN/8, x4, x1, x2)

inst_45128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:135384*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135384*0 + 3*584*FLEN/8, x4, x1, x2)

inst_45129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:135387*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135387*0 + 3*585*FLEN/8, x4, x1, x2)

inst_45130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:135390*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135390*0 + 3*586*FLEN/8, x4, x1, x2)

inst_45131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:135393*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135393*0 + 3*587*FLEN/8, x4, x1, x2)

inst_45132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:135396*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135396*0 + 3*588*FLEN/8, x4, x1, x2)

inst_45133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:135399*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135399*0 + 3*589*FLEN/8, x4, x1, x2)

inst_45134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:135402*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135402*0 + 3*590*FLEN/8, x4, x1, x2)

inst_45135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:135405*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135405*0 + 3*591*FLEN/8, x4, x1, x2)

inst_45136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:135408*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135408*0 + 3*592*FLEN/8, x4, x1, x2)

inst_45137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:135411*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135411*0 + 3*593*FLEN/8, x4, x1, x2)

inst_45138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:135414*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135414*0 + 3*594*FLEN/8, x4, x1, x2)

inst_45139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:135417*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135417*0 + 3*595*FLEN/8, x4, x1, x2)

inst_45140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:135420*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135420*0 + 3*596*FLEN/8, x4, x1, x2)

inst_45141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:135423*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135423*0 + 3*597*FLEN/8, x4, x1, x2)

inst_45142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:135426*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135426*0 + 3*598*FLEN/8, x4, x1, x2)

inst_45143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:135429*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135429*0 + 3*599*FLEN/8, x4, x1, x2)

inst_45144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:135432*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135432*0 + 3*600*FLEN/8, x4, x1, x2)

inst_45145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:135435*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135435*0 + 3*601*FLEN/8, x4, x1, x2)

inst_45146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:135438*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135438*0 + 3*602*FLEN/8, x4, x1, x2)

inst_45147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:135441*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135441*0 + 3*603*FLEN/8, x4, x1, x2)

inst_45148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:135444*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135444*0 + 3*604*FLEN/8, x4, x1, x2)

inst_45149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb992011891a75 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x28d4dfae371af and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b992011891a75; op2val:0x9fd28d4dfae371af;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:135447*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135447*0 + 3*605*FLEN/8, x4, x1, x2)

inst_45150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:135450*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135450*0 + 3*606*FLEN/8, x4, x1, x2)

inst_45151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:135453*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135453*0 + 3*607*FLEN/8, x4, x1, x2)

inst_45152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:135456*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135456*0 + 3*608*FLEN/8, x4, x1, x2)

inst_45153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:135459*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135459*0 + 3*609*FLEN/8, x4, x1, x2)

inst_45154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:135462*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135462*0 + 3*610*FLEN/8, x4, x1, x2)

inst_45155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:135465*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135465*0 + 3*611*FLEN/8, x4, x1, x2)

inst_45156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:135468*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135468*0 + 3*612*FLEN/8, x4, x1, x2)

inst_45157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:135471*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135471*0 + 3*613*FLEN/8, x4, x1, x2)

inst_45158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:135474*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135474*0 + 3*614*FLEN/8, x4, x1, x2)

inst_45159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:135477*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135477*0 + 3*615*FLEN/8, x4, x1, x2)

inst_45160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:135480*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135480*0 + 3*616*FLEN/8, x4, x1, x2)

inst_45161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:135483*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135483*0 + 3*617*FLEN/8, x4, x1, x2)

inst_45162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:135486*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135486*0 + 3*618*FLEN/8, x4, x1, x2)

inst_45163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:135489*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135489*0 + 3*619*FLEN/8, x4, x1, x2)

inst_45164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:135492*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135492*0 + 3*620*FLEN/8, x4, x1, x2)

inst_45165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:135495*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135495*0 + 3*621*FLEN/8, x4, x1, x2)

inst_45166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:135498*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135498*0 + 3*622*FLEN/8, x4, x1, x2)

inst_45167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:135501*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135501*0 + 3*623*FLEN/8, x4, x1, x2)

inst_45168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:135504*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135504*0 + 3*624*FLEN/8, x4, x1, x2)

inst_45169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:135507*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135507*0 + 3*625*FLEN/8, x4, x1, x2)

inst_45170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:135510*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135510*0 + 3*626*FLEN/8, x4, x1, x2)

inst_45171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:135513*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135513*0 + 3*627*FLEN/8, x4, x1, x2)

inst_45172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000000000000; valaddr_reg:x3; val_offset:135516*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135516*0 + 3*628*FLEN/8, x4, x1, x2)

inst_45173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000000000001; valaddr_reg:x3; val_offset:135519*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135519*0 + 3*629*FLEN/8, x4, x1, x2)

inst_45174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000000000003; valaddr_reg:x3; val_offset:135522*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135522*0 + 3*630*FLEN/8, x4, x1, x2)

inst_45175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000000000007; valaddr_reg:x3; val_offset:135525*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135525*0 + 3*631*FLEN/8, x4, x1, x2)

inst_45176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000000000000f; valaddr_reg:x3; val_offset:135528*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135528*0 + 3*632*FLEN/8, x4, x1, x2)

inst_45177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000000000001f; valaddr_reg:x3; val_offset:135531*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135531*0 + 3*633*FLEN/8, x4, x1, x2)

inst_45178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000000000003f; valaddr_reg:x3; val_offset:135534*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135534*0 + 3*634*FLEN/8, x4, x1, x2)

inst_45179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000000000007f; valaddr_reg:x3; val_offset:135537*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135537*0 + 3*635*FLEN/8, x4, x1, x2)

inst_45180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200000000000ff; valaddr_reg:x3; val_offset:135540*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135540*0 + 3*636*FLEN/8, x4, x1, x2)

inst_45181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200000000001ff; valaddr_reg:x3; val_offset:135543*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135543*0 + 3*637*FLEN/8, x4, x1, x2)

inst_45182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200000000003ff; valaddr_reg:x3; val_offset:135546*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135546*0 + 3*638*FLEN/8, x4, x1, x2)

inst_45183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200000000007ff; valaddr_reg:x3; val_offset:135549*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135549*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_45184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000000000fff; valaddr_reg:x3; val_offset:135552*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135552*0 + 3*640*FLEN/8, x4, x1, x2)

inst_45185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000000001fff; valaddr_reg:x3; val_offset:135555*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135555*0 + 3*641*FLEN/8, x4, x1, x2)

inst_45186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000000003fff; valaddr_reg:x3; val_offset:135558*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135558*0 + 3*642*FLEN/8, x4, x1, x2)

inst_45187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000000007fff; valaddr_reg:x3; val_offset:135561*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135561*0 + 3*643*FLEN/8, x4, x1, x2)

inst_45188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000000000ffff; valaddr_reg:x3; val_offset:135564*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135564*0 + 3*644*FLEN/8, x4, x1, x2)

inst_45189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000000001ffff; valaddr_reg:x3; val_offset:135567*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135567*0 + 3*645*FLEN/8, x4, x1, x2)

inst_45190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000000003ffff; valaddr_reg:x3; val_offset:135570*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135570*0 + 3*646*FLEN/8, x4, x1, x2)

inst_45191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000000007ffff; valaddr_reg:x3; val_offset:135573*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135573*0 + 3*647*FLEN/8, x4, x1, x2)

inst_45192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200000000fffff; valaddr_reg:x3; val_offset:135576*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135576*0 + 3*648*FLEN/8, x4, x1, x2)

inst_45193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200000001fffff; valaddr_reg:x3; val_offset:135579*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135579*0 + 3*649*FLEN/8, x4, x1, x2)

inst_45194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200000003fffff; valaddr_reg:x3; val_offset:135582*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135582*0 + 3*650*FLEN/8, x4, x1, x2)

inst_45195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200000007fffff; valaddr_reg:x3; val_offset:135585*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135585*0 + 3*651*FLEN/8, x4, x1, x2)

inst_45196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000000ffffff; valaddr_reg:x3; val_offset:135588*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135588*0 + 3*652*FLEN/8, x4, x1, x2)

inst_45197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000001ffffff; valaddr_reg:x3; val_offset:135591*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135591*0 + 3*653*FLEN/8, x4, x1, x2)

inst_45198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000003ffffff; valaddr_reg:x3; val_offset:135594*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135594*0 + 3*654*FLEN/8, x4, x1, x2)

inst_45199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000007ffffff; valaddr_reg:x3; val_offset:135597*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135597*0 + 3*655*FLEN/8, x4, x1, x2)

inst_45200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000000fffffff; valaddr_reg:x3; val_offset:135600*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135600*0 + 3*656*FLEN/8, x4, x1, x2)

inst_45201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000001fffffff; valaddr_reg:x3; val_offset:135603*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135603*0 + 3*657*FLEN/8, x4, x1, x2)

inst_45202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000003fffffff; valaddr_reg:x3; val_offset:135606*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135606*0 + 3*658*FLEN/8, x4, x1, x2)

inst_45203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000007fffffff; valaddr_reg:x3; val_offset:135609*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135609*0 + 3*659*FLEN/8, x4, x1, x2)

inst_45204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200000ffffffff; valaddr_reg:x3; val_offset:135612*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135612*0 + 3*660*FLEN/8, x4, x1, x2)

inst_45205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200001ffffffff; valaddr_reg:x3; val_offset:135615*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135615*0 + 3*661*FLEN/8, x4, x1, x2)

inst_45206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200003ffffffff; valaddr_reg:x3; val_offset:135618*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135618*0 + 3*662*FLEN/8, x4, x1, x2)

inst_45207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200007ffffffff; valaddr_reg:x3; val_offset:135621*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135621*0 + 3*663*FLEN/8, x4, x1, x2)

inst_45208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220000fffffffff; valaddr_reg:x3; val_offset:135624*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135624*0 + 3*664*FLEN/8, x4, x1, x2)

inst_45209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220001fffffffff; valaddr_reg:x3; val_offset:135627*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135627*0 + 3*665*FLEN/8, x4, x1, x2)

inst_45210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220003fffffffff; valaddr_reg:x3; val_offset:135630*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135630*0 + 3*666*FLEN/8, x4, x1, x2)

inst_45211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220007fffffffff; valaddr_reg:x3; val_offset:135633*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135633*0 + 3*667*FLEN/8, x4, x1, x2)

inst_45212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822000ffffffffff; valaddr_reg:x3; val_offset:135636*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135636*0 + 3*668*FLEN/8, x4, x1, x2)

inst_45213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822001ffffffffff; valaddr_reg:x3; val_offset:135639*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135639*0 + 3*669*FLEN/8, x4, x1, x2)

inst_45214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822003ffffffffff; valaddr_reg:x3; val_offset:135642*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135642*0 + 3*670*FLEN/8, x4, x1, x2)

inst_45215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822007ffffffffff; valaddr_reg:x3; val_offset:135645*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135645*0 + 3*671*FLEN/8, x4, x1, x2)

inst_45216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82200fffffffffff; valaddr_reg:x3; val_offset:135648*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135648*0 + 3*672*FLEN/8, x4, x1, x2)

inst_45217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82201fffffffffff; valaddr_reg:x3; val_offset:135651*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135651*0 + 3*673*FLEN/8, x4, x1, x2)

inst_45218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82203fffffffffff; valaddr_reg:x3; val_offset:135654*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135654*0 + 3*674*FLEN/8, x4, x1, x2)

inst_45219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x82207fffffffffff; valaddr_reg:x3; val_offset:135657*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135657*0 + 3*675*FLEN/8, x4, x1, x2)

inst_45220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8220ffffffffffff; valaddr_reg:x3; val_offset:135660*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135660*0 + 3*676*FLEN/8, x4, x1, x2)

inst_45221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8221ffffffffffff; valaddr_reg:x3; val_offset:135663*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135663*0 + 3*677*FLEN/8, x4, x1, x2)

inst_45222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8223ffffffffffff; valaddr_reg:x3; val_offset:135666*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135666*0 + 3*678*FLEN/8, x4, x1, x2)

inst_45223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8227ffffffffffff; valaddr_reg:x3; val_offset:135669*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135669*0 + 3*679*FLEN/8, x4, x1, x2)

inst_45224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x8228000000000000; valaddr_reg:x3; val_offset:135672*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135672*0 + 3*680*FLEN/8, x4, x1, x2)

inst_45225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822c000000000000; valaddr_reg:x3; val_offset:135675*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135675*0 + 3*681*FLEN/8, x4, x1, x2)

inst_45226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822e000000000000; valaddr_reg:x3; val_offset:135678*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135678*0 + 3*682*FLEN/8, x4, x1, x2)

inst_45227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822f000000000000; valaddr_reg:x3; val_offset:135681*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135681*0 + 3*683*FLEN/8, x4, x1, x2)

inst_45228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822f800000000000; valaddr_reg:x3; val_offset:135684*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135684*0 + 3*684*FLEN/8, x4, x1, x2)

inst_45229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fc00000000000; valaddr_reg:x3; val_offset:135687*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135687*0 + 3*685*FLEN/8, x4, x1, x2)

inst_45230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fe00000000000; valaddr_reg:x3; val_offset:135690*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135690*0 + 3*686*FLEN/8, x4, x1, x2)

inst_45231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ff00000000000; valaddr_reg:x3; val_offset:135693*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135693*0 + 3*687*FLEN/8, x4, x1, x2)

inst_45232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ff80000000000; valaddr_reg:x3; val_offset:135696*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135696*0 + 3*688*FLEN/8, x4, x1, x2)

inst_45233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffc0000000000; valaddr_reg:x3; val_offset:135699*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135699*0 + 3*689*FLEN/8, x4, x1, x2)

inst_45234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffe0000000000; valaddr_reg:x3; val_offset:135702*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135702*0 + 3*690*FLEN/8, x4, x1, x2)

inst_45235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fff0000000000; valaddr_reg:x3; val_offset:135705*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135705*0 + 3*691*FLEN/8, x4, x1, x2)

inst_45236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fff8000000000; valaddr_reg:x3; val_offset:135708*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135708*0 + 3*692*FLEN/8, x4, x1, x2)

inst_45237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffc000000000; valaddr_reg:x3; val_offset:135711*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135711*0 + 3*693*FLEN/8, x4, x1, x2)

inst_45238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffe000000000; valaddr_reg:x3; val_offset:135714*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135714*0 + 3*694*FLEN/8, x4, x1, x2)

inst_45239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffff000000000; valaddr_reg:x3; val_offset:135717*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135717*0 + 3*695*FLEN/8, x4, x1, x2)

inst_45240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffff800000000; valaddr_reg:x3; val_offset:135720*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135720*0 + 3*696*FLEN/8, x4, x1, x2)

inst_45241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffc00000000; valaddr_reg:x3; val_offset:135723*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135723*0 + 3*697*FLEN/8, x4, x1, x2)

inst_45242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffe00000000; valaddr_reg:x3; val_offset:135726*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135726*0 + 3*698*FLEN/8, x4, x1, x2)

inst_45243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffff00000000; valaddr_reg:x3; val_offset:135729*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135729*0 + 3*699*FLEN/8, x4, x1, x2)

inst_45244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffff80000000; valaddr_reg:x3; val_offset:135732*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135732*0 + 3*700*FLEN/8, x4, x1, x2)

inst_45245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffc0000000; valaddr_reg:x3; val_offset:135735*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135735*0 + 3*701*FLEN/8, x4, x1, x2)

inst_45246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffe0000000; valaddr_reg:x3; val_offset:135738*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135738*0 + 3*702*FLEN/8, x4, x1, x2)

inst_45247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffff0000000; valaddr_reg:x3; val_offset:135741*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135741*0 + 3*703*FLEN/8, x4, x1, x2)

inst_45248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffff8000000; valaddr_reg:x3; val_offset:135744*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135744*0 + 3*704*FLEN/8, x4, x1, x2)

inst_45249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffc000000; valaddr_reg:x3; val_offset:135747*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135747*0 + 3*705*FLEN/8, x4, x1, x2)

inst_45250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffe000000; valaddr_reg:x3; val_offset:135750*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135750*0 + 3*706*FLEN/8, x4, x1, x2)

inst_45251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffff000000; valaddr_reg:x3; val_offset:135753*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135753*0 + 3*707*FLEN/8, x4, x1, x2)

inst_45252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffff800000; valaddr_reg:x3; val_offset:135756*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135756*0 + 3*708*FLEN/8, x4, x1, x2)

inst_45253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffffc00000; valaddr_reg:x3; val_offset:135759*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135759*0 + 3*709*FLEN/8, x4, x1, x2)

inst_45254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffffe00000; valaddr_reg:x3; val_offset:135762*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135762*0 + 3*710*FLEN/8, x4, x1, x2)

inst_45255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffff00000; valaddr_reg:x3; val_offset:135765*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135765*0 + 3*711*FLEN/8, x4, x1, x2)

inst_45256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffff80000; valaddr_reg:x3; val_offset:135768*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135768*0 + 3*712*FLEN/8, x4, x1, x2)

inst_45257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffffc0000; valaddr_reg:x3; val_offset:135771*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135771*0 + 3*713*FLEN/8, x4, x1, x2)

inst_45258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffffe0000; valaddr_reg:x3; val_offset:135774*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135774*0 + 3*714*FLEN/8, x4, x1, x2)

inst_45259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffffff0000; valaddr_reg:x3; val_offset:135777*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135777*0 + 3*715*FLEN/8, x4, x1, x2)

inst_45260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffffff8000; valaddr_reg:x3; val_offset:135780*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135780*0 + 3*716*FLEN/8, x4, x1, x2)

inst_45261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffffffc000; valaddr_reg:x3; val_offset:135783*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135783*0 + 3*717*FLEN/8, x4, x1, x2)

inst_45262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffffffe000; valaddr_reg:x3; val_offset:135786*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135786*0 + 3*718*FLEN/8, x4, x1, x2)

inst_45263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffffff000; valaddr_reg:x3; val_offset:135789*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135789*0 + 3*719*FLEN/8, x4, x1, x2)

inst_45264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffffff800; valaddr_reg:x3; val_offset:135792*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135792*0 + 3*720*FLEN/8, x4, x1, x2)

inst_45265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffffffc00; valaddr_reg:x3; val_offset:135795*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135795*0 + 3*721*FLEN/8, x4, x1, x2)

inst_45266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffffffe00; valaddr_reg:x3; val_offset:135798*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135798*0 + 3*722*FLEN/8, x4, x1, x2)

inst_45267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffffffff00; valaddr_reg:x3; val_offset:135801*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135801*0 + 3*723*FLEN/8, x4, x1, x2)

inst_45268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffffffff80; valaddr_reg:x3; val_offset:135804*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135804*0 + 3*724*FLEN/8, x4, x1, x2)

inst_45269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffffffffc0; valaddr_reg:x3; val_offset:135807*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135807*0 + 3*725*FLEN/8, x4, x1, x2)

inst_45270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffffffffe0; valaddr_reg:x3; val_offset:135810*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135810*0 + 3*726*FLEN/8, x4, x1, x2)

inst_45271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffffffff0; valaddr_reg:x3; val_offset:135813*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135813*0 + 3*727*FLEN/8, x4, x1, x2)

inst_45272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffffffff8; valaddr_reg:x3; val_offset:135816*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135816*0 + 3*728*FLEN/8, x4, x1, x2)

inst_45273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffffffffc; valaddr_reg:x3; val_offset:135819*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135819*0 + 3*729*FLEN/8, x4, x1, x2)

inst_45274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822ffffffffffffe; valaddr_reg:x3; val_offset:135822*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135822*0 + 3*730*FLEN/8, x4, x1, x2)

inst_45275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbd47a98dbb86d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x022 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bd47a98dbb86d; op2val:0x8000;
op3val:0x822fffffffffffff; valaddr_reg:x3; val_offset:135825*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135825*0 + 3*731*FLEN/8, x4, x1, x2)

inst_45276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000000000000; valaddr_reg:x3; val_offset:135828*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135828*0 + 3*732*FLEN/8, x4, x1, x2)

inst_45277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000000000001; valaddr_reg:x3; val_offset:135831*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135831*0 + 3*733*FLEN/8, x4, x1, x2)

inst_45278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000000000003; valaddr_reg:x3; val_offset:135834*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135834*0 + 3*734*FLEN/8, x4, x1, x2)

inst_45279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000000000007; valaddr_reg:x3; val_offset:135837*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135837*0 + 3*735*FLEN/8, x4, x1, x2)

inst_45280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000000000000f; valaddr_reg:x3; val_offset:135840*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135840*0 + 3*736*FLEN/8, x4, x1, x2)

inst_45281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000000000001f; valaddr_reg:x3; val_offset:135843*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135843*0 + 3*737*FLEN/8, x4, x1, x2)

inst_45282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000000000003f; valaddr_reg:x3; val_offset:135846*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135846*0 + 3*738*FLEN/8, x4, x1, x2)

inst_45283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000000000007f; valaddr_reg:x3; val_offset:135849*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135849*0 + 3*739*FLEN/8, x4, x1, x2)

inst_45284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00000000000ff; valaddr_reg:x3; val_offset:135852*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135852*0 + 3*740*FLEN/8, x4, x1, x2)

inst_45285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00000000001ff; valaddr_reg:x3; val_offset:135855*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135855*0 + 3*741*FLEN/8, x4, x1, x2)

inst_45286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00000000003ff; valaddr_reg:x3; val_offset:135858*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135858*0 + 3*742*FLEN/8, x4, x1, x2)

inst_45287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00000000007ff; valaddr_reg:x3; val_offset:135861*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135861*0 + 3*743*FLEN/8, x4, x1, x2)

inst_45288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000000000fff; valaddr_reg:x3; val_offset:135864*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135864*0 + 3*744*FLEN/8, x4, x1, x2)

inst_45289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000000001fff; valaddr_reg:x3; val_offset:135867*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135867*0 + 3*745*FLEN/8, x4, x1, x2)

inst_45290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000000003fff; valaddr_reg:x3; val_offset:135870*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135870*0 + 3*746*FLEN/8, x4, x1, x2)

inst_45291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000000007fff; valaddr_reg:x3; val_offset:135873*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135873*0 + 3*747*FLEN/8, x4, x1, x2)

inst_45292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000000000ffff; valaddr_reg:x3; val_offset:135876*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135876*0 + 3*748*FLEN/8, x4, x1, x2)

inst_45293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000000001ffff; valaddr_reg:x3; val_offset:135879*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135879*0 + 3*749*FLEN/8, x4, x1, x2)

inst_45294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000000003ffff; valaddr_reg:x3; val_offset:135882*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135882*0 + 3*750*FLEN/8, x4, x1, x2)

inst_45295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000000007ffff; valaddr_reg:x3; val_offset:135885*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135885*0 + 3*751*FLEN/8, x4, x1, x2)

inst_45296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00000000fffff; valaddr_reg:x3; val_offset:135888*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135888*0 + 3*752*FLEN/8, x4, x1, x2)

inst_45297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00000001fffff; valaddr_reg:x3; val_offset:135891*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135891*0 + 3*753*FLEN/8, x4, x1, x2)

inst_45298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00000003fffff; valaddr_reg:x3; val_offset:135894*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135894*0 + 3*754*FLEN/8, x4, x1, x2)

inst_45299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00000007fffff; valaddr_reg:x3; val_offset:135897*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135897*0 + 3*755*FLEN/8, x4, x1, x2)

inst_45300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000000ffffff; valaddr_reg:x3; val_offset:135900*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135900*0 + 3*756*FLEN/8, x4, x1, x2)

inst_45301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000001ffffff; valaddr_reg:x3; val_offset:135903*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135903*0 + 3*757*FLEN/8, x4, x1, x2)

inst_45302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000003ffffff; valaddr_reg:x3; val_offset:135906*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135906*0 + 3*758*FLEN/8, x4, x1, x2)

inst_45303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa0000007ffffff; valaddr_reg:x3; val_offset:135909*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135909*0 + 3*759*FLEN/8, x4, x1, x2)

inst_45304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000000fffffff; valaddr_reg:x3; val_offset:135912*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135912*0 + 3*760*FLEN/8, x4, x1, x2)

inst_45305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000001fffffff; valaddr_reg:x3; val_offset:135915*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135915*0 + 3*761*FLEN/8, x4, x1, x2)

inst_45306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000003fffffff; valaddr_reg:x3; val_offset:135918*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135918*0 + 3*762*FLEN/8, x4, x1, x2)

inst_45307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa000007fffffff; valaddr_reg:x3; val_offset:135921*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135921*0 + 3*763*FLEN/8, x4, x1, x2)

inst_45308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00000ffffffff; valaddr_reg:x3; val_offset:135924*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135924*0 + 3*764*FLEN/8, x4, x1, x2)

inst_45309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00001ffffffff; valaddr_reg:x3; val_offset:135927*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135927*0 + 3*765*FLEN/8, x4, x1, x2)

inst_45310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00003ffffffff; valaddr_reg:x3; val_offset:135930*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135930*0 + 3*766*FLEN/8, x4, x1, x2)

inst_45311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbde4252fac6ab and fs2 == 0 and fe2 == 0x204 and fm2 == 0x25f482e528566 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9bde4252fac6ab; op2val:0x20425f482e528566;
op3val:0x3fa00007ffffffff; valaddr_reg:x3; val_offset:135933*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135933*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667715,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667719,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667727,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667743,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667775,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667839,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667967,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911668223,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911668735,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911669759,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911671807,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911675903,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911684095,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911700479,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911733247,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911798783,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911929855,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427912191999,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427912716287,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427913764863,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427915862015,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427920056319,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427928444927,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427945222143,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427978776575,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458428045885439,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458428180103167,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458428448538623,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458428985409535,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458430059151359,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458432206635007,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458436501602303,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458445091536895,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458462271406079,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458496631144447,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458565350621183,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458702789574655,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458977667481599,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331459527423295487,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331460626934923263,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331462825958178815,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331467224004689919,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331476020097712127,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331493612283756543,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331528796655845375,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331599165400023039,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331739902888378367,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9332021377865089023,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9332584327818510335,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9333710227725352959,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9333710227725352960,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9334836127632195584,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335399077585616896,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335680552562327552,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335821290050682880,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335891658794860544,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335926843166949376,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335944435352993792,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335953231446016000,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335957629492527104,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335959828515782656,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335960928027410432,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335961477783224320,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335961752661131264,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335961890100084736,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335961958819561472,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335961993179299840,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962010359169024,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962018949103616,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962023244070912,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962025391554560,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962026465296384,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027002167296,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027270602752,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027404820480,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027471929344,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027505483776,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027522260992,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027530649600,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027534843904,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027536941056,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027537989632,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027538513920,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027538776064,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027538907136,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027538972672,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539005440,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539021824,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539030016,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539034112,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539036160,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539037184,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539037696,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539037952,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038080,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038144,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038176,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038192,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038200,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038204,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038206,64,FLEN)
NAN_BOXED(6889191218433546973,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038207,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704960,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704961,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704963,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704967,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704975,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704991,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705023,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705087,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705215,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705471,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705983,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273707007,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273709055,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273713151,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273721343,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273737727,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273770495,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273836031,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273967103,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996274229247,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996274753535,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996275802111,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996277899263,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996282093567,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996290482175,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996307259391,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996340813823,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996407922687,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996542140415,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996810575871,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035997347446783,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035998421188607,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036000568672255,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036004863639551,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036013453574143,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036030633443327,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036064993181695,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036133712658431,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036271151611903,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036546029518847,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45037095785332735,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45038195296960511,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45040394320216063,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45044792366727167,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45053588459749375,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45071180645793791,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45106365017882623,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45176733762060287,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45317471250415615,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45598946227126271,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(46161896180547583,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(47287796087390207,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(47287796087390208,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(48413695994232832,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(48976645947654144,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49258120924364800,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49398858412720128,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49469227156897792,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49504411528986624,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49522003715031040,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49530799808053248,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49535197854564352,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49537396877819904,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49538496389447680,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539046145261568,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539321023168512,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539458462121984,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539527181598720,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539561541337088,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539578721206272,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539587311140864,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539591606108160,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539593753591808,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539594827333632,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595364204544,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595632640000,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595766857728,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595833966592,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595867521024,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595884298240,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595892686848,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595896881152,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595898978304,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900026880,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900551168,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900813312,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900944384,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901009920,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901042688,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901059072,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901067264,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901071360,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901073408,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901074432,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901074944,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075200,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075328,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075392,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075424,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075440,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075448,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075452,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075454,64,FLEN)
NAN_BOXED(6889197606693792685,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075455,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154304,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154305,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154307,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154311,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154319,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154335,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154367,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154431,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154559,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154815,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741155327,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741156351,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741158399,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741162495,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741170687,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741187071,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741219839,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741285375,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741416447,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741678591,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381742202879,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381743251455,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381745348607,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381749542911,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381757931519,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381774708735,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381808263167,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381875372031,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382009589759,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382278025215,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382814896127,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676383888637951,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676386036121599,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676390331088895,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676398921023487,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676416100892671,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676450460631039,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676519180107775,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676656619061247,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676931496968191,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220677481252782079,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220678580764409855,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220680779787665407,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220685177834176511,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220693973927198719,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220711566113243135,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220746750485331967,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220817119229509631,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220957856717864959,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221239331694575615,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221802281647996927,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839551,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839552,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224054081461682176,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224617031415103488,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224898506391814144,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225039243880169472,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225109612624347136,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225144796996435968,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225162389182480384,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225171185275502592,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225175583322013696,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225177782345269248,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225178881856897024,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179431612710912,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179706490617856,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179843929571328,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179912649048064,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179947008786432,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179964188655616,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179972778590208,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179977073557504,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179979221041152,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980294782976,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980831653888,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981100089344,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981234307072,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981301415936,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981334970368,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981351747584,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981360136192,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981364330496,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981366427648,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981367476224,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368000512,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368262656,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368393728,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368459264,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368492032,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368508416,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368516608,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368520704,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368522752,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368523776,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524288,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524544,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524672,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524736,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524768,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524784,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524792,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524796,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524798,64,FLEN)
NAN_BOXED(6889205791810759699,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524799,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078848,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078849,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078851,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078855,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078863,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078879,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078911,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078975,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079103,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079359,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079871,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840080895,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840082943,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840087039,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840095231,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840111615,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840144383,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840209919,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840340991,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840603135,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785841127423,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785842175999,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785844273151,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785848467455,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785856856063,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785873633279,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785907187711,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785974296575,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786108514303,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786376949759,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786913820671,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136787987562495,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136790135046143,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136794430013439,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136803019948031,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136820199817215,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136854559555583,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136923279032319,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137060717985791,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137335595892735,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137885351706623,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171138984863334399,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171141183886589951,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171145581933101055,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171154378026123263,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171171970212167679,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171207154584256511,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171277523328434175,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171418260816789503,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171699735793500159,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(172262685746921471,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(173388585653764095,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(173388585653764096,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(174514485560606720,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175077435514028032,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175358910490738688,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175499647979094016,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175570016723271680,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175605201095360512,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175622793281404928,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175631589374427136,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175635987420938240,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175638186444193792,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175639285955821568,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175639835711635456,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640110589542400,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640248028495872,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640316747972608,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640351107710976,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640368287580160,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640376877514752,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640381172482048,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640383319965696,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640384393707520,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640384930578432,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385199013888,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385333231616,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385400340480,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385433894912,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385450672128,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385459060736,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385463255040,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385465352192,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385466400768,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385466925056,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467187200,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467318272,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467383808,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467416576,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467432960,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467441152,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467445248,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467447296,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467448320,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467448832,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449088,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449216,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449280,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449312,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449328,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449336,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449340,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449342,64,FLEN)
NAN_BOXED(6889257311809162859,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449343,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583042048,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583042049,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583042051,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583042055,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583042063,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583042079,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583042111,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583042175,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583042303,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583042559,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583043071,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583044095,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583046143,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583050239,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583058431,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583074815,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583107583,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583173119,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583304191,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686583566335,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686584090623,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686585139199,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686587236351,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686591430655,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686599819263,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686616596479,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686650150911,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686717259775,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755686851477503,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755687119912959,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755687656783871,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755688730525695,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755690878009343,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755695172976639,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755703762911231,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755720942780415,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755755302518783,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755824021995519,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456755961460948991,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456756236338855935,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456756786094669823,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456757885606297599,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456760084629553151,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456764482676064255,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456773278769086463,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456790870955130879,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456826055327219711,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13456896424071397375,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13457037161559752703,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13457318636536463359,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13457881586489884671,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13459007486396727295,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13459007486396727296,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13460133386303569920,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13460696336256991232,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13460977811233701888,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461118548722057216,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461188917466234880,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461224101838323712,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461241694024368128,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461250490117390336,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461254888163901440,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461257087187156992,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461258186698784768,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461258736454598656,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259011332505600,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259148771459072,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259217490935808,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259251850674176,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259269030543360,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259277620477952,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259281915445248,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259284062928896,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259285136670720,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259285673541632,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259285941977088,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286076194816,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286143303680,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286176858112,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286193635328,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286202023936,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286206218240,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286208315392,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286209363968,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286209888256,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210150400,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210281472,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210347008,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210379776,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210396160,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210404352,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210408448,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210410496,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210411520,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210412032,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210412288,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210412416,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210412480,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210412512,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210412528,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210412536,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210412540,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210412542,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13461259286210412543,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6889268418005506677,64,FLEN)
NAN_BOXED(11516422563200987567,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372672,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372673,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372675,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372679,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372687,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372703,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372735,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372799,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185372927,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185373183,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185373695,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185374719,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185376767,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185380863,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185389055,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185405439,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185438207,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185503743,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185634815,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424185896959,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424186421247,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424187469823,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424189566975,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424193761279,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424202149887,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424218927103,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424252481535,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424319590399,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424453808127,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494424722243583,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494425259114495,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494426332856319,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494428480339967,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494432775307263,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494441365241855,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494458545111039,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494492904849407,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494561624326143,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494699063279615,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376494973941186559,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376495523697000447,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376496623208628223,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376498822231883775,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376503220278394879,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376512016371417087,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376529608557461503,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376564792929550335,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376635161673727999,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9376775899162083327,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9377057374138793983,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9377620324092215295,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9378746223999057919,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9378746223999057920,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9379872123905900544,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380435073859321856,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380716548836032512,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380857286324387840,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380927655068565504,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380962839440654336,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380980431626698752,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380989227719720960,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380993625766232064,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380995824789487616,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380996924301115392,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997474056929280,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997748934836224,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997886373789696,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997955093266432,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380997989453004800,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998006632873984,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998015222808576,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998019517775872,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998021665259520,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998022739001344,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023275872256,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023544307712,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023678525440,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023745634304,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023779188736,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023795965952,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023804354560,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023808548864,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023810646016,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023811694592,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812218880,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812481024,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812612096,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812677632,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812710400,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812726784,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812734976,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812739072,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812741120,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742144,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742656,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812742912,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743040,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743104,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743136,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743152,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743160,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743164,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743166,64,FLEN)
NAN_BOXED(6889333678008940653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743167,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663164928,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663164929,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663164931,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663164935,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663164943,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663164959,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663164991,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663165055,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663165183,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663165439,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663165951,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663166975,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663169023,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663173119,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663181311,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663197695,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663230463,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663295999,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663427071,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420663689215,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420664213503,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420665262079,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420667359231,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420671553535,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420679942143,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420696719359,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420730273791,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420797382655,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664420931600383,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664421200035839,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664421736906751,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664422810648575,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664424958132223,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664429253099519,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664437843034111,64,FLEN)
NAN_BOXED(6889344431434679979,64,FLEN)
NAN_BOXED(2324525121296041318,64,FLEN)
NAN_BOXED(4584664455022903295,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
