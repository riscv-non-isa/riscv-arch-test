
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_6144:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:18432*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18432*0 + 3*0*FLEN/8, x4, x1, x2)

inst_6145:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:18435*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18435*0 + 3*1*FLEN/8, x4, x1, x2)

inst_6146:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:18438*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18438*0 + 3*2*FLEN/8, x4, x1, x2)

inst_6147:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:18441*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18441*0 + 3*3*FLEN/8, x4, x1, x2)

inst_6148:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:18444*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18444*0 + 3*4*FLEN/8, x4, x1, x2)

inst_6149:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:18447*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18447*0 + 3*5*FLEN/8, x4, x1, x2)

inst_6150:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:18450*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18450*0 + 3*6*FLEN/8, x4, x1, x2)

inst_6151:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:18453*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18453*0 + 3*7*FLEN/8, x4, x1, x2)

inst_6152:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:18456*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18456*0 + 3*8*FLEN/8, x4, x1, x2)

inst_6153:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:18459*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18459*0 + 3*9*FLEN/8, x4, x1, x2)

inst_6154:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:18462*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18462*0 + 3*10*FLEN/8, x4, x1, x2)

inst_6155:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:18465*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18465*0 + 3*11*FLEN/8, x4, x1, x2)

inst_6156:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:18468*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18468*0 + 3*12*FLEN/8, x4, x1, x2)

inst_6157:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:18471*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18471*0 + 3*13*FLEN/8, x4, x1, x2)

inst_6158:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:18474*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18474*0 + 3*14*FLEN/8, x4, x1, x2)

inst_6159:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:18477*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18477*0 + 3*15*FLEN/8, x4, x1, x2)

inst_6160:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:18480*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18480*0 + 3*16*FLEN/8, x4, x1, x2)

inst_6161:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x8b50ed3b44d4f and fs2 == 1 and fe2 == 0x200 and fm2 == 0x4b8fffd5dbb27 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f68b50ed3b44d4f; op2val:0xa004b8fffd5dbb27;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:18483*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18483*0 + 3*17*FLEN/8, x4, x1, x2)

inst_6162:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000000000000; valaddr_reg:x3; val_offset:18486*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18486*0 + 3*18*FLEN/8, x4, x1, x2)

inst_6163:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000000000001; valaddr_reg:x3; val_offset:18489*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18489*0 + 3*19*FLEN/8, x4, x1, x2)

inst_6164:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000000000003; valaddr_reg:x3; val_offset:18492*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18492*0 + 3*20*FLEN/8, x4, x1, x2)

inst_6165:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000000000007; valaddr_reg:x3; val_offset:18495*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18495*0 + 3*21*FLEN/8, x4, x1, x2)

inst_6166:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000000000000f; valaddr_reg:x3; val_offset:18498*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18498*0 + 3*22*FLEN/8, x4, x1, x2)

inst_6167:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000000000001f; valaddr_reg:x3; val_offset:18501*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18501*0 + 3*23*FLEN/8, x4, x1, x2)

inst_6168:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000000000003f; valaddr_reg:x3; val_offset:18504*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18504*0 + 3*24*FLEN/8, x4, x1, x2)

inst_6169:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000000000007f; valaddr_reg:x3; val_offset:18507*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18507*0 + 3*25*FLEN/8, x4, x1, x2)

inst_6170:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700000000000ff; valaddr_reg:x3; val_offset:18510*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18510*0 + 3*26*FLEN/8, x4, x1, x2)

inst_6171:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700000000001ff; valaddr_reg:x3; val_offset:18513*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18513*0 + 3*27*FLEN/8, x4, x1, x2)

inst_6172:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700000000003ff; valaddr_reg:x3; val_offset:18516*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18516*0 + 3*28*FLEN/8, x4, x1, x2)

inst_6173:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700000000007ff; valaddr_reg:x3; val_offset:18519*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18519*0 + 3*29*FLEN/8, x4, x1, x2)

inst_6174:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000000000fff; valaddr_reg:x3; val_offset:18522*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18522*0 + 3*30*FLEN/8, x4, x1, x2)

inst_6175:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000000001fff; valaddr_reg:x3; val_offset:18525*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18525*0 + 3*31*FLEN/8, x4, x1, x2)

inst_6176:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000000003fff; valaddr_reg:x3; val_offset:18528*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18528*0 + 3*32*FLEN/8, x4, x1, x2)

inst_6177:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000000007fff; valaddr_reg:x3; val_offset:18531*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18531*0 + 3*33*FLEN/8, x4, x1, x2)

inst_6178:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000000000ffff; valaddr_reg:x3; val_offset:18534*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18534*0 + 3*34*FLEN/8, x4, x1, x2)

inst_6179:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000000001ffff; valaddr_reg:x3; val_offset:18537*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18537*0 + 3*35*FLEN/8, x4, x1, x2)

inst_6180:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000000003ffff; valaddr_reg:x3; val_offset:18540*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18540*0 + 3*36*FLEN/8, x4, x1, x2)

inst_6181:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000000007ffff; valaddr_reg:x3; val_offset:18543*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18543*0 + 3*37*FLEN/8, x4, x1, x2)

inst_6182:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700000000fffff; valaddr_reg:x3; val_offset:18546*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18546*0 + 3*38*FLEN/8, x4, x1, x2)

inst_6183:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700000001fffff; valaddr_reg:x3; val_offset:18549*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18549*0 + 3*39*FLEN/8, x4, x1, x2)

inst_6184:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700000003fffff; valaddr_reg:x3; val_offset:18552*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18552*0 + 3*40*FLEN/8, x4, x1, x2)

inst_6185:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700000007fffff; valaddr_reg:x3; val_offset:18555*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18555*0 + 3*41*FLEN/8, x4, x1, x2)

inst_6186:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000000ffffff; valaddr_reg:x3; val_offset:18558*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18558*0 + 3*42*FLEN/8, x4, x1, x2)

inst_6187:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000001ffffff; valaddr_reg:x3; val_offset:18561*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18561*0 + 3*43*FLEN/8, x4, x1, x2)

inst_6188:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000003ffffff; valaddr_reg:x3; val_offset:18564*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18564*0 + 3*44*FLEN/8, x4, x1, x2)

inst_6189:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000007ffffff; valaddr_reg:x3; val_offset:18567*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18567*0 + 3*45*FLEN/8, x4, x1, x2)

inst_6190:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000000fffffff; valaddr_reg:x3; val_offset:18570*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18570*0 + 3*46*FLEN/8, x4, x1, x2)

inst_6191:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000001fffffff; valaddr_reg:x3; val_offset:18573*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18573*0 + 3*47*FLEN/8, x4, x1, x2)

inst_6192:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000003fffffff; valaddr_reg:x3; val_offset:18576*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18576*0 + 3*48*FLEN/8, x4, x1, x2)

inst_6193:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000007fffffff; valaddr_reg:x3; val_offset:18579*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18579*0 + 3*49*FLEN/8, x4, x1, x2)

inst_6194:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700000ffffffff; valaddr_reg:x3; val_offset:18582*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18582*0 + 3*50*FLEN/8, x4, x1, x2)

inst_6195:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700001ffffffff; valaddr_reg:x3; val_offset:18585*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18585*0 + 3*51*FLEN/8, x4, x1, x2)

inst_6196:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700003ffffffff; valaddr_reg:x3; val_offset:18588*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18588*0 + 3*52*FLEN/8, x4, x1, x2)

inst_6197:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700007ffffffff; valaddr_reg:x3; val_offset:18591*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18591*0 + 3*53*FLEN/8, x4, x1, x2)

inst_6198:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70000fffffffff; valaddr_reg:x3; val_offset:18594*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18594*0 + 3*54*FLEN/8, x4, x1, x2)

inst_6199:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70001fffffffff; valaddr_reg:x3; val_offset:18597*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18597*0 + 3*55*FLEN/8, x4, x1, x2)

inst_6200:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70003fffffffff; valaddr_reg:x3; val_offset:18600*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18600*0 + 3*56*FLEN/8, x4, x1, x2)

inst_6201:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70007fffffffff; valaddr_reg:x3; val_offset:18603*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18603*0 + 3*57*FLEN/8, x4, x1, x2)

inst_6202:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7000ffffffffff; valaddr_reg:x3; val_offset:18606*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18606*0 + 3*58*FLEN/8, x4, x1, x2)

inst_6203:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7001ffffffffff; valaddr_reg:x3; val_offset:18609*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18609*0 + 3*59*FLEN/8, x4, x1, x2)

inst_6204:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7003ffffffffff; valaddr_reg:x3; val_offset:18612*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18612*0 + 3*60*FLEN/8, x4, x1, x2)

inst_6205:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7007ffffffffff; valaddr_reg:x3; val_offset:18615*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18615*0 + 3*61*FLEN/8, x4, x1, x2)

inst_6206:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c700fffffffffff; valaddr_reg:x3; val_offset:18618*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18618*0 + 3*62*FLEN/8, x4, x1, x2)

inst_6207:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c701fffffffffff; valaddr_reg:x3; val_offset:18621*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18621*0 + 3*63*FLEN/8, x4, x1, x2)

inst_6208:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c703fffffffffff; valaddr_reg:x3; val_offset:18624*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18624*0 + 3*64*FLEN/8, x4, x1, x2)

inst_6209:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c707fffffffffff; valaddr_reg:x3; val_offset:18627*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18627*0 + 3*65*FLEN/8, x4, x1, x2)

inst_6210:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c70ffffffffffff; valaddr_reg:x3; val_offset:18630*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18630*0 + 3*66*FLEN/8, x4, x1, x2)

inst_6211:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c71ffffffffffff; valaddr_reg:x3; val_offset:18633*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18633*0 + 3*67*FLEN/8, x4, x1, x2)

inst_6212:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c73ffffffffffff; valaddr_reg:x3; val_offset:18636*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18636*0 + 3*68*FLEN/8, x4, x1, x2)

inst_6213:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c77ffffffffffff; valaddr_reg:x3; val_offset:18639*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18639*0 + 3*69*FLEN/8, x4, x1, x2)

inst_6214:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c78000000000000; valaddr_reg:x3; val_offset:18642*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18642*0 + 3*70*FLEN/8, x4, x1, x2)

inst_6215:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7c000000000000; valaddr_reg:x3; val_offset:18645*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18645*0 + 3*71*FLEN/8, x4, x1, x2)

inst_6216:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7e000000000000; valaddr_reg:x3; val_offset:18648*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18648*0 + 3*72*FLEN/8, x4, x1, x2)

inst_6217:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7f000000000000; valaddr_reg:x3; val_offset:18651*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18651*0 + 3*73*FLEN/8, x4, x1, x2)

inst_6218:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7f800000000000; valaddr_reg:x3; val_offset:18654*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18654*0 + 3*74*FLEN/8, x4, x1, x2)

inst_6219:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fc00000000000; valaddr_reg:x3; val_offset:18657*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18657*0 + 3*75*FLEN/8, x4, x1, x2)

inst_6220:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fe00000000000; valaddr_reg:x3; val_offset:18660*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18660*0 + 3*76*FLEN/8, x4, x1, x2)

inst_6221:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ff00000000000; valaddr_reg:x3; val_offset:18663*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18663*0 + 3*77*FLEN/8, x4, x1, x2)

inst_6222:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ff80000000000; valaddr_reg:x3; val_offset:18666*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18666*0 + 3*78*FLEN/8, x4, x1, x2)

inst_6223:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffc0000000000; valaddr_reg:x3; val_offset:18669*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18669*0 + 3*79*FLEN/8, x4, x1, x2)

inst_6224:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffe0000000000; valaddr_reg:x3; val_offset:18672*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18672*0 + 3*80*FLEN/8, x4, x1, x2)

inst_6225:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fff0000000000; valaddr_reg:x3; val_offset:18675*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18675*0 + 3*81*FLEN/8, x4, x1, x2)

inst_6226:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fff8000000000; valaddr_reg:x3; val_offset:18678*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18678*0 + 3*82*FLEN/8, x4, x1, x2)

inst_6227:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffc000000000; valaddr_reg:x3; val_offset:18681*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18681*0 + 3*83*FLEN/8, x4, x1, x2)

inst_6228:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffe000000000; valaddr_reg:x3; val_offset:18684*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18684*0 + 3*84*FLEN/8, x4, x1, x2)

inst_6229:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffff000000000; valaddr_reg:x3; val_offset:18687*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18687*0 + 3*85*FLEN/8, x4, x1, x2)

inst_6230:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffff800000000; valaddr_reg:x3; val_offset:18690*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18690*0 + 3*86*FLEN/8, x4, x1, x2)

inst_6231:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffc00000000; valaddr_reg:x3; val_offset:18693*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18693*0 + 3*87*FLEN/8, x4, x1, x2)

inst_6232:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffe00000000; valaddr_reg:x3; val_offset:18696*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18696*0 + 3*88*FLEN/8, x4, x1, x2)

inst_6233:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffff00000000; valaddr_reg:x3; val_offset:18699*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18699*0 + 3*89*FLEN/8, x4, x1, x2)

inst_6234:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffff80000000; valaddr_reg:x3; val_offset:18702*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18702*0 + 3*90*FLEN/8, x4, x1, x2)

inst_6235:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffc0000000; valaddr_reg:x3; val_offset:18705*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18705*0 + 3*91*FLEN/8, x4, x1, x2)

inst_6236:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffe0000000; valaddr_reg:x3; val_offset:18708*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18708*0 + 3*92*FLEN/8, x4, x1, x2)

inst_6237:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffff0000000; valaddr_reg:x3; val_offset:18711*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18711*0 + 3*93*FLEN/8, x4, x1, x2)

inst_6238:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffff8000000; valaddr_reg:x3; val_offset:18714*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18714*0 + 3*94*FLEN/8, x4, x1, x2)

inst_6239:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffc000000; valaddr_reg:x3; val_offset:18717*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18717*0 + 3*95*FLEN/8, x4, x1, x2)

inst_6240:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffe000000; valaddr_reg:x3; val_offset:18720*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18720*0 + 3*96*FLEN/8, x4, x1, x2)

inst_6241:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffff000000; valaddr_reg:x3; val_offset:18723*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18723*0 + 3*97*FLEN/8, x4, x1, x2)

inst_6242:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffff800000; valaddr_reg:x3; val_offset:18726*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18726*0 + 3*98*FLEN/8, x4, x1, x2)

inst_6243:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffffc00000; valaddr_reg:x3; val_offset:18729*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18729*0 + 3*99*FLEN/8, x4, x1, x2)

inst_6244:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffffe00000; valaddr_reg:x3; val_offset:18732*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18732*0 + 3*100*FLEN/8, x4, x1, x2)

inst_6245:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffff00000; valaddr_reg:x3; val_offset:18735*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18735*0 + 3*101*FLEN/8, x4, x1, x2)

inst_6246:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffff80000; valaddr_reg:x3; val_offset:18738*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18738*0 + 3*102*FLEN/8, x4, x1, x2)

inst_6247:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffffc0000; valaddr_reg:x3; val_offset:18741*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18741*0 + 3*103*FLEN/8, x4, x1, x2)

inst_6248:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffffe0000; valaddr_reg:x3; val_offset:18744*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18744*0 + 3*104*FLEN/8, x4, x1, x2)

inst_6249:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffffff0000; valaddr_reg:x3; val_offset:18747*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18747*0 + 3*105*FLEN/8, x4, x1, x2)

inst_6250:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffffff8000; valaddr_reg:x3; val_offset:18750*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18750*0 + 3*106*FLEN/8, x4, x1, x2)

inst_6251:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffffffc000; valaddr_reg:x3; val_offset:18753*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18753*0 + 3*107*FLEN/8, x4, x1, x2)

inst_6252:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffffffe000; valaddr_reg:x3; val_offset:18756*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18756*0 + 3*108*FLEN/8, x4, x1, x2)

inst_6253:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffffff000; valaddr_reg:x3; val_offset:18759*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18759*0 + 3*109*FLEN/8, x4, x1, x2)

inst_6254:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffffff800; valaddr_reg:x3; val_offset:18762*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18762*0 + 3*110*FLEN/8, x4, x1, x2)

inst_6255:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffffffc00; valaddr_reg:x3; val_offset:18765*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18765*0 + 3*111*FLEN/8, x4, x1, x2)

inst_6256:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffffffe00; valaddr_reg:x3; val_offset:18768*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18768*0 + 3*112*FLEN/8, x4, x1, x2)

inst_6257:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffffffff00; valaddr_reg:x3; val_offset:18771*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18771*0 + 3*113*FLEN/8, x4, x1, x2)

inst_6258:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffffffff80; valaddr_reg:x3; val_offset:18774*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18774*0 + 3*114*FLEN/8, x4, x1, x2)

inst_6259:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffffffffc0; valaddr_reg:x3; val_offset:18777*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18777*0 + 3*115*FLEN/8, x4, x1, x2)

inst_6260:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffffffffe0; valaddr_reg:x3; val_offset:18780*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18780*0 + 3*116*FLEN/8, x4, x1, x2)

inst_6261:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffffffff0; valaddr_reg:x3; val_offset:18783*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18783*0 + 3*117*FLEN/8, x4, x1, x2)

inst_6262:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffffffff8; valaddr_reg:x3; val_offset:18786*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18786*0 + 3*118*FLEN/8, x4, x1, x2)

inst_6263:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffffffffc; valaddr_reg:x3; val_offset:18789*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18789*0 + 3*119*FLEN/8, x4, x1, x2)

inst_6264:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7ffffffffffffe; valaddr_reg:x3; val_offset:18792*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18792*0 + 3*120*FLEN/8, x4, x1, x2)

inst_6265:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3c7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3c7fffffffffffff; valaddr_reg:x3; val_offset:18795*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18795*0 + 3*121*FLEN/8, x4, x1, x2)

inst_6266:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:18798*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18798*0 + 3*122*FLEN/8, x4, x1, x2)

inst_6267:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:18801*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18801*0 + 3*123*FLEN/8, x4, x1, x2)

inst_6268:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:18804*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18804*0 + 3*124*FLEN/8, x4, x1, x2)

inst_6269:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:18807*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18807*0 + 3*125*FLEN/8, x4, x1, x2)

inst_6270:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:18810*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18810*0 + 3*126*FLEN/8, x4, x1, x2)

inst_6271:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:18813*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18813*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_6272:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:18816*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18816*0 + 3*128*FLEN/8, x4, x1, x2)

inst_6273:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:18819*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18819*0 + 3*129*FLEN/8, x4, x1, x2)

inst_6274:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:18822*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18822*0 + 3*130*FLEN/8, x4, x1, x2)

inst_6275:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:18825*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18825*0 + 3*131*FLEN/8, x4, x1, x2)

inst_6276:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:18828*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18828*0 + 3*132*FLEN/8, x4, x1, x2)

inst_6277:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:18831*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18831*0 + 3*133*FLEN/8, x4, x1, x2)

inst_6278:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:18834*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18834*0 + 3*134*FLEN/8, x4, x1, x2)

inst_6279:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:18837*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18837*0 + 3*135*FLEN/8, x4, x1, x2)

inst_6280:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:18840*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18840*0 + 3*136*FLEN/8, x4, x1, x2)

inst_6281:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:18843*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18843*0 + 3*137*FLEN/8, x4, x1, x2)

inst_6282:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:18846*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18846*0 + 3*138*FLEN/8, x4, x1, x2)

inst_6283:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:18849*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18849*0 + 3*139*FLEN/8, x4, x1, x2)

inst_6284:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:18852*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18852*0 + 3*140*FLEN/8, x4, x1, x2)

inst_6285:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:18855*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18855*0 + 3*141*FLEN/8, x4, x1, x2)

inst_6286:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:18858*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18858*0 + 3*142*FLEN/8, x4, x1, x2)

inst_6287:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x986db33c7683f and fs2 == 0 and fe2 == 0x207 and fm2 == 0x40eaf802b493b and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6986db33c7683f; op2val:0x20740eaf802b493b;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:18861*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18861*0 + 3*143*FLEN/8, x4, x1, x2)

inst_6288:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:18864*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18864*0 + 3*144*FLEN/8, x4, x1, x2)

inst_6289:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:18867*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18867*0 + 3*145*FLEN/8, x4, x1, x2)

inst_6290:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:18870*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18870*0 + 3*146*FLEN/8, x4, x1, x2)

inst_6291:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:18873*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18873*0 + 3*147*FLEN/8, x4, x1, x2)

inst_6292:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:18876*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18876*0 + 3*148*FLEN/8, x4, x1, x2)

inst_6293:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:18879*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18879*0 + 3*149*FLEN/8, x4, x1, x2)

inst_6294:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:18882*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18882*0 + 3*150*FLEN/8, x4, x1, x2)

inst_6295:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:18885*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18885*0 + 3*151*FLEN/8, x4, x1, x2)

inst_6296:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:18888*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18888*0 + 3*152*FLEN/8, x4, x1, x2)

inst_6297:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:18891*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18891*0 + 3*153*FLEN/8, x4, x1, x2)

inst_6298:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:18894*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18894*0 + 3*154*FLEN/8, x4, x1, x2)

inst_6299:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:18897*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18897*0 + 3*155*FLEN/8, x4, x1, x2)

inst_6300:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:18900*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18900*0 + 3*156*FLEN/8, x4, x1, x2)

inst_6301:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:18903*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18903*0 + 3*157*FLEN/8, x4, x1, x2)

inst_6302:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:18906*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18906*0 + 3*158*FLEN/8, x4, x1, x2)

inst_6303:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:18909*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18909*0 + 3*159*FLEN/8, x4, x1, x2)

inst_6304:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:18912*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18912*0 + 3*160*FLEN/8, x4, x1, x2)

inst_6305:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:18915*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18915*0 + 3*161*FLEN/8, x4, x1, x2)

inst_6306:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:18918*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18918*0 + 3*162*FLEN/8, x4, x1, x2)

inst_6307:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:18921*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18921*0 + 3*163*FLEN/8, x4, x1, x2)

inst_6308:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:18924*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18924*0 + 3*164*FLEN/8, x4, x1, x2)

inst_6309:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:18927*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18927*0 + 3*165*FLEN/8, x4, x1, x2)

inst_6310:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000000000000; valaddr_reg:x3; val_offset:18930*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18930*0 + 3*166*FLEN/8, x4, x1, x2)

inst_6311:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000000000001; valaddr_reg:x3; val_offset:18933*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18933*0 + 3*167*FLEN/8, x4, x1, x2)

inst_6312:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000000000003; valaddr_reg:x3; val_offset:18936*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18936*0 + 3*168*FLEN/8, x4, x1, x2)

inst_6313:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000000000007; valaddr_reg:x3; val_offset:18939*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18939*0 + 3*169*FLEN/8, x4, x1, x2)

inst_6314:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000000000000f; valaddr_reg:x3; val_offset:18942*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18942*0 + 3*170*FLEN/8, x4, x1, x2)

inst_6315:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000000000001f; valaddr_reg:x3; val_offset:18945*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18945*0 + 3*171*FLEN/8, x4, x1, x2)

inst_6316:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000000000003f; valaddr_reg:x3; val_offset:18948*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18948*0 + 3*172*FLEN/8, x4, x1, x2)

inst_6317:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000000000007f; valaddr_reg:x3; val_offset:18951*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18951*0 + 3*173*FLEN/8, x4, x1, x2)

inst_6318:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900000000000ff; valaddr_reg:x3; val_offset:18954*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18954*0 + 3*174*FLEN/8, x4, x1, x2)

inst_6319:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900000000001ff; valaddr_reg:x3; val_offset:18957*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18957*0 + 3*175*FLEN/8, x4, x1, x2)

inst_6320:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900000000003ff; valaddr_reg:x3; val_offset:18960*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18960*0 + 3*176*FLEN/8, x4, x1, x2)

inst_6321:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900000000007ff; valaddr_reg:x3; val_offset:18963*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18963*0 + 3*177*FLEN/8, x4, x1, x2)

inst_6322:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000000000fff; valaddr_reg:x3; val_offset:18966*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18966*0 + 3*178*FLEN/8, x4, x1, x2)

inst_6323:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000000001fff; valaddr_reg:x3; val_offset:18969*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18969*0 + 3*179*FLEN/8, x4, x1, x2)

inst_6324:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000000003fff; valaddr_reg:x3; val_offset:18972*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18972*0 + 3*180*FLEN/8, x4, x1, x2)

inst_6325:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000000007fff; valaddr_reg:x3; val_offset:18975*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18975*0 + 3*181*FLEN/8, x4, x1, x2)

inst_6326:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000000000ffff; valaddr_reg:x3; val_offset:18978*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18978*0 + 3*182*FLEN/8, x4, x1, x2)

inst_6327:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000000001ffff; valaddr_reg:x3; val_offset:18981*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18981*0 + 3*183*FLEN/8, x4, x1, x2)

inst_6328:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000000003ffff; valaddr_reg:x3; val_offset:18984*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18984*0 + 3*184*FLEN/8, x4, x1, x2)

inst_6329:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000000007ffff; valaddr_reg:x3; val_offset:18987*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18987*0 + 3*185*FLEN/8, x4, x1, x2)

inst_6330:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900000000fffff; valaddr_reg:x3; val_offset:18990*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18990*0 + 3*186*FLEN/8, x4, x1, x2)

inst_6331:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900000001fffff; valaddr_reg:x3; val_offset:18993*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18993*0 + 3*187*FLEN/8, x4, x1, x2)

inst_6332:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900000003fffff; valaddr_reg:x3; val_offset:18996*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18996*0 + 3*188*FLEN/8, x4, x1, x2)

inst_6333:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900000007fffff; valaddr_reg:x3; val_offset:18999*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 18999*0 + 3*189*FLEN/8, x4, x1, x2)

inst_6334:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000000ffffff; valaddr_reg:x3; val_offset:19002*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19002*0 + 3*190*FLEN/8, x4, x1, x2)

inst_6335:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000001ffffff; valaddr_reg:x3; val_offset:19005*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19005*0 + 3*191*FLEN/8, x4, x1, x2)

inst_6336:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000003ffffff; valaddr_reg:x3; val_offset:19008*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19008*0 + 3*192*FLEN/8, x4, x1, x2)

inst_6337:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000007ffffff; valaddr_reg:x3; val_offset:19011*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19011*0 + 3*193*FLEN/8, x4, x1, x2)

inst_6338:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000000fffffff; valaddr_reg:x3; val_offset:19014*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19014*0 + 3*194*FLEN/8, x4, x1, x2)

inst_6339:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000001fffffff; valaddr_reg:x3; val_offset:19017*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19017*0 + 3*195*FLEN/8, x4, x1, x2)

inst_6340:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000003fffffff; valaddr_reg:x3; val_offset:19020*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19020*0 + 3*196*FLEN/8, x4, x1, x2)

inst_6341:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000007fffffff; valaddr_reg:x3; val_offset:19023*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19023*0 + 3*197*FLEN/8, x4, x1, x2)

inst_6342:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900000ffffffff; valaddr_reg:x3; val_offset:19026*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19026*0 + 3*198*FLEN/8, x4, x1, x2)

inst_6343:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900001ffffffff; valaddr_reg:x3; val_offset:19029*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19029*0 + 3*199*FLEN/8, x4, x1, x2)

inst_6344:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900003ffffffff; valaddr_reg:x3; val_offset:19032*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19032*0 + 3*200*FLEN/8, x4, x1, x2)

inst_6345:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900007ffffffff; valaddr_reg:x3; val_offset:19035*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19035*0 + 3*201*FLEN/8, x4, x1, x2)

inst_6346:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290000fffffffff; valaddr_reg:x3; val_offset:19038*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19038*0 + 3*202*FLEN/8, x4, x1, x2)

inst_6347:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290001fffffffff; valaddr_reg:x3; val_offset:19041*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19041*0 + 3*203*FLEN/8, x4, x1, x2)

inst_6348:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290003fffffffff; valaddr_reg:x3; val_offset:19044*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19044*0 + 3*204*FLEN/8, x4, x1, x2)

inst_6349:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290007fffffffff; valaddr_reg:x3; val_offset:19047*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19047*0 + 3*205*FLEN/8, x4, x1, x2)

inst_6350:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829000ffffffffff; valaddr_reg:x3; val_offset:19050*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19050*0 + 3*206*FLEN/8, x4, x1, x2)

inst_6351:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829001ffffffffff; valaddr_reg:x3; val_offset:19053*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19053*0 + 3*207*FLEN/8, x4, x1, x2)

inst_6352:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829003ffffffffff; valaddr_reg:x3; val_offset:19056*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19056*0 + 3*208*FLEN/8, x4, x1, x2)

inst_6353:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829007ffffffffff; valaddr_reg:x3; val_offset:19059*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19059*0 + 3*209*FLEN/8, x4, x1, x2)

inst_6354:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82900fffffffffff; valaddr_reg:x3; val_offset:19062*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19062*0 + 3*210*FLEN/8, x4, x1, x2)

inst_6355:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82901fffffffffff; valaddr_reg:x3; val_offset:19065*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19065*0 + 3*211*FLEN/8, x4, x1, x2)

inst_6356:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82903fffffffffff; valaddr_reg:x3; val_offset:19068*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19068*0 + 3*212*FLEN/8, x4, x1, x2)

inst_6357:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x82907fffffffffff; valaddr_reg:x3; val_offset:19071*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19071*0 + 3*213*FLEN/8, x4, x1, x2)

inst_6358:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8290ffffffffffff; valaddr_reg:x3; val_offset:19074*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19074*0 + 3*214*FLEN/8, x4, x1, x2)

inst_6359:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8291ffffffffffff; valaddr_reg:x3; val_offset:19077*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19077*0 + 3*215*FLEN/8, x4, x1, x2)

inst_6360:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8293ffffffffffff; valaddr_reg:x3; val_offset:19080*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19080*0 + 3*216*FLEN/8, x4, x1, x2)

inst_6361:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8297ffffffffffff; valaddr_reg:x3; val_offset:19083*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19083*0 + 3*217*FLEN/8, x4, x1, x2)

inst_6362:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x8298000000000000; valaddr_reg:x3; val_offset:19086*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19086*0 + 3*218*FLEN/8, x4, x1, x2)

inst_6363:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829c000000000000; valaddr_reg:x3; val_offset:19089*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19089*0 + 3*219*FLEN/8, x4, x1, x2)

inst_6364:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829e000000000000; valaddr_reg:x3; val_offset:19092*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19092*0 + 3*220*FLEN/8, x4, x1, x2)

inst_6365:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829f000000000000; valaddr_reg:x3; val_offset:19095*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19095*0 + 3*221*FLEN/8, x4, x1, x2)

inst_6366:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829f800000000000; valaddr_reg:x3; val_offset:19098*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19098*0 + 3*222*FLEN/8, x4, x1, x2)

inst_6367:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fc00000000000; valaddr_reg:x3; val_offset:19101*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19101*0 + 3*223*FLEN/8, x4, x1, x2)

inst_6368:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fe00000000000; valaddr_reg:x3; val_offset:19104*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19104*0 + 3*224*FLEN/8, x4, x1, x2)

inst_6369:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ff00000000000; valaddr_reg:x3; val_offset:19107*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19107*0 + 3*225*FLEN/8, x4, x1, x2)

inst_6370:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ff80000000000; valaddr_reg:x3; val_offset:19110*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19110*0 + 3*226*FLEN/8, x4, x1, x2)

inst_6371:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffc0000000000; valaddr_reg:x3; val_offset:19113*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19113*0 + 3*227*FLEN/8, x4, x1, x2)

inst_6372:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffe0000000000; valaddr_reg:x3; val_offset:19116*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19116*0 + 3*228*FLEN/8, x4, x1, x2)

inst_6373:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fff0000000000; valaddr_reg:x3; val_offset:19119*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19119*0 + 3*229*FLEN/8, x4, x1, x2)

inst_6374:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fff8000000000; valaddr_reg:x3; val_offset:19122*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19122*0 + 3*230*FLEN/8, x4, x1, x2)

inst_6375:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffc000000000; valaddr_reg:x3; val_offset:19125*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19125*0 + 3*231*FLEN/8, x4, x1, x2)

inst_6376:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffe000000000; valaddr_reg:x3; val_offset:19128*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19128*0 + 3*232*FLEN/8, x4, x1, x2)

inst_6377:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffff000000000; valaddr_reg:x3; val_offset:19131*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19131*0 + 3*233*FLEN/8, x4, x1, x2)

inst_6378:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffff800000000; valaddr_reg:x3; val_offset:19134*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19134*0 + 3*234*FLEN/8, x4, x1, x2)

inst_6379:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffc00000000; valaddr_reg:x3; val_offset:19137*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19137*0 + 3*235*FLEN/8, x4, x1, x2)

inst_6380:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffe00000000; valaddr_reg:x3; val_offset:19140*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19140*0 + 3*236*FLEN/8, x4, x1, x2)

inst_6381:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffff00000000; valaddr_reg:x3; val_offset:19143*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19143*0 + 3*237*FLEN/8, x4, x1, x2)

inst_6382:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffff80000000; valaddr_reg:x3; val_offset:19146*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19146*0 + 3*238*FLEN/8, x4, x1, x2)

inst_6383:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffc0000000; valaddr_reg:x3; val_offset:19149*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19149*0 + 3*239*FLEN/8, x4, x1, x2)

inst_6384:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffe0000000; valaddr_reg:x3; val_offset:19152*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19152*0 + 3*240*FLEN/8, x4, x1, x2)

inst_6385:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffff0000000; valaddr_reg:x3; val_offset:19155*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19155*0 + 3*241*FLEN/8, x4, x1, x2)

inst_6386:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffff8000000; valaddr_reg:x3; val_offset:19158*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19158*0 + 3*242*FLEN/8, x4, x1, x2)

inst_6387:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffc000000; valaddr_reg:x3; val_offset:19161*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19161*0 + 3*243*FLEN/8, x4, x1, x2)

inst_6388:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffe000000; valaddr_reg:x3; val_offset:19164*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19164*0 + 3*244*FLEN/8, x4, x1, x2)

inst_6389:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffff000000; valaddr_reg:x3; val_offset:19167*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19167*0 + 3*245*FLEN/8, x4, x1, x2)

inst_6390:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffff800000; valaddr_reg:x3; val_offset:19170*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19170*0 + 3*246*FLEN/8, x4, x1, x2)

inst_6391:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffffc00000; valaddr_reg:x3; val_offset:19173*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19173*0 + 3*247*FLEN/8, x4, x1, x2)

inst_6392:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffffe00000; valaddr_reg:x3; val_offset:19176*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19176*0 + 3*248*FLEN/8, x4, x1, x2)

inst_6393:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffff00000; valaddr_reg:x3; val_offset:19179*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19179*0 + 3*249*FLEN/8, x4, x1, x2)

inst_6394:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffff80000; valaddr_reg:x3; val_offset:19182*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19182*0 + 3*250*FLEN/8, x4, x1, x2)

inst_6395:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffffc0000; valaddr_reg:x3; val_offset:19185*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19185*0 + 3*251*FLEN/8, x4, x1, x2)

inst_6396:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffffe0000; valaddr_reg:x3; val_offset:19188*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19188*0 + 3*252*FLEN/8, x4, x1, x2)

inst_6397:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffffff0000; valaddr_reg:x3; val_offset:19191*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19191*0 + 3*253*FLEN/8, x4, x1, x2)

inst_6398:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffffff8000; valaddr_reg:x3; val_offset:19194*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19194*0 + 3*254*FLEN/8, x4, x1, x2)

inst_6399:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffffffc000; valaddr_reg:x3; val_offset:19197*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19197*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_6400:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffffffe000; valaddr_reg:x3; val_offset:19200*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19200*0 + 3*256*FLEN/8, x4, x1, x2)

inst_6401:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffffff000; valaddr_reg:x3; val_offset:19203*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19203*0 + 3*257*FLEN/8, x4, x1, x2)

inst_6402:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffffff800; valaddr_reg:x3; val_offset:19206*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19206*0 + 3*258*FLEN/8, x4, x1, x2)

inst_6403:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffffffc00; valaddr_reg:x3; val_offset:19209*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19209*0 + 3*259*FLEN/8, x4, x1, x2)

inst_6404:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffffffe00; valaddr_reg:x3; val_offset:19212*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19212*0 + 3*260*FLEN/8, x4, x1, x2)

inst_6405:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffffffff00; valaddr_reg:x3; val_offset:19215*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19215*0 + 3*261*FLEN/8, x4, x1, x2)

inst_6406:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffffffff80; valaddr_reg:x3; val_offset:19218*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19218*0 + 3*262*FLEN/8, x4, x1, x2)

inst_6407:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffffffffc0; valaddr_reg:x3; val_offset:19221*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19221*0 + 3*263*FLEN/8, x4, x1, x2)

inst_6408:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffffffffe0; valaddr_reg:x3; val_offset:19224*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19224*0 + 3*264*FLEN/8, x4, x1, x2)

inst_6409:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffffffff0; valaddr_reg:x3; val_offset:19227*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19227*0 + 3*265*FLEN/8, x4, x1, x2)

inst_6410:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffffffff8; valaddr_reg:x3; val_offset:19230*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19230*0 + 3*266*FLEN/8, x4, x1, x2)

inst_6411:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffffffffc; valaddr_reg:x3; val_offset:19233*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19233*0 + 3*267*FLEN/8, x4, x1, x2)

inst_6412:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829ffffffffffffe; valaddr_reg:x3; val_offset:19236*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19236*0 + 3*268*FLEN/8, x4, x1, x2)

inst_6413:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xad4f178ca19af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ad4f178ca19af; op2val:0x8000;
op3val:0x829fffffffffffff; valaddr_reg:x3; val_offset:19239*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19239*0 + 3*269*FLEN/8, x4, x1, x2)

inst_6414:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:19242*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19242*0 + 3*270*FLEN/8, x4, x1, x2)

inst_6415:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:19245*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19245*0 + 3*271*FLEN/8, x4, x1, x2)

inst_6416:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:19248*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19248*0 + 3*272*FLEN/8, x4, x1, x2)

inst_6417:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:19251*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19251*0 + 3*273*FLEN/8, x4, x1, x2)

inst_6418:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:19254*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19254*0 + 3*274*FLEN/8, x4, x1, x2)

inst_6419:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:19257*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19257*0 + 3*275*FLEN/8, x4, x1, x2)

inst_6420:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:19260*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19260*0 + 3*276*FLEN/8, x4, x1, x2)

inst_6421:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:19263*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19263*0 + 3*277*FLEN/8, x4, x1, x2)

inst_6422:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:19266*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19266*0 + 3*278*FLEN/8, x4, x1, x2)

inst_6423:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:19269*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19269*0 + 3*279*FLEN/8, x4, x1, x2)

inst_6424:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:19272*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19272*0 + 3*280*FLEN/8, x4, x1, x2)

inst_6425:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:19275*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19275*0 + 3*281*FLEN/8, x4, x1, x2)

inst_6426:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:19278*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19278*0 + 3*282*FLEN/8, x4, x1, x2)

inst_6427:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:19281*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19281*0 + 3*283*FLEN/8, x4, x1, x2)

inst_6428:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:19284*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19284*0 + 3*284*FLEN/8, x4, x1, x2)

inst_6429:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:19287*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19287*0 + 3*285*FLEN/8, x4, x1, x2)

inst_6430:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:19290*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19290*0 + 3*286*FLEN/8, x4, x1, x2)

inst_6431:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:19293*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19293*0 + 3*287*FLEN/8, x4, x1, x2)

inst_6432:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:19296*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19296*0 + 3*288*FLEN/8, x4, x1, x2)

inst_6433:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:19299*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19299*0 + 3*289*FLEN/8, x4, x1, x2)

inst_6434:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:19302*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19302*0 + 3*290*FLEN/8, x4, x1, x2)

inst_6435:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:19305*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19305*0 + 3*291*FLEN/8, x4, x1, x2)

inst_6436:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000000000000; valaddr_reg:x3; val_offset:19308*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19308*0 + 3*292*FLEN/8, x4, x1, x2)

inst_6437:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000000000001; valaddr_reg:x3; val_offset:19311*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19311*0 + 3*293*FLEN/8, x4, x1, x2)

inst_6438:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000000000003; valaddr_reg:x3; val_offset:19314*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19314*0 + 3*294*FLEN/8, x4, x1, x2)

inst_6439:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000000000007; valaddr_reg:x3; val_offset:19317*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19317*0 + 3*295*FLEN/8, x4, x1, x2)

inst_6440:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000000000000f; valaddr_reg:x3; val_offset:19320*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19320*0 + 3*296*FLEN/8, x4, x1, x2)

inst_6441:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000000000001f; valaddr_reg:x3; val_offset:19323*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19323*0 + 3*297*FLEN/8, x4, x1, x2)

inst_6442:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000000000003f; valaddr_reg:x3; val_offset:19326*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19326*0 + 3*298*FLEN/8, x4, x1, x2)

inst_6443:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000000000007f; valaddr_reg:x3; val_offset:19329*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19329*0 + 3*299*FLEN/8, x4, x1, x2)

inst_6444:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00000000000ff; valaddr_reg:x3; val_offset:19332*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19332*0 + 3*300*FLEN/8, x4, x1, x2)

inst_6445:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00000000001ff; valaddr_reg:x3; val_offset:19335*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19335*0 + 3*301*FLEN/8, x4, x1, x2)

inst_6446:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00000000003ff; valaddr_reg:x3; val_offset:19338*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19338*0 + 3*302*FLEN/8, x4, x1, x2)

inst_6447:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00000000007ff; valaddr_reg:x3; val_offset:19341*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19341*0 + 3*303*FLEN/8, x4, x1, x2)

inst_6448:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000000000fff; valaddr_reg:x3; val_offset:19344*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19344*0 + 3*304*FLEN/8, x4, x1, x2)

inst_6449:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000000001fff; valaddr_reg:x3; val_offset:19347*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19347*0 + 3*305*FLEN/8, x4, x1, x2)

inst_6450:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000000003fff; valaddr_reg:x3; val_offset:19350*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19350*0 + 3*306*FLEN/8, x4, x1, x2)

inst_6451:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000000007fff; valaddr_reg:x3; val_offset:19353*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19353*0 + 3*307*FLEN/8, x4, x1, x2)

inst_6452:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000000000ffff; valaddr_reg:x3; val_offset:19356*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19356*0 + 3*308*FLEN/8, x4, x1, x2)

inst_6453:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000000001ffff; valaddr_reg:x3; val_offset:19359*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19359*0 + 3*309*FLEN/8, x4, x1, x2)

inst_6454:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000000003ffff; valaddr_reg:x3; val_offset:19362*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19362*0 + 3*310*FLEN/8, x4, x1, x2)

inst_6455:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000000007ffff; valaddr_reg:x3; val_offset:19365*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19365*0 + 3*311*FLEN/8, x4, x1, x2)

inst_6456:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00000000fffff; valaddr_reg:x3; val_offset:19368*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19368*0 + 3*312*FLEN/8, x4, x1, x2)

inst_6457:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00000001fffff; valaddr_reg:x3; val_offset:19371*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19371*0 + 3*313*FLEN/8, x4, x1, x2)

inst_6458:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00000003fffff; valaddr_reg:x3; val_offset:19374*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19374*0 + 3*314*FLEN/8, x4, x1, x2)

inst_6459:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00000007fffff; valaddr_reg:x3; val_offset:19377*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19377*0 + 3*315*FLEN/8, x4, x1, x2)

inst_6460:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000000ffffff; valaddr_reg:x3; val_offset:19380*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19380*0 + 3*316*FLEN/8, x4, x1, x2)

inst_6461:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000001ffffff; valaddr_reg:x3; val_offset:19383*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19383*0 + 3*317*FLEN/8, x4, x1, x2)

inst_6462:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000003ffffff; valaddr_reg:x3; val_offset:19386*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19386*0 + 3*318*FLEN/8, x4, x1, x2)

inst_6463:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000007ffffff; valaddr_reg:x3; val_offset:19389*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19389*0 + 3*319*FLEN/8, x4, x1, x2)

inst_6464:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000000fffffff; valaddr_reg:x3; val_offset:19392*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19392*0 + 3*320*FLEN/8, x4, x1, x2)

inst_6465:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000001fffffff; valaddr_reg:x3; val_offset:19395*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19395*0 + 3*321*FLEN/8, x4, x1, x2)

inst_6466:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000003fffffff; valaddr_reg:x3; val_offset:19398*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19398*0 + 3*322*FLEN/8, x4, x1, x2)

inst_6467:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000007fffffff; valaddr_reg:x3; val_offset:19401*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19401*0 + 3*323*FLEN/8, x4, x1, x2)

inst_6468:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00000ffffffff; valaddr_reg:x3; val_offset:19404*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19404*0 + 3*324*FLEN/8, x4, x1, x2)

inst_6469:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00001ffffffff; valaddr_reg:x3; val_offset:19407*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19407*0 + 3*325*FLEN/8, x4, x1, x2)

inst_6470:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00003ffffffff; valaddr_reg:x3; val_offset:19410*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19410*0 + 3*326*FLEN/8, x4, x1, x2)

inst_6471:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00007ffffffff; valaddr_reg:x3; val_offset:19413*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19413*0 + 3*327*FLEN/8, x4, x1, x2)

inst_6472:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0000fffffffff; valaddr_reg:x3; val_offset:19416*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19416*0 + 3*328*FLEN/8, x4, x1, x2)

inst_6473:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0001fffffffff; valaddr_reg:x3; val_offset:19419*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19419*0 + 3*329*FLEN/8, x4, x1, x2)

inst_6474:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0003fffffffff; valaddr_reg:x3; val_offset:19422*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19422*0 + 3*330*FLEN/8, x4, x1, x2)

inst_6475:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0007fffffffff; valaddr_reg:x3; val_offset:19425*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19425*0 + 3*331*FLEN/8, x4, x1, x2)

inst_6476:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c000ffffffffff; valaddr_reg:x3; val_offset:19428*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19428*0 + 3*332*FLEN/8, x4, x1, x2)

inst_6477:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c001ffffffffff; valaddr_reg:x3; val_offset:19431*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19431*0 + 3*333*FLEN/8, x4, x1, x2)

inst_6478:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c003ffffffffff; valaddr_reg:x3; val_offset:19434*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19434*0 + 3*334*FLEN/8, x4, x1, x2)

inst_6479:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c007ffffffffff; valaddr_reg:x3; val_offset:19437*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19437*0 + 3*335*FLEN/8, x4, x1, x2)

inst_6480:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c00fffffffffff; valaddr_reg:x3; val_offset:19440*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19440*0 + 3*336*FLEN/8, x4, x1, x2)

inst_6481:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c01fffffffffff; valaddr_reg:x3; val_offset:19443*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19443*0 + 3*337*FLEN/8, x4, x1, x2)

inst_6482:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c03fffffffffff; valaddr_reg:x3; val_offset:19446*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19446*0 + 3*338*FLEN/8, x4, x1, x2)

inst_6483:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c07fffffffffff; valaddr_reg:x3; val_offset:19449*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19449*0 + 3*339*FLEN/8, x4, x1, x2)

inst_6484:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c0ffffffffffff; valaddr_reg:x3; val_offset:19452*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19452*0 + 3*340*FLEN/8, x4, x1, x2)

inst_6485:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c1ffffffffffff; valaddr_reg:x3; val_offset:19455*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19455*0 + 3*341*FLEN/8, x4, x1, x2)

inst_6486:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c3ffffffffffff; valaddr_reg:x3; val_offset:19458*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19458*0 + 3*342*FLEN/8, x4, x1, x2)

inst_6487:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c7ffffffffffff; valaddr_reg:x3; val_offset:19461*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19461*0 + 3*343*FLEN/8, x4, x1, x2)

inst_6488:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2c8000000000000; valaddr_reg:x3; val_offset:19464*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19464*0 + 3*344*FLEN/8, x4, x1, x2)

inst_6489:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cc000000000000; valaddr_reg:x3; val_offset:19467*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19467*0 + 3*345*FLEN/8, x4, x1, x2)

inst_6490:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2ce000000000000; valaddr_reg:x3; val_offset:19470*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19470*0 + 3*346*FLEN/8, x4, x1, x2)

inst_6491:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cf000000000000; valaddr_reg:x3; val_offset:19473*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19473*0 + 3*347*FLEN/8, x4, x1, x2)

inst_6492:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cf800000000000; valaddr_reg:x3; val_offset:19476*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19476*0 + 3*348*FLEN/8, x4, x1, x2)

inst_6493:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfc00000000000; valaddr_reg:x3; val_offset:19479*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19479*0 + 3*349*FLEN/8, x4, x1, x2)

inst_6494:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfe00000000000; valaddr_reg:x3; val_offset:19482*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19482*0 + 3*350*FLEN/8, x4, x1, x2)

inst_6495:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cff00000000000; valaddr_reg:x3; val_offset:19485*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19485*0 + 3*351*FLEN/8, x4, x1, x2)

inst_6496:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cff80000000000; valaddr_reg:x3; val_offset:19488*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19488*0 + 3*352*FLEN/8, x4, x1, x2)

inst_6497:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffc0000000000; valaddr_reg:x3; val_offset:19491*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19491*0 + 3*353*FLEN/8, x4, x1, x2)

inst_6498:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffe0000000000; valaddr_reg:x3; val_offset:19494*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19494*0 + 3*354*FLEN/8, x4, x1, x2)

inst_6499:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfff0000000000; valaddr_reg:x3; val_offset:19497*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19497*0 + 3*355*FLEN/8, x4, x1, x2)

inst_6500:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfff8000000000; valaddr_reg:x3; val_offset:19500*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19500*0 + 3*356*FLEN/8, x4, x1, x2)

inst_6501:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffc000000000; valaddr_reg:x3; val_offset:19503*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19503*0 + 3*357*FLEN/8, x4, x1, x2)

inst_6502:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffe000000000; valaddr_reg:x3; val_offset:19506*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19506*0 + 3*358*FLEN/8, x4, x1, x2)

inst_6503:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffff000000000; valaddr_reg:x3; val_offset:19509*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19509*0 + 3*359*FLEN/8, x4, x1, x2)

inst_6504:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffff800000000; valaddr_reg:x3; val_offset:19512*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19512*0 + 3*360*FLEN/8, x4, x1, x2)

inst_6505:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffc00000000; valaddr_reg:x3; val_offset:19515*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19515*0 + 3*361*FLEN/8, x4, x1, x2)

inst_6506:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffe00000000; valaddr_reg:x3; val_offset:19518*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19518*0 + 3*362*FLEN/8, x4, x1, x2)

inst_6507:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffff00000000; valaddr_reg:x3; val_offset:19521*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19521*0 + 3*363*FLEN/8, x4, x1, x2)

inst_6508:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffff80000000; valaddr_reg:x3; val_offset:19524*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19524*0 + 3*364*FLEN/8, x4, x1, x2)

inst_6509:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffc0000000; valaddr_reg:x3; val_offset:19527*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19527*0 + 3*365*FLEN/8, x4, x1, x2)

inst_6510:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffe0000000; valaddr_reg:x3; val_offset:19530*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19530*0 + 3*366*FLEN/8, x4, x1, x2)

inst_6511:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffff0000000; valaddr_reg:x3; val_offset:19533*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19533*0 + 3*367*FLEN/8, x4, x1, x2)

inst_6512:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffff8000000; valaddr_reg:x3; val_offset:19536*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19536*0 + 3*368*FLEN/8, x4, x1, x2)

inst_6513:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffc000000; valaddr_reg:x3; val_offset:19539*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19539*0 + 3*369*FLEN/8, x4, x1, x2)

inst_6514:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffe000000; valaddr_reg:x3; val_offset:19542*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19542*0 + 3*370*FLEN/8, x4, x1, x2)

inst_6515:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffff000000; valaddr_reg:x3; val_offset:19545*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19545*0 + 3*371*FLEN/8, x4, x1, x2)

inst_6516:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffff800000; valaddr_reg:x3; val_offset:19548*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19548*0 + 3*372*FLEN/8, x4, x1, x2)

inst_6517:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffffc00000; valaddr_reg:x3; val_offset:19551*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19551*0 + 3*373*FLEN/8, x4, x1, x2)

inst_6518:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffffe00000; valaddr_reg:x3; val_offset:19554*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19554*0 + 3*374*FLEN/8, x4, x1, x2)

inst_6519:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffff00000; valaddr_reg:x3; val_offset:19557*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19557*0 + 3*375*FLEN/8, x4, x1, x2)

inst_6520:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffff80000; valaddr_reg:x3; val_offset:19560*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19560*0 + 3*376*FLEN/8, x4, x1, x2)

inst_6521:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffffc0000; valaddr_reg:x3; val_offset:19563*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19563*0 + 3*377*FLEN/8, x4, x1, x2)

inst_6522:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffffe0000; valaddr_reg:x3; val_offset:19566*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19566*0 + 3*378*FLEN/8, x4, x1, x2)

inst_6523:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffffff0000; valaddr_reg:x3; val_offset:19569*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19569*0 + 3*379*FLEN/8, x4, x1, x2)

inst_6524:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffffff8000; valaddr_reg:x3; val_offset:19572*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19572*0 + 3*380*FLEN/8, x4, x1, x2)

inst_6525:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffffffc000; valaddr_reg:x3; val_offset:19575*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19575*0 + 3*381*FLEN/8, x4, x1, x2)

inst_6526:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffffffe000; valaddr_reg:x3; val_offset:19578*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19578*0 + 3*382*FLEN/8, x4, x1, x2)

inst_6527:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffffff000; valaddr_reg:x3; val_offset:19581*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19581*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_6528:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffffff800; valaddr_reg:x3; val_offset:19584*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19584*0 + 3*384*FLEN/8, x4, x1, x2)

inst_6529:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffffffc00; valaddr_reg:x3; val_offset:19587*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19587*0 + 3*385*FLEN/8, x4, x1, x2)

inst_6530:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffffffe00; valaddr_reg:x3; val_offset:19590*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19590*0 + 3*386*FLEN/8, x4, x1, x2)

inst_6531:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffffffff00; valaddr_reg:x3; val_offset:19593*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19593*0 + 3*387*FLEN/8, x4, x1, x2)

inst_6532:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffffffff80; valaddr_reg:x3; val_offset:19596*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19596*0 + 3*388*FLEN/8, x4, x1, x2)

inst_6533:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffffffffc0; valaddr_reg:x3; val_offset:19599*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19599*0 + 3*389*FLEN/8, x4, x1, x2)

inst_6534:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffffffffe0; valaddr_reg:x3; val_offset:19602*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19602*0 + 3*390*FLEN/8, x4, x1, x2)

inst_6535:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffffffff0; valaddr_reg:x3; val_offset:19605*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19605*0 + 3*391*FLEN/8, x4, x1, x2)

inst_6536:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffffffff8; valaddr_reg:x3; val_offset:19608*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19608*0 + 3*392*FLEN/8, x4, x1, x2)

inst_6537:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffffffffc; valaddr_reg:x3; val_offset:19611*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19611*0 + 3*393*FLEN/8, x4, x1, x2)

inst_6538:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cffffffffffffe; valaddr_reg:x3; val_offset:19614*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19614*0 + 3*394*FLEN/8, x4, x1, x2)

inst_6539:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xae8448a6c41ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ae8448a6c41ff; op2val:0x0;
op3val:0x2cfffffffffffff; valaddr_reg:x3; val_offset:19617*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19617*0 + 3*395*FLEN/8, x4, x1, x2)

inst_6540:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:19620*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19620*0 + 3*396*FLEN/8, x4, x1, x2)

inst_6541:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:19623*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19623*0 + 3*397*FLEN/8, x4, x1, x2)

inst_6542:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:19626*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19626*0 + 3*398*FLEN/8, x4, x1, x2)

inst_6543:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:19629*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19629*0 + 3*399*FLEN/8, x4, x1, x2)

inst_6544:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:19632*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19632*0 + 3*400*FLEN/8, x4, x1, x2)

inst_6545:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:19635*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19635*0 + 3*401*FLEN/8, x4, x1, x2)

inst_6546:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:19638*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19638*0 + 3*402*FLEN/8, x4, x1, x2)

inst_6547:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:19641*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19641*0 + 3*403*FLEN/8, x4, x1, x2)

inst_6548:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:19644*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19644*0 + 3*404*FLEN/8, x4, x1, x2)

inst_6549:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:19647*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19647*0 + 3*405*FLEN/8, x4, x1, x2)

inst_6550:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:19650*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19650*0 + 3*406*FLEN/8, x4, x1, x2)

inst_6551:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:19653*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19653*0 + 3*407*FLEN/8, x4, x1, x2)

inst_6552:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:19656*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19656*0 + 3*408*FLEN/8, x4, x1, x2)

inst_6553:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:19659*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19659*0 + 3*409*FLEN/8, x4, x1, x2)

inst_6554:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:19662*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19662*0 + 3*410*FLEN/8, x4, x1, x2)

inst_6555:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:19665*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19665*0 + 3*411*FLEN/8, x4, x1, x2)

inst_6556:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:19668*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19668*0 + 3*412*FLEN/8, x4, x1, x2)

inst_6557:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:19671*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19671*0 + 3*413*FLEN/8, x4, x1, x2)

inst_6558:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:19674*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19674*0 + 3*414*FLEN/8, x4, x1, x2)

inst_6559:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:19677*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19677*0 + 3*415*FLEN/8, x4, x1, x2)

inst_6560:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:19680*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19680*0 + 3*416*FLEN/8, x4, x1, x2)

inst_6561:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:19683*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19683*0 + 3*417*FLEN/8, x4, x1, x2)

inst_6562:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000000000000; valaddr_reg:x3; val_offset:19686*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19686*0 + 3*418*FLEN/8, x4, x1, x2)

inst_6563:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000000000001; valaddr_reg:x3; val_offset:19689*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19689*0 + 3*419*FLEN/8, x4, x1, x2)

inst_6564:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000000000003; valaddr_reg:x3; val_offset:19692*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19692*0 + 3*420*FLEN/8, x4, x1, x2)

inst_6565:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000000000007; valaddr_reg:x3; val_offset:19695*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19695*0 + 3*421*FLEN/8, x4, x1, x2)

inst_6566:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000000000000f; valaddr_reg:x3; val_offset:19698*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19698*0 + 3*422*FLEN/8, x4, x1, x2)

inst_6567:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000000000001f; valaddr_reg:x3; val_offset:19701*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19701*0 + 3*423*FLEN/8, x4, x1, x2)

inst_6568:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000000000003f; valaddr_reg:x3; val_offset:19704*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19704*0 + 3*424*FLEN/8, x4, x1, x2)

inst_6569:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000000000007f; valaddr_reg:x3; val_offset:19707*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19707*0 + 3*425*FLEN/8, x4, x1, x2)

inst_6570:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000000000000ff; valaddr_reg:x3; val_offset:19710*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19710*0 + 3*426*FLEN/8, x4, x1, x2)

inst_6571:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000000000001ff; valaddr_reg:x3; val_offset:19713*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19713*0 + 3*427*FLEN/8, x4, x1, x2)

inst_6572:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000000000003ff; valaddr_reg:x3; val_offset:19716*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19716*0 + 3*428*FLEN/8, x4, x1, x2)

inst_6573:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000000000007ff; valaddr_reg:x3; val_offset:19719*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19719*0 + 3*429*FLEN/8, x4, x1, x2)

inst_6574:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000000000fff; valaddr_reg:x3; val_offset:19722*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19722*0 + 3*430*FLEN/8, x4, x1, x2)

inst_6575:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000000001fff; valaddr_reg:x3; val_offset:19725*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19725*0 + 3*431*FLEN/8, x4, x1, x2)

inst_6576:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000000003fff; valaddr_reg:x3; val_offset:19728*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19728*0 + 3*432*FLEN/8, x4, x1, x2)

inst_6577:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000000007fff; valaddr_reg:x3; val_offset:19731*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19731*0 + 3*433*FLEN/8, x4, x1, x2)

inst_6578:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000000000ffff; valaddr_reg:x3; val_offset:19734*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19734*0 + 3*434*FLEN/8, x4, x1, x2)

inst_6579:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000000001ffff; valaddr_reg:x3; val_offset:19737*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19737*0 + 3*435*FLEN/8, x4, x1, x2)

inst_6580:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000000003ffff; valaddr_reg:x3; val_offset:19740*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19740*0 + 3*436*FLEN/8, x4, x1, x2)

inst_6581:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000000007ffff; valaddr_reg:x3; val_offset:19743*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19743*0 + 3*437*FLEN/8, x4, x1, x2)

inst_6582:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000000000fffff; valaddr_reg:x3; val_offset:19746*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19746*0 + 3*438*FLEN/8, x4, x1, x2)

inst_6583:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000000001fffff; valaddr_reg:x3; val_offset:19749*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19749*0 + 3*439*FLEN/8, x4, x1, x2)

inst_6584:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000000003fffff; valaddr_reg:x3; val_offset:19752*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19752*0 + 3*440*FLEN/8, x4, x1, x2)

inst_6585:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000000007fffff; valaddr_reg:x3; val_offset:19755*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19755*0 + 3*441*FLEN/8, x4, x1, x2)

inst_6586:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000000ffffff; valaddr_reg:x3; val_offset:19758*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19758*0 + 3*442*FLEN/8, x4, x1, x2)

inst_6587:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000001ffffff; valaddr_reg:x3; val_offset:19761*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19761*0 + 3*443*FLEN/8, x4, x1, x2)

inst_6588:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000003ffffff; valaddr_reg:x3; val_offset:19764*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19764*0 + 3*444*FLEN/8, x4, x1, x2)

inst_6589:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000007ffffff; valaddr_reg:x3; val_offset:19767*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19767*0 + 3*445*FLEN/8, x4, x1, x2)

inst_6590:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000000fffffff; valaddr_reg:x3; val_offset:19770*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19770*0 + 3*446*FLEN/8, x4, x1, x2)

inst_6591:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000001fffffff; valaddr_reg:x3; val_offset:19773*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19773*0 + 3*447*FLEN/8, x4, x1, x2)

inst_6592:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000003fffffff; valaddr_reg:x3; val_offset:19776*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19776*0 + 3*448*FLEN/8, x4, x1, x2)

inst_6593:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000007fffffff; valaddr_reg:x3; val_offset:19779*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19779*0 + 3*449*FLEN/8, x4, x1, x2)

inst_6594:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000000ffffffff; valaddr_reg:x3; val_offset:19782*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19782*0 + 3*450*FLEN/8, x4, x1, x2)

inst_6595:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000001ffffffff; valaddr_reg:x3; val_offset:19785*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19785*0 + 3*451*FLEN/8, x4, x1, x2)

inst_6596:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000003ffffffff; valaddr_reg:x3; val_offset:19788*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19788*0 + 3*452*FLEN/8, x4, x1, x2)

inst_6597:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000007ffffffff; valaddr_reg:x3; val_offset:19791*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19791*0 + 3*453*FLEN/8, x4, x1, x2)

inst_6598:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200000fffffffff; valaddr_reg:x3; val_offset:19794*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19794*0 + 3*454*FLEN/8, x4, x1, x2)

inst_6599:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200001fffffffff; valaddr_reg:x3; val_offset:19797*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19797*0 + 3*455*FLEN/8, x4, x1, x2)

inst_6600:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200003fffffffff; valaddr_reg:x3; val_offset:19800*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19800*0 + 3*456*FLEN/8, x4, x1, x2)

inst_6601:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200007fffffffff; valaddr_reg:x3; val_offset:19803*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19803*0 + 3*457*FLEN/8, x4, x1, x2)

inst_6602:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20000ffffffffff; valaddr_reg:x3; val_offset:19806*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19806*0 + 3*458*FLEN/8, x4, x1, x2)

inst_6603:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20001ffffffffff; valaddr_reg:x3; val_offset:19809*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19809*0 + 3*459*FLEN/8, x4, x1, x2)

inst_6604:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20003ffffffffff; valaddr_reg:x3; val_offset:19812*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19812*0 + 3*460*FLEN/8, x4, x1, x2)

inst_6605:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20007ffffffffff; valaddr_reg:x3; val_offset:19815*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19815*0 + 3*461*FLEN/8, x4, x1, x2)

inst_6606:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2000fffffffffff; valaddr_reg:x3; val_offset:19818*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19818*0 + 3*462*FLEN/8, x4, x1, x2)

inst_6607:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2001fffffffffff; valaddr_reg:x3; val_offset:19821*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19821*0 + 3*463*FLEN/8, x4, x1, x2)

inst_6608:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2003fffffffffff; valaddr_reg:x3; val_offset:19824*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19824*0 + 3*464*FLEN/8, x4, x1, x2)

inst_6609:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x2007fffffffffff; valaddr_reg:x3; val_offset:19827*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19827*0 + 3*465*FLEN/8, x4, x1, x2)

inst_6610:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x200ffffffffffff; valaddr_reg:x3; val_offset:19830*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19830*0 + 3*466*FLEN/8, x4, x1, x2)

inst_6611:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x201ffffffffffff; valaddr_reg:x3; val_offset:19833*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19833*0 + 3*467*FLEN/8, x4, x1, x2)

inst_6612:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x203ffffffffffff; valaddr_reg:x3; val_offset:19836*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19836*0 + 3*468*FLEN/8, x4, x1, x2)

inst_6613:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x207ffffffffffff; valaddr_reg:x3; val_offset:19839*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19839*0 + 3*469*FLEN/8, x4, x1, x2)

inst_6614:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x208000000000000; valaddr_reg:x3; val_offset:19842*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19842*0 + 3*470*FLEN/8, x4, x1, x2)

inst_6615:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20c000000000000; valaddr_reg:x3; val_offset:19845*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19845*0 + 3*471*FLEN/8, x4, x1, x2)

inst_6616:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20e000000000000; valaddr_reg:x3; val_offset:19848*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19848*0 + 3*472*FLEN/8, x4, x1, x2)

inst_6617:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20f000000000000; valaddr_reg:x3; val_offset:19851*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19851*0 + 3*473*FLEN/8, x4, x1, x2)

inst_6618:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20f800000000000; valaddr_reg:x3; val_offset:19854*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19854*0 + 3*474*FLEN/8, x4, x1, x2)

inst_6619:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fc00000000000; valaddr_reg:x3; val_offset:19857*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19857*0 + 3*475*FLEN/8, x4, x1, x2)

inst_6620:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fe00000000000; valaddr_reg:x3; val_offset:19860*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19860*0 + 3*476*FLEN/8, x4, x1, x2)

inst_6621:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ff00000000000; valaddr_reg:x3; val_offset:19863*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19863*0 + 3*477*FLEN/8, x4, x1, x2)

inst_6622:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ff80000000000; valaddr_reg:x3; val_offset:19866*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19866*0 + 3*478*FLEN/8, x4, x1, x2)

inst_6623:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffc0000000000; valaddr_reg:x3; val_offset:19869*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19869*0 + 3*479*FLEN/8, x4, x1, x2)

inst_6624:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffe0000000000; valaddr_reg:x3; val_offset:19872*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19872*0 + 3*480*FLEN/8, x4, x1, x2)

inst_6625:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fff0000000000; valaddr_reg:x3; val_offset:19875*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19875*0 + 3*481*FLEN/8, x4, x1, x2)

inst_6626:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fff8000000000; valaddr_reg:x3; val_offset:19878*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19878*0 + 3*482*FLEN/8, x4, x1, x2)

inst_6627:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffc000000000; valaddr_reg:x3; val_offset:19881*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19881*0 + 3*483*FLEN/8, x4, x1, x2)

inst_6628:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffe000000000; valaddr_reg:x3; val_offset:19884*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19884*0 + 3*484*FLEN/8, x4, x1, x2)

inst_6629:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffff000000000; valaddr_reg:x3; val_offset:19887*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19887*0 + 3*485*FLEN/8, x4, x1, x2)

inst_6630:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffff800000000; valaddr_reg:x3; val_offset:19890*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19890*0 + 3*486*FLEN/8, x4, x1, x2)

inst_6631:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffc00000000; valaddr_reg:x3; val_offset:19893*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19893*0 + 3*487*FLEN/8, x4, x1, x2)

inst_6632:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffe00000000; valaddr_reg:x3; val_offset:19896*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19896*0 + 3*488*FLEN/8, x4, x1, x2)

inst_6633:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffff00000000; valaddr_reg:x3; val_offset:19899*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19899*0 + 3*489*FLEN/8, x4, x1, x2)

inst_6634:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffff80000000; valaddr_reg:x3; val_offset:19902*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19902*0 + 3*490*FLEN/8, x4, x1, x2)

inst_6635:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffc0000000; valaddr_reg:x3; val_offset:19905*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19905*0 + 3*491*FLEN/8, x4, x1, x2)

inst_6636:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffe0000000; valaddr_reg:x3; val_offset:19908*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19908*0 + 3*492*FLEN/8, x4, x1, x2)

inst_6637:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffff0000000; valaddr_reg:x3; val_offset:19911*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19911*0 + 3*493*FLEN/8, x4, x1, x2)

inst_6638:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffff8000000; valaddr_reg:x3; val_offset:19914*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19914*0 + 3*494*FLEN/8, x4, x1, x2)

inst_6639:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffc000000; valaddr_reg:x3; val_offset:19917*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19917*0 + 3*495*FLEN/8, x4, x1, x2)

inst_6640:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffe000000; valaddr_reg:x3; val_offset:19920*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19920*0 + 3*496*FLEN/8, x4, x1, x2)

inst_6641:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffff000000; valaddr_reg:x3; val_offset:19923*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19923*0 + 3*497*FLEN/8, x4, x1, x2)

inst_6642:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffff800000; valaddr_reg:x3; val_offset:19926*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19926*0 + 3*498*FLEN/8, x4, x1, x2)

inst_6643:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffffc00000; valaddr_reg:x3; val_offset:19929*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19929*0 + 3*499*FLEN/8, x4, x1, x2)

inst_6644:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffffe00000; valaddr_reg:x3; val_offset:19932*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19932*0 + 3*500*FLEN/8, x4, x1, x2)

inst_6645:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffff00000; valaddr_reg:x3; val_offset:19935*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19935*0 + 3*501*FLEN/8, x4, x1, x2)

inst_6646:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffff80000; valaddr_reg:x3; val_offset:19938*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19938*0 + 3*502*FLEN/8, x4, x1, x2)

inst_6647:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffffc0000; valaddr_reg:x3; val_offset:19941*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19941*0 + 3*503*FLEN/8, x4, x1, x2)

inst_6648:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffffe0000; valaddr_reg:x3; val_offset:19944*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19944*0 + 3*504*FLEN/8, x4, x1, x2)

inst_6649:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffffff0000; valaddr_reg:x3; val_offset:19947*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19947*0 + 3*505*FLEN/8, x4, x1, x2)

inst_6650:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffffff8000; valaddr_reg:x3; val_offset:19950*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19950*0 + 3*506*FLEN/8, x4, x1, x2)

inst_6651:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffffffc000; valaddr_reg:x3; val_offset:19953*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19953*0 + 3*507*FLEN/8, x4, x1, x2)

inst_6652:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffffffe000; valaddr_reg:x3; val_offset:19956*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19956*0 + 3*508*FLEN/8, x4, x1, x2)

inst_6653:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffffff000; valaddr_reg:x3; val_offset:19959*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19959*0 + 3*509*FLEN/8, x4, x1, x2)

inst_6654:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffffff800; valaddr_reg:x3; val_offset:19962*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19962*0 + 3*510*FLEN/8, x4, x1, x2)

inst_6655:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffffffc00; valaddr_reg:x3; val_offset:19965*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19965*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_6656:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffffffe00; valaddr_reg:x3; val_offset:19968*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19968*0 + 3*512*FLEN/8, x4, x1, x2)

inst_6657:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffffffff00; valaddr_reg:x3; val_offset:19971*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19971*0 + 3*513*FLEN/8, x4, x1, x2)

inst_6658:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffffffff80; valaddr_reg:x3; val_offset:19974*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19974*0 + 3*514*FLEN/8, x4, x1, x2)

inst_6659:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffffffffc0; valaddr_reg:x3; val_offset:19977*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19977*0 + 3*515*FLEN/8, x4, x1, x2)

inst_6660:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffffffffe0; valaddr_reg:x3; val_offset:19980*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19980*0 + 3*516*FLEN/8, x4, x1, x2)

inst_6661:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffffffff0; valaddr_reg:x3; val_offset:19983*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19983*0 + 3*517*FLEN/8, x4, x1, x2)

inst_6662:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffffffff8; valaddr_reg:x3; val_offset:19986*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19986*0 + 3*518*FLEN/8, x4, x1, x2)

inst_6663:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffffffffc; valaddr_reg:x3; val_offset:19989*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19989*0 + 3*519*FLEN/8, x4, x1, x2)

inst_6664:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20ffffffffffffe; valaddr_reg:x3; val_offset:19992*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19992*0 + 3*520*FLEN/8, x4, x1, x2)

inst_6665:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb9e06a870b65f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6b9e06a870b65f; op2val:0x0;
op3val:0x20fffffffffffff; valaddr_reg:x3; val_offset:19995*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19995*0 + 3*521*FLEN/8, x4, x1, x2)

inst_6666:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:19998*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 19998*0 + 3*522*FLEN/8, x4, x1, x2)

inst_6667:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:20001*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20001*0 + 3*523*FLEN/8, x4, x1, x2)

inst_6668:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:20004*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20004*0 + 3*524*FLEN/8, x4, x1, x2)

inst_6669:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:20007*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20007*0 + 3*525*FLEN/8, x4, x1, x2)

inst_6670:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:20010*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20010*0 + 3*526*FLEN/8, x4, x1, x2)

inst_6671:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:20013*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20013*0 + 3*527*FLEN/8, x4, x1, x2)

inst_6672:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:20016*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20016*0 + 3*528*FLEN/8, x4, x1, x2)

inst_6673:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:20019*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20019*0 + 3*529*FLEN/8, x4, x1, x2)

inst_6674:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:20022*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20022*0 + 3*530*FLEN/8, x4, x1, x2)

inst_6675:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:20025*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20025*0 + 3*531*FLEN/8, x4, x1, x2)

inst_6676:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:20028*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20028*0 + 3*532*FLEN/8, x4, x1, x2)

inst_6677:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:20031*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20031*0 + 3*533*FLEN/8, x4, x1, x2)

inst_6678:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:20034*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20034*0 + 3*534*FLEN/8, x4, x1, x2)

inst_6679:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:20037*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20037*0 + 3*535*FLEN/8, x4, x1, x2)

inst_6680:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:20040*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20040*0 + 3*536*FLEN/8, x4, x1, x2)

inst_6681:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:20043*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20043*0 + 3*537*FLEN/8, x4, x1, x2)

inst_6682:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:20046*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20046*0 + 3*538*FLEN/8, x4, x1, x2)

inst_6683:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:20049*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20049*0 + 3*539*FLEN/8, x4, x1, x2)

inst_6684:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:20052*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20052*0 + 3*540*FLEN/8, x4, x1, x2)

inst_6685:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:20055*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20055*0 + 3*541*FLEN/8, x4, x1, x2)

inst_6686:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:20058*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20058*0 + 3*542*FLEN/8, x4, x1, x2)

inst_6687:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:20061*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20061*0 + 3*543*FLEN/8, x4, x1, x2)

inst_6688:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000000000000; valaddr_reg:x3; val_offset:20064*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20064*0 + 3*544*FLEN/8, x4, x1, x2)

inst_6689:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000000000001; valaddr_reg:x3; val_offset:20067*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20067*0 + 3*545*FLEN/8, x4, x1, x2)

inst_6690:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000000000003; valaddr_reg:x3; val_offset:20070*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20070*0 + 3*546*FLEN/8, x4, x1, x2)

inst_6691:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000000000007; valaddr_reg:x3; val_offset:20073*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20073*0 + 3*547*FLEN/8, x4, x1, x2)

inst_6692:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000000000000f; valaddr_reg:x3; val_offset:20076*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20076*0 + 3*548*FLEN/8, x4, x1, x2)

inst_6693:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000000000001f; valaddr_reg:x3; val_offset:20079*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20079*0 + 3*549*FLEN/8, x4, x1, x2)

inst_6694:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000000000003f; valaddr_reg:x3; val_offset:20082*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20082*0 + 3*550*FLEN/8, x4, x1, x2)

inst_6695:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000000000007f; valaddr_reg:x3; val_offset:20085*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20085*0 + 3*551*FLEN/8, x4, x1, x2)

inst_6696:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200000000000ff; valaddr_reg:x3; val_offset:20088*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20088*0 + 3*552*FLEN/8, x4, x1, x2)

inst_6697:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200000000001ff; valaddr_reg:x3; val_offset:20091*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20091*0 + 3*553*FLEN/8, x4, x1, x2)

inst_6698:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200000000003ff; valaddr_reg:x3; val_offset:20094*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20094*0 + 3*554*FLEN/8, x4, x1, x2)

inst_6699:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200000000007ff; valaddr_reg:x3; val_offset:20097*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20097*0 + 3*555*FLEN/8, x4, x1, x2)

inst_6700:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000000000fff; valaddr_reg:x3; val_offset:20100*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20100*0 + 3*556*FLEN/8, x4, x1, x2)

inst_6701:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000000001fff; valaddr_reg:x3; val_offset:20103*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20103*0 + 3*557*FLEN/8, x4, x1, x2)

inst_6702:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000000003fff; valaddr_reg:x3; val_offset:20106*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20106*0 + 3*558*FLEN/8, x4, x1, x2)

inst_6703:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000000007fff; valaddr_reg:x3; val_offset:20109*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20109*0 + 3*559*FLEN/8, x4, x1, x2)

inst_6704:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000000000ffff; valaddr_reg:x3; val_offset:20112*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20112*0 + 3*560*FLEN/8, x4, x1, x2)

inst_6705:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000000001ffff; valaddr_reg:x3; val_offset:20115*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20115*0 + 3*561*FLEN/8, x4, x1, x2)

inst_6706:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000000003ffff; valaddr_reg:x3; val_offset:20118*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20118*0 + 3*562*FLEN/8, x4, x1, x2)

inst_6707:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000000007ffff; valaddr_reg:x3; val_offset:20121*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20121*0 + 3*563*FLEN/8, x4, x1, x2)

inst_6708:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200000000fffff; valaddr_reg:x3; val_offset:20124*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20124*0 + 3*564*FLEN/8, x4, x1, x2)

inst_6709:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200000001fffff; valaddr_reg:x3; val_offset:20127*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20127*0 + 3*565*FLEN/8, x4, x1, x2)

inst_6710:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200000003fffff; valaddr_reg:x3; val_offset:20130*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20130*0 + 3*566*FLEN/8, x4, x1, x2)

inst_6711:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200000007fffff; valaddr_reg:x3; val_offset:20133*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20133*0 + 3*567*FLEN/8, x4, x1, x2)

inst_6712:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000000ffffff; valaddr_reg:x3; val_offset:20136*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20136*0 + 3*568*FLEN/8, x4, x1, x2)

inst_6713:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000001ffffff; valaddr_reg:x3; val_offset:20139*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20139*0 + 3*569*FLEN/8, x4, x1, x2)

inst_6714:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000003ffffff; valaddr_reg:x3; val_offset:20142*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20142*0 + 3*570*FLEN/8, x4, x1, x2)

inst_6715:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000007ffffff; valaddr_reg:x3; val_offset:20145*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20145*0 + 3*571*FLEN/8, x4, x1, x2)

inst_6716:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000000fffffff; valaddr_reg:x3; val_offset:20148*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20148*0 + 3*572*FLEN/8, x4, x1, x2)

inst_6717:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000001fffffff; valaddr_reg:x3; val_offset:20151*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20151*0 + 3*573*FLEN/8, x4, x1, x2)

inst_6718:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000003fffffff; valaddr_reg:x3; val_offset:20154*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20154*0 + 3*574*FLEN/8, x4, x1, x2)

inst_6719:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000007fffffff; valaddr_reg:x3; val_offset:20157*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20157*0 + 3*575*FLEN/8, x4, x1, x2)

inst_6720:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200000ffffffff; valaddr_reg:x3; val_offset:20160*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20160*0 + 3*576*FLEN/8, x4, x1, x2)

inst_6721:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200001ffffffff; valaddr_reg:x3; val_offset:20163*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20163*0 + 3*577*FLEN/8, x4, x1, x2)

inst_6722:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200003ffffffff; valaddr_reg:x3; val_offset:20166*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20166*0 + 3*578*FLEN/8, x4, x1, x2)

inst_6723:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200007ffffffff; valaddr_reg:x3; val_offset:20169*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20169*0 + 3*579*FLEN/8, x4, x1, x2)

inst_6724:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220000fffffffff; valaddr_reg:x3; val_offset:20172*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20172*0 + 3*580*FLEN/8, x4, x1, x2)

inst_6725:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220001fffffffff; valaddr_reg:x3; val_offset:20175*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20175*0 + 3*581*FLEN/8, x4, x1, x2)

inst_6726:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220003fffffffff; valaddr_reg:x3; val_offset:20178*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20178*0 + 3*582*FLEN/8, x4, x1, x2)

inst_6727:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220007fffffffff; valaddr_reg:x3; val_offset:20181*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20181*0 + 3*583*FLEN/8, x4, x1, x2)

inst_6728:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22000ffffffffff; valaddr_reg:x3; val_offset:20184*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20184*0 + 3*584*FLEN/8, x4, x1, x2)

inst_6729:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22001ffffffffff; valaddr_reg:x3; val_offset:20187*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20187*0 + 3*585*FLEN/8, x4, x1, x2)

inst_6730:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22003ffffffffff; valaddr_reg:x3; val_offset:20190*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20190*0 + 3*586*FLEN/8, x4, x1, x2)

inst_6731:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22007ffffffffff; valaddr_reg:x3; val_offset:20193*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20193*0 + 3*587*FLEN/8, x4, x1, x2)

inst_6732:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2200fffffffffff; valaddr_reg:x3; val_offset:20196*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20196*0 + 3*588*FLEN/8, x4, x1, x2)

inst_6733:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2201fffffffffff; valaddr_reg:x3; val_offset:20199*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20199*0 + 3*589*FLEN/8, x4, x1, x2)

inst_6734:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2203fffffffffff; valaddr_reg:x3; val_offset:20202*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20202*0 + 3*590*FLEN/8, x4, x1, x2)

inst_6735:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x2207fffffffffff; valaddr_reg:x3; val_offset:20205*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20205*0 + 3*591*FLEN/8, x4, x1, x2)

inst_6736:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x220ffffffffffff; valaddr_reg:x3; val_offset:20208*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20208*0 + 3*592*FLEN/8, x4, x1, x2)

inst_6737:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x221ffffffffffff; valaddr_reg:x3; val_offset:20211*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20211*0 + 3*593*FLEN/8, x4, x1, x2)

inst_6738:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x223ffffffffffff; valaddr_reg:x3; val_offset:20214*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20214*0 + 3*594*FLEN/8, x4, x1, x2)

inst_6739:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x227ffffffffffff; valaddr_reg:x3; val_offset:20217*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20217*0 + 3*595*FLEN/8, x4, x1, x2)

inst_6740:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x228000000000000; valaddr_reg:x3; val_offset:20220*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20220*0 + 3*596*FLEN/8, x4, x1, x2)

inst_6741:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22c000000000000; valaddr_reg:x3; val_offset:20223*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20223*0 + 3*597*FLEN/8, x4, x1, x2)

inst_6742:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22e000000000000; valaddr_reg:x3; val_offset:20226*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20226*0 + 3*598*FLEN/8, x4, x1, x2)

inst_6743:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22f000000000000; valaddr_reg:x3; val_offset:20229*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20229*0 + 3*599*FLEN/8, x4, x1, x2)

inst_6744:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22f800000000000; valaddr_reg:x3; val_offset:20232*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20232*0 + 3*600*FLEN/8, x4, x1, x2)

inst_6745:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fc00000000000; valaddr_reg:x3; val_offset:20235*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20235*0 + 3*601*FLEN/8, x4, x1, x2)

inst_6746:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fe00000000000; valaddr_reg:x3; val_offset:20238*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20238*0 + 3*602*FLEN/8, x4, x1, x2)

inst_6747:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ff00000000000; valaddr_reg:x3; val_offset:20241*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20241*0 + 3*603*FLEN/8, x4, x1, x2)

inst_6748:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ff80000000000; valaddr_reg:x3; val_offset:20244*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20244*0 + 3*604*FLEN/8, x4, x1, x2)

inst_6749:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffc0000000000; valaddr_reg:x3; val_offset:20247*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20247*0 + 3*605*FLEN/8, x4, x1, x2)

inst_6750:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffe0000000000; valaddr_reg:x3; val_offset:20250*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20250*0 + 3*606*FLEN/8, x4, x1, x2)

inst_6751:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fff0000000000; valaddr_reg:x3; val_offset:20253*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20253*0 + 3*607*FLEN/8, x4, x1, x2)

inst_6752:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fff8000000000; valaddr_reg:x3; val_offset:20256*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20256*0 + 3*608*FLEN/8, x4, x1, x2)

inst_6753:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffc000000000; valaddr_reg:x3; val_offset:20259*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20259*0 + 3*609*FLEN/8, x4, x1, x2)

inst_6754:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffe000000000; valaddr_reg:x3; val_offset:20262*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20262*0 + 3*610*FLEN/8, x4, x1, x2)

inst_6755:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffff000000000; valaddr_reg:x3; val_offset:20265*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20265*0 + 3*611*FLEN/8, x4, x1, x2)

inst_6756:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffff800000000; valaddr_reg:x3; val_offset:20268*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20268*0 + 3*612*FLEN/8, x4, x1, x2)

inst_6757:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffc00000000; valaddr_reg:x3; val_offset:20271*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20271*0 + 3*613*FLEN/8, x4, x1, x2)

inst_6758:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffe00000000; valaddr_reg:x3; val_offset:20274*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20274*0 + 3*614*FLEN/8, x4, x1, x2)

inst_6759:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffff00000000; valaddr_reg:x3; val_offset:20277*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20277*0 + 3*615*FLEN/8, x4, x1, x2)

inst_6760:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffff80000000; valaddr_reg:x3; val_offset:20280*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20280*0 + 3*616*FLEN/8, x4, x1, x2)

inst_6761:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffc0000000; valaddr_reg:x3; val_offset:20283*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20283*0 + 3*617*FLEN/8, x4, x1, x2)

inst_6762:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffe0000000; valaddr_reg:x3; val_offset:20286*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20286*0 + 3*618*FLEN/8, x4, x1, x2)

inst_6763:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffff0000000; valaddr_reg:x3; val_offset:20289*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20289*0 + 3*619*FLEN/8, x4, x1, x2)

inst_6764:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffff8000000; valaddr_reg:x3; val_offset:20292*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20292*0 + 3*620*FLEN/8, x4, x1, x2)

inst_6765:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffc000000; valaddr_reg:x3; val_offset:20295*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20295*0 + 3*621*FLEN/8, x4, x1, x2)

inst_6766:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffe000000; valaddr_reg:x3; val_offset:20298*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20298*0 + 3*622*FLEN/8, x4, x1, x2)

inst_6767:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffff000000; valaddr_reg:x3; val_offset:20301*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20301*0 + 3*623*FLEN/8, x4, x1, x2)

inst_6768:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffff800000; valaddr_reg:x3; val_offset:20304*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20304*0 + 3*624*FLEN/8, x4, x1, x2)

inst_6769:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffffc00000; valaddr_reg:x3; val_offset:20307*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20307*0 + 3*625*FLEN/8, x4, x1, x2)

inst_6770:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffffe00000; valaddr_reg:x3; val_offset:20310*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20310*0 + 3*626*FLEN/8, x4, x1, x2)

inst_6771:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffff00000; valaddr_reg:x3; val_offset:20313*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20313*0 + 3*627*FLEN/8, x4, x1, x2)

inst_6772:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffff80000; valaddr_reg:x3; val_offset:20316*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20316*0 + 3*628*FLEN/8, x4, x1, x2)

inst_6773:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffffc0000; valaddr_reg:x3; val_offset:20319*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20319*0 + 3*629*FLEN/8, x4, x1, x2)

inst_6774:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffffe0000; valaddr_reg:x3; val_offset:20322*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20322*0 + 3*630*FLEN/8, x4, x1, x2)

inst_6775:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffffff0000; valaddr_reg:x3; val_offset:20325*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20325*0 + 3*631*FLEN/8, x4, x1, x2)

inst_6776:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffffff8000; valaddr_reg:x3; val_offset:20328*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20328*0 + 3*632*FLEN/8, x4, x1, x2)

inst_6777:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffffffc000; valaddr_reg:x3; val_offset:20331*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20331*0 + 3*633*FLEN/8, x4, x1, x2)

inst_6778:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffffffe000; valaddr_reg:x3; val_offset:20334*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20334*0 + 3*634*FLEN/8, x4, x1, x2)

inst_6779:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffffff000; valaddr_reg:x3; val_offset:20337*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20337*0 + 3*635*FLEN/8, x4, x1, x2)

inst_6780:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffffff800; valaddr_reg:x3; val_offset:20340*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20340*0 + 3*636*FLEN/8, x4, x1, x2)

inst_6781:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffffffc00; valaddr_reg:x3; val_offset:20343*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20343*0 + 3*637*FLEN/8, x4, x1, x2)

inst_6782:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffffffe00; valaddr_reg:x3; val_offset:20346*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20346*0 + 3*638*FLEN/8, x4, x1, x2)

inst_6783:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffffffff00; valaddr_reg:x3; val_offset:20349*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20349*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_6784:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffffffff80; valaddr_reg:x3; val_offset:20352*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20352*0 + 3*640*FLEN/8, x4, x1, x2)

inst_6785:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffffffffc0; valaddr_reg:x3; val_offset:20355*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20355*0 + 3*641*FLEN/8, x4, x1, x2)

inst_6786:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffffffffe0; valaddr_reg:x3; val_offset:20358*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20358*0 + 3*642*FLEN/8, x4, x1, x2)

inst_6787:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffffffff0; valaddr_reg:x3; val_offset:20361*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20361*0 + 3*643*FLEN/8, x4, x1, x2)

inst_6788:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffffffff8; valaddr_reg:x3; val_offset:20364*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20364*0 + 3*644*FLEN/8, x4, x1, x2)

inst_6789:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffffffffc; valaddr_reg:x3; val_offset:20367*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20367*0 + 3*645*FLEN/8, x4, x1, x2)

inst_6790:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22ffffffffffffe; valaddr_reg:x3; val_offset:20370*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20370*0 + 3*646*FLEN/8, x4, x1, x2)

inst_6791:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xecd66670c339f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ecd66670c339f; op2val:0x0;
op3val:0x22fffffffffffff; valaddr_reg:x3; val_offset:20373*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20373*0 + 3*647*FLEN/8, x4, x1, x2)

inst_6792:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:20376*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20376*0 + 3*648*FLEN/8, x4, x1, x2)

inst_6793:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:20379*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20379*0 + 3*649*FLEN/8, x4, x1, x2)

inst_6794:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:20382*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20382*0 + 3*650*FLEN/8, x4, x1, x2)

inst_6795:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:20385*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20385*0 + 3*651*FLEN/8, x4, x1, x2)

inst_6796:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:20388*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20388*0 + 3*652*FLEN/8, x4, x1, x2)

inst_6797:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:20391*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20391*0 + 3*653*FLEN/8, x4, x1, x2)

inst_6798:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:20394*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20394*0 + 3*654*FLEN/8, x4, x1, x2)

inst_6799:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:20397*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20397*0 + 3*655*FLEN/8, x4, x1, x2)

inst_6800:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:20400*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20400*0 + 3*656*FLEN/8, x4, x1, x2)

inst_6801:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:20403*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20403*0 + 3*657*FLEN/8, x4, x1, x2)

inst_6802:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:20406*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20406*0 + 3*658*FLEN/8, x4, x1, x2)

inst_6803:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:20409*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20409*0 + 3*659*FLEN/8, x4, x1, x2)

inst_6804:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:20412*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20412*0 + 3*660*FLEN/8, x4, x1, x2)

inst_6805:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:20415*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20415*0 + 3*661*FLEN/8, x4, x1, x2)

inst_6806:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:20418*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20418*0 + 3*662*FLEN/8, x4, x1, x2)

inst_6807:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:20421*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20421*0 + 3*663*FLEN/8, x4, x1, x2)

inst_6808:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:20424*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20424*0 + 3*664*FLEN/8, x4, x1, x2)

inst_6809:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:20427*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20427*0 + 3*665*FLEN/8, x4, x1, x2)

inst_6810:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:20430*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20430*0 + 3*666*FLEN/8, x4, x1, x2)

inst_6811:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:20433*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20433*0 + 3*667*FLEN/8, x4, x1, x2)

inst_6812:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:20436*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20436*0 + 3*668*FLEN/8, x4, x1, x2)

inst_6813:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:20439*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20439*0 + 3*669*FLEN/8, x4, x1, x2)

inst_6814:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000000000000; valaddr_reg:x3; val_offset:20442*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20442*0 + 3*670*FLEN/8, x4, x1, x2)

inst_6815:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000000000001; valaddr_reg:x3; val_offset:20445*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20445*0 + 3*671*FLEN/8, x4, x1, x2)

inst_6816:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000000000003; valaddr_reg:x3; val_offset:20448*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20448*0 + 3*672*FLEN/8, x4, x1, x2)

inst_6817:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000000000007; valaddr_reg:x3; val_offset:20451*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20451*0 + 3*673*FLEN/8, x4, x1, x2)

inst_6818:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000000000000f; valaddr_reg:x3; val_offset:20454*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20454*0 + 3*674*FLEN/8, x4, x1, x2)

inst_6819:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000000000001f; valaddr_reg:x3; val_offset:20457*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20457*0 + 3*675*FLEN/8, x4, x1, x2)

inst_6820:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000000000003f; valaddr_reg:x3; val_offset:20460*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20460*0 + 3*676*FLEN/8, x4, x1, x2)

inst_6821:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000000000007f; valaddr_reg:x3; val_offset:20463*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20463*0 + 3*677*FLEN/8, x4, x1, x2)

inst_6822:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600000000000ff; valaddr_reg:x3; val_offset:20466*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20466*0 + 3*678*FLEN/8, x4, x1, x2)

inst_6823:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600000000001ff; valaddr_reg:x3; val_offset:20469*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20469*0 + 3*679*FLEN/8, x4, x1, x2)

inst_6824:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600000000003ff; valaddr_reg:x3; val_offset:20472*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20472*0 + 3*680*FLEN/8, x4, x1, x2)

inst_6825:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600000000007ff; valaddr_reg:x3; val_offset:20475*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20475*0 + 3*681*FLEN/8, x4, x1, x2)

inst_6826:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000000000fff; valaddr_reg:x3; val_offset:20478*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20478*0 + 3*682*FLEN/8, x4, x1, x2)

inst_6827:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000000001fff; valaddr_reg:x3; val_offset:20481*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20481*0 + 3*683*FLEN/8, x4, x1, x2)

inst_6828:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000000003fff; valaddr_reg:x3; val_offset:20484*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20484*0 + 3*684*FLEN/8, x4, x1, x2)

inst_6829:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000000007fff; valaddr_reg:x3; val_offset:20487*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20487*0 + 3*685*FLEN/8, x4, x1, x2)

inst_6830:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000000000ffff; valaddr_reg:x3; val_offset:20490*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20490*0 + 3*686*FLEN/8, x4, x1, x2)

inst_6831:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000000001ffff; valaddr_reg:x3; val_offset:20493*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20493*0 + 3*687*FLEN/8, x4, x1, x2)

inst_6832:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000000003ffff; valaddr_reg:x3; val_offset:20496*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20496*0 + 3*688*FLEN/8, x4, x1, x2)

inst_6833:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000000007ffff; valaddr_reg:x3; val_offset:20499*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20499*0 + 3*689*FLEN/8, x4, x1, x2)

inst_6834:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600000000fffff; valaddr_reg:x3; val_offset:20502*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20502*0 + 3*690*FLEN/8, x4, x1, x2)

inst_6835:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600000001fffff; valaddr_reg:x3; val_offset:20505*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20505*0 + 3*691*FLEN/8, x4, x1, x2)

inst_6836:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600000003fffff; valaddr_reg:x3; val_offset:20508*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20508*0 + 3*692*FLEN/8, x4, x1, x2)

inst_6837:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600000007fffff; valaddr_reg:x3; val_offset:20511*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20511*0 + 3*693*FLEN/8, x4, x1, x2)

inst_6838:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000000ffffff; valaddr_reg:x3; val_offset:20514*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20514*0 + 3*694*FLEN/8, x4, x1, x2)

inst_6839:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000001ffffff; valaddr_reg:x3; val_offset:20517*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20517*0 + 3*695*FLEN/8, x4, x1, x2)

inst_6840:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000003ffffff; valaddr_reg:x3; val_offset:20520*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20520*0 + 3*696*FLEN/8, x4, x1, x2)

inst_6841:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000007ffffff; valaddr_reg:x3; val_offset:20523*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20523*0 + 3*697*FLEN/8, x4, x1, x2)

inst_6842:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000000fffffff; valaddr_reg:x3; val_offset:20526*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20526*0 + 3*698*FLEN/8, x4, x1, x2)

inst_6843:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000001fffffff; valaddr_reg:x3; val_offset:20529*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20529*0 + 3*699*FLEN/8, x4, x1, x2)

inst_6844:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000003fffffff; valaddr_reg:x3; val_offset:20532*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20532*0 + 3*700*FLEN/8, x4, x1, x2)

inst_6845:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000007fffffff; valaddr_reg:x3; val_offset:20535*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20535*0 + 3*701*FLEN/8, x4, x1, x2)

inst_6846:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600000ffffffff; valaddr_reg:x3; val_offset:20538*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20538*0 + 3*702*FLEN/8, x4, x1, x2)

inst_6847:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600001ffffffff; valaddr_reg:x3; val_offset:20541*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20541*0 + 3*703*FLEN/8, x4, x1, x2)

inst_6848:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600003ffffffff; valaddr_reg:x3; val_offset:20544*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20544*0 + 3*704*FLEN/8, x4, x1, x2)

inst_6849:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600007ffffffff; valaddr_reg:x3; val_offset:20547*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20547*0 + 3*705*FLEN/8, x4, x1, x2)

inst_6850:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260000fffffffff; valaddr_reg:x3; val_offset:20550*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20550*0 + 3*706*FLEN/8, x4, x1, x2)

inst_6851:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260001fffffffff; valaddr_reg:x3; val_offset:20553*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20553*0 + 3*707*FLEN/8, x4, x1, x2)

inst_6852:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260003fffffffff; valaddr_reg:x3; val_offset:20556*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20556*0 + 3*708*FLEN/8, x4, x1, x2)

inst_6853:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260007fffffffff; valaddr_reg:x3; val_offset:20559*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20559*0 + 3*709*FLEN/8, x4, x1, x2)

inst_6854:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826000ffffffffff; valaddr_reg:x3; val_offset:20562*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20562*0 + 3*710*FLEN/8, x4, x1, x2)

inst_6855:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826001ffffffffff; valaddr_reg:x3; val_offset:20565*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20565*0 + 3*711*FLEN/8, x4, x1, x2)

inst_6856:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826003ffffffffff; valaddr_reg:x3; val_offset:20568*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20568*0 + 3*712*FLEN/8, x4, x1, x2)

inst_6857:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826007ffffffffff; valaddr_reg:x3; val_offset:20571*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20571*0 + 3*713*FLEN/8, x4, x1, x2)

inst_6858:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82600fffffffffff; valaddr_reg:x3; val_offset:20574*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20574*0 + 3*714*FLEN/8, x4, x1, x2)

inst_6859:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82601fffffffffff; valaddr_reg:x3; val_offset:20577*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20577*0 + 3*715*FLEN/8, x4, x1, x2)

inst_6860:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82603fffffffffff; valaddr_reg:x3; val_offset:20580*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20580*0 + 3*716*FLEN/8, x4, x1, x2)

inst_6861:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x82607fffffffffff; valaddr_reg:x3; val_offset:20583*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20583*0 + 3*717*FLEN/8, x4, x1, x2)

inst_6862:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8260ffffffffffff; valaddr_reg:x3; val_offset:20586*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20586*0 + 3*718*FLEN/8, x4, x1, x2)

inst_6863:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8261ffffffffffff; valaddr_reg:x3; val_offset:20589*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20589*0 + 3*719*FLEN/8, x4, x1, x2)

inst_6864:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8263ffffffffffff; valaddr_reg:x3; val_offset:20592*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20592*0 + 3*720*FLEN/8, x4, x1, x2)

inst_6865:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8267ffffffffffff; valaddr_reg:x3; val_offset:20595*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20595*0 + 3*721*FLEN/8, x4, x1, x2)

inst_6866:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x8268000000000000; valaddr_reg:x3; val_offset:20598*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20598*0 + 3*722*FLEN/8, x4, x1, x2)

inst_6867:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826c000000000000; valaddr_reg:x3; val_offset:20601*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20601*0 + 3*723*FLEN/8, x4, x1, x2)

inst_6868:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826e000000000000; valaddr_reg:x3; val_offset:20604*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20604*0 + 3*724*FLEN/8, x4, x1, x2)

inst_6869:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826f000000000000; valaddr_reg:x3; val_offset:20607*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20607*0 + 3*725*FLEN/8, x4, x1, x2)

inst_6870:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826f800000000000; valaddr_reg:x3; val_offset:20610*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20610*0 + 3*726*FLEN/8, x4, x1, x2)

inst_6871:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fc00000000000; valaddr_reg:x3; val_offset:20613*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20613*0 + 3*727*FLEN/8, x4, x1, x2)

inst_6872:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fe00000000000; valaddr_reg:x3; val_offset:20616*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20616*0 + 3*728*FLEN/8, x4, x1, x2)

inst_6873:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ff00000000000; valaddr_reg:x3; val_offset:20619*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20619*0 + 3*729*FLEN/8, x4, x1, x2)

inst_6874:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ff80000000000; valaddr_reg:x3; val_offset:20622*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20622*0 + 3*730*FLEN/8, x4, x1, x2)

inst_6875:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffc0000000000; valaddr_reg:x3; val_offset:20625*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20625*0 + 3*731*FLEN/8, x4, x1, x2)

inst_6876:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffe0000000000; valaddr_reg:x3; val_offset:20628*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20628*0 + 3*732*FLEN/8, x4, x1, x2)

inst_6877:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fff0000000000; valaddr_reg:x3; val_offset:20631*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20631*0 + 3*733*FLEN/8, x4, x1, x2)

inst_6878:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fff8000000000; valaddr_reg:x3; val_offset:20634*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20634*0 + 3*734*FLEN/8, x4, x1, x2)

inst_6879:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffc000000000; valaddr_reg:x3; val_offset:20637*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20637*0 + 3*735*FLEN/8, x4, x1, x2)

inst_6880:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffe000000000; valaddr_reg:x3; val_offset:20640*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20640*0 + 3*736*FLEN/8, x4, x1, x2)

inst_6881:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffff000000000; valaddr_reg:x3; val_offset:20643*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20643*0 + 3*737*FLEN/8, x4, x1, x2)

inst_6882:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffff800000000; valaddr_reg:x3; val_offset:20646*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20646*0 + 3*738*FLEN/8, x4, x1, x2)

inst_6883:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffc00000000; valaddr_reg:x3; val_offset:20649*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20649*0 + 3*739*FLEN/8, x4, x1, x2)

inst_6884:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffe00000000; valaddr_reg:x3; val_offset:20652*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20652*0 + 3*740*FLEN/8, x4, x1, x2)

inst_6885:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffff00000000; valaddr_reg:x3; val_offset:20655*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20655*0 + 3*741*FLEN/8, x4, x1, x2)

inst_6886:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffff80000000; valaddr_reg:x3; val_offset:20658*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20658*0 + 3*742*FLEN/8, x4, x1, x2)

inst_6887:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffc0000000; valaddr_reg:x3; val_offset:20661*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20661*0 + 3*743*FLEN/8, x4, x1, x2)

inst_6888:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffe0000000; valaddr_reg:x3; val_offset:20664*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20664*0 + 3*744*FLEN/8, x4, x1, x2)

inst_6889:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffff0000000; valaddr_reg:x3; val_offset:20667*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20667*0 + 3*745*FLEN/8, x4, x1, x2)

inst_6890:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffff8000000; valaddr_reg:x3; val_offset:20670*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20670*0 + 3*746*FLEN/8, x4, x1, x2)

inst_6891:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffffc000000; valaddr_reg:x3; val_offset:20673*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20673*0 + 3*747*FLEN/8, x4, x1, x2)

inst_6892:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffffe000000; valaddr_reg:x3; val_offset:20676*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20676*0 + 3*748*FLEN/8, x4, x1, x2)

inst_6893:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffff000000; valaddr_reg:x3; val_offset:20679*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20679*0 + 3*749*FLEN/8, x4, x1, x2)

inst_6894:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffff800000; valaddr_reg:x3; val_offset:20682*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20682*0 + 3*750*FLEN/8, x4, x1, x2)

inst_6895:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffffc00000; valaddr_reg:x3; val_offset:20685*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20685*0 + 3*751*FLEN/8, x4, x1, x2)

inst_6896:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffffe00000; valaddr_reg:x3; val_offset:20688*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20688*0 + 3*752*FLEN/8, x4, x1, x2)

inst_6897:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffffff00000; valaddr_reg:x3; val_offset:20691*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20691*0 + 3*753*FLEN/8, x4, x1, x2)

inst_6898:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffffff80000; valaddr_reg:x3; val_offset:20694*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20694*0 + 3*754*FLEN/8, x4, x1, x2)

inst_6899:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffffffc0000; valaddr_reg:x3; val_offset:20697*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20697*0 + 3*755*FLEN/8, x4, x1, x2)

inst_6900:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffffffe0000; valaddr_reg:x3; val_offset:20700*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20700*0 + 3*756*FLEN/8, x4, x1, x2)

inst_6901:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffffff0000; valaddr_reg:x3; val_offset:20703*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20703*0 + 3*757*FLEN/8, x4, x1, x2)

inst_6902:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffffff8000; valaddr_reg:x3; val_offset:20706*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20706*0 + 3*758*FLEN/8, x4, x1, x2)

inst_6903:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffffffc000; valaddr_reg:x3; val_offset:20709*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20709*0 + 3*759*FLEN/8, x4, x1, x2)

inst_6904:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffffffe000; valaddr_reg:x3; val_offset:20712*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20712*0 + 3*760*FLEN/8, x4, x1, x2)

inst_6905:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffffffff000; valaddr_reg:x3; val_offset:20715*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20715*0 + 3*761*FLEN/8, x4, x1, x2)

inst_6906:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffffffff800; valaddr_reg:x3; val_offset:20718*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20718*0 + 3*762*FLEN/8, x4, x1, x2)

inst_6907:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffffffffc00; valaddr_reg:x3; val_offset:20721*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20721*0 + 3*763*FLEN/8, x4, x1, x2)

inst_6908:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826ffffffffffe00; valaddr_reg:x3; val_offset:20724*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20724*0 + 3*764*FLEN/8, x4, x1, x2)

inst_6909:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffffffff00; valaddr_reg:x3; val_offset:20727*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20727*0 + 3*765*FLEN/8, x4, x1, x2)

inst_6910:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffffffff80; valaddr_reg:x3; val_offset:20730*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20730*0 + 3*766*FLEN/8, x4, x1, x2)

inst_6911:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xed56e9c6a326f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f6ed56e9c6a326f; op2val:0x8000;
op3val:0x826fffffffffffc0; valaddr_reg:x3; val_offset:20733*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 20733*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6874943906467040591,64,FLEN)
NAN_BOXED(11530544355582262055,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667269632,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667269633,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667269635,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667269639,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667269647,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667269663,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667269695,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667269759,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667269887,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667270143,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667270655,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667271679,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667273727,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667277823,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667286015,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667302399,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667335167,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667400703,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667531775,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839667793919,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839668318207,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839669366783,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839671463935,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839675658239,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839684046847,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839700824063,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839734378495,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839801487359,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980839935705087,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980840204140543,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980840741011455,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980841814753279,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980843962236927,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980848257204223,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980856847138815,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980874027007999,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980908386746367,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354980977106223103,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354981114545176575,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354981389423083519,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354981939178897407,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354983038690525183,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354985237713780735,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354989635760291839,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4354998431853314047,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4355016024039358463,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4355051208411447295,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4355121577155624959,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4355262314643980287,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4355543789620690943,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4356106739574112255,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4357232639480954879,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4357232639480954880,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4358358539387797504,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4358921489341218816,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359202964317929472,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359343701806284800,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359414070550462464,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359449254922551296,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359466847108595712,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359475643201617920,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359480041248129024,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359482240271384576,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359483339783012352,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359483889538826240,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484164416733184,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484301855686656,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484370575163392,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484404934901760,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484422114770944,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484430704705536,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484434999672832,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484437147156480,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484438220898304,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484438757769216,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439026204672,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439160422400,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439227531264,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439261085696,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439277862912,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439286251520,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439290445824,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439292542976,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439293591552,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294115840,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294377984,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294509056,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294574592,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294607360,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294623744,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294631936,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294636032,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294638080,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294639104,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294639616,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294639872,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294640000,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294640064,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294640096,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294640112,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294640120,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294640124,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294640126,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4359484439294640127,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6875174582182438975,64,FLEN)
NAN_BOXED(2338510253444516155,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966144,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966145,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966147,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966151,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966159,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966175,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966207,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966271,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966399,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966655,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576967167,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576968191,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576970239,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576974335,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576982527,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576998911,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577031679,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577097215,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577228287,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577490431,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621578014719,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621579063295,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621581160447,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621585354751,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621593743359,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621610520575,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621644075007,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621711183871,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621845401599,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019622113837055,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019622650707967,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019623724449791,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019625871933439,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019630166900735,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019638756835327,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019655936704511,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019690296442879,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019759015919615,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019896454873087,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408020171332780031,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408020721088593919,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408021820600221695,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408024019623477247,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408028417669988351,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408037213763010559,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408054805949054975,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408089990321143807,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408160359065321471,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408301096553676799,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408582571530387455,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9409145521483808767,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9410271421390651391,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9410271421390651392,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9411397321297494016,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9411960271250915328,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412241746227625984,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412382483715981312,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412452852460158976,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412488036832247808,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412505629018292224,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412514425111314432,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412518823157825536,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412521022181081088,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522121692708864,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522671448522752,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522946326429696,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523083765383168,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523152484859904,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523186844598272,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523204024467456,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523212614402048,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523216909369344,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523219056852992,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220130594816,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220667465728,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220935901184,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221070118912,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221137227776,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221170782208,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221187559424,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221195948032,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221200142336,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221202239488,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221203288064,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221203812352,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204074496,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204205568,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204271104,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204303872,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204320256,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204328448,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204332544,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204334592,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204335616,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336128,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336384,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336512,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336576,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336608,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336624,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336632,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336636,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336638,64,FLEN)
NAN_BOXED(6875541914713201071,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336639,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301824,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301825,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301827,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301831,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301839,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301855,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301887,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301951,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604302079,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604302335,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604302847,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604303871,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604305919,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604310015,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604318207,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604334591,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604367359,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604432895,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604563967,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604826111,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383605350399,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383606398975,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383608496127,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383612690431,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383621079039,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383637856255,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383671410687,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383738519551,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383872737279,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158384141172735,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158384678043647,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158385751785471,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158387899269119,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158392194236415,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158400784171007,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158417964040191,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158452323778559,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158521043255295,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158658482208767,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158933360115711,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198159483115929599,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198160582627557375,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198162781650812927,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198167179697324031,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198175975790346239,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198193567976390655,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198228752348479487,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198299121092657151,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198439858581012479,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198721333557723135,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(199284283511144447,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(200410183417987071,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(200410183417987072,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(201536083324829696,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202099033278251008,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202380508254961664,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202521245743316992,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202591614487494656,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202626798859583488,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202644391045627904,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202653187138650112,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202657585185161216,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202659784208416768,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202660883720044544,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661433475858432,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661708353765376,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661845792718848,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661914512195584,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661948871933952,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661966051803136,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661974641737728,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661978936705024,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661981084188672,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982157930496,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982694801408,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982963236864,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983097454592,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983164563456,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983198117888,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983214895104,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983223283712,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983227478016,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983229575168,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983230623744,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231148032,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231410176,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231541248,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231606784,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231639552,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231655936,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231664128,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231668224,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231670272,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231671296,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231671808,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672064,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672192,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672256,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672288,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672304,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672312,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672316,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672318,64,FLEN)
NAN_BOXED(6875563162212254207,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672319,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855872,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855873,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855875,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855879,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855887,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855903,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855935,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855999,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856127,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856383,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856895,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075857919,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075859967,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075864063,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075872255,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075888639,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075921407,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075986943,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076118015,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076380159,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076904447,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188077953023,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188080050175,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188084244479,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188092633087,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188109410303,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188142964735,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188210073599,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188344291327,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188612726783,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115189149597695,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115190223339519,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115192370823167,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115196665790463,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115205255725055,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115222435594239,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115256795332607,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115325514809343,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115462953762815,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115737831669759,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144116287587483647,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144117387099111423,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144119586122366975,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144123984168878079,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144132780261900287,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144150372447944703,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144185556820033535,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144255925564211199,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144396663052566527,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144678138029277183,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(145241087982698495,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(146366987889541119,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(146366987889541120,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(147492887796383744,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148055837749805056,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148337312726515712,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148478050214871040,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148548418959048704,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148583603331137536,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148601195517181952,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148609991610204160,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148614389656715264,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148616588679970816,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148617688191598592,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618237947412480,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618512825319424,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618650264272896,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618718983749632,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618753343488000,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618770523357184,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618779113291776,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618783408259072,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618785555742720,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618786629484544,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787166355456,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787434790912,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787569008640,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787636117504,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787669671936,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787686449152,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787694837760,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787699032064,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787701129216,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702177792,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702702080,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702964224,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703095296,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703160832,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703193600,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703209984,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703218176,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703222272,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703224320,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703225344,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703225856,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226112,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226240,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226304,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226336,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226352,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226360,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226364,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226366,64,FLEN)
NAN_BOXED(6875763007544145503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226367,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596864,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596865,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596867,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596871,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596879,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596895,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596927,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596991,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597119,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597375,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597887,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330598911,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330600959,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330605055,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330613247,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330629631,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330662399,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330727935,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330859007,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331121151,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331645439,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387332694015,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387334791167,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387338985471,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387347374079,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387364151295,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387397705727,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387464814591,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387599032319,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387867467775,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122388404338687,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122389478080511,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122391625564159,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122395920531455,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122404510466047,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122421690335231,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122456050073599,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122524769550335,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122662208503807,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122937086410751,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153123486842224639,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153124586353852415,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153126785377107967,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153131183423619071,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153139979516641279,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153157571702685695,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153192756074774527,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153263124818952191,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153403862307307519,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153685337284018175,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(154248287237439487,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282111,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282112,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(156500087051124736,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157063037004546048,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157344511981256704,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157485249469612032,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157555618213789696,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157590802585878528,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157608394771922944,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157617190864945152,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157621588911456256,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157623787934711808,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157624887446339584,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625437202153472,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625712080060416,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625849519013888,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625918238490624,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625952598228992,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625969778098176,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625978368032768,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625982663000064,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625984810483712,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625985884225536,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986421096448,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986689531904,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986823749632,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986890858496,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986924412928,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986941190144,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986949578752,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986953773056,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986955870208,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986956918784,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957443072,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957705216,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957836288,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957901824,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957934592,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957950976,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957959168,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957963264,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957965312,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966336,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966848,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967104,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967232,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967296,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967328,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967344,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967352,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967356,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967358,64,FLEN)
NAN_BOXED(6876659520740537247,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967359,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854656,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854657,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854659,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854663,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854671,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854687,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854719,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854783,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854911,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694855167,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694855679,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694856703,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694858751,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694862847,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694871039,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694887423,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694920191,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694985727,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695116799,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695378943,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695903231,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822696951807,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822699048959,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822703243263,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822711631871,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822728409087,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822761963519,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822829072383,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822963290111,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508823231725567,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508823768596479,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508824842338303,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508826989821951,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508831284789247,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508839874723839,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508857054593023,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508891414331391,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508960133808127,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509097572761599,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509372450668543,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509922206482431,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394511021718110207,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394513220741365759,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394517618787876863,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394526414880899071,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394544007066943487,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394579191439032319,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394649560183209983,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394790297671565311,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9395071772648275967,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9395634722601697279,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9396760622508539903,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9396760622508539904,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9397886522415382528,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398449472368803840,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398730947345514496,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398871684833869824,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398942053578047488,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398977237950136320,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398994830136180736,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399003626229202944,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399008024275714048,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399010223298969600,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399011322810597376,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399011872566411264,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012147444318208,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012284883271680,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012353602748416,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012387962486784,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012405142355968,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012413732290560,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012418027257856,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012420174741504,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012421248483328,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012421785354240,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422053789696,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422188007424,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422255116288,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422288670720,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422305447936,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422313836544,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422318030848,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422320128000,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321176576,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321700864,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321963008,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322094080,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322159616,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322192384,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322208768,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322216960,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322221056,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322223104,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224128,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224640,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224896,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225024,64,FLEN)
NAN_BOXED(6876668352088650351,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225088,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
