
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_36864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800000000000ff; valaddr_reg:x3; val_offset:110592*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110592*0 + 3*0*FLEN/8, x4, x1, x2)

inst_36865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800000000001ff; valaddr_reg:x3; val_offset:110595*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110595*0 + 3*1*FLEN/8, x4, x1, x2)

inst_36866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800000000003ff; valaddr_reg:x3; val_offset:110598*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110598*0 + 3*2*FLEN/8, x4, x1, x2)

inst_36867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800000000007ff; valaddr_reg:x3; val_offset:110601*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110601*0 + 3*3*FLEN/8, x4, x1, x2)

inst_36868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80000000000fff; valaddr_reg:x3; val_offset:110604*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110604*0 + 3*4*FLEN/8, x4, x1, x2)

inst_36869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80000000001fff; valaddr_reg:x3; val_offset:110607*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110607*0 + 3*5*FLEN/8, x4, x1, x2)

inst_36870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80000000003fff; valaddr_reg:x3; val_offset:110610*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110610*0 + 3*6*FLEN/8, x4, x1, x2)

inst_36871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80000000007fff; valaddr_reg:x3; val_offset:110613*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110613*0 + 3*7*FLEN/8, x4, x1, x2)

inst_36872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8000000000ffff; valaddr_reg:x3; val_offset:110616*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110616*0 + 3*8*FLEN/8, x4, x1, x2)

inst_36873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8000000001ffff; valaddr_reg:x3; val_offset:110619*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110619*0 + 3*9*FLEN/8, x4, x1, x2)

inst_36874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8000000003ffff; valaddr_reg:x3; val_offset:110622*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110622*0 + 3*10*FLEN/8, x4, x1, x2)

inst_36875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8000000007ffff; valaddr_reg:x3; val_offset:110625*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110625*0 + 3*11*FLEN/8, x4, x1, x2)

inst_36876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800000000fffff; valaddr_reg:x3; val_offset:110628*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110628*0 + 3*12*FLEN/8, x4, x1, x2)

inst_36877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800000001fffff; valaddr_reg:x3; val_offset:110631*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110631*0 + 3*13*FLEN/8, x4, x1, x2)

inst_36878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800000003fffff; valaddr_reg:x3; val_offset:110634*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110634*0 + 3*14*FLEN/8, x4, x1, x2)

inst_36879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800000007fffff; valaddr_reg:x3; val_offset:110637*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110637*0 + 3*15*FLEN/8, x4, x1, x2)

inst_36880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80000000ffffff; valaddr_reg:x3; val_offset:110640*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110640*0 + 3*16*FLEN/8, x4, x1, x2)

inst_36881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80000001ffffff; valaddr_reg:x3; val_offset:110643*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110643*0 + 3*17*FLEN/8, x4, x1, x2)

inst_36882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80000003ffffff; valaddr_reg:x3; val_offset:110646*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110646*0 + 3*18*FLEN/8, x4, x1, x2)

inst_36883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80000007ffffff; valaddr_reg:x3; val_offset:110649*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110649*0 + 3*19*FLEN/8, x4, x1, x2)

inst_36884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8000000fffffff; valaddr_reg:x3; val_offset:110652*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110652*0 + 3*20*FLEN/8, x4, x1, x2)

inst_36885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8000001fffffff; valaddr_reg:x3; val_offset:110655*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110655*0 + 3*21*FLEN/8, x4, x1, x2)

inst_36886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8000003fffffff; valaddr_reg:x3; val_offset:110658*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110658*0 + 3*22*FLEN/8, x4, x1, x2)

inst_36887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8000007fffffff; valaddr_reg:x3; val_offset:110661*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110661*0 + 3*23*FLEN/8, x4, x1, x2)

inst_36888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800000ffffffff; valaddr_reg:x3; val_offset:110664*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110664*0 + 3*24*FLEN/8, x4, x1, x2)

inst_36889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800001ffffffff; valaddr_reg:x3; val_offset:110667*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110667*0 + 3*25*FLEN/8, x4, x1, x2)

inst_36890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800003ffffffff; valaddr_reg:x3; val_offset:110670*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110670*0 + 3*26*FLEN/8, x4, x1, x2)

inst_36891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800007ffffffff; valaddr_reg:x3; val_offset:110673*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110673*0 + 3*27*FLEN/8, x4, x1, x2)

inst_36892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80000fffffffff; valaddr_reg:x3; val_offset:110676*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110676*0 + 3*28*FLEN/8, x4, x1, x2)

inst_36893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80001fffffffff; valaddr_reg:x3; val_offset:110679*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110679*0 + 3*29*FLEN/8, x4, x1, x2)

inst_36894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80003fffffffff; valaddr_reg:x3; val_offset:110682*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110682*0 + 3*30*FLEN/8, x4, x1, x2)

inst_36895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80007fffffffff; valaddr_reg:x3; val_offset:110685*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110685*0 + 3*31*FLEN/8, x4, x1, x2)

inst_36896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8000ffffffffff; valaddr_reg:x3; val_offset:110688*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110688*0 + 3*32*FLEN/8, x4, x1, x2)

inst_36897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8001ffffffffff; valaddr_reg:x3; val_offset:110691*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110691*0 + 3*33*FLEN/8, x4, x1, x2)

inst_36898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8003ffffffffff; valaddr_reg:x3; val_offset:110694*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110694*0 + 3*34*FLEN/8, x4, x1, x2)

inst_36899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8007ffffffffff; valaddr_reg:x3; val_offset:110697*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110697*0 + 3*35*FLEN/8, x4, x1, x2)

inst_36900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x800fffffffffff; valaddr_reg:x3; val_offset:110700*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110700*0 + 3*36*FLEN/8, x4, x1, x2)

inst_36901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x801fffffffffff; valaddr_reg:x3; val_offset:110703*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110703*0 + 3*37*FLEN/8, x4, x1, x2)

inst_36902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x803fffffffffff; valaddr_reg:x3; val_offset:110706*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110706*0 + 3*38*FLEN/8, x4, x1, x2)

inst_36903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x807fffffffffff; valaddr_reg:x3; val_offset:110709*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110709*0 + 3*39*FLEN/8, x4, x1, x2)

inst_36904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x80ffffffffffff; valaddr_reg:x3; val_offset:110712*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110712*0 + 3*40*FLEN/8, x4, x1, x2)

inst_36905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x81ffffffffffff; valaddr_reg:x3; val_offset:110715*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110715*0 + 3*41*FLEN/8, x4, x1, x2)

inst_36906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x83ffffffffffff; valaddr_reg:x3; val_offset:110718*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110718*0 + 3*42*FLEN/8, x4, x1, x2)

inst_36907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x87ffffffffffff; valaddr_reg:x3; val_offset:110721*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110721*0 + 3*43*FLEN/8, x4, x1, x2)

inst_36908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x88000000000000; valaddr_reg:x3; val_offset:110724*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110724*0 + 3*44*FLEN/8, x4, x1, x2)

inst_36909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8c000000000000; valaddr_reg:x3; val_offset:110727*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110727*0 + 3*45*FLEN/8, x4, x1, x2)

inst_36910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8e000000000000; valaddr_reg:x3; val_offset:110730*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110730*0 + 3*46*FLEN/8, x4, x1, x2)

inst_36911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8f000000000000; valaddr_reg:x3; val_offset:110733*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110733*0 + 3*47*FLEN/8, x4, x1, x2)

inst_36912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8f800000000000; valaddr_reg:x3; val_offset:110736*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110736*0 + 3*48*FLEN/8, x4, x1, x2)

inst_36913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fc00000000000; valaddr_reg:x3; val_offset:110739*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110739*0 + 3*49*FLEN/8, x4, x1, x2)

inst_36914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fe00000000000; valaddr_reg:x3; val_offset:110742*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110742*0 + 3*50*FLEN/8, x4, x1, x2)

inst_36915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ff00000000000; valaddr_reg:x3; val_offset:110745*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110745*0 + 3*51*FLEN/8, x4, x1, x2)

inst_36916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ff80000000000; valaddr_reg:x3; val_offset:110748*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110748*0 + 3*52*FLEN/8, x4, x1, x2)

inst_36917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffc0000000000; valaddr_reg:x3; val_offset:110751*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110751*0 + 3*53*FLEN/8, x4, x1, x2)

inst_36918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffe0000000000; valaddr_reg:x3; val_offset:110754*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110754*0 + 3*54*FLEN/8, x4, x1, x2)

inst_36919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fff0000000000; valaddr_reg:x3; val_offset:110757*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110757*0 + 3*55*FLEN/8, x4, x1, x2)

inst_36920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fff8000000000; valaddr_reg:x3; val_offset:110760*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110760*0 + 3*56*FLEN/8, x4, x1, x2)

inst_36921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffc000000000; valaddr_reg:x3; val_offset:110763*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110763*0 + 3*57*FLEN/8, x4, x1, x2)

inst_36922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffe000000000; valaddr_reg:x3; val_offset:110766*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110766*0 + 3*58*FLEN/8, x4, x1, x2)

inst_36923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffff000000000; valaddr_reg:x3; val_offset:110769*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110769*0 + 3*59*FLEN/8, x4, x1, x2)

inst_36924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffff800000000; valaddr_reg:x3; val_offset:110772*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110772*0 + 3*60*FLEN/8, x4, x1, x2)

inst_36925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffc00000000; valaddr_reg:x3; val_offset:110775*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110775*0 + 3*61*FLEN/8, x4, x1, x2)

inst_36926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffe00000000; valaddr_reg:x3; val_offset:110778*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110778*0 + 3*62*FLEN/8, x4, x1, x2)

inst_36927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffff00000000; valaddr_reg:x3; val_offset:110781*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110781*0 + 3*63*FLEN/8, x4, x1, x2)

inst_36928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffff80000000; valaddr_reg:x3; val_offset:110784*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110784*0 + 3*64*FLEN/8, x4, x1, x2)

inst_36929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffc0000000; valaddr_reg:x3; val_offset:110787*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110787*0 + 3*65*FLEN/8, x4, x1, x2)

inst_36930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffe0000000; valaddr_reg:x3; val_offset:110790*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110790*0 + 3*66*FLEN/8, x4, x1, x2)

inst_36931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffff0000000; valaddr_reg:x3; val_offset:110793*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110793*0 + 3*67*FLEN/8, x4, x1, x2)

inst_36932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffff8000000; valaddr_reg:x3; val_offset:110796*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110796*0 + 3*68*FLEN/8, x4, x1, x2)

inst_36933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffc000000; valaddr_reg:x3; val_offset:110799*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110799*0 + 3*69*FLEN/8, x4, x1, x2)

inst_36934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffe000000; valaddr_reg:x3; val_offset:110802*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110802*0 + 3*70*FLEN/8, x4, x1, x2)

inst_36935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffff000000; valaddr_reg:x3; val_offset:110805*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110805*0 + 3*71*FLEN/8, x4, x1, x2)

inst_36936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffff800000; valaddr_reg:x3; val_offset:110808*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110808*0 + 3*72*FLEN/8, x4, x1, x2)

inst_36937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffffc00000; valaddr_reg:x3; val_offset:110811*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110811*0 + 3*73*FLEN/8, x4, x1, x2)

inst_36938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffffe00000; valaddr_reg:x3; val_offset:110814*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110814*0 + 3*74*FLEN/8, x4, x1, x2)

inst_36939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffff00000; valaddr_reg:x3; val_offset:110817*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110817*0 + 3*75*FLEN/8, x4, x1, x2)

inst_36940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffff80000; valaddr_reg:x3; val_offset:110820*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110820*0 + 3*76*FLEN/8, x4, x1, x2)

inst_36941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffffc0000; valaddr_reg:x3; val_offset:110823*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110823*0 + 3*77*FLEN/8, x4, x1, x2)

inst_36942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffffe0000; valaddr_reg:x3; val_offset:110826*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110826*0 + 3*78*FLEN/8, x4, x1, x2)

inst_36943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffffff0000; valaddr_reg:x3; val_offset:110829*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110829*0 + 3*79*FLEN/8, x4, x1, x2)

inst_36944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffffff8000; valaddr_reg:x3; val_offset:110832*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110832*0 + 3*80*FLEN/8, x4, x1, x2)

inst_36945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffffffc000; valaddr_reg:x3; val_offset:110835*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110835*0 + 3*81*FLEN/8, x4, x1, x2)

inst_36946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffffffe000; valaddr_reg:x3; val_offset:110838*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110838*0 + 3*82*FLEN/8, x4, x1, x2)

inst_36947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffffff000; valaddr_reg:x3; val_offset:110841*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110841*0 + 3*83*FLEN/8, x4, x1, x2)

inst_36948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffffff800; valaddr_reg:x3; val_offset:110844*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110844*0 + 3*84*FLEN/8, x4, x1, x2)

inst_36949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffffffc00; valaddr_reg:x3; val_offset:110847*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110847*0 + 3*85*FLEN/8, x4, x1, x2)

inst_36950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffffffe00; valaddr_reg:x3; val_offset:110850*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110850*0 + 3*86*FLEN/8, x4, x1, x2)

inst_36951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffffffff00; valaddr_reg:x3; val_offset:110853*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110853*0 + 3*87*FLEN/8, x4, x1, x2)

inst_36952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffffffff80; valaddr_reg:x3; val_offset:110856*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110856*0 + 3*88*FLEN/8, x4, x1, x2)

inst_36953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffffffffc0; valaddr_reg:x3; val_offset:110859*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110859*0 + 3*89*FLEN/8, x4, x1, x2)

inst_36954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffffffffe0; valaddr_reg:x3; val_offset:110862*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110862*0 + 3*90*FLEN/8, x4, x1, x2)

inst_36955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffffffff0; valaddr_reg:x3; val_offset:110865*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110865*0 + 3*91*FLEN/8, x4, x1, x2)

inst_36956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffffffff8; valaddr_reg:x3; val_offset:110868*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110868*0 + 3*92*FLEN/8, x4, x1, x2)

inst_36957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffffffffc; valaddr_reg:x3; val_offset:110871*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110871*0 + 3*93*FLEN/8, x4, x1, x2)

inst_36958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8ffffffffffffe; valaddr_reg:x3; val_offset:110874*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110874*0 + 3*94*FLEN/8, x4, x1, x2)

inst_36959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x658c16e50904b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9658c16e50904b; op2val:0x0;
op3val:0x8fffffffffffff; valaddr_reg:x3; val_offset:110877*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110877*0 + 3*95*FLEN/8, x4, x1, x2)

inst_36960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:110880*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110880*0 + 3*96*FLEN/8, x4, x1, x2)

inst_36961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:110883*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110883*0 + 3*97*FLEN/8, x4, x1, x2)

inst_36962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:110886*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110886*0 + 3*98*FLEN/8, x4, x1, x2)

inst_36963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:110889*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110889*0 + 3*99*FLEN/8, x4, x1, x2)

inst_36964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:110892*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110892*0 + 3*100*FLEN/8, x4, x1, x2)

inst_36965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:110895*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110895*0 + 3*101*FLEN/8, x4, x1, x2)

inst_36966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:110898*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110898*0 + 3*102*FLEN/8, x4, x1, x2)

inst_36967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:110901*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110901*0 + 3*103*FLEN/8, x4, x1, x2)

inst_36968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:110904*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110904*0 + 3*104*FLEN/8, x4, x1, x2)

inst_36969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:110907*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110907*0 + 3*105*FLEN/8, x4, x1, x2)

inst_36970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:110910*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110910*0 + 3*106*FLEN/8, x4, x1, x2)

inst_36971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:110913*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110913*0 + 3*107*FLEN/8, x4, x1, x2)

inst_36972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:110916*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110916*0 + 3*108*FLEN/8, x4, x1, x2)

inst_36973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:110919*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110919*0 + 3*109*FLEN/8, x4, x1, x2)

inst_36974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:110922*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110922*0 + 3*110*FLEN/8, x4, x1, x2)

inst_36975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:110925*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110925*0 + 3*111*FLEN/8, x4, x1, x2)

inst_36976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:110928*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110928*0 + 3*112*FLEN/8, x4, x1, x2)

inst_36977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:110931*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110931*0 + 3*113*FLEN/8, x4, x1, x2)

inst_36978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:110934*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110934*0 + 3*114*FLEN/8, x4, x1, x2)

inst_36979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:110937*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110937*0 + 3*115*FLEN/8, x4, x1, x2)

inst_36980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:110940*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110940*0 + 3*116*FLEN/8, x4, x1, x2)

inst_36981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:110943*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110943*0 + 3*117*FLEN/8, x4, x1, x2)

inst_36982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000000000000; valaddr_reg:x3; val_offset:110946*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110946*0 + 3*118*FLEN/8, x4, x1, x2)

inst_36983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000000000001; valaddr_reg:x3; val_offset:110949*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110949*0 + 3*119*FLEN/8, x4, x1, x2)

inst_36984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000000000003; valaddr_reg:x3; val_offset:110952*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110952*0 + 3*120*FLEN/8, x4, x1, x2)

inst_36985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000000000007; valaddr_reg:x3; val_offset:110955*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110955*0 + 3*121*FLEN/8, x4, x1, x2)

inst_36986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000000000000f; valaddr_reg:x3; val_offset:110958*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110958*0 + 3*122*FLEN/8, x4, x1, x2)

inst_36987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000000000001f; valaddr_reg:x3; val_offset:110961*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110961*0 + 3*123*FLEN/8, x4, x1, x2)

inst_36988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000000000003f; valaddr_reg:x3; val_offset:110964*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110964*0 + 3*124*FLEN/8, x4, x1, x2)

inst_36989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000000000007f; valaddr_reg:x3; val_offset:110967*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110967*0 + 3*125*FLEN/8, x4, x1, x2)

inst_36990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00000000000ff; valaddr_reg:x3; val_offset:110970*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110970*0 + 3*126*FLEN/8, x4, x1, x2)

inst_36991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00000000001ff; valaddr_reg:x3; val_offset:110973*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110973*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_36992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00000000003ff; valaddr_reg:x3; val_offset:110976*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110976*0 + 3*128*FLEN/8, x4, x1, x2)

inst_36993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00000000007ff; valaddr_reg:x3; val_offset:110979*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110979*0 + 3*129*FLEN/8, x4, x1, x2)

inst_36994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000000000fff; valaddr_reg:x3; val_offset:110982*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110982*0 + 3*130*FLEN/8, x4, x1, x2)

inst_36995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000000001fff; valaddr_reg:x3; val_offset:110985*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110985*0 + 3*131*FLEN/8, x4, x1, x2)

inst_36996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000000003fff; valaddr_reg:x3; val_offset:110988*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110988*0 + 3*132*FLEN/8, x4, x1, x2)

inst_36997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000000007fff; valaddr_reg:x3; val_offset:110991*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110991*0 + 3*133*FLEN/8, x4, x1, x2)

inst_36998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000000000ffff; valaddr_reg:x3; val_offset:110994*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110994*0 + 3*134*FLEN/8, x4, x1, x2)

inst_36999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000000001ffff; valaddr_reg:x3; val_offset:110997*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 110997*0 + 3*135*FLEN/8, x4, x1, x2)

inst_37000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000000003ffff; valaddr_reg:x3; val_offset:111000*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111000*0 + 3*136*FLEN/8, x4, x1, x2)

inst_37001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000000007ffff; valaddr_reg:x3; val_offset:111003*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111003*0 + 3*137*FLEN/8, x4, x1, x2)

inst_37002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00000000fffff; valaddr_reg:x3; val_offset:111006*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111006*0 + 3*138*FLEN/8, x4, x1, x2)

inst_37003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00000001fffff; valaddr_reg:x3; val_offset:111009*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111009*0 + 3*139*FLEN/8, x4, x1, x2)

inst_37004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00000003fffff; valaddr_reg:x3; val_offset:111012*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111012*0 + 3*140*FLEN/8, x4, x1, x2)

inst_37005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00000007fffff; valaddr_reg:x3; val_offset:111015*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111015*0 + 3*141*FLEN/8, x4, x1, x2)

inst_37006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000000ffffff; valaddr_reg:x3; val_offset:111018*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111018*0 + 3*142*FLEN/8, x4, x1, x2)

inst_37007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000001ffffff; valaddr_reg:x3; val_offset:111021*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111021*0 + 3*143*FLEN/8, x4, x1, x2)

inst_37008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000003ffffff; valaddr_reg:x3; val_offset:111024*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111024*0 + 3*144*FLEN/8, x4, x1, x2)

inst_37009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000007ffffff; valaddr_reg:x3; val_offset:111027*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111027*0 + 3*145*FLEN/8, x4, x1, x2)

inst_37010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000000fffffff; valaddr_reg:x3; val_offset:111030*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111030*0 + 3*146*FLEN/8, x4, x1, x2)

inst_37011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000001fffffff; valaddr_reg:x3; val_offset:111033*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111033*0 + 3*147*FLEN/8, x4, x1, x2)

inst_37012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000003fffffff; valaddr_reg:x3; val_offset:111036*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111036*0 + 3*148*FLEN/8, x4, x1, x2)

inst_37013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000007fffffff; valaddr_reg:x3; val_offset:111039*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111039*0 + 3*149*FLEN/8, x4, x1, x2)

inst_37014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00000ffffffff; valaddr_reg:x3; val_offset:111042*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111042*0 + 3*150*FLEN/8, x4, x1, x2)

inst_37015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00001ffffffff; valaddr_reg:x3; val_offset:111045*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111045*0 + 3*151*FLEN/8, x4, x1, x2)

inst_37016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00003ffffffff; valaddr_reg:x3; val_offset:111048*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111048*0 + 3*152*FLEN/8, x4, x1, x2)

inst_37017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00007ffffffff; valaddr_reg:x3; val_offset:111051*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111051*0 + 3*153*FLEN/8, x4, x1, x2)

inst_37018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0000fffffffff; valaddr_reg:x3; val_offset:111054*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111054*0 + 3*154*FLEN/8, x4, x1, x2)

inst_37019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0001fffffffff; valaddr_reg:x3; val_offset:111057*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111057*0 + 3*155*FLEN/8, x4, x1, x2)

inst_37020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0003fffffffff; valaddr_reg:x3; val_offset:111060*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111060*0 + 3*156*FLEN/8, x4, x1, x2)

inst_37021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0007fffffffff; valaddr_reg:x3; val_offset:111063*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111063*0 + 3*157*FLEN/8, x4, x1, x2)

inst_37022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d000ffffffffff; valaddr_reg:x3; val_offset:111066*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111066*0 + 3*158*FLEN/8, x4, x1, x2)

inst_37023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d001ffffffffff; valaddr_reg:x3; val_offset:111069*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111069*0 + 3*159*FLEN/8, x4, x1, x2)

inst_37024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d003ffffffffff; valaddr_reg:x3; val_offset:111072*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111072*0 + 3*160*FLEN/8, x4, x1, x2)

inst_37025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d007ffffffffff; valaddr_reg:x3; val_offset:111075*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111075*0 + 3*161*FLEN/8, x4, x1, x2)

inst_37026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d00fffffffffff; valaddr_reg:x3; val_offset:111078*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111078*0 + 3*162*FLEN/8, x4, x1, x2)

inst_37027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d01fffffffffff; valaddr_reg:x3; val_offset:111081*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111081*0 + 3*163*FLEN/8, x4, x1, x2)

inst_37028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d03fffffffffff; valaddr_reg:x3; val_offset:111084*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111084*0 + 3*164*FLEN/8, x4, x1, x2)

inst_37029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d07fffffffffff; valaddr_reg:x3; val_offset:111087*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111087*0 + 3*165*FLEN/8, x4, x1, x2)

inst_37030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d0ffffffffffff; valaddr_reg:x3; val_offset:111090*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111090*0 + 3*166*FLEN/8, x4, x1, x2)

inst_37031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d1ffffffffffff; valaddr_reg:x3; val_offset:111093*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111093*0 + 3*167*FLEN/8, x4, x1, x2)

inst_37032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d3ffffffffffff; valaddr_reg:x3; val_offset:111096*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111096*0 + 3*168*FLEN/8, x4, x1, x2)

inst_37033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d7ffffffffffff; valaddr_reg:x3; val_offset:111099*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111099*0 + 3*169*FLEN/8, x4, x1, x2)

inst_37034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2d8000000000000; valaddr_reg:x3; val_offset:111102*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111102*0 + 3*170*FLEN/8, x4, x1, x2)

inst_37035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dc000000000000; valaddr_reg:x3; val_offset:111105*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111105*0 + 3*171*FLEN/8, x4, x1, x2)

inst_37036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2de000000000000; valaddr_reg:x3; val_offset:111108*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111108*0 + 3*172*FLEN/8, x4, x1, x2)

inst_37037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2df000000000000; valaddr_reg:x3; val_offset:111111*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111111*0 + 3*173*FLEN/8, x4, x1, x2)

inst_37038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2df800000000000; valaddr_reg:x3; val_offset:111114*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111114*0 + 3*174*FLEN/8, x4, x1, x2)

inst_37039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfc00000000000; valaddr_reg:x3; val_offset:111117*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111117*0 + 3*175*FLEN/8, x4, x1, x2)

inst_37040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfe00000000000; valaddr_reg:x3; val_offset:111120*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111120*0 + 3*176*FLEN/8, x4, x1, x2)

inst_37041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dff00000000000; valaddr_reg:x3; val_offset:111123*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111123*0 + 3*177*FLEN/8, x4, x1, x2)

inst_37042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dff80000000000; valaddr_reg:x3; val_offset:111126*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111126*0 + 3*178*FLEN/8, x4, x1, x2)

inst_37043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffc0000000000; valaddr_reg:x3; val_offset:111129*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111129*0 + 3*179*FLEN/8, x4, x1, x2)

inst_37044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffe0000000000; valaddr_reg:x3; val_offset:111132*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111132*0 + 3*180*FLEN/8, x4, x1, x2)

inst_37045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfff0000000000; valaddr_reg:x3; val_offset:111135*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111135*0 + 3*181*FLEN/8, x4, x1, x2)

inst_37046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfff8000000000; valaddr_reg:x3; val_offset:111138*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111138*0 + 3*182*FLEN/8, x4, x1, x2)

inst_37047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffc000000000; valaddr_reg:x3; val_offset:111141*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111141*0 + 3*183*FLEN/8, x4, x1, x2)

inst_37048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffe000000000; valaddr_reg:x3; val_offset:111144*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111144*0 + 3*184*FLEN/8, x4, x1, x2)

inst_37049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffff000000000; valaddr_reg:x3; val_offset:111147*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111147*0 + 3*185*FLEN/8, x4, x1, x2)

inst_37050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffff800000000; valaddr_reg:x3; val_offset:111150*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111150*0 + 3*186*FLEN/8, x4, x1, x2)

inst_37051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffc00000000; valaddr_reg:x3; val_offset:111153*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111153*0 + 3*187*FLEN/8, x4, x1, x2)

inst_37052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffe00000000; valaddr_reg:x3; val_offset:111156*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111156*0 + 3*188*FLEN/8, x4, x1, x2)

inst_37053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffff00000000; valaddr_reg:x3; val_offset:111159*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111159*0 + 3*189*FLEN/8, x4, x1, x2)

inst_37054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffff80000000; valaddr_reg:x3; val_offset:111162*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111162*0 + 3*190*FLEN/8, x4, x1, x2)

inst_37055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffc0000000; valaddr_reg:x3; val_offset:111165*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111165*0 + 3*191*FLEN/8, x4, x1, x2)

inst_37056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffe0000000; valaddr_reg:x3; val_offset:111168*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111168*0 + 3*192*FLEN/8, x4, x1, x2)

inst_37057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffff0000000; valaddr_reg:x3; val_offset:111171*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111171*0 + 3*193*FLEN/8, x4, x1, x2)

inst_37058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffff8000000; valaddr_reg:x3; val_offset:111174*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111174*0 + 3*194*FLEN/8, x4, x1, x2)

inst_37059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffc000000; valaddr_reg:x3; val_offset:111177*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111177*0 + 3*195*FLEN/8, x4, x1, x2)

inst_37060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffe000000; valaddr_reg:x3; val_offset:111180*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111180*0 + 3*196*FLEN/8, x4, x1, x2)

inst_37061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffff000000; valaddr_reg:x3; val_offset:111183*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111183*0 + 3*197*FLEN/8, x4, x1, x2)

inst_37062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffff800000; valaddr_reg:x3; val_offset:111186*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111186*0 + 3*198*FLEN/8, x4, x1, x2)

inst_37063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffffc00000; valaddr_reg:x3; val_offset:111189*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111189*0 + 3*199*FLEN/8, x4, x1, x2)

inst_37064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffffe00000; valaddr_reg:x3; val_offset:111192*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111192*0 + 3*200*FLEN/8, x4, x1, x2)

inst_37065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffff00000; valaddr_reg:x3; val_offset:111195*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111195*0 + 3*201*FLEN/8, x4, x1, x2)

inst_37066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffff80000; valaddr_reg:x3; val_offset:111198*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111198*0 + 3*202*FLEN/8, x4, x1, x2)

inst_37067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffffc0000; valaddr_reg:x3; val_offset:111201*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111201*0 + 3*203*FLEN/8, x4, x1, x2)

inst_37068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffffe0000; valaddr_reg:x3; val_offset:111204*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111204*0 + 3*204*FLEN/8, x4, x1, x2)

inst_37069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffffff0000; valaddr_reg:x3; val_offset:111207*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111207*0 + 3*205*FLEN/8, x4, x1, x2)

inst_37070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffffff8000; valaddr_reg:x3; val_offset:111210*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111210*0 + 3*206*FLEN/8, x4, x1, x2)

inst_37071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffffffc000; valaddr_reg:x3; val_offset:111213*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111213*0 + 3*207*FLEN/8, x4, x1, x2)

inst_37072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffffffe000; valaddr_reg:x3; val_offset:111216*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111216*0 + 3*208*FLEN/8, x4, x1, x2)

inst_37073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffffff000; valaddr_reg:x3; val_offset:111219*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111219*0 + 3*209*FLEN/8, x4, x1, x2)

inst_37074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffffff800; valaddr_reg:x3; val_offset:111222*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111222*0 + 3*210*FLEN/8, x4, x1, x2)

inst_37075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffffffc00; valaddr_reg:x3; val_offset:111225*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111225*0 + 3*211*FLEN/8, x4, x1, x2)

inst_37076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffffffe00; valaddr_reg:x3; val_offset:111228*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111228*0 + 3*212*FLEN/8, x4, x1, x2)

inst_37077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffffffff00; valaddr_reg:x3; val_offset:111231*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111231*0 + 3*213*FLEN/8, x4, x1, x2)

inst_37078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffffffff80; valaddr_reg:x3; val_offset:111234*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111234*0 + 3*214*FLEN/8, x4, x1, x2)

inst_37079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffffffffc0; valaddr_reg:x3; val_offset:111237*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111237*0 + 3*215*FLEN/8, x4, x1, x2)

inst_37080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffffffffe0; valaddr_reg:x3; val_offset:111240*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111240*0 + 3*216*FLEN/8, x4, x1, x2)

inst_37081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffffffff0; valaddr_reg:x3; val_offset:111243*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111243*0 + 3*217*FLEN/8, x4, x1, x2)

inst_37082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffffffff8; valaddr_reg:x3; val_offset:111246*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111246*0 + 3*218*FLEN/8, x4, x1, x2)

inst_37083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffffffffc; valaddr_reg:x3; val_offset:111249*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111249*0 + 3*219*FLEN/8, x4, x1, x2)

inst_37084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dffffffffffffe; valaddr_reg:x3; val_offset:111252*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111252*0 + 3*220*FLEN/8, x4, x1, x2)

inst_37085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x66328e807ef5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f966328e807ef5f; op2val:0x0;
op3val:0x2dfffffffffffff; valaddr_reg:x3; val_offset:111255*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111255*0 + 3*221*FLEN/8, x4, x1, x2)

inst_37086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:111258*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111258*0 + 3*222*FLEN/8, x4, x1, x2)

inst_37087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:111261*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111261*0 + 3*223*FLEN/8, x4, x1, x2)

inst_37088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:111264*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111264*0 + 3*224*FLEN/8, x4, x1, x2)

inst_37089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:111267*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111267*0 + 3*225*FLEN/8, x4, x1, x2)

inst_37090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:111270*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111270*0 + 3*226*FLEN/8, x4, x1, x2)

inst_37091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:111273*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111273*0 + 3*227*FLEN/8, x4, x1, x2)

inst_37092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:111276*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111276*0 + 3*228*FLEN/8, x4, x1, x2)

inst_37093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:111279*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111279*0 + 3*229*FLEN/8, x4, x1, x2)

inst_37094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:111282*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111282*0 + 3*230*FLEN/8, x4, x1, x2)

inst_37095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:111285*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111285*0 + 3*231*FLEN/8, x4, x1, x2)

inst_37096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:111288*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111288*0 + 3*232*FLEN/8, x4, x1, x2)

inst_37097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:111291*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111291*0 + 3*233*FLEN/8, x4, x1, x2)

inst_37098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:111294*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111294*0 + 3*234*FLEN/8, x4, x1, x2)

inst_37099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:111297*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111297*0 + 3*235*FLEN/8, x4, x1, x2)

inst_37100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:111300*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111300*0 + 3*236*FLEN/8, x4, x1, x2)

inst_37101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:111303*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111303*0 + 3*237*FLEN/8, x4, x1, x2)

inst_37102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:111306*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111306*0 + 3*238*FLEN/8, x4, x1, x2)

inst_37103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:111309*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111309*0 + 3*239*FLEN/8, x4, x1, x2)

inst_37104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:111312*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111312*0 + 3*240*FLEN/8, x4, x1, x2)

inst_37105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:111315*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111315*0 + 3*241*FLEN/8, x4, x1, x2)

inst_37106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:111318*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111318*0 + 3*242*FLEN/8, x4, x1, x2)

inst_37107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:111321*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111321*0 + 3*243*FLEN/8, x4, x1, x2)

inst_37108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000000000000; valaddr_reg:x3; val_offset:111324*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111324*0 + 3*244*FLEN/8, x4, x1, x2)

inst_37109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000000000001; valaddr_reg:x3; val_offset:111327*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111327*0 + 3*245*FLEN/8, x4, x1, x2)

inst_37110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000000000003; valaddr_reg:x3; val_offset:111330*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111330*0 + 3*246*FLEN/8, x4, x1, x2)

inst_37111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000000000007; valaddr_reg:x3; val_offset:111333*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111333*0 + 3*247*FLEN/8, x4, x1, x2)

inst_37112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000000000000f; valaddr_reg:x3; val_offset:111336*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111336*0 + 3*248*FLEN/8, x4, x1, x2)

inst_37113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000000000001f; valaddr_reg:x3; val_offset:111339*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111339*0 + 3*249*FLEN/8, x4, x1, x2)

inst_37114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000000000003f; valaddr_reg:x3; val_offset:111342*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111342*0 + 3*250*FLEN/8, x4, x1, x2)

inst_37115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000000000007f; valaddr_reg:x3; val_offset:111345*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111345*0 + 3*251*FLEN/8, x4, x1, x2)

inst_37116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200000000000ff; valaddr_reg:x3; val_offset:111348*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111348*0 + 3*252*FLEN/8, x4, x1, x2)

inst_37117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200000000001ff; valaddr_reg:x3; val_offset:111351*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111351*0 + 3*253*FLEN/8, x4, x1, x2)

inst_37118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200000000003ff; valaddr_reg:x3; val_offset:111354*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111354*0 + 3*254*FLEN/8, x4, x1, x2)

inst_37119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200000000007ff; valaddr_reg:x3; val_offset:111357*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111357*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_37120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000000000fff; valaddr_reg:x3; val_offset:111360*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111360*0 + 3*256*FLEN/8, x4, x1, x2)

inst_37121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000000001fff; valaddr_reg:x3; val_offset:111363*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111363*0 + 3*257*FLEN/8, x4, x1, x2)

inst_37122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000000003fff; valaddr_reg:x3; val_offset:111366*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111366*0 + 3*258*FLEN/8, x4, x1, x2)

inst_37123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000000007fff; valaddr_reg:x3; val_offset:111369*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111369*0 + 3*259*FLEN/8, x4, x1, x2)

inst_37124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000000000ffff; valaddr_reg:x3; val_offset:111372*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111372*0 + 3*260*FLEN/8, x4, x1, x2)

inst_37125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000000001ffff; valaddr_reg:x3; val_offset:111375*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111375*0 + 3*261*FLEN/8, x4, x1, x2)

inst_37126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000000003ffff; valaddr_reg:x3; val_offset:111378*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111378*0 + 3*262*FLEN/8, x4, x1, x2)

inst_37127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000000007ffff; valaddr_reg:x3; val_offset:111381*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111381*0 + 3*263*FLEN/8, x4, x1, x2)

inst_37128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200000000fffff; valaddr_reg:x3; val_offset:111384*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111384*0 + 3*264*FLEN/8, x4, x1, x2)

inst_37129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200000001fffff; valaddr_reg:x3; val_offset:111387*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111387*0 + 3*265*FLEN/8, x4, x1, x2)

inst_37130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200000003fffff; valaddr_reg:x3; val_offset:111390*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111390*0 + 3*266*FLEN/8, x4, x1, x2)

inst_37131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200000007fffff; valaddr_reg:x3; val_offset:111393*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111393*0 + 3*267*FLEN/8, x4, x1, x2)

inst_37132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000000ffffff; valaddr_reg:x3; val_offset:111396*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111396*0 + 3*268*FLEN/8, x4, x1, x2)

inst_37133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000001ffffff; valaddr_reg:x3; val_offset:111399*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111399*0 + 3*269*FLEN/8, x4, x1, x2)

inst_37134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000003ffffff; valaddr_reg:x3; val_offset:111402*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111402*0 + 3*270*FLEN/8, x4, x1, x2)

inst_37135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000007ffffff; valaddr_reg:x3; val_offset:111405*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111405*0 + 3*271*FLEN/8, x4, x1, x2)

inst_37136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000000fffffff; valaddr_reg:x3; val_offset:111408*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111408*0 + 3*272*FLEN/8, x4, x1, x2)

inst_37137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000001fffffff; valaddr_reg:x3; val_offset:111411*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111411*0 + 3*273*FLEN/8, x4, x1, x2)

inst_37138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000003fffffff; valaddr_reg:x3; val_offset:111414*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111414*0 + 3*274*FLEN/8, x4, x1, x2)

inst_37139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000007fffffff; valaddr_reg:x3; val_offset:111417*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111417*0 + 3*275*FLEN/8, x4, x1, x2)

inst_37140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200000ffffffff; valaddr_reg:x3; val_offset:111420*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111420*0 + 3*276*FLEN/8, x4, x1, x2)

inst_37141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200001ffffffff; valaddr_reg:x3; val_offset:111423*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111423*0 + 3*277*FLEN/8, x4, x1, x2)

inst_37142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200003ffffffff; valaddr_reg:x3; val_offset:111426*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111426*0 + 3*278*FLEN/8, x4, x1, x2)

inst_37143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200007ffffffff; valaddr_reg:x3; val_offset:111429*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111429*0 + 3*279*FLEN/8, x4, x1, x2)

inst_37144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120000fffffffff; valaddr_reg:x3; val_offset:111432*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111432*0 + 3*280*FLEN/8, x4, x1, x2)

inst_37145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120001fffffffff; valaddr_reg:x3; val_offset:111435*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111435*0 + 3*281*FLEN/8, x4, x1, x2)

inst_37146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120003fffffffff; valaddr_reg:x3; val_offset:111438*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111438*0 + 3*282*FLEN/8, x4, x1, x2)

inst_37147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120007fffffffff; valaddr_reg:x3; val_offset:111441*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111441*0 + 3*283*FLEN/8, x4, x1, x2)

inst_37148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12000ffffffffff; valaddr_reg:x3; val_offset:111444*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111444*0 + 3*284*FLEN/8, x4, x1, x2)

inst_37149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12001ffffffffff; valaddr_reg:x3; val_offset:111447*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111447*0 + 3*285*FLEN/8, x4, x1, x2)

inst_37150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12003ffffffffff; valaddr_reg:x3; val_offset:111450*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111450*0 + 3*286*FLEN/8, x4, x1, x2)

inst_37151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12007ffffffffff; valaddr_reg:x3; val_offset:111453*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111453*0 + 3*287*FLEN/8, x4, x1, x2)

inst_37152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1200fffffffffff; valaddr_reg:x3; val_offset:111456*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111456*0 + 3*288*FLEN/8, x4, x1, x2)

inst_37153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1201fffffffffff; valaddr_reg:x3; val_offset:111459*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111459*0 + 3*289*FLEN/8, x4, x1, x2)

inst_37154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1203fffffffffff; valaddr_reg:x3; val_offset:111462*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111462*0 + 3*290*FLEN/8, x4, x1, x2)

inst_37155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x1207fffffffffff; valaddr_reg:x3; val_offset:111465*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111465*0 + 3*291*FLEN/8, x4, x1, x2)

inst_37156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x120ffffffffffff; valaddr_reg:x3; val_offset:111468*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111468*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x121ffffffffffff; valaddr_reg:x3; val_offset:111471*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111471*0 + 3*293*FLEN/8, x4, x1, x2)

inst_37158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x123ffffffffffff; valaddr_reg:x3; val_offset:111474*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111474*0 + 3*294*FLEN/8, x4, x1, x2)

inst_37159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x127ffffffffffff; valaddr_reg:x3; val_offset:111477*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111477*0 + 3*295*FLEN/8, x4, x1, x2)

inst_37160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x128000000000000; valaddr_reg:x3; val_offset:111480*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111480*0 + 3*296*FLEN/8, x4, x1, x2)

inst_37161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12c000000000000; valaddr_reg:x3; val_offset:111483*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111483*0 + 3*297*FLEN/8, x4, x1, x2)

inst_37162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12e000000000000; valaddr_reg:x3; val_offset:111486*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111486*0 + 3*298*FLEN/8, x4, x1, x2)

inst_37163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12f000000000000; valaddr_reg:x3; val_offset:111489*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111489*0 + 3*299*FLEN/8, x4, x1, x2)

inst_37164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12f800000000000; valaddr_reg:x3; val_offset:111492*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111492*0 + 3*300*FLEN/8, x4, x1, x2)

inst_37165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fc00000000000; valaddr_reg:x3; val_offset:111495*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111495*0 + 3*301*FLEN/8, x4, x1, x2)

inst_37166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fe00000000000; valaddr_reg:x3; val_offset:111498*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111498*0 + 3*302*FLEN/8, x4, x1, x2)

inst_37167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ff00000000000; valaddr_reg:x3; val_offset:111501*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111501*0 + 3*303*FLEN/8, x4, x1, x2)

inst_37168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ff80000000000; valaddr_reg:x3; val_offset:111504*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111504*0 + 3*304*FLEN/8, x4, x1, x2)

inst_37169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffc0000000000; valaddr_reg:x3; val_offset:111507*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111507*0 + 3*305*FLEN/8, x4, x1, x2)

inst_37170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffe0000000000; valaddr_reg:x3; val_offset:111510*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111510*0 + 3*306*FLEN/8, x4, x1, x2)

inst_37171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fff0000000000; valaddr_reg:x3; val_offset:111513*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111513*0 + 3*307*FLEN/8, x4, x1, x2)

inst_37172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fff8000000000; valaddr_reg:x3; val_offset:111516*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111516*0 + 3*308*FLEN/8, x4, x1, x2)

inst_37173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffc000000000; valaddr_reg:x3; val_offset:111519*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111519*0 + 3*309*FLEN/8, x4, x1, x2)

inst_37174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffe000000000; valaddr_reg:x3; val_offset:111522*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111522*0 + 3*310*FLEN/8, x4, x1, x2)

inst_37175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffff000000000; valaddr_reg:x3; val_offset:111525*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111525*0 + 3*311*FLEN/8, x4, x1, x2)

inst_37176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffff800000000; valaddr_reg:x3; val_offset:111528*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111528*0 + 3*312*FLEN/8, x4, x1, x2)

inst_37177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffc00000000; valaddr_reg:x3; val_offset:111531*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111531*0 + 3*313*FLEN/8, x4, x1, x2)

inst_37178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffe00000000; valaddr_reg:x3; val_offset:111534*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111534*0 + 3*314*FLEN/8, x4, x1, x2)

inst_37179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffff00000000; valaddr_reg:x3; val_offset:111537*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111537*0 + 3*315*FLEN/8, x4, x1, x2)

inst_37180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffff80000000; valaddr_reg:x3; val_offset:111540*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111540*0 + 3*316*FLEN/8, x4, x1, x2)

inst_37181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffc0000000; valaddr_reg:x3; val_offset:111543*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111543*0 + 3*317*FLEN/8, x4, x1, x2)

inst_37182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffe0000000; valaddr_reg:x3; val_offset:111546*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111546*0 + 3*318*FLEN/8, x4, x1, x2)

inst_37183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffff0000000; valaddr_reg:x3; val_offset:111549*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111549*0 + 3*319*FLEN/8, x4, x1, x2)

inst_37184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffff8000000; valaddr_reg:x3; val_offset:111552*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111552*0 + 3*320*FLEN/8, x4, x1, x2)

inst_37185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffc000000; valaddr_reg:x3; val_offset:111555*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111555*0 + 3*321*FLEN/8, x4, x1, x2)

inst_37186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffe000000; valaddr_reg:x3; val_offset:111558*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111558*0 + 3*322*FLEN/8, x4, x1, x2)

inst_37187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffff000000; valaddr_reg:x3; val_offset:111561*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111561*0 + 3*323*FLEN/8, x4, x1, x2)

inst_37188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffff800000; valaddr_reg:x3; val_offset:111564*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111564*0 + 3*324*FLEN/8, x4, x1, x2)

inst_37189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffffc00000; valaddr_reg:x3; val_offset:111567*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111567*0 + 3*325*FLEN/8, x4, x1, x2)

inst_37190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffffe00000; valaddr_reg:x3; val_offset:111570*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111570*0 + 3*326*FLEN/8, x4, x1, x2)

inst_37191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffff00000; valaddr_reg:x3; val_offset:111573*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111573*0 + 3*327*FLEN/8, x4, x1, x2)

inst_37192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffff80000; valaddr_reg:x3; val_offset:111576*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111576*0 + 3*328*FLEN/8, x4, x1, x2)

inst_37193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffffc0000; valaddr_reg:x3; val_offset:111579*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111579*0 + 3*329*FLEN/8, x4, x1, x2)

inst_37194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffffe0000; valaddr_reg:x3; val_offset:111582*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111582*0 + 3*330*FLEN/8, x4, x1, x2)

inst_37195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffffff0000; valaddr_reg:x3; val_offset:111585*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111585*0 + 3*331*FLEN/8, x4, x1, x2)

inst_37196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffffff8000; valaddr_reg:x3; val_offset:111588*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111588*0 + 3*332*FLEN/8, x4, x1, x2)

inst_37197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffffffc000; valaddr_reg:x3; val_offset:111591*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111591*0 + 3*333*FLEN/8, x4, x1, x2)

inst_37198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffffffe000; valaddr_reg:x3; val_offset:111594*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111594*0 + 3*334*FLEN/8, x4, x1, x2)

inst_37199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffffff000; valaddr_reg:x3; val_offset:111597*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111597*0 + 3*335*FLEN/8, x4, x1, x2)

inst_37200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffffff800; valaddr_reg:x3; val_offset:111600*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111600*0 + 3*336*FLEN/8, x4, x1, x2)

inst_37201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffffffc00; valaddr_reg:x3; val_offset:111603*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111603*0 + 3*337*FLEN/8, x4, x1, x2)

inst_37202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffffffe00; valaddr_reg:x3; val_offset:111606*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111606*0 + 3*338*FLEN/8, x4, x1, x2)

inst_37203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffffffff00; valaddr_reg:x3; val_offset:111609*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111609*0 + 3*339*FLEN/8, x4, x1, x2)

inst_37204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffffffff80; valaddr_reg:x3; val_offset:111612*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111612*0 + 3*340*FLEN/8, x4, x1, x2)

inst_37205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffffffffc0; valaddr_reg:x3; val_offset:111615*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111615*0 + 3*341*FLEN/8, x4, x1, x2)

inst_37206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffffffffe0; valaddr_reg:x3; val_offset:111618*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111618*0 + 3*342*FLEN/8, x4, x1, x2)

inst_37207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffffffff0; valaddr_reg:x3; val_offset:111621*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111621*0 + 3*343*FLEN/8, x4, x1, x2)

inst_37208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffffffff8; valaddr_reg:x3; val_offset:111624*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111624*0 + 3*344*FLEN/8, x4, x1, x2)

inst_37209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffffffffc; valaddr_reg:x3; val_offset:111627*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111627*0 + 3*345*FLEN/8, x4, x1, x2)

inst_37210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12ffffffffffffe; valaddr_reg:x3; val_offset:111630*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111630*0 + 3*346*FLEN/8, x4, x1, x2)

inst_37211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x693d0534a03dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9693d0534a03dd; op2val:0x0;
op3val:0x12fffffffffffff; valaddr_reg:x3; val_offset:111633*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111633*0 + 3*347*FLEN/8, x4, x1, x2)

inst_37212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:111636*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111636*0 + 3*348*FLEN/8, x4, x1, x2)

inst_37213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:111639*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111639*0 + 3*349*FLEN/8, x4, x1, x2)

inst_37214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:111642*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111642*0 + 3*350*FLEN/8, x4, x1, x2)

inst_37215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:111645*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111645*0 + 3*351*FLEN/8, x4, x1, x2)

inst_37216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:111648*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111648*0 + 3*352*FLEN/8, x4, x1, x2)

inst_37217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:111651*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111651*0 + 3*353*FLEN/8, x4, x1, x2)

inst_37218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:111654*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111654*0 + 3*354*FLEN/8, x4, x1, x2)

inst_37219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:111657*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111657*0 + 3*355*FLEN/8, x4, x1, x2)

inst_37220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:111660*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111660*0 + 3*356*FLEN/8, x4, x1, x2)

inst_37221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:111663*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111663*0 + 3*357*FLEN/8, x4, x1, x2)

inst_37222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:111666*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111666*0 + 3*358*FLEN/8, x4, x1, x2)

inst_37223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:111669*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111669*0 + 3*359*FLEN/8, x4, x1, x2)

inst_37224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:111672*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111672*0 + 3*360*FLEN/8, x4, x1, x2)

inst_37225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:111675*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111675*0 + 3*361*FLEN/8, x4, x1, x2)

inst_37226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:111678*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111678*0 + 3*362*FLEN/8, x4, x1, x2)

inst_37227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:111681*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111681*0 + 3*363*FLEN/8, x4, x1, x2)

inst_37228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:111684*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111684*0 + 3*364*FLEN/8, x4, x1, x2)

inst_37229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:111687*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111687*0 + 3*365*FLEN/8, x4, x1, x2)

inst_37230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:111690*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111690*0 + 3*366*FLEN/8, x4, x1, x2)

inst_37231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:111693*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111693*0 + 3*367*FLEN/8, x4, x1, x2)

inst_37232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:111696*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111696*0 + 3*368*FLEN/8, x4, x1, x2)

inst_37233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:111699*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111699*0 + 3*369*FLEN/8, x4, x1, x2)

inst_37234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000000000000; valaddr_reg:x3; val_offset:111702*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111702*0 + 3*370*FLEN/8, x4, x1, x2)

inst_37235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000000000001; valaddr_reg:x3; val_offset:111705*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111705*0 + 3*371*FLEN/8, x4, x1, x2)

inst_37236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000000000003; valaddr_reg:x3; val_offset:111708*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111708*0 + 3*372*FLEN/8, x4, x1, x2)

inst_37237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000000000007; valaddr_reg:x3; val_offset:111711*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111711*0 + 3*373*FLEN/8, x4, x1, x2)

inst_37238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000000000000f; valaddr_reg:x3; val_offset:111714*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111714*0 + 3*374*FLEN/8, x4, x1, x2)

inst_37239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000000000001f; valaddr_reg:x3; val_offset:111717*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111717*0 + 3*375*FLEN/8, x4, x1, x2)

inst_37240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000000000003f; valaddr_reg:x3; val_offset:111720*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111720*0 + 3*376*FLEN/8, x4, x1, x2)

inst_37241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000000000007f; valaddr_reg:x3; val_offset:111723*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111723*0 + 3*377*FLEN/8, x4, x1, x2)

inst_37242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700000000000ff; valaddr_reg:x3; val_offset:111726*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111726*0 + 3*378*FLEN/8, x4, x1, x2)

inst_37243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700000000001ff; valaddr_reg:x3; val_offset:111729*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111729*0 + 3*379*FLEN/8, x4, x1, x2)

inst_37244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700000000003ff; valaddr_reg:x3; val_offset:111732*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111732*0 + 3*380*FLEN/8, x4, x1, x2)

inst_37245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700000000007ff; valaddr_reg:x3; val_offset:111735*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111735*0 + 3*381*FLEN/8, x4, x1, x2)

inst_37246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000000000fff; valaddr_reg:x3; val_offset:111738*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111738*0 + 3*382*FLEN/8, x4, x1, x2)

inst_37247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000000001fff; valaddr_reg:x3; val_offset:111741*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111741*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_37248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000000003fff; valaddr_reg:x3; val_offset:111744*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111744*0 + 3*384*FLEN/8, x4, x1, x2)

inst_37249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000000007fff; valaddr_reg:x3; val_offset:111747*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111747*0 + 3*385*FLEN/8, x4, x1, x2)

inst_37250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000000000ffff; valaddr_reg:x3; val_offset:111750*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111750*0 + 3*386*FLEN/8, x4, x1, x2)

inst_37251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000000001ffff; valaddr_reg:x3; val_offset:111753*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111753*0 + 3*387*FLEN/8, x4, x1, x2)

inst_37252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000000003ffff; valaddr_reg:x3; val_offset:111756*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111756*0 + 3*388*FLEN/8, x4, x1, x2)

inst_37253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000000007ffff; valaddr_reg:x3; val_offset:111759*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111759*0 + 3*389*FLEN/8, x4, x1, x2)

inst_37254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700000000fffff; valaddr_reg:x3; val_offset:111762*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111762*0 + 3*390*FLEN/8, x4, x1, x2)

inst_37255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700000001fffff; valaddr_reg:x3; val_offset:111765*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111765*0 + 3*391*FLEN/8, x4, x1, x2)

inst_37256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700000003fffff; valaddr_reg:x3; val_offset:111768*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111768*0 + 3*392*FLEN/8, x4, x1, x2)

inst_37257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700000007fffff; valaddr_reg:x3; val_offset:111771*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111771*0 + 3*393*FLEN/8, x4, x1, x2)

inst_37258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000000ffffff; valaddr_reg:x3; val_offset:111774*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111774*0 + 3*394*FLEN/8, x4, x1, x2)

inst_37259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000001ffffff; valaddr_reg:x3; val_offset:111777*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111777*0 + 3*395*FLEN/8, x4, x1, x2)

inst_37260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000003ffffff; valaddr_reg:x3; val_offset:111780*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111780*0 + 3*396*FLEN/8, x4, x1, x2)

inst_37261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000007ffffff; valaddr_reg:x3; val_offset:111783*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111783*0 + 3*397*FLEN/8, x4, x1, x2)

inst_37262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000000fffffff; valaddr_reg:x3; val_offset:111786*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111786*0 + 3*398*FLEN/8, x4, x1, x2)

inst_37263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000001fffffff; valaddr_reg:x3; val_offset:111789*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111789*0 + 3*399*FLEN/8, x4, x1, x2)

inst_37264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000003fffffff; valaddr_reg:x3; val_offset:111792*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111792*0 + 3*400*FLEN/8, x4, x1, x2)

inst_37265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000007fffffff; valaddr_reg:x3; val_offset:111795*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111795*0 + 3*401*FLEN/8, x4, x1, x2)

inst_37266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700000ffffffff; valaddr_reg:x3; val_offset:111798*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111798*0 + 3*402*FLEN/8, x4, x1, x2)

inst_37267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700001ffffffff; valaddr_reg:x3; val_offset:111801*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111801*0 + 3*403*FLEN/8, x4, x1, x2)

inst_37268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700003ffffffff; valaddr_reg:x3; val_offset:111804*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111804*0 + 3*404*FLEN/8, x4, x1, x2)

inst_37269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700007ffffffff; valaddr_reg:x3; val_offset:111807*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111807*0 + 3*405*FLEN/8, x4, x1, x2)

inst_37270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170000fffffffff; valaddr_reg:x3; val_offset:111810*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111810*0 + 3*406*FLEN/8, x4, x1, x2)

inst_37271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170001fffffffff; valaddr_reg:x3; val_offset:111813*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111813*0 + 3*407*FLEN/8, x4, x1, x2)

inst_37272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170003fffffffff; valaddr_reg:x3; val_offset:111816*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111816*0 + 3*408*FLEN/8, x4, x1, x2)

inst_37273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170007fffffffff; valaddr_reg:x3; val_offset:111819*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111819*0 + 3*409*FLEN/8, x4, x1, x2)

inst_37274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17000ffffffffff; valaddr_reg:x3; val_offset:111822*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111822*0 + 3*410*FLEN/8, x4, x1, x2)

inst_37275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17001ffffffffff; valaddr_reg:x3; val_offset:111825*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111825*0 + 3*411*FLEN/8, x4, x1, x2)

inst_37276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17003ffffffffff; valaddr_reg:x3; val_offset:111828*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111828*0 + 3*412*FLEN/8, x4, x1, x2)

inst_37277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17007ffffffffff; valaddr_reg:x3; val_offset:111831*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111831*0 + 3*413*FLEN/8, x4, x1, x2)

inst_37278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1700fffffffffff; valaddr_reg:x3; val_offset:111834*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111834*0 + 3*414*FLEN/8, x4, x1, x2)

inst_37279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1701fffffffffff; valaddr_reg:x3; val_offset:111837*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111837*0 + 3*415*FLEN/8, x4, x1, x2)

inst_37280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1703fffffffffff; valaddr_reg:x3; val_offset:111840*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111840*0 + 3*416*FLEN/8, x4, x1, x2)

inst_37281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x1707fffffffffff; valaddr_reg:x3; val_offset:111843*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111843*0 + 3*417*FLEN/8, x4, x1, x2)

inst_37282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x170ffffffffffff; valaddr_reg:x3; val_offset:111846*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111846*0 + 3*418*FLEN/8, x4, x1, x2)

inst_37283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x171ffffffffffff; valaddr_reg:x3; val_offset:111849*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111849*0 + 3*419*FLEN/8, x4, x1, x2)

inst_37284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x173ffffffffffff; valaddr_reg:x3; val_offset:111852*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111852*0 + 3*420*FLEN/8, x4, x1, x2)

inst_37285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x177ffffffffffff; valaddr_reg:x3; val_offset:111855*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111855*0 + 3*421*FLEN/8, x4, x1, x2)

inst_37286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x178000000000000; valaddr_reg:x3; val_offset:111858*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111858*0 + 3*422*FLEN/8, x4, x1, x2)

inst_37287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17c000000000000; valaddr_reg:x3; val_offset:111861*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111861*0 + 3*423*FLEN/8, x4, x1, x2)

inst_37288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17e000000000000; valaddr_reg:x3; val_offset:111864*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111864*0 + 3*424*FLEN/8, x4, x1, x2)

inst_37289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17f000000000000; valaddr_reg:x3; val_offset:111867*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111867*0 + 3*425*FLEN/8, x4, x1, x2)

inst_37290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17f800000000000; valaddr_reg:x3; val_offset:111870*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111870*0 + 3*426*FLEN/8, x4, x1, x2)

inst_37291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fc00000000000; valaddr_reg:x3; val_offset:111873*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111873*0 + 3*427*FLEN/8, x4, x1, x2)

inst_37292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fe00000000000; valaddr_reg:x3; val_offset:111876*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111876*0 + 3*428*FLEN/8, x4, x1, x2)

inst_37293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ff00000000000; valaddr_reg:x3; val_offset:111879*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111879*0 + 3*429*FLEN/8, x4, x1, x2)

inst_37294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ff80000000000; valaddr_reg:x3; val_offset:111882*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111882*0 + 3*430*FLEN/8, x4, x1, x2)

inst_37295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffc0000000000; valaddr_reg:x3; val_offset:111885*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111885*0 + 3*431*FLEN/8, x4, x1, x2)

inst_37296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffe0000000000; valaddr_reg:x3; val_offset:111888*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111888*0 + 3*432*FLEN/8, x4, x1, x2)

inst_37297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fff0000000000; valaddr_reg:x3; val_offset:111891*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111891*0 + 3*433*FLEN/8, x4, x1, x2)

inst_37298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fff8000000000; valaddr_reg:x3; val_offset:111894*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111894*0 + 3*434*FLEN/8, x4, x1, x2)

inst_37299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffc000000000; valaddr_reg:x3; val_offset:111897*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111897*0 + 3*435*FLEN/8, x4, x1, x2)

inst_37300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffe000000000; valaddr_reg:x3; val_offset:111900*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111900*0 + 3*436*FLEN/8, x4, x1, x2)

inst_37301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffff000000000; valaddr_reg:x3; val_offset:111903*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111903*0 + 3*437*FLEN/8, x4, x1, x2)

inst_37302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffff800000000; valaddr_reg:x3; val_offset:111906*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111906*0 + 3*438*FLEN/8, x4, x1, x2)

inst_37303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffc00000000; valaddr_reg:x3; val_offset:111909*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111909*0 + 3*439*FLEN/8, x4, x1, x2)

inst_37304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffe00000000; valaddr_reg:x3; val_offset:111912*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111912*0 + 3*440*FLEN/8, x4, x1, x2)

inst_37305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffff00000000; valaddr_reg:x3; val_offset:111915*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111915*0 + 3*441*FLEN/8, x4, x1, x2)

inst_37306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffff80000000; valaddr_reg:x3; val_offset:111918*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111918*0 + 3*442*FLEN/8, x4, x1, x2)

inst_37307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffc0000000; valaddr_reg:x3; val_offset:111921*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111921*0 + 3*443*FLEN/8, x4, x1, x2)

inst_37308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffe0000000; valaddr_reg:x3; val_offset:111924*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111924*0 + 3*444*FLEN/8, x4, x1, x2)

inst_37309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffff0000000; valaddr_reg:x3; val_offset:111927*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111927*0 + 3*445*FLEN/8, x4, x1, x2)

inst_37310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffff8000000; valaddr_reg:x3; val_offset:111930*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111930*0 + 3*446*FLEN/8, x4, x1, x2)

inst_37311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffc000000; valaddr_reg:x3; val_offset:111933*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111933*0 + 3*447*FLEN/8, x4, x1, x2)

inst_37312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffe000000; valaddr_reg:x3; val_offset:111936*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111936*0 + 3*448*FLEN/8, x4, x1, x2)

inst_37313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffff000000; valaddr_reg:x3; val_offset:111939*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111939*0 + 3*449*FLEN/8, x4, x1, x2)

inst_37314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffff800000; valaddr_reg:x3; val_offset:111942*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111942*0 + 3*450*FLEN/8, x4, x1, x2)

inst_37315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffffc00000; valaddr_reg:x3; val_offset:111945*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111945*0 + 3*451*FLEN/8, x4, x1, x2)

inst_37316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffffe00000; valaddr_reg:x3; val_offset:111948*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111948*0 + 3*452*FLEN/8, x4, x1, x2)

inst_37317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffff00000; valaddr_reg:x3; val_offset:111951*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111951*0 + 3*453*FLEN/8, x4, x1, x2)

inst_37318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffff80000; valaddr_reg:x3; val_offset:111954*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111954*0 + 3*454*FLEN/8, x4, x1, x2)

inst_37319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffffc0000; valaddr_reg:x3; val_offset:111957*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111957*0 + 3*455*FLEN/8, x4, x1, x2)

inst_37320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffffe0000; valaddr_reg:x3; val_offset:111960*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111960*0 + 3*456*FLEN/8, x4, x1, x2)

inst_37321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffffff0000; valaddr_reg:x3; val_offset:111963*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111963*0 + 3*457*FLEN/8, x4, x1, x2)

inst_37322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffffff8000; valaddr_reg:x3; val_offset:111966*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111966*0 + 3*458*FLEN/8, x4, x1, x2)

inst_37323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffffffc000; valaddr_reg:x3; val_offset:111969*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111969*0 + 3*459*FLEN/8, x4, x1, x2)

inst_37324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffffffe000; valaddr_reg:x3; val_offset:111972*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111972*0 + 3*460*FLEN/8, x4, x1, x2)

inst_37325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffffff000; valaddr_reg:x3; val_offset:111975*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111975*0 + 3*461*FLEN/8, x4, x1, x2)

inst_37326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffffff800; valaddr_reg:x3; val_offset:111978*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111978*0 + 3*462*FLEN/8, x4, x1, x2)

inst_37327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffffffc00; valaddr_reg:x3; val_offset:111981*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111981*0 + 3*463*FLEN/8, x4, x1, x2)

inst_37328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffffffe00; valaddr_reg:x3; val_offset:111984*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111984*0 + 3*464*FLEN/8, x4, x1, x2)

inst_37329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffffffff00; valaddr_reg:x3; val_offset:111987*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111987*0 + 3*465*FLEN/8, x4, x1, x2)

inst_37330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffffffff80; valaddr_reg:x3; val_offset:111990*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111990*0 + 3*466*FLEN/8, x4, x1, x2)

inst_37331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffffffffc0; valaddr_reg:x3; val_offset:111993*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111993*0 + 3*467*FLEN/8, x4, x1, x2)

inst_37332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffffffffe0; valaddr_reg:x3; val_offset:111996*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111996*0 + 3*468*FLEN/8, x4, x1, x2)

inst_37333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffffffff0; valaddr_reg:x3; val_offset:111999*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111999*0 + 3*469*FLEN/8, x4, x1, x2)

inst_37334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffffffff8; valaddr_reg:x3; val_offset:112002*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112002*0 + 3*470*FLEN/8, x4, x1, x2)

inst_37335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffffffffc; valaddr_reg:x3; val_offset:112005*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112005*0 + 3*471*FLEN/8, x4, x1, x2)

inst_37336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17ffffffffffffe; valaddr_reg:x3; val_offset:112008*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112008*0 + 3*472*FLEN/8, x4, x1, x2)

inst_37337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a48463792f13 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x017 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a48463792f13; op2val:0x0;
op3val:0x17fffffffffffff; valaddr_reg:x3; val_offset:112011*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112011*0 + 3*473*FLEN/8, x4, x1, x2)

inst_37338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:112014*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112014*0 + 3*474*FLEN/8, x4, x1, x2)

inst_37339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:112017*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112017*0 + 3*475*FLEN/8, x4, x1, x2)

inst_37340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:112020*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112020*0 + 3*476*FLEN/8, x4, x1, x2)

inst_37341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:112023*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112023*0 + 3*477*FLEN/8, x4, x1, x2)

inst_37342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:112026*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112026*0 + 3*478*FLEN/8, x4, x1, x2)

inst_37343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:112029*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112029*0 + 3*479*FLEN/8, x4, x1, x2)

inst_37344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:112032*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112032*0 + 3*480*FLEN/8, x4, x1, x2)

inst_37345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:112035*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112035*0 + 3*481*FLEN/8, x4, x1, x2)

inst_37346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:112038*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112038*0 + 3*482*FLEN/8, x4, x1, x2)

inst_37347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:112041*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112041*0 + 3*483*FLEN/8, x4, x1, x2)

inst_37348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:112044*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112044*0 + 3*484*FLEN/8, x4, x1, x2)

inst_37349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:112047*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112047*0 + 3*485*FLEN/8, x4, x1, x2)

inst_37350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:112050*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112050*0 + 3*486*FLEN/8, x4, x1, x2)

inst_37351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:112053*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112053*0 + 3*487*FLEN/8, x4, x1, x2)

inst_37352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:112056*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112056*0 + 3*488*FLEN/8, x4, x1, x2)

inst_37353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:112059*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112059*0 + 3*489*FLEN/8, x4, x1, x2)

inst_37354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:112062*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112062*0 + 3*490*FLEN/8, x4, x1, x2)

inst_37355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:112065*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112065*0 + 3*491*FLEN/8, x4, x1, x2)

inst_37356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:112068*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112068*0 + 3*492*FLEN/8, x4, x1, x2)

inst_37357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:112071*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112071*0 + 3*493*FLEN/8, x4, x1, x2)

inst_37358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:112074*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112074*0 + 3*494*FLEN/8, x4, x1, x2)

inst_37359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:112077*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112077*0 + 3*495*FLEN/8, x4, x1, x2)

inst_37360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000000000000; valaddr_reg:x3; val_offset:112080*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112080*0 + 3*496*FLEN/8, x4, x1, x2)

inst_37361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000000000001; valaddr_reg:x3; val_offset:112083*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112083*0 + 3*497*FLEN/8, x4, x1, x2)

inst_37362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000000000003; valaddr_reg:x3; val_offset:112086*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112086*0 + 3*498*FLEN/8, x4, x1, x2)

inst_37363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000000000007; valaddr_reg:x3; val_offset:112089*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112089*0 + 3*499*FLEN/8, x4, x1, x2)

inst_37364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000000000000f; valaddr_reg:x3; val_offset:112092*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112092*0 + 3*500*FLEN/8, x4, x1, x2)

inst_37365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000000000001f; valaddr_reg:x3; val_offset:112095*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112095*0 + 3*501*FLEN/8, x4, x1, x2)

inst_37366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000000000003f; valaddr_reg:x3; val_offset:112098*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112098*0 + 3*502*FLEN/8, x4, x1, x2)

inst_37367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000000000007f; valaddr_reg:x3; val_offset:112101*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112101*0 + 3*503*FLEN/8, x4, x1, x2)

inst_37368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00000000000ff; valaddr_reg:x3; val_offset:112104*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112104*0 + 3*504*FLEN/8, x4, x1, x2)

inst_37369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00000000001ff; valaddr_reg:x3; val_offset:112107*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112107*0 + 3*505*FLEN/8, x4, x1, x2)

inst_37370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00000000003ff; valaddr_reg:x3; val_offset:112110*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112110*0 + 3*506*FLEN/8, x4, x1, x2)

inst_37371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00000000007ff; valaddr_reg:x3; val_offset:112113*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112113*0 + 3*507*FLEN/8, x4, x1, x2)

inst_37372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000000000fff; valaddr_reg:x3; val_offset:112116*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112116*0 + 3*508*FLEN/8, x4, x1, x2)

inst_37373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000000001fff; valaddr_reg:x3; val_offset:112119*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112119*0 + 3*509*FLEN/8, x4, x1, x2)

inst_37374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000000003fff; valaddr_reg:x3; val_offset:112122*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112122*0 + 3*510*FLEN/8, x4, x1, x2)

inst_37375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000000007fff; valaddr_reg:x3; val_offset:112125*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112125*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_37376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000000000ffff; valaddr_reg:x3; val_offset:112128*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112128*0 + 3*512*FLEN/8, x4, x1, x2)

inst_37377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000000001ffff; valaddr_reg:x3; val_offset:112131*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112131*0 + 3*513*FLEN/8, x4, x1, x2)

inst_37378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000000003ffff; valaddr_reg:x3; val_offset:112134*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112134*0 + 3*514*FLEN/8, x4, x1, x2)

inst_37379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000000007ffff; valaddr_reg:x3; val_offset:112137*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112137*0 + 3*515*FLEN/8, x4, x1, x2)

inst_37380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00000000fffff; valaddr_reg:x3; val_offset:112140*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112140*0 + 3*516*FLEN/8, x4, x1, x2)

inst_37381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00000001fffff; valaddr_reg:x3; val_offset:112143*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112143*0 + 3*517*FLEN/8, x4, x1, x2)

inst_37382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00000003fffff; valaddr_reg:x3; val_offset:112146*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112146*0 + 3*518*FLEN/8, x4, x1, x2)

inst_37383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00000007fffff; valaddr_reg:x3; val_offset:112149*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112149*0 + 3*519*FLEN/8, x4, x1, x2)

inst_37384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000000ffffff; valaddr_reg:x3; val_offset:112152*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112152*0 + 3*520*FLEN/8, x4, x1, x2)

inst_37385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000001ffffff; valaddr_reg:x3; val_offset:112155*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112155*0 + 3*521*FLEN/8, x4, x1, x2)

inst_37386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000003ffffff; valaddr_reg:x3; val_offset:112158*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112158*0 + 3*522*FLEN/8, x4, x1, x2)

inst_37387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000007ffffff; valaddr_reg:x3; val_offset:112161*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112161*0 + 3*523*FLEN/8, x4, x1, x2)

inst_37388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000000fffffff; valaddr_reg:x3; val_offset:112164*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112164*0 + 3*524*FLEN/8, x4, x1, x2)

inst_37389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000001fffffff; valaddr_reg:x3; val_offset:112167*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112167*0 + 3*525*FLEN/8, x4, x1, x2)

inst_37390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000003fffffff; valaddr_reg:x3; val_offset:112170*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112170*0 + 3*526*FLEN/8, x4, x1, x2)

inst_37391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000007fffffff; valaddr_reg:x3; val_offset:112173*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112173*0 + 3*527*FLEN/8, x4, x1, x2)

inst_37392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00000ffffffff; valaddr_reg:x3; val_offset:112176*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112176*0 + 3*528*FLEN/8, x4, x1, x2)

inst_37393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00001ffffffff; valaddr_reg:x3; val_offset:112179*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112179*0 + 3*529*FLEN/8, x4, x1, x2)

inst_37394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00003ffffffff; valaddr_reg:x3; val_offset:112182*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112182*0 + 3*530*FLEN/8, x4, x1, x2)

inst_37395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00007ffffffff; valaddr_reg:x3; val_offset:112185*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112185*0 + 3*531*FLEN/8, x4, x1, x2)

inst_37396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0000fffffffff; valaddr_reg:x3; val_offset:112188*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112188*0 + 3*532*FLEN/8, x4, x1, x2)

inst_37397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0001fffffffff; valaddr_reg:x3; val_offset:112191*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112191*0 + 3*533*FLEN/8, x4, x1, x2)

inst_37398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0003fffffffff; valaddr_reg:x3; val_offset:112194*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112194*0 + 3*534*FLEN/8, x4, x1, x2)

inst_37399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0007fffffffff; valaddr_reg:x3; val_offset:112197*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112197*0 + 3*535*FLEN/8, x4, x1, x2)

inst_37400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f000ffffffffff; valaddr_reg:x3; val_offset:112200*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112200*0 + 3*536*FLEN/8, x4, x1, x2)

inst_37401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f001ffffffffff; valaddr_reg:x3; val_offset:112203*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112203*0 + 3*537*FLEN/8, x4, x1, x2)

inst_37402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f003ffffffffff; valaddr_reg:x3; val_offset:112206*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112206*0 + 3*538*FLEN/8, x4, x1, x2)

inst_37403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f007ffffffffff; valaddr_reg:x3; val_offset:112209*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112209*0 + 3*539*FLEN/8, x4, x1, x2)

inst_37404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f00fffffffffff; valaddr_reg:x3; val_offset:112212*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112212*0 + 3*540*FLEN/8, x4, x1, x2)

inst_37405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f01fffffffffff; valaddr_reg:x3; val_offset:112215*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112215*0 + 3*541*FLEN/8, x4, x1, x2)

inst_37406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f03fffffffffff; valaddr_reg:x3; val_offset:112218*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112218*0 + 3*542*FLEN/8, x4, x1, x2)

inst_37407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f07fffffffffff; valaddr_reg:x3; val_offset:112221*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112221*0 + 3*543*FLEN/8, x4, x1, x2)

inst_37408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f0ffffffffffff; valaddr_reg:x3; val_offset:112224*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112224*0 + 3*544*FLEN/8, x4, x1, x2)

inst_37409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f1ffffffffffff; valaddr_reg:x3; val_offset:112227*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112227*0 + 3*545*FLEN/8, x4, x1, x2)

inst_37410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f3ffffffffffff; valaddr_reg:x3; val_offset:112230*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112230*0 + 3*546*FLEN/8, x4, x1, x2)

inst_37411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f7ffffffffffff; valaddr_reg:x3; val_offset:112233*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112233*0 + 3*547*FLEN/8, x4, x1, x2)

inst_37412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81f8000000000000; valaddr_reg:x3; val_offset:112236*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112236*0 + 3*548*FLEN/8, x4, x1, x2)

inst_37413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fc000000000000; valaddr_reg:x3; val_offset:112239*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112239*0 + 3*549*FLEN/8, x4, x1, x2)

inst_37414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fe000000000000; valaddr_reg:x3; val_offset:112242*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112242*0 + 3*550*FLEN/8, x4, x1, x2)

inst_37415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ff000000000000; valaddr_reg:x3; val_offset:112245*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112245*0 + 3*551*FLEN/8, x4, x1, x2)

inst_37416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ff800000000000; valaddr_reg:x3; val_offset:112248*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112248*0 + 3*552*FLEN/8, x4, x1, x2)

inst_37417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffc00000000000; valaddr_reg:x3; val_offset:112251*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112251*0 + 3*553*FLEN/8, x4, x1, x2)

inst_37418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffe00000000000; valaddr_reg:x3; val_offset:112254*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112254*0 + 3*554*FLEN/8, x4, x1, x2)

inst_37419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fff00000000000; valaddr_reg:x3; val_offset:112257*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112257*0 + 3*555*FLEN/8, x4, x1, x2)

inst_37420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fff80000000000; valaddr_reg:x3; val_offset:112260*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112260*0 + 3*556*FLEN/8, x4, x1, x2)

inst_37421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffc0000000000; valaddr_reg:x3; val_offset:112263*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112263*0 + 3*557*FLEN/8, x4, x1, x2)

inst_37422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffe0000000000; valaddr_reg:x3; val_offset:112266*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112266*0 + 3*558*FLEN/8, x4, x1, x2)

inst_37423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffff0000000000; valaddr_reg:x3; val_offset:112269*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112269*0 + 3*559*FLEN/8, x4, x1, x2)

inst_37424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffff8000000000; valaddr_reg:x3; val_offset:112272*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112272*0 + 3*560*FLEN/8, x4, x1, x2)

inst_37425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffc000000000; valaddr_reg:x3; val_offset:112275*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112275*0 + 3*561*FLEN/8, x4, x1, x2)

inst_37426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffe000000000; valaddr_reg:x3; val_offset:112278*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112278*0 + 3*562*FLEN/8, x4, x1, x2)

inst_37427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffff000000000; valaddr_reg:x3; val_offset:112281*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112281*0 + 3*563*FLEN/8, x4, x1, x2)

inst_37428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffff800000000; valaddr_reg:x3; val_offset:112284*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112284*0 + 3*564*FLEN/8, x4, x1, x2)

inst_37429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffc00000000; valaddr_reg:x3; val_offset:112287*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112287*0 + 3*565*FLEN/8, x4, x1, x2)

inst_37430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffe00000000; valaddr_reg:x3; val_offset:112290*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112290*0 + 3*566*FLEN/8, x4, x1, x2)

inst_37431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffff00000000; valaddr_reg:x3; val_offset:112293*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112293*0 + 3*567*FLEN/8, x4, x1, x2)

inst_37432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffff80000000; valaddr_reg:x3; val_offset:112296*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112296*0 + 3*568*FLEN/8, x4, x1, x2)

inst_37433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffc0000000; valaddr_reg:x3; val_offset:112299*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112299*0 + 3*569*FLEN/8, x4, x1, x2)

inst_37434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffe0000000; valaddr_reg:x3; val_offset:112302*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112302*0 + 3*570*FLEN/8, x4, x1, x2)

inst_37435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffff0000000; valaddr_reg:x3; val_offset:112305*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112305*0 + 3*571*FLEN/8, x4, x1, x2)

inst_37436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffff8000000; valaddr_reg:x3; val_offset:112308*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112308*0 + 3*572*FLEN/8, x4, x1, x2)

inst_37437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffc000000; valaddr_reg:x3; val_offset:112311*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112311*0 + 3*573*FLEN/8, x4, x1, x2)

inst_37438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffe000000; valaddr_reg:x3; val_offset:112314*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112314*0 + 3*574*FLEN/8, x4, x1, x2)

inst_37439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffff000000; valaddr_reg:x3; val_offset:112317*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112317*0 + 3*575*FLEN/8, x4, x1, x2)

inst_37440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffff800000; valaddr_reg:x3; val_offset:112320*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112320*0 + 3*576*FLEN/8, x4, x1, x2)

inst_37441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffffc00000; valaddr_reg:x3; val_offset:112323*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112323*0 + 3*577*FLEN/8, x4, x1, x2)

inst_37442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffffe00000; valaddr_reg:x3; val_offset:112326*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112326*0 + 3*578*FLEN/8, x4, x1, x2)

inst_37443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffff00000; valaddr_reg:x3; val_offset:112329*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112329*0 + 3*579*FLEN/8, x4, x1, x2)

inst_37444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffff80000; valaddr_reg:x3; val_offset:112332*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112332*0 + 3*580*FLEN/8, x4, x1, x2)

inst_37445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffffc0000; valaddr_reg:x3; val_offset:112335*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112335*0 + 3*581*FLEN/8, x4, x1, x2)

inst_37446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffffe0000; valaddr_reg:x3; val_offset:112338*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112338*0 + 3*582*FLEN/8, x4, x1, x2)

inst_37447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffffff0000; valaddr_reg:x3; val_offset:112341*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112341*0 + 3*583*FLEN/8, x4, x1, x2)

inst_37448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffffff8000; valaddr_reg:x3; val_offset:112344*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112344*0 + 3*584*FLEN/8, x4, x1, x2)

inst_37449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffffffc000; valaddr_reg:x3; val_offset:112347*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112347*0 + 3*585*FLEN/8, x4, x1, x2)

inst_37450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffffffe000; valaddr_reg:x3; val_offset:112350*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112350*0 + 3*586*FLEN/8, x4, x1, x2)

inst_37451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffffff000; valaddr_reg:x3; val_offset:112353*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112353*0 + 3*587*FLEN/8, x4, x1, x2)

inst_37452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffffff800; valaddr_reg:x3; val_offset:112356*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112356*0 + 3*588*FLEN/8, x4, x1, x2)

inst_37453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffffffc00; valaddr_reg:x3; val_offset:112359*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112359*0 + 3*589*FLEN/8, x4, x1, x2)

inst_37454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffffffe00; valaddr_reg:x3; val_offset:112362*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112362*0 + 3*590*FLEN/8, x4, x1, x2)

inst_37455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffffffff00; valaddr_reg:x3; val_offset:112365*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112365*0 + 3*591*FLEN/8, x4, x1, x2)

inst_37456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffffffff80; valaddr_reg:x3; val_offset:112368*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112368*0 + 3*592*FLEN/8, x4, x1, x2)

inst_37457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffffffffc0; valaddr_reg:x3; val_offset:112371*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112371*0 + 3*593*FLEN/8, x4, x1, x2)

inst_37458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffffffffe0; valaddr_reg:x3; val_offset:112374*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112374*0 + 3*594*FLEN/8, x4, x1, x2)

inst_37459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffffffff0; valaddr_reg:x3; val_offset:112377*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112377*0 + 3*595*FLEN/8, x4, x1, x2)

inst_37460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffffffff8; valaddr_reg:x3; val_offset:112380*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112380*0 + 3*596*FLEN/8, x4, x1, x2)

inst_37461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffffffffc; valaddr_reg:x3; val_offset:112383*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112383*0 + 3*597*FLEN/8, x4, x1, x2)

inst_37462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81fffffffffffffe; valaddr_reg:x3; val_offset:112386*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112386*0 + 3*598*FLEN/8, x4, x1, x2)

inst_37463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a8e24d0e9073 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96a8e24d0e9073; op2val:0x8000;
op3val:0x81ffffffffffffff; valaddr_reg:x3; val_offset:112389*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112389*0 + 3*599*FLEN/8, x4, x1, x2)

inst_37464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:112392*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112392*0 + 3*600*FLEN/8, x4, x1, x2)

inst_37465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:112395*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112395*0 + 3*601*FLEN/8, x4, x1, x2)

inst_37466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:112398*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112398*0 + 3*602*FLEN/8, x4, x1, x2)

inst_37467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:112401*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112401*0 + 3*603*FLEN/8, x4, x1, x2)

inst_37468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:112404*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112404*0 + 3*604*FLEN/8, x4, x1, x2)

inst_37469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:112407*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112407*0 + 3*605*FLEN/8, x4, x1, x2)

inst_37470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:112410*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112410*0 + 3*606*FLEN/8, x4, x1, x2)

inst_37471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:112413*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112413*0 + 3*607*FLEN/8, x4, x1, x2)

inst_37472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:112416*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112416*0 + 3*608*FLEN/8, x4, x1, x2)

inst_37473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:112419*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112419*0 + 3*609*FLEN/8, x4, x1, x2)

inst_37474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:112422*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112422*0 + 3*610*FLEN/8, x4, x1, x2)

inst_37475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:112425*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112425*0 + 3*611*FLEN/8, x4, x1, x2)

inst_37476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:112428*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112428*0 + 3*612*FLEN/8, x4, x1, x2)

inst_37477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:112431*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112431*0 + 3*613*FLEN/8, x4, x1, x2)

inst_37478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:112434*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112434*0 + 3*614*FLEN/8, x4, x1, x2)

inst_37479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:112437*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112437*0 + 3*615*FLEN/8, x4, x1, x2)

inst_37480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:112440*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112440*0 + 3*616*FLEN/8, x4, x1, x2)

inst_37481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:112443*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112443*0 + 3*617*FLEN/8, x4, x1, x2)

inst_37482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:112446*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112446*0 + 3*618*FLEN/8, x4, x1, x2)

inst_37483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:112449*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112449*0 + 3*619*FLEN/8, x4, x1, x2)

inst_37484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:112452*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112452*0 + 3*620*FLEN/8, x4, x1, x2)

inst_37485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:112455*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112455*0 + 3*621*FLEN/8, x4, x1, x2)

inst_37486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000000000000; valaddr_reg:x3; val_offset:112458*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112458*0 + 3*622*FLEN/8, x4, x1, x2)

inst_37487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000000000001; valaddr_reg:x3; val_offset:112461*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112461*0 + 3*623*FLEN/8, x4, x1, x2)

inst_37488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000000000003; valaddr_reg:x3; val_offset:112464*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112464*0 + 3*624*FLEN/8, x4, x1, x2)

inst_37489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000000000007; valaddr_reg:x3; val_offset:112467*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112467*0 + 3*625*FLEN/8, x4, x1, x2)

inst_37490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000000000000f; valaddr_reg:x3; val_offset:112470*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112470*0 + 3*626*FLEN/8, x4, x1, x2)

inst_37491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000000000001f; valaddr_reg:x3; val_offset:112473*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112473*0 + 3*627*FLEN/8, x4, x1, x2)

inst_37492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000000000003f; valaddr_reg:x3; val_offset:112476*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112476*0 + 3*628*FLEN/8, x4, x1, x2)

inst_37493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000000000007f; valaddr_reg:x3; val_offset:112479*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112479*0 + 3*629*FLEN/8, x4, x1, x2)

inst_37494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00000000000ff; valaddr_reg:x3; val_offset:112482*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112482*0 + 3*630*FLEN/8, x4, x1, x2)

inst_37495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00000000001ff; valaddr_reg:x3; val_offset:112485*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112485*0 + 3*631*FLEN/8, x4, x1, x2)

inst_37496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00000000003ff; valaddr_reg:x3; val_offset:112488*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112488*0 + 3*632*FLEN/8, x4, x1, x2)

inst_37497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00000000007ff; valaddr_reg:x3; val_offset:112491*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112491*0 + 3*633*FLEN/8, x4, x1, x2)

inst_37498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000000000fff; valaddr_reg:x3; val_offset:112494*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112494*0 + 3*634*FLEN/8, x4, x1, x2)

inst_37499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000000001fff; valaddr_reg:x3; val_offset:112497*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112497*0 + 3*635*FLEN/8, x4, x1, x2)

inst_37500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000000003fff; valaddr_reg:x3; val_offset:112500*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112500*0 + 3*636*FLEN/8, x4, x1, x2)

inst_37501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000000007fff; valaddr_reg:x3; val_offset:112503*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112503*0 + 3*637*FLEN/8, x4, x1, x2)

inst_37502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000000000ffff; valaddr_reg:x3; val_offset:112506*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112506*0 + 3*638*FLEN/8, x4, x1, x2)

inst_37503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000000001ffff; valaddr_reg:x3; val_offset:112509*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112509*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_37504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000000003ffff; valaddr_reg:x3; val_offset:112512*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112512*0 + 3*640*FLEN/8, x4, x1, x2)

inst_37505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000000007ffff; valaddr_reg:x3; val_offset:112515*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112515*0 + 3*641*FLEN/8, x4, x1, x2)

inst_37506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00000000fffff; valaddr_reg:x3; val_offset:112518*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112518*0 + 3*642*FLEN/8, x4, x1, x2)

inst_37507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00000001fffff; valaddr_reg:x3; val_offset:112521*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112521*0 + 3*643*FLEN/8, x4, x1, x2)

inst_37508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00000003fffff; valaddr_reg:x3; val_offset:112524*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112524*0 + 3*644*FLEN/8, x4, x1, x2)

inst_37509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00000007fffff; valaddr_reg:x3; val_offset:112527*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112527*0 + 3*645*FLEN/8, x4, x1, x2)

inst_37510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000000ffffff; valaddr_reg:x3; val_offset:112530*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112530*0 + 3*646*FLEN/8, x4, x1, x2)

inst_37511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000001ffffff; valaddr_reg:x3; val_offset:112533*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112533*0 + 3*647*FLEN/8, x4, x1, x2)

inst_37512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000003ffffff; valaddr_reg:x3; val_offset:112536*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112536*0 + 3*648*FLEN/8, x4, x1, x2)

inst_37513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000007ffffff; valaddr_reg:x3; val_offset:112539*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112539*0 + 3*649*FLEN/8, x4, x1, x2)

inst_37514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000000fffffff; valaddr_reg:x3; val_offset:112542*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112542*0 + 3*650*FLEN/8, x4, x1, x2)

inst_37515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000001fffffff; valaddr_reg:x3; val_offset:112545*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112545*0 + 3*651*FLEN/8, x4, x1, x2)

inst_37516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000003fffffff; valaddr_reg:x3; val_offset:112548*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112548*0 + 3*652*FLEN/8, x4, x1, x2)

inst_37517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000007fffffff; valaddr_reg:x3; val_offset:112551*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112551*0 + 3*653*FLEN/8, x4, x1, x2)

inst_37518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00000ffffffff; valaddr_reg:x3; val_offset:112554*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112554*0 + 3*654*FLEN/8, x4, x1, x2)

inst_37519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00001ffffffff; valaddr_reg:x3; val_offset:112557*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112557*0 + 3*655*FLEN/8, x4, x1, x2)

inst_37520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00003ffffffff; valaddr_reg:x3; val_offset:112560*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112560*0 + 3*656*FLEN/8, x4, x1, x2)

inst_37521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00007ffffffff; valaddr_reg:x3; val_offset:112563*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112563*0 + 3*657*FLEN/8, x4, x1, x2)

inst_37522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0000fffffffff; valaddr_reg:x3; val_offset:112566*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112566*0 + 3*658*FLEN/8, x4, x1, x2)

inst_37523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0001fffffffff; valaddr_reg:x3; val_offset:112569*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112569*0 + 3*659*FLEN/8, x4, x1, x2)

inst_37524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0003fffffffff; valaddr_reg:x3; val_offset:112572*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112572*0 + 3*660*FLEN/8, x4, x1, x2)

inst_37525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0007fffffffff; valaddr_reg:x3; val_offset:112575*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112575*0 + 3*661*FLEN/8, x4, x1, x2)

inst_37526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa000ffffffffff; valaddr_reg:x3; val_offset:112578*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112578*0 + 3*662*FLEN/8, x4, x1, x2)

inst_37527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa001ffffffffff; valaddr_reg:x3; val_offset:112581*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112581*0 + 3*663*FLEN/8, x4, x1, x2)

inst_37528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa003ffffffffff; valaddr_reg:x3; val_offset:112584*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112584*0 + 3*664*FLEN/8, x4, x1, x2)

inst_37529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa007ffffffffff; valaddr_reg:x3; val_offset:112587*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112587*0 + 3*665*FLEN/8, x4, x1, x2)

inst_37530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa00fffffffffff; valaddr_reg:x3; val_offset:112590*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112590*0 + 3*666*FLEN/8, x4, x1, x2)

inst_37531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa01fffffffffff; valaddr_reg:x3; val_offset:112593*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112593*0 + 3*667*FLEN/8, x4, x1, x2)

inst_37532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa03fffffffffff; valaddr_reg:x3; val_offset:112596*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112596*0 + 3*668*FLEN/8, x4, x1, x2)

inst_37533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa07fffffffffff; valaddr_reg:x3; val_offset:112599*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112599*0 + 3*669*FLEN/8, x4, x1, x2)

inst_37534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa0ffffffffffff; valaddr_reg:x3; val_offset:112602*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112602*0 + 3*670*FLEN/8, x4, x1, x2)

inst_37535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa1ffffffffffff; valaddr_reg:x3; val_offset:112605*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112605*0 + 3*671*FLEN/8, x4, x1, x2)

inst_37536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa3ffffffffffff; valaddr_reg:x3; val_offset:112608*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112608*0 + 3*672*FLEN/8, x4, x1, x2)

inst_37537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa7ffffffffffff; valaddr_reg:x3; val_offset:112611*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112611*0 + 3*673*FLEN/8, x4, x1, x2)

inst_37538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xa8000000000000; valaddr_reg:x3; val_offset:112614*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112614*0 + 3*674*FLEN/8, x4, x1, x2)

inst_37539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xac000000000000; valaddr_reg:x3; val_offset:112617*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112617*0 + 3*675*FLEN/8, x4, x1, x2)

inst_37540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xae000000000000; valaddr_reg:x3; val_offset:112620*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112620*0 + 3*676*FLEN/8, x4, x1, x2)

inst_37541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaf000000000000; valaddr_reg:x3; val_offset:112623*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112623*0 + 3*677*FLEN/8, x4, x1, x2)

inst_37542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaf800000000000; valaddr_reg:x3; val_offset:112626*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112626*0 + 3*678*FLEN/8, x4, x1, x2)

inst_37543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafc00000000000; valaddr_reg:x3; val_offset:112629*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112629*0 + 3*679*FLEN/8, x4, x1, x2)

inst_37544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafe00000000000; valaddr_reg:x3; val_offset:112632*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112632*0 + 3*680*FLEN/8, x4, x1, x2)

inst_37545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaff00000000000; valaddr_reg:x3; val_offset:112635*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112635*0 + 3*681*FLEN/8, x4, x1, x2)

inst_37546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaff80000000000; valaddr_reg:x3; val_offset:112638*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112638*0 + 3*682*FLEN/8, x4, x1, x2)

inst_37547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffc0000000000; valaddr_reg:x3; val_offset:112641*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112641*0 + 3*683*FLEN/8, x4, x1, x2)

inst_37548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffe0000000000; valaddr_reg:x3; val_offset:112644*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112644*0 + 3*684*FLEN/8, x4, x1, x2)

inst_37549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafff0000000000; valaddr_reg:x3; val_offset:112647*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112647*0 + 3*685*FLEN/8, x4, x1, x2)

inst_37550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafff8000000000; valaddr_reg:x3; val_offset:112650*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112650*0 + 3*686*FLEN/8, x4, x1, x2)

inst_37551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffc000000000; valaddr_reg:x3; val_offset:112653*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112653*0 + 3*687*FLEN/8, x4, x1, x2)

inst_37552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffe000000000; valaddr_reg:x3; val_offset:112656*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112656*0 + 3*688*FLEN/8, x4, x1, x2)

inst_37553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffff000000000; valaddr_reg:x3; val_offset:112659*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112659*0 + 3*689*FLEN/8, x4, x1, x2)

inst_37554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffff800000000; valaddr_reg:x3; val_offset:112662*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112662*0 + 3*690*FLEN/8, x4, x1, x2)

inst_37555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffc00000000; valaddr_reg:x3; val_offset:112665*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112665*0 + 3*691*FLEN/8, x4, x1, x2)

inst_37556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffe00000000; valaddr_reg:x3; val_offset:112668*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112668*0 + 3*692*FLEN/8, x4, x1, x2)

inst_37557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffff00000000; valaddr_reg:x3; val_offset:112671*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112671*0 + 3*693*FLEN/8, x4, x1, x2)

inst_37558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffff80000000; valaddr_reg:x3; val_offset:112674*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112674*0 + 3*694*FLEN/8, x4, x1, x2)

inst_37559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffc0000000; valaddr_reg:x3; val_offset:112677*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112677*0 + 3*695*FLEN/8, x4, x1, x2)

inst_37560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffe0000000; valaddr_reg:x3; val_offset:112680*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112680*0 + 3*696*FLEN/8, x4, x1, x2)

inst_37561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffff0000000; valaddr_reg:x3; val_offset:112683*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112683*0 + 3*697*FLEN/8, x4, x1, x2)

inst_37562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffff8000000; valaddr_reg:x3; val_offset:112686*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112686*0 + 3*698*FLEN/8, x4, x1, x2)

inst_37563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffc000000; valaddr_reg:x3; val_offset:112689*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112689*0 + 3*699*FLEN/8, x4, x1, x2)

inst_37564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffe000000; valaddr_reg:x3; val_offset:112692*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112692*0 + 3*700*FLEN/8, x4, x1, x2)

inst_37565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffff000000; valaddr_reg:x3; val_offset:112695*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112695*0 + 3*701*FLEN/8, x4, x1, x2)

inst_37566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffff800000; valaddr_reg:x3; val_offset:112698*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112698*0 + 3*702*FLEN/8, x4, x1, x2)

inst_37567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffffc00000; valaddr_reg:x3; val_offset:112701*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112701*0 + 3*703*FLEN/8, x4, x1, x2)

inst_37568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffffe00000; valaddr_reg:x3; val_offset:112704*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112704*0 + 3*704*FLEN/8, x4, x1, x2)

inst_37569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffff00000; valaddr_reg:x3; val_offset:112707*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112707*0 + 3*705*FLEN/8, x4, x1, x2)

inst_37570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffff80000; valaddr_reg:x3; val_offset:112710*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112710*0 + 3*706*FLEN/8, x4, x1, x2)

inst_37571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffffc0000; valaddr_reg:x3; val_offset:112713*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112713*0 + 3*707*FLEN/8, x4, x1, x2)

inst_37572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffffe0000; valaddr_reg:x3; val_offset:112716*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112716*0 + 3*708*FLEN/8, x4, x1, x2)

inst_37573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffffff0000; valaddr_reg:x3; val_offset:112719*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112719*0 + 3*709*FLEN/8, x4, x1, x2)

inst_37574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffffff8000; valaddr_reg:x3; val_offset:112722*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112722*0 + 3*710*FLEN/8, x4, x1, x2)

inst_37575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffffffc000; valaddr_reg:x3; val_offset:112725*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112725*0 + 3*711*FLEN/8, x4, x1, x2)

inst_37576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffffffe000; valaddr_reg:x3; val_offset:112728*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112728*0 + 3*712*FLEN/8, x4, x1, x2)

inst_37577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffffff000; valaddr_reg:x3; val_offset:112731*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112731*0 + 3*713*FLEN/8, x4, x1, x2)

inst_37578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffffff800; valaddr_reg:x3; val_offset:112734*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112734*0 + 3*714*FLEN/8, x4, x1, x2)

inst_37579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffffffc00; valaddr_reg:x3; val_offset:112737*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112737*0 + 3*715*FLEN/8, x4, x1, x2)

inst_37580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffffffe00; valaddr_reg:x3; val_offset:112740*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112740*0 + 3*716*FLEN/8, x4, x1, x2)

inst_37581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffffffff00; valaddr_reg:x3; val_offset:112743*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112743*0 + 3*717*FLEN/8, x4, x1, x2)

inst_37582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffffffff80; valaddr_reg:x3; val_offset:112746*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112746*0 + 3*718*FLEN/8, x4, x1, x2)

inst_37583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffffffffc0; valaddr_reg:x3; val_offset:112749*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112749*0 + 3*719*FLEN/8, x4, x1, x2)

inst_37584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffffffffe0; valaddr_reg:x3; val_offset:112752*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112752*0 + 3*720*FLEN/8, x4, x1, x2)

inst_37585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffffffff0; valaddr_reg:x3; val_offset:112755*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112755*0 + 3*721*FLEN/8, x4, x1, x2)

inst_37586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffffffff8; valaddr_reg:x3; val_offset:112758*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112758*0 + 3*722*FLEN/8, x4, x1, x2)

inst_37587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffffffffc; valaddr_reg:x3; val_offset:112761*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112761*0 + 3*723*FLEN/8, x4, x1, x2)

inst_37588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xaffffffffffffe; valaddr_reg:x3; val_offset:112764*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112764*0 + 3*724*FLEN/8, x4, x1, x2)

inst_37589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6b12db0ad2b87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96b12db0ad2b87; op2val:0x0;
op3val:0xafffffffffffff; valaddr_reg:x3; val_offset:112767*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112767*0 + 3*725*FLEN/8, x4, x1, x2)

inst_37590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:112770*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112770*0 + 3*726*FLEN/8, x4, x1, x2)

inst_37591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:112773*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112773*0 + 3*727*FLEN/8, x4, x1, x2)

inst_37592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:112776*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112776*0 + 3*728*FLEN/8, x4, x1, x2)

inst_37593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:112779*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112779*0 + 3*729*FLEN/8, x4, x1, x2)

inst_37594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:112782*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112782*0 + 3*730*FLEN/8, x4, x1, x2)

inst_37595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:112785*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112785*0 + 3*731*FLEN/8, x4, x1, x2)

inst_37596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:112788*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112788*0 + 3*732*FLEN/8, x4, x1, x2)

inst_37597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:112791*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112791*0 + 3*733*FLEN/8, x4, x1, x2)

inst_37598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:112794*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112794*0 + 3*734*FLEN/8, x4, x1, x2)

inst_37599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:112797*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112797*0 + 3*735*FLEN/8, x4, x1, x2)

inst_37600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:112800*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112800*0 + 3*736*FLEN/8, x4, x1, x2)

inst_37601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:112803*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112803*0 + 3*737*FLEN/8, x4, x1, x2)

inst_37602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:112806*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112806*0 + 3*738*FLEN/8, x4, x1, x2)

inst_37603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:112809*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112809*0 + 3*739*FLEN/8, x4, x1, x2)

inst_37604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:112812*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112812*0 + 3*740*FLEN/8, x4, x1, x2)

inst_37605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:112815*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112815*0 + 3*741*FLEN/8, x4, x1, x2)

inst_37606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:112818*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112818*0 + 3*742*FLEN/8, x4, x1, x2)

inst_37607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:112821*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112821*0 + 3*743*FLEN/8, x4, x1, x2)

inst_37608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:112824*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112824*0 + 3*744*FLEN/8, x4, x1, x2)

inst_37609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:112827*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112827*0 + 3*745*FLEN/8, x4, x1, x2)

inst_37610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:112830*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112830*0 + 3*746*FLEN/8, x4, x1, x2)

inst_37611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:112833*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112833*0 + 3*747*FLEN/8, x4, x1, x2)

inst_37612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x240000000000000; valaddr_reg:x3; val_offset:112836*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112836*0 + 3*748*FLEN/8, x4, x1, x2)

inst_37613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x240000000000001; valaddr_reg:x3; val_offset:112839*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112839*0 + 3*749*FLEN/8, x4, x1, x2)

inst_37614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x240000000000003; valaddr_reg:x3; val_offset:112842*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112842*0 + 3*750*FLEN/8, x4, x1, x2)

inst_37615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x240000000000007; valaddr_reg:x3; val_offset:112845*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112845*0 + 3*751*FLEN/8, x4, x1, x2)

inst_37616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x24000000000000f; valaddr_reg:x3; val_offset:112848*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112848*0 + 3*752*FLEN/8, x4, x1, x2)

inst_37617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x24000000000001f; valaddr_reg:x3; val_offset:112851*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112851*0 + 3*753*FLEN/8, x4, x1, x2)

inst_37618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x24000000000003f; valaddr_reg:x3; val_offset:112854*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112854*0 + 3*754*FLEN/8, x4, x1, x2)

inst_37619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x24000000000007f; valaddr_reg:x3; val_offset:112857*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112857*0 + 3*755*FLEN/8, x4, x1, x2)

inst_37620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x2400000000000ff; valaddr_reg:x3; val_offset:112860*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112860*0 + 3*756*FLEN/8, x4, x1, x2)

inst_37621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x2400000000001ff; valaddr_reg:x3; val_offset:112863*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112863*0 + 3*757*FLEN/8, x4, x1, x2)

inst_37622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x2400000000003ff; valaddr_reg:x3; val_offset:112866*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112866*0 + 3*758*FLEN/8, x4, x1, x2)

inst_37623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x2400000000007ff; valaddr_reg:x3; val_offset:112869*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112869*0 + 3*759*FLEN/8, x4, x1, x2)

inst_37624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x240000000000fff; valaddr_reg:x3; val_offset:112872*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112872*0 + 3*760*FLEN/8, x4, x1, x2)

inst_37625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x240000000001fff; valaddr_reg:x3; val_offset:112875*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112875*0 + 3*761*FLEN/8, x4, x1, x2)

inst_37626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x240000000003fff; valaddr_reg:x3; val_offset:112878*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112878*0 + 3*762*FLEN/8, x4, x1, x2)

inst_37627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x240000000007fff; valaddr_reg:x3; val_offset:112881*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112881*0 + 3*763*FLEN/8, x4, x1, x2)

inst_37628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x24000000000ffff; valaddr_reg:x3; val_offset:112884*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112884*0 + 3*764*FLEN/8, x4, x1, x2)

inst_37629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x24000000001ffff; valaddr_reg:x3; val_offset:112887*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112887*0 + 3*765*FLEN/8, x4, x1, x2)

inst_37630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x24000000003ffff; valaddr_reg:x3; val_offset:112890*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112890*0 + 3*766*FLEN/8, x4, x1, x2)

inst_37631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6be571bb3114d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f96be571bb3114d; op2val:0x0;
op3val:0x24000000007ffff; valaddr_reg:x3; val_offset:112893*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112893*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964223,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964479,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964991,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018966015,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018968063,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018972159,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018980351,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018996735,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019029503,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019095039,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019226111,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019488255,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797020012543,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797021061119,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797023158271,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797027352575,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797035741183,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797052518399,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797086072831,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797153181695,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797287399423,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797555834879,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028798092705791,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028799166447615,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028801313931263,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028805608898559,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028814198833151,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028831378702335,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028865738440703,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028934457917439,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029071896870911,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029346774777855,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029896530591743,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36030996042219519,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36033195065475071,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36037593111986175,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36046389205008383,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36063981391052799,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36099165763141631,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36169534507319295,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36310271995674623,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36591746972385279,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(37154696925806591,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649215,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649216,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39406496739491840,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39969446692913152,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40250921669623808,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40391659157979136,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40462027902156800,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40497212274245632,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40514804460290048,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40523600553312256,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40527998599823360,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40530197623078912,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531297134706688,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531846890520576,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532121768427520,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532259207380992,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532327926857728,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532362286596096,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532379466465280,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532388056399872,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532392351367168,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532394498850816,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532395572592640,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396109463552,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396377899008,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396512116736,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396579225600,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396612780032,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396629557248,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396637945856,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396642140160,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396644237312,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645285888,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645810176,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646072320,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646203392,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646268928,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646301696,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646318080,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646326272,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646330368,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646332416,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333440,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333952,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334208,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334336,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334400,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334432,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334448,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334456,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334460,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334462,64,FLEN)
NAN_BOXED(6887790267912458315,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334463,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672320,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672321,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672323,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672327,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672335,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672351,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672383,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672447,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672575,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672831,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231673343,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231674367,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231676415,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231680511,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231688703,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231705087,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231737855,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231803391,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231934463,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232196607,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232720895,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983233769471,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983235866623,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983240060927,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983248449535,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983265226751,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983298781183,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983365890047,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983500107775,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983768543231,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661984305414143,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661985379155967,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661987526639615,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661991821606911,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662000411541503,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662017591410687,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662051951149055,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662120670625791,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662258109579263,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662532987486207,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202663082743300095,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202664182254927871,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202666381278183423,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202670779324694527,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202679575417716735,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202697167603761151,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202732351975849983,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202802720720027647,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202943458208382975,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203224933185093631,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203787883138514943,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357567,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357568,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206039682952200192,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206602632905621504,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206884107882332160,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207024845370687488,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207095214114865152,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207130398486953984,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207147990672998400,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207156786766020608,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207161184812531712,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207163383835787264,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207164483347415040,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165033103228928,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165307981135872,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165445420089344,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165514139566080,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165548499304448,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165565679173632,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165574269108224,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165578564075520,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165580711559168,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165581785300992,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582322171904,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582590607360,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582724825088,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582791933952,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582825488384,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582842265600,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582850654208,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582854848512,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582856945664,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582857994240,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858518528,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858780672,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858911744,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858977280,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859010048,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859026432,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859034624,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859038720,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859040768,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859041792,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042304,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042560,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042688,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042752,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042784,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042800,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042808,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042812,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042814,64,FLEN)
NAN_BOXED(6887801707452428127,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042815,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668928,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668929,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668931,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668935,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668943,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668959,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668991,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669055,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669183,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669439,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669951,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292670975,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292673023,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292677119,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292685311,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292701695,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292734463,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292799999,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292931071,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793293193215,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793293717503,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793294766079,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793296863231,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793301057535,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793309446143,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793326223359,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793359777791,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793426886655,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793561104383,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793829539839,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064794366410751,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064795440152575,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064797587636223,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064801882603519,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064810472538111,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064827652407295,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064862012145663,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064930731622399,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065068170575871,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065343048482815,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065892804296703,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81066992315924479,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81069191339180031,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81073589385691135,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81082385478713343,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81099977664757759,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81135162036846591,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81205530781024255,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81346268269379583,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81627743246090239,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(82190693199511551,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(83316593106354175,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(83316593106354176,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(84442493013196800,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85005442966618112,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85286917943328768,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85427655431684096,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85498024175861760,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85533208547950592,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85550800733995008,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85559596827017216,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85563994873528320,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85566193896783872,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85567293408411648,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85567843164225536,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568118042132480,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568255481085952,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568324200562688,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568358560301056,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568375740170240,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568384330104832,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568388625072128,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568390772555776,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568391846297600,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392383168512,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392651603968,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392785821696,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392852930560,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392886484992,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392903262208,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392911650816,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392915845120,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392917942272,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392918990848,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919515136,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919777280,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919908352,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919973888,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920006656,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920023040,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920031232,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920035328,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920037376,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920038400,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920038912,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039168,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039296,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039360,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039392,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039408,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039416,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039420,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039422,64,FLEN)
NAN_BOXED(6887855203069592541,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039423,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521408,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521409,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521411,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521415,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521423,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521439,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521471,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521535,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521663,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521919,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429522431,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429523455,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429525503,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429529599,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429537791,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429554175,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429586943,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429652479,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429783551,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791430045695,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791430569983,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791431618559,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791433715711,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791437910015,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791446298623,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791463075839,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791496630271,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791563739135,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791697956863,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791966392319,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582792503263231,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582793577005055,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582795724488703,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582800019455999,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582808609390591,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582825789259775,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582860148998143,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582928868474879,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103583066307428351,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103583341185335295,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103583890941149183,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103584990452776959,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103587189476032511,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103591587522543615,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103600383615565823,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103617975801610239,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103653160173699071,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103723528917876735,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103864266406232063,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(104145741382942719,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(104708691336364031,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(105834591243206655,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(105834591243206656,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(106960491150049280,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107523441103470592,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107804916080181248,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(107945653568536576,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108016022312714240,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108051206684803072,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108068798870847488,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108077594963869696,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108081993010380800,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108084192033636352,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108085291545264128,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108085841301078016,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086116178984960,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086253617938432,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086322337415168,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086356697153536,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086373877022720,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086382466957312,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086386761924608,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086388909408256,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086389983150080,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390520020992,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390788456448,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390922674176,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086390989783040,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391023337472,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391040114688,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391048503296,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391052697600,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391054794752,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391055843328,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056367616,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056629760,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056760832,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056826368,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056859136,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056875520,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056883712,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056887808,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056889856,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056890880,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891392,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891648,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891776,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891840,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891872,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891888,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891896,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891900,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891902,64,FLEN)
NAN_BOXED(6887873568621276947,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891903,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261184,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261185,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261187,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261191,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261199,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261215,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261247,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261311,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261439,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261695,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303262207,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303263231,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303265279,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303269375,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303277567,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303293951,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303326719,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303392255,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303523327,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303785471,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625304309759,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625305358335,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625307455487,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625311649791,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625320038399,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625336815615,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625370370047,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625437478911,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625571696639,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625840132095,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983626377003007,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983627450744831,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983629598228479,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983633893195775,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983642483130367,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983659662999551,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983694022737919,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983762742214655,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983900181168127,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362984175059075071,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362984724814888959,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362985824326516735,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362988023349772287,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362992421396283391,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363001217489305599,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363018809675350015,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363053994047438847,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363124362791616511,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363265100279971839,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363546575256682495,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9364109525210103807,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9365235425116946431,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9365235425116946432,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9366361325023789056,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9366924274977210368,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367205749953921024,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367346487442276352,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367416856186454016,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367452040558542848,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367469632744587264,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367478428837609472,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367482826884120576,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367485025907376128,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486125419003904,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486675174817792,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486950052724736,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487087491678208,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487156211154944,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487190570893312,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487207750762496,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487216340697088,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487220635664384,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487222783148032,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487223856889856,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224393760768,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224662196224,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224796413952,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224863522816,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224897077248,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224913854464,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224922243072,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224926437376,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224928534528,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224929583104,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930107392,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930369536,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930500608,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930566144,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930598912,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930615296,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930623488,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930627584,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930629632,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930630656,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631168,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631424,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631552,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631616,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631648,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631664,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631672,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631676,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631678,64,FLEN)
NAN_BOXED(6887878370018627699,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631679,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704960,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704961,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704963,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704967,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704975,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704991,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705023,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705087,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705215,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705471,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705983,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273707007,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273709055,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273713151,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273721343,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273737727,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273770495,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273836031,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273967103,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996274229247,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996274753535,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996275802111,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996277899263,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996282093567,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996290482175,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996307259391,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996340813823,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996407922687,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996542140415,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996810575871,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035997347446783,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035998421188607,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036000568672255,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036004863639551,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036013453574143,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036030633443327,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036064993181695,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036133712658431,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036271151611903,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036546029518847,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45037095785332735,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45038195296960511,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45040394320216063,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45044792366727167,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45053588459749375,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45071180645793791,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45106365017882623,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45176733762060287,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45317471250415615,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45598946227126271,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(46161896180547583,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(47287796087390207,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(47287796087390208,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(48413695994232832,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(48976645947654144,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49258120924364800,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49398858412720128,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49469227156897792,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49504411528986624,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49522003715031040,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49530799808053248,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49535197854564352,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49537396877819904,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49538496389447680,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539046145261568,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539321023168512,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539458462121984,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539527181598720,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539561541337088,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539578721206272,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539587311140864,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539591606108160,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539593753591808,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539594827333632,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595364204544,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595632640000,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595766857728,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595833966592,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595867521024,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595884298240,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595892686848,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595896881152,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595898978304,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900026880,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900551168,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900813312,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900944384,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901009920,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901042688,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901059072,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901067264,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901071360,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901073408,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901074432,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901074944,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075200,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075328,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075392,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075424,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075440,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075448,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075452,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075454,64,FLEN)
NAN_BOXED(6887887489905535879,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075455,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337856,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337857,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337859,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337863,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337871,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337887,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337919,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337983,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338111,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338367,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338879,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585339903,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585341951,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585346047,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585354239,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585370623,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585403391,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585468927,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585599999,64,FLEN)
NAN_BOXED(6887901961445904717,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585862143,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
