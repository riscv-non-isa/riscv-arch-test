
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_66048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x50b312100f47d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8548e9901b720 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa50b312100f47d; op2val:0x2038548e9901b720;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:198144*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198144*0 + 3*0*FLEN/8, x4, x1, x2)

inst_66049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x50b312100f47d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8548e9901b720 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa50b312100f47d; op2val:0x2038548e9901b720;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:198147*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198147*0 + 3*1*FLEN/8, x4, x1, x2)

inst_66050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x50b312100f47d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8548e9901b720 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa50b312100f47d; op2val:0x2038548e9901b720;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:198150*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198150*0 + 3*2*FLEN/8, x4, x1, x2)

inst_66051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x50b312100f47d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8548e9901b720 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa50b312100f47d; op2val:0x2038548e9901b720;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:198153*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198153*0 + 3*3*FLEN/8, x4, x1, x2)

inst_66052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x50b312100f47d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8548e9901b720 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa50b312100f47d; op2val:0x2038548e9901b720;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:198156*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198156*0 + 3*4*FLEN/8, x4, x1, x2)

inst_66053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x50b312100f47d and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8548e9901b720 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa50b312100f47d; op2val:0x2038548e9901b720;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:198159*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198159*0 + 3*5*FLEN/8, x4, x1, x2)

inst_66054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:198162*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198162*0 + 3*6*FLEN/8, x4, x1, x2)

inst_66055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:198165*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198165*0 + 3*7*FLEN/8, x4, x1, x2)

inst_66056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:198168*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198168*0 + 3*8*FLEN/8, x4, x1, x2)

inst_66057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:198171*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198171*0 + 3*9*FLEN/8, x4, x1, x2)

inst_66058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:198174*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198174*0 + 3*10*FLEN/8, x4, x1, x2)

inst_66059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:198177*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198177*0 + 3*11*FLEN/8, x4, x1, x2)

inst_66060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:198180*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198180*0 + 3*12*FLEN/8, x4, x1, x2)

inst_66061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:198183*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198183*0 + 3*13*FLEN/8, x4, x1, x2)

inst_66062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:198186*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198186*0 + 3*14*FLEN/8, x4, x1, x2)

inst_66063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:198189*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198189*0 + 3*15*FLEN/8, x4, x1, x2)

inst_66064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:198192*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198192*0 + 3*16*FLEN/8, x4, x1, x2)

inst_66065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:198195*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198195*0 + 3*17*FLEN/8, x4, x1, x2)

inst_66066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:198198*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198198*0 + 3*18*FLEN/8, x4, x1, x2)

inst_66067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:198201*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198201*0 + 3*19*FLEN/8, x4, x1, x2)

inst_66068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:198204*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198204*0 + 3*20*FLEN/8, x4, x1, x2)

inst_66069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:198207*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198207*0 + 3*21*FLEN/8, x4, x1, x2)

inst_66070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:198210*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198210*0 + 3*22*FLEN/8, x4, x1, x2)

inst_66071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:198213*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198213*0 + 3*23*FLEN/8, x4, x1, x2)

inst_66072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:198216*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198216*0 + 3*24*FLEN/8, x4, x1, x2)

inst_66073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:198219*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198219*0 + 3*25*FLEN/8, x4, x1, x2)

inst_66074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:198222*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198222*0 + 3*26*FLEN/8, x4, x1, x2)

inst_66075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:198225*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198225*0 + 3*27*FLEN/8, x4, x1, x2)

inst_66076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000000000000; valaddr_reg:x3; val_offset:198228*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198228*0 + 3*28*FLEN/8, x4, x1, x2)

inst_66077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000000000001; valaddr_reg:x3; val_offset:198231*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198231*0 + 3*29*FLEN/8, x4, x1, x2)

inst_66078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000000000003; valaddr_reg:x3; val_offset:198234*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198234*0 + 3*30*FLEN/8, x4, x1, x2)

inst_66079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000000000007; valaddr_reg:x3; val_offset:198237*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198237*0 + 3*31*FLEN/8, x4, x1, x2)

inst_66080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000000000000f; valaddr_reg:x3; val_offset:198240*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198240*0 + 3*32*FLEN/8, x4, x1, x2)

inst_66081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000000000001f; valaddr_reg:x3; val_offset:198243*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198243*0 + 3*33*FLEN/8, x4, x1, x2)

inst_66082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000000000003f; valaddr_reg:x3; val_offset:198246*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198246*0 + 3*34*FLEN/8, x4, x1, x2)

inst_66083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000000000007f; valaddr_reg:x3; val_offset:198249*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198249*0 + 3*35*FLEN/8, x4, x1, x2)

inst_66084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400000000000ff; valaddr_reg:x3; val_offset:198252*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198252*0 + 3*36*FLEN/8, x4, x1, x2)

inst_66085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400000000001ff; valaddr_reg:x3; val_offset:198255*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198255*0 + 3*37*FLEN/8, x4, x1, x2)

inst_66086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400000000003ff; valaddr_reg:x3; val_offset:198258*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198258*0 + 3*38*FLEN/8, x4, x1, x2)

inst_66087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400000000007ff; valaddr_reg:x3; val_offset:198261*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198261*0 + 3*39*FLEN/8, x4, x1, x2)

inst_66088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000000000fff; valaddr_reg:x3; val_offset:198264*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198264*0 + 3*40*FLEN/8, x4, x1, x2)

inst_66089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000000001fff; valaddr_reg:x3; val_offset:198267*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198267*0 + 3*41*FLEN/8, x4, x1, x2)

inst_66090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000000003fff; valaddr_reg:x3; val_offset:198270*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198270*0 + 3*42*FLEN/8, x4, x1, x2)

inst_66091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000000007fff; valaddr_reg:x3; val_offset:198273*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198273*0 + 3*43*FLEN/8, x4, x1, x2)

inst_66092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000000000ffff; valaddr_reg:x3; val_offset:198276*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198276*0 + 3*44*FLEN/8, x4, x1, x2)

inst_66093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000000001ffff; valaddr_reg:x3; val_offset:198279*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198279*0 + 3*45*FLEN/8, x4, x1, x2)

inst_66094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000000003ffff; valaddr_reg:x3; val_offset:198282*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198282*0 + 3*46*FLEN/8, x4, x1, x2)

inst_66095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000000007ffff; valaddr_reg:x3; val_offset:198285*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198285*0 + 3*47*FLEN/8, x4, x1, x2)

inst_66096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400000000fffff; valaddr_reg:x3; val_offset:198288*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198288*0 + 3*48*FLEN/8, x4, x1, x2)

inst_66097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400000001fffff; valaddr_reg:x3; val_offset:198291*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198291*0 + 3*49*FLEN/8, x4, x1, x2)

inst_66098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400000003fffff; valaddr_reg:x3; val_offset:198294*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198294*0 + 3*50*FLEN/8, x4, x1, x2)

inst_66099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400000007fffff; valaddr_reg:x3; val_offset:198297*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198297*0 + 3*51*FLEN/8, x4, x1, x2)

inst_66100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000000ffffff; valaddr_reg:x3; val_offset:198300*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198300*0 + 3*52*FLEN/8, x4, x1, x2)

inst_66101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000001ffffff; valaddr_reg:x3; val_offset:198303*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198303*0 + 3*53*FLEN/8, x4, x1, x2)

inst_66102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000003ffffff; valaddr_reg:x3; val_offset:198306*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198306*0 + 3*54*FLEN/8, x4, x1, x2)

inst_66103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000007ffffff; valaddr_reg:x3; val_offset:198309*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198309*0 + 3*55*FLEN/8, x4, x1, x2)

inst_66104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000000fffffff; valaddr_reg:x3; val_offset:198312*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198312*0 + 3*56*FLEN/8, x4, x1, x2)

inst_66105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000001fffffff; valaddr_reg:x3; val_offset:198315*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198315*0 + 3*57*FLEN/8, x4, x1, x2)

inst_66106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000003fffffff; valaddr_reg:x3; val_offset:198318*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198318*0 + 3*58*FLEN/8, x4, x1, x2)

inst_66107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000007fffffff; valaddr_reg:x3; val_offset:198321*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198321*0 + 3*59*FLEN/8, x4, x1, x2)

inst_66108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400000ffffffff; valaddr_reg:x3; val_offset:198324*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198324*0 + 3*60*FLEN/8, x4, x1, x2)

inst_66109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400001ffffffff; valaddr_reg:x3; val_offset:198327*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198327*0 + 3*61*FLEN/8, x4, x1, x2)

inst_66110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400003ffffffff; valaddr_reg:x3; val_offset:198330*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198330*0 + 3*62*FLEN/8, x4, x1, x2)

inst_66111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400007ffffffff; valaddr_reg:x3; val_offset:198333*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198333*0 + 3*63*FLEN/8, x4, x1, x2)

inst_66112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340000fffffffff; valaddr_reg:x3; val_offset:198336*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198336*0 + 3*64*FLEN/8, x4, x1, x2)

inst_66113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340001fffffffff; valaddr_reg:x3; val_offset:198339*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198339*0 + 3*65*FLEN/8, x4, x1, x2)

inst_66114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340003fffffffff; valaddr_reg:x3; val_offset:198342*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198342*0 + 3*66*FLEN/8, x4, x1, x2)

inst_66115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340007fffffffff; valaddr_reg:x3; val_offset:198345*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198345*0 + 3*67*FLEN/8, x4, x1, x2)

inst_66116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834000ffffffffff; valaddr_reg:x3; val_offset:198348*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198348*0 + 3*68*FLEN/8, x4, x1, x2)

inst_66117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834001ffffffffff; valaddr_reg:x3; val_offset:198351*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198351*0 + 3*69*FLEN/8, x4, x1, x2)

inst_66118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834003ffffffffff; valaddr_reg:x3; val_offset:198354*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198354*0 + 3*70*FLEN/8, x4, x1, x2)

inst_66119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834007ffffffffff; valaddr_reg:x3; val_offset:198357*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198357*0 + 3*71*FLEN/8, x4, x1, x2)

inst_66120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83400fffffffffff; valaddr_reg:x3; val_offset:198360*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198360*0 + 3*72*FLEN/8, x4, x1, x2)

inst_66121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83401fffffffffff; valaddr_reg:x3; val_offset:198363*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198363*0 + 3*73*FLEN/8, x4, x1, x2)

inst_66122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83403fffffffffff; valaddr_reg:x3; val_offset:198366*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198366*0 + 3*74*FLEN/8, x4, x1, x2)

inst_66123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x83407fffffffffff; valaddr_reg:x3; val_offset:198369*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198369*0 + 3*75*FLEN/8, x4, x1, x2)

inst_66124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8340ffffffffffff; valaddr_reg:x3; val_offset:198372*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198372*0 + 3*76*FLEN/8, x4, x1, x2)

inst_66125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8341ffffffffffff; valaddr_reg:x3; val_offset:198375*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198375*0 + 3*77*FLEN/8, x4, x1, x2)

inst_66126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8343ffffffffffff; valaddr_reg:x3; val_offset:198378*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198378*0 + 3*78*FLEN/8, x4, x1, x2)

inst_66127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8347ffffffffffff; valaddr_reg:x3; val_offset:198381*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198381*0 + 3*79*FLEN/8, x4, x1, x2)

inst_66128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x8348000000000000; valaddr_reg:x3; val_offset:198384*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198384*0 + 3*80*FLEN/8, x4, x1, x2)

inst_66129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834c000000000000; valaddr_reg:x3; val_offset:198387*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198387*0 + 3*81*FLEN/8, x4, x1, x2)

inst_66130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834e000000000000; valaddr_reg:x3; val_offset:198390*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198390*0 + 3*82*FLEN/8, x4, x1, x2)

inst_66131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834f000000000000; valaddr_reg:x3; val_offset:198393*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198393*0 + 3*83*FLEN/8, x4, x1, x2)

inst_66132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834f800000000000; valaddr_reg:x3; val_offset:198396*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198396*0 + 3*84*FLEN/8, x4, x1, x2)

inst_66133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fc00000000000; valaddr_reg:x3; val_offset:198399*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198399*0 + 3*85*FLEN/8, x4, x1, x2)

inst_66134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fe00000000000; valaddr_reg:x3; val_offset:198402*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198402*0 + 3*86*FLEN/8, x4, x1, x2)

inst_66135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ff00000000000; valaddr_reg:x3; val_offset:198405*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198405*0 + 3*87*FLEN/8, x4, x1, x2)

inst_66136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ff80000000000; valaddr_reg:x3; val_offset:198408*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198408*0 + 3*88*FLEN/8, x4, x1, x2)

inst_66137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffc0000000000; valaddr_reg:x3; val_offset:198411*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198411*0 + 3*89*FLEN/8, x4, x1, x2)

inst_66138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffe0000000000; valaddr_reg:x3; val_offset:198414*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198414*0 + 3*90*FLEN/8, x4, x1, x2)

inst_66139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fff0000000000; valaddr_reg:x3; val_offset:198417*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198417*0 + 3*91*FLEN/8, x4, x1, x2)

inst_66140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fff8000000000; valaddr_reg:x3; val_offset:198420*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198420*0 + 3*92*FLEN/8, x4, x1, x2)

inst_66141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffc000000000; valaddr_reg:x3; val_offset:198423*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198423*0 + 3*93*FLEN/8, x4, x1, x2)

inst_66142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffe000000000; valaddr_reg:x3; val_offset:198426*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198426*0 + 3*94*FLEN/8, x4, x1, x2)

inst_66143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffff000000000; valaddr_reg:x3; val_offset:198429*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198429*0 + 3*95*FLEN/8, x4, x1, x2)

inst_66144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffff800000000; valaddr_reg:x3; val_offset:198432*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198432*0 + 3*96*FLEN/8, x4, x1, x2)

inst_66145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffc00000000; valaddr_reg:x3; val_offset:198435*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198435*0 + 3*97*FLEN/8, x4, x1, x2)

inst_66146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffe00000000; valaddr_reg:x3; val_offset:198438*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198438*0 + 3*98*FLEN/8, x4, x1, x2)

inst_66147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffff00000000; valaddr_reg:x3; val_offset:198441*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198441*0 + 3*99*FLEN/8, x4, x1, x2)

inst_66148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffff80000000; valaddr_reg:x3; val_offset:198444*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198444*0 + 3*100*FLEN/8, x4, x1, x2)

inst_66149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffc0000000; valaddr_reg:x3; val_offset:198447*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198447*0 + 3*101*FLEN/8, x4, x1, x2)

inst_66150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffe0000000; valaddr_reg:x3; val_offset:198450*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198450*0 + 3*102*FLEN/8, x4, x1, x2)

inst_66151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffff0000000; valaddr_reg:x3; val_offset:198453*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198453*0 + 3*103*FLEN/8, x4, x1, x2)

inst_66152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffff8000000; valaddr_reg:x3; val_offset:198456*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198456*0 + 3*104*FLEN/8, x4, x1, x2)

inst_66153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffc000000; valaddr_reg:x3; val_offset:198459*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198459*0 + 3*105*FLEN/8, x4, x1, x2)

inst_66154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffe000000; valaddr_reg:x3; val_offset:198462*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198462*0 + 3*106*FLEN/8, x4, x1, x2)

inst_66155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffff000000; valaddr_reg:x3; val_offset:198465*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198465*0 + 3*107*FLEN/8, x4, x1, x2)

inst_66156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffff800000; valaddr_reg:x3; val_offset:198468*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198468*0 + 3*108*FLEN/8, x4, x1, x2)

inst_66157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffffc00000; valaddr_reg:x3; val_offset:198471*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198471*0 + 3*109*FLEN/8, x4, x1, x2)

inst_66158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffffe00000; valaddr_reg:x3; val_offset:198474*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198474*0 + 3*110*FLEN/8, x4, x1, x2)

inst_66159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffff00000; valaddr_reg:x3; val_offset:198477*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198477*0 + 3*111*FLEN/8, x4, x1, x2)

inst_66160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffff80000; valaddr_reg:x3; val_offset:198480*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198480*0 + 3*112*FLEN/8, x4, x1, x2)

inst_66161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffffc0000; valaddr_reg:x3; val_offset:198483*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198483*0 + 3*113*FLEN/8, x4, x1, x2)

inst_66162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffffe0000; valaddr_reg:x3; val_offset:198486*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198486*0 + 3*114*FLEN/8, x4, x1, x2)

inst_66163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffffff0000; valaddr_reg:x3; val_offset:198489*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198489*0 + 3*115*FLEN/8, x4, x1, x2)

inst_66164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffffff8000; valaddr_reg:x3; val_offset:198492*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198492*0 + 3*116*FLEN/8, x4, x1, x2)

inst_66165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffffffc000; valaddr_reg:x3; val_offset:198495*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198495*0 + 3*117*FLEN/8, x4, x1, x2)

inst_66166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffffffe000; valaddr_reg:x3; val_offset:198498*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198498*0 + 3*118*FLEN/8, x4, x1, x2)

inst_66167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffffff000; valaddr_reg:x3; val_offset:198501*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198501*0 + 3*119*FLEN/8, x4, x1, x2)

inst_66168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffffff800; valaddr_reg:x3; val_offset:198504*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198504*0 + 3*120*FLEN/8, x4, x1, x2)

inst_66169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffffffc00; valaddr_reg:x3; val_offset:198507*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198507*0 + 3*121*FLEN/8, x4, x1, x2)

inst_66170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffffffe00; valaddr_reg:x3; val_offset:198510*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198510*0 + 3*122*FLEN/8, x4, x1, x2)

inst_66171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffffffff00; valaddr_reg:x3; val_offset:198513*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198513*0 + 3*123*FLEN/8, x4, x1, x2)

inst_66172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffffffff80; valaddr_reg:x3; val_offset:198516*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198516*0 + 3*124*FLEN/8, x4, x1, x2)

inst_66173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffffffffc0; valaddr_reg:x3; val_offset:198519*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198519*0 + 3*125*FLEN/8, x4, x1, x2)

inst_66174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffffffffe0; valaddr_reg:x3; val_offset:198522*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198522*0 + 3*126*FLEN/8, x4, x1, x2)

inst_66175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffffffff0; valaddr_reg:x3; val_offset:198525*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198525*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_66176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffffffff8; valaddr_reg:x3; val_offset:198528*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198528*0 + 3*128*FLEN/8, x4, x1, x2)

inst_66177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffffffffc; valaddr_reg:x3; val_offset:198531*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198531*0 + 3*129*FLEN/8, x4, x1, x2)

inst_66178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834ffffffffffffe; valaddr_reg:x3; val_offset:198534*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198534*0 + 3*130*FLEN/8, x4, x1, x2)

inst_66179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x51b9d10069801 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa51b9d10069801; op2val:0x8000;
op3val:0x834fffffffffffff; valaddr_reg:x3; val_offset:198537*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198537*0 + 3*131*FLEN/8, x4, x1, x2)

inst_66180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:198540*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198540*0 + 3*132*FLEN/8, x4, x1, x2)

inst_66181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:198543*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198543*0 + 3*133*FLEN/8, x4, x1, x2)

inst_66182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:198546*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198546*0 + 3*134*FLEN/8, x4, x1, x2)

inst_66183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:198549*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198549*0 + 3*135*FLEN/8, x4, x1, x2)

inst_66184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:198552*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198552*0 + 3*136*FLEN/8, x4, x1, x2)

inst_66185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:198555*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198555*0 + 3*137*FLEN/8, x4, x1, x2)

inst_66186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:198558*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198558*0 + 3*138*FLEN/8, x4, x1, x2)

inst_66187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:198561*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198561*0 + 3*139*FLEN/8, x4, x1, x2)

inst_66188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:198564*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198564*0 + 3*140*FLEN/8, x4, x1, x2)

inst_66189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:198567*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198567*0 + 3*141*FLEN/8, x4, x1, x2)

inst_66190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:198570*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198570*0 + 3*142*FLEN/8, x4, x1, x2)

inst_66191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:198573*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198573*0 + 3*143*FLEN/8, x4, x1, x2)

inst_66192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:198576*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198576*0 + 3*144*FLEN/8, x4, x1, x2)

inst_66193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:198579*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198579*0 + 3*145*FLEN/8, x4, x1, x2)

inst_66194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:198582*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198582*0 + 3*146*FLEN/8, x4, x1, x2)

inst_66195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:198585*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198585*0 + 3*147*FLEN/8, x4, x1, x2)

inst_66196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:198588*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198588*0 + 3*148*FLEN/8, x4, x1, x2)

inst_66197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:198591*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198591*0 + 3*149*FLEN/8, x4, x1, x2)

inst_66198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:198594*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198594*0 + 3*150*FLEN/8, x4, x1, x2)

inst_66199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:198597*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198597*0 + 3*151*FLEN/8, x4, x1, x2)

inst_66200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:198600*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198600*0 + 3*152*FLEN/8, x4, x1, x2)

inst_66201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:198603*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198603*0 + 3*153*FLEN/8, x4, x1, x2)

inst_66202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000000000000; valaddr_reg:x3; val_offset:198606*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198606*0 + 3*154*FLEN/8, x4, x1, x2)

inst_66203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000000000001; valaddr_reg:x3; val_offset:198609*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198609*0 + 3*155*FLEN/8, x4, x1, x2)

inst_66204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000000000003; valaddr_reg:x3; val_offset:198612*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198612*0 + 3*156*FLEN/8, x4, x1, x2)

inst_66205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000000000007; valaddr_reg:x3; val_offset:198615*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198615*0 + 3*157*FLEN/8, x4, x1, x2)

inst_66206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000000000000f; valaddr_reg:x3; val_offset:198618*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198618*0 + 3*158*FLEN/8, x4, x1, x2)

inst_66207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000000000001f; valaddr_reg:x3; val_offset:198621*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198621*0 + 3*159*FLEN/8, x4, x1, x2)

inst_66208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000000000003f; valaddr_reg:x3; val_offset:198624*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198624*0 + 3*160*FLEN/8, x4, x1, x2)

inst_66209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000000000007f; valaddr_reg:x3; val_offset:198627*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198627*0 + 3*161*FLEN/8, x4, x1, x2)

inst_66210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700000000000ff; valaddr_reg:x3; val_offset:198630*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198630*0 + 3*162*FLEN/8, x4, x1, x2)

inst_66211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700000000001ff; valaddr_reg:x3; val_offset:198633*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198633*0 + 3*163*FLEN/8, x4, x1, x2)

inst_66212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700000000003ff; valaddr_reg:x3; val_offset:198636*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198636*0 + 3*164*FLEN/8, x4, x1, x2)

inst_66213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700000000007ff; valaddr_reg:x3; val_offset:198639*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198639*0 + 3*165*FLEN/8, x4, x1, x2)

inst_66214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000000000fff; valaddr_reg:x3; val_offset:198642*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198642*0 + 3*166*FLEN/8, x4, x1, x2)

inst_66215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000000001fff; valaddr_reg:x3; val_offset:198645*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198645*0 + 3*167*FLEN/8, x4, x1, x2)

inst_66216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000000003fff; valaddr_reg:x3; val_offset:198648*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198648*0 + 3*168*FLEN/8, x4, x1, x2)

inst_66217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000000007fff; valaddr_reg:x3; val_offset:198651*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198651*0 + 3*169*FLEN/8, x4, x1, x2)

inst_66218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000000000ffff; valaddr_reg:x3; val_offset:198654*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198654*0 + 3*170*FLEN/8, x4, x1, x2)

inst_66219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000000001ffff; valaddr_reg:x3; val_offset:198657*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198657*0 + 3*171*FLEN/8, x4, x1, x2)

inst_66220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000000003ffff; valaddr_reg:x3; val_offset:198660*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198660*0 + 3*172*FLEN/8, x4, x1, x2)

inst_66221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000000007ffff; valaddr_reg:x3; val_offset:198663*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198663*0 + 3*173*FLEN/8, x4, x1, x2)

inst_66222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700000000fffff; valaddr_reg:x3; val_offset:198666*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198666*0 + 3*174*FLEN/8, x4, x1, x2)

inst_66223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700000001fffff; valaddr_reg:x3; val_offset:198669*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198669*0 + 3*175*FLEN/8, x4, x1, x2)

inst_66224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700000003fffff; valaddr_reg:x3; val_offset:198672*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198672*0 + 3*176*FLEN/8, x4, x1, x2)

inst_66225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700000007fffff; valaddr_reg:x3; val_offset:198675*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198675*0 + 3*177*FLEN/8, x4, x1, x2)

inst_66226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000000ffffff; valaddr_reg:x3; val_offset:198678*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198678*0 + 3*178*FLEN/8, x4, x1, x2)

inst_66227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000001ffffff; valaddr_reg:x3; val_offset:198681*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198681*0 + 3*179*FLEN/8, x4, x1, x2)

inst_66228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000003ffffff; valaddr_reg:x3; val_offset:198684*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198684*0 + 3*180*FLEN/8, x4, x1, x2)

inst_66229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000007ffffff; valaddr_reg:x3; val_offset:198687*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198687*0 + 3*181*FLEN/8, x4, x1, x2)

inst_66230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000000fffffff; valaddr_reg:x3; val_offset:198690*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198690*0 + 3*182*FLEN/8, x4, x1, x2)

inst_66231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000001fffffff; valaddr_reg:x3; val_offset:198693*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198693*0 + 3*183*FLEN/8, x4, x1, x2)

inst_66232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000003fffffff; valaddr_reg:x3; val_offset:198696*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198696*0 + 3*184*FLEN/8, x4, x1, x2)

inst_66233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000007fffffff; valaddr_reg:x3; val_offset:198699*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198699*0 + 3*185*FLEN/8, x4, x1, x2)

inst_66234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700000ffffffff; valaddr_reg:x3; val_offset:198702*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198702*0 + 3*186*FLEN/8, x4, x1, x2)

inst_66235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700001ffffffff; valaddr_reg:x3; val_offset:198705*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198705*0 + 3*187*FLEN/8, x4, x1, x2)

inst_66236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700003ffffffff; valaddr_reg:x3; val_offset:198708*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198708*0 + 3*188*FLEN/8, x4, x1, x2)

inst_66237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700007ffffffff; valaddr_reg:x3; val_offset:198711*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198711*0 + 3*189*FLEN/8, x4, x1, x2)

inst_66238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170000fffffffff; valaddr_reg:x3; val_offset:198714*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198714*0 + 3*190*FLEN/8, x4, x1, x2)

inst_66239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170001fffffffff; valaddr_reg:x3; val_offset:198717*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198717*0 + 3*191*FLEN/8, x4, x1, x2)

inst_66240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170003fffffffff; valaddr_reg:x3; val_offset:198720*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198720*0 + 3*192*FLEN/8, x4, x1, x2)

inst_66241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170007fffffffff; valaddr_reg:x3; val_offset:198723*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198723*0 + 3*193*FLEN/8, x4, x1, x2)

inst_66242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817000ffffffffff; valaddr_reg:x3; val_offset:198726*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198726*0 + 3*194*FLEN/8, x4, x1, x2)

inst_66243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817001ffffffffff; valaddr_reg:x3; val_offset:198729*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198729*0 + 3*195*FLEN/8, x4, x1, x2)

inst_66244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817003ffffffffff; valaddr_reg:x3; val_offset:198732*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198732*0 + 3*196*FLEN/8, x4, x1, x2)

inst_66245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817007ffffffffff; valaddr_reg:x3; val_offset:198735*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198735*0 + 3*197*FLEN/8, x4, x1, x2)

inst_66246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81700fffffffffff; valaddr_reg:x3; val_offset:198738*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198738*0 + 3*198*FLEN/8, x4, x1, x2)

inst_66247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81701fffffffffff; valaddr_reg:x3; val_offset:198741*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198741*0 + 3*199*FLEN/8, x4, x1, x2)

inst_66248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81703fffffffffff; valaddr_reg:x3; val_offset:198744*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198744*0 + 3*200*FLEN/8, x4, x1, x2)

inst_66249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x81707fffffffffff; valaddr_reg:x3; val_offset:198747*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198747*0 + 3*201*FLEN/8, x4, x1, x2)

inst_66250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8170ffffffffffff; valaddr_reg:x3; val_offset:198750*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198750*0 + 3*202*FLEN/8, x4, x1, x2)

inst_66251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8171ffffffffffff; valaddr_reg:x3; val_offset:198753*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198753*0 + 3*203*FLEN/8, x4, x1, x2)

inst_66252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8173ffffffffffff; valaddr_reg:x3; val_offset:198756*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198756*0 + 3*204*FLEN/8, x4, x1, x2)

inst_66253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8177ffffffffffff; valaddr_reg:x3; val_offset:198759*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198759*0 + 3*205*FLEN/8, x4, x1, x2)

inst_66254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x8178000000000000; valaddr_reg:x3; val_offset:198762*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198762*0 + 3*206*FLEN/8, x4, x1, x2)

inst_66255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817c000000000000; valaddr_reg:x3; val_offset:198765*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198765*0 + 3*207*FLEN/8, x4, x1, x2)

inst_66256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817e000000000000; valaddr_reg:x3; val_offset:198768*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198768*0 + 3*208*FLEN/8, x4, x1, x2)

inst_66257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817f000000000000; valaddr_reg:x3; val_offset:198771*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198771*0 + 3*209*FLEN/8, x4, x1, x2)

inst_66258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817f800000000000; valaddr_reg:x3; val_offset:198774*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198774*0 + 3*210*FLEN/8, x4, x1, x2)

inst_66259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fc00000000000; valaddr_reg:x3; val_offset:198777*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198777*0 + 3*211*FLEN/8, x4, x1, x2)

inst_66260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fe00000000000; valaddr_reg:x3; val_offset:198780*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198780*0 + 3*212*FLEN/8, x4, x1, x2)

inst_66261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ff00000000000; valaddr_reg:x3; val_offset:198783*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198783*0 + 3*213*FLEN/8, x4, x1, x2)

inst_66262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ff80000000000; valaddr_reg:x3; val_offset:198786*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198786*0 + 3*214*FLEN/8, x4, x1, x2)

inst_66263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffc0000000000; valaddr_reg:x3; val_offset:198789*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198789*0 + 3*215*FLEN/8, x4, x1, x2)

inst_66264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffe0000000000; valaddr_reg:x3; val_offset:198792*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198792*0 + 3*216*FLEN/8, x4, x1, x2)

inst_66265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fff0000000000; valaddr_reg:x3; val_offset:198795*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198795*0 + 3*217*FLEN/8, x4, x1, x2)

inst_66266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fff8000000000; valaddr_reg:x3; val_offset:198798*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198798*0 + 3*218*FLEN/8, x4, x1, x2)

inst_66267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffc000000000; valaddr_reg:x3; val_offset:198801*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198801*0 + 3*219*FLEN/8, x4, x1, x2)

inst_66268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffe000000000; valaddr_reg:x3; val_offset:198804*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198804*0 + 3*220*FLEN/8, x4, x1, x2)

inst_66269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffff000000000; valaddr_reg:x3; val_offset:198807*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198807*0 + 3*221*FLEN/8, x4, x1, x2)

inst_66270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffff800000000; valaddr_reg:x3; val_offset:198810*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198810*0 + 3*222*FLEN/8, x4, x1, x2)

inst_66271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffc00000000; valaddr_reg:x3; val_offset:198813*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198813*0 + 3*223*FLEN/8, x4, x1, x2)

inst_66272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffe00000000; valaddr_reg:x3; val_offset:198816*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198816*0 + 3*224*FLEN/8, x4, x1, x2)

inst_66273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffff00000000; valaddr_reg:x3; val_offset:198819*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198819*0 + 3*225*FLEN/8, x4, x1, x2)

inst_66274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffff80000000; valaddr_reg:x3; val_offset:198822*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198822*0 + 3*226*FLEN/8, x4, x1, x2)

inst_66275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffc0000000; valaddr_reg:x3; val_offset:198825*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198825*0 + 3*227*FLEN/8, x4, x1, x2)

inst_66276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffe0000000; valaddr_reg:x3; val_offset:198828*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198828*0 + 3*228*FLEN/8, x4, x1, x2)

inst_66277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffff0000000; valaddr_reg:x3; val_offset:198831*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198831*0 + 3*229*FLEN/8, x4, x1, x2)

inst_66278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffff8000000; valaddr_reg:x3; val_offset:198834*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198834*0 + 3*230*FLEN/8, x4, x1, x2)

inst_66279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffc000000; valaddr_reg:x3; val_offset:198837*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198837*0 + 3*231*FLEN/8, x4, x1, x2)

inst_66280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffe000000; valaddr_reg:x3; val_offset:198840*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198840*0 + 3*232*FLEN/8, x4, x1, x2)

inst_66281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffff000000; valaddr_reg:x3; val_offset:198843*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198843*0 + 3*233*FLEN/8, x4, x1, x2)

inst_66282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffff800000; valaddr_reg:x3; val_offset:198846*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198846*0 + 3*234*FLEN/8, x4, x1, x2)

inst_66283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffffc00000; valaddr_reg:x3; val_offset:198849*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198849*0 + 3*235*FLEN/8, x4, x1, x2)

inst_66284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffffe00000; valaddr_reg:x3; val_offset:198852*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198852*0 + 3*236*FLEN/8, x4, x1, x2)

inst_66285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffff00000; valaddr_reg:x3; val_offset:198855*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198855*0 + 3*237*FLEN/8, x4, x1, x2)

inst_66286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffff80000; valaddr_reg:x3; val_offset:198858*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198858*0 + 3*238*FLEN/8, x4, x1, x2)

inst_66287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffffc0000; valaddr_reg:x3; val_offset:198861*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198861*0 + 3*239*FLEN/8, x4, x1, x2)

inst_66288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffffe0000; valaddr_reg:x3; val_offset:198864*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198864*0 + 3*240*FLEN/8, x4, x1, x2)

inst_66289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffffff0000; valaddr_reg:x3; val_offset:198867*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198867*0 + 3*241*FLEN/8, x4, x1, x2)

inst_66290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffffff8000; valaddr_reg:x3; val_offset:198870*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198870*0 + 3*242*FLEN/8, x4, x1, x2)

inst_66291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffffffc000; valaddr_reg:x3; val_offset:198873*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198873*0 + 3*243*FLEN/8, x4, x1, x2)

inst_66292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffffffe000; valaddr_reg:x3; val_offset:198876*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198876*0 + 3*244*FLEN/8, x4, x1, x2)

inst_66293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffffff000; valaddr_reg:x3; val_offset:198879*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198879*0 + 3*245*FLEN/8, x4, x1, x2)

inst_66294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffffff800; valaddr_reg:x3; val_offset:198882*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198882*0 + 3*246*FLEN/8, x4, x1, x2)

inst_66295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffffffc00; valaddr_reg:x3; val_offset:198885*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198885*0 + 3*247*FLEN/8, x4, x1, x2)

inst_66296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffffffe00; valaddr_reg:x3; val_offset:198888*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198888*0 + 3*248*FLEN/8, x4, x1, x2)

inst_66297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffffffff00; valaddr_reg:x3; val_offset:198891*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198891*0 + 3*249*FLEN/8, x4, x1, x2)

inst_66298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffffffff80; valaddr_reg:x3; val_offset:198894*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198894*0 + 3*250*FLEN/8, x4, x1, x2)

inst_66299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffffffffc0; valaddr_reg:x3; val_offset:198897*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198897*0 + 3*251*FLEN/8, x4, x1, x2)

inst_66300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffffffffe0; valaddr_reg:x3; val_offset:198900*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198900*0 + 3*252*FLEN/8, x4, x1, x2)

inst_66301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffffffff0; valaddr_reg:x3; val_offset:198903*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198903*0 + 3*253*FLEN/8, x4, x1, x2)

inst_66302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffffffff8; valaddr_reg:x3; val_offset:198906*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198906*0 + 3*254*FLEN/8, x4, x1, x2)

inst_66303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffffffffc; valaddr_reg:x3; val_offset:198909*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198909*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_66304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817ffffffffffffe; valaddr_reg:x3; val_offset:198912*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198912*0 + 3*256*FLEN/8, x4, x1, x2)

inst_66305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa520baea9095e5; op2val:0x8000;
op3val:0x817fffffffffffff; valaddr_reg:x3; val_offset:198915*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198915*0 + 3*257*FLEN/8, x4, x1, x2)

inst_66306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:198918*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198918*0 + 3*258*FLEN/8, x4, x1, x2)

inst_66307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:198921*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198921*0 + 3*259*FLEN/8, x4, x1, x2)

inst_66308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:198924*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198924*0 + 3*260*FLEN/8, x4, x1, x2)

inst_66309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:198927*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198927*0 + 3*261*FLEN/8, x4, x1, x2)

inst_66310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:198930*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198930*0 + 3*262*FLEN/8, x4, x1, x2)

inst_66311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:198933*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198933*0 + 3*263*FLEN/8, x4, x1, x2)

inst_66312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:198936*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198936*0 + 3*264*FLEN/8, x4, x1, x2)

inst_66313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:198939*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198939*0 + 3*265*FLEN/8, x4, x1, x2)

inst_66314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:198942*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198942*0 + 3*266*FLEN/8, x4, x1, x2)

inst_66315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:198945*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198945*0 + 3*267*FLEN/8, x4, x1, x2)

inst_66316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:198948*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198948*0 + 3*268*FLEN/8, x4, x1, x2)

inst_66317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:198951*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198951*0 + 3*269*FLEN/8, x4, x1, x2)

inst_66318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:198954*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198954*0 + 3*270*FLEN/8, x4, x1, x2)

inst_66319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:198957*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198957*0 + 3*271*FLEN/8, x4, x1, x2)

inst_66320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:198960*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198960*0 + 3*272*FLEN/8, x4, x1, x2)

inst_66321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:198963*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198963*0 + 3*273*FLEN/8, x4, x1, x2)

inst_66322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:198966*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198966*0 + 3*274*FLEN/8, x4, x1, x2)

inst_66323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:198969*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198969*0 + 3*275*FLEN/8, x4, x1, x2)

inst_66324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:198972*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198972*0 + 3*276*FLEN/8, x4, x1, x2)

inst_66325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:198975*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198975*0 + 3*277*FLEN/8, x4, x1, x2)

inst_66326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:198978*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198978*0 + 3*278*FLEN/8, x4, x1, x2)

inst_66327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:198981*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198981*0 + 3*279*FLEN/8, x4, x1, x2)

inst_66328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000000000000; valaddr_reg:x3; val_offset:198984*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198984*0 + 3*280*FLEN/8, x4, x1, x2)

inst_66329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000000000001; valaddr_reg:x3; val_offset:198987*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198987*0 + 3*281*FLEN/8, x4, x1, x2)

inst_66330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000000000003; valaddr_reg:x3; val_offset:198990*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198990*0 + 3*282*FLEN/8, x4, x1, x2)

inst_66331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000000000007; valaddr_reg:x3; val_offset:198993*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198993*0 + 3*283*FLEN/8, x4, x1, x2)

inst_66332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000000000000f; valaddr_reg:x3; val_offset:198996*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198996*0 + 3*284*FLEN/8, x4, x1, x2)

inst_66333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000000000001f; valaddr_reg:x3; val_offset:198999*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198999*0 + 3*285*FLEN/8, x4, x1, x2)

inst_66334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000000000003f; valaddr_reg:x3; val_offset:199002*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199002*0 + 3*286*FLEN/8, x4, x1, x2)

inst_66335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000000000007f; valaddr_reg:x3; val_offset:199005*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199005*0 + 3*287*FLEN/8, x4, x1, x2)

inst_66336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00000000000ff; valaddr_reg:x3; val_offset:199008*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199008*0 + 3*288*FLEN/8, x4, x1, x2)

inst_66337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00000000001ff; valaddr_reg:x3; val_offset:199011*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199011*0 + 3*289*FLEN/8, x4, x1, x2)

inst_66338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00000000003ff; valaddr_reg:x3; val_offset:199014*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199014*0 + 3*290*FLEN/8, x4, x1, x2)

inst_66339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00000000007ff; valaddr_reg:x3; val_offset:199017*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199017*0 + 3*291*FLEN/8, x4, x1, x2)

inst_66340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000000000fff; valaddr_reg:x3; val_offset:199020*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199020*0 + 3*292*FLEN/8, x4, x1, x2)

inst_66341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000000001fff; valaddr_reg:x3; val_offset:199023*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199023*0 + 3*293*FLEN/8, x4, x1, x2)

inst_66342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000000003fff; valaddr_reg:x3; val_offset:199026*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199026*0 + 3*294*FLEN/8, x4, x1, x2)

inst_66343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000000007fff; valaddr_reg:x3; val_offset:199029*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199029*0 + 3*295*FLEN/8, x4, x1, x2)

inst_66344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000000000ffff; valaddr_reg:x3; val_offset:199032*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199032*0 + 3*296*FLEN/8, x4, x1, x2)

inst_66345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000000001ffff; valaddr_reg:x3; val_offset:199035*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199035*0 + 3*297*FLEN/8, x4, x1, x2)

inst_66346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000000003ffff; valaddr_reg:x3; val_offset:199038*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199038*0 + 3*298*FLEN/8, x4, x1, x2)

inst_66347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000000007ffff; valaddr_reg:x3; val_offset:199041*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199041*0 + 3*299*FLEN/8, x4, x1, x2)

inst_66348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00000000fffff; valaddr_reg:x3; val_offset:199044*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199044*0 + 3*300*FLEN/8, x4, x1, x2)

inst_66349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00000001fffff; valaddr_reg:x3; val_offset:199047*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199047*0 + 3*301*FLEN/8, x4, x1, x2)

inst_66350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00000003fffff; valaddr_reg:x3; val_offset:199050*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199050*0 + 3*302*FLEN/8, x4, x1, x2)

inst_66351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00000007fffff; valaddr_reg:x3; val_offset:199053*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199053*0 + 3*303*FLEN/8, x4, x1, x2)

inst_66352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000000ffffff; valaddr_reg:x3; val_offset:199056*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199056*0 + 3*304*FLEN/8, x4, x1, x2)

inst_66353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000001ffffff; valaddr_reg:x3; val_offset:199059*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199059*0 + 3*305*FLEN/8, x4, x1, x2)

inst_66354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000003ffffff; valaddr_reg:x3; val_offset:199062*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199062*0 + 3*306*FLEN/8, x4, x1, x2)

inst_66355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000007ffffff; valaddr_reg:x3; val_offset:199065*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199065*0 + 3*307*FLEN/8, x4, x1, x2)

inst_66356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000000fffffff; valaddr_reg:x3; val_offset:199068*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199068*0 + 3*308*FLEN/8, x4, x1, x2)

inst_66357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000001fffffff; valaddr_reg:x3; val_offset:199071*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199071*0 + 3*309*FLEN/8, x4, x1, x2)

inst_66358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000003fffffff; valaddr_reg:x3; val_offset:199074*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199074*0 + 3*310*FLEN/8, x4, x1, x2)

inst_66359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000007fffffff; valaddr_reg:x3; val_offset:199077*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199077*0 + 3*311*FLEN/8, x4, x1, x2)

inst_66360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00000ffffffff; valaddr_reg:x3; val_offset:199080*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199080*0 + 3*312*FLEN/8, x4, x1, x2)

inst_66361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00001ffffffff; valaddr_reg:x3; val_offset:199083*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199083*0 + 3*313*FLEN/8, x4, x1, x2)

inst_66362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00003ffffffff; valaddr_reg:x3; val_offset:199086*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199086*0 + 3*314*FLEN/8, x4, x1, x2)

inst_66363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00007ffffffff; valaddr_reg:x3; val_offset:199089*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199089*0 + 3*315*FLEN/8, x4, x1, x2)

inst_66364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0000fffffffff; valaddr_reg:x3; val_offset:199092*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199092*0 + 3*316*FLEN/8, x4, x1, x2)

inst_66365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0001fffffffff; valaddr_reg:x3; val_offset:199095*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199095*0 + 3*317*FLEN/8, x4, x1, x2)

inst_66366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0003fffffffff; valaddr_reg:x3; val_offset:199098*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199098*0 + 3*318*FLEN/8, x4, x1, x2)

inst_66367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0007fffffffff; valaddr_reg:x3; val_offset:199101*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199101*0 + 3*319*FLEN/8, x4, x1, x2)

inst_66368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f000ffffffffff; valaddr_reg:x3; val_offset:199104*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199104*0 + 3*320*FLEN/8, x4, x1, x2)

inst_66369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f001ffffffffff; valaddr_reg:x3; val_offset:199107*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199107*0 + 3*321*FLEN/8, x4, x1, x2)

inst_66370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f003ffffffffff; valaddr_reg:x3; val_offset:199110*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199110*0 + 3*322*FLEN/8, x4, x1, x2)

inst_66371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f007ffffffffff; valaddr_reg:x3; val_offset:199113*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199113*0 + 3*323*FLEN/8, x4, x1, x2)

inst_66372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f00fffffffffff; valaddr_reg:x3; val_offset:199116*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199116*0 + 3*324*FLEN/8, x4, x1, x2)

inst_66373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f01fffffffffff; valaddr_reg:x3; val_offset:199119*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199119*0 + 3*325*FLEN/8, x4, x1, x2)

inst_66374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f03fffffffffff; valaddr_reg:x3; val_offset:199122*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199122*0 + 3*326*FLEN/8, x4, x1, x2)

inst_66375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f07fffffffffff; valaddr_reg:x3; val_offset:199125*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199125*0 + 3*327*FLEN/8, x4, x1, x2)

inst_66376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f0ffffffffffff; valaddr_reg:x3; val_offset:199128*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199128*0 + 3*328*FLEN/8, x4, x1, x2)

inst_66377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f1ffffffffffff; valaddr_reg:x3; val_offset:199131*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199131*0 + 3*329*FLEN/8, x4, x1, x2)

inst_66378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f3ffffffffffff; valaddr_reg:x3; val_offset:199134*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199134*0 + 3*330*FLEN/8, x4, x1, x2)

inst_66379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f7ffffffffffff; valaddr_reg:x3; val_offset:199137*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199137*0 + 3*331*FLEN/8, x4, x1, x2)

inst_66380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83f8000000000000; valaddr_reg:x3; val_offset:199140*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199140*0 + 3*332*FLEN/8, x4, x1, x2)

inst_66381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fc000000000000; valaddr_reg:x3; val_offset:199143*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199143*0 + 3*333*FLEN/8, x4, x1, x2)

inst_66382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fe000000000000; valaddr_reg:x3; val_offset:199146*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199146*0 + 3*334*FLEN/8, x4, x1, x2)

inst_66383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ff000000000000; valaddr_reg:x3; val_offset:199149*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199149*0 + 3*335*FLEN/8, x4, x1, x2)

inst_66384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ff800000000000; valaddr_reg:x3; val_offset:199152*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199152*0 + 3*336*FLEN/8, x4, x1, x2)

inst_66385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffc00000000000; valaddr_reg:x3; val_offset:199155*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199155*0 + 3*337*FLEN/8, x4, x1, x2)

inst_66386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffe00000000000; valaddr_reg:x3; val_offset:199158*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199158*0 + 3*338*FLEN/8, x4, x1, x2)

inst_66387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fff00000000000; valaddr_reg:x3; val_offset:199161*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199161*0 + 3*339*FLEN/8, x4, x1, x2)

inst_66388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fff80000000000; valaddr_reg:x3; val_offset:199164*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199164*0 + 3*340*FLEN/8, x4, x1, x2)

inst_66389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffc0000000000; valaddr_reg:x3; val_offset:199167*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199167*0 + 3*341*FLEN/8, x4, x1, x2)

inst_66390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffe0000000000; valaddr_reg:x3; val_offset:199170*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199170*0 + 3*342*FLEN/8, x4, x1, x2)

inst_66391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffff0000000000; valaddr_reg:x3; val_offset:199173*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199173*0 + 3*343*FLEN/8, x4, x1, x2)

inst_66392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffff8000000000; valaddr_reg:x3; val_offset:199176*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199176*0 + 3*344*FLEN/8, x4, x1, x2)

inst_66393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffc000000000; valaddr_reg:x3; val_offset:199179*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199179*0 + 3*345*FLEN/8, x4, x1, x2)

inst_66394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffe000000000; valaddr_reg:x3; val_offset:199182*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199182*0 + 3*346*FLEN/8, x4, x1, x2)

inst_66395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffff000000000; valaddr_reg:x3; val_offset:199185*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199185*0 + 3*347*FLEN/8, x4, x1, x2)

inst_66396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffff800000000; valaddr_reg:x3; val_offset:199188*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199188*0 + 3*348*FLEN/8, x4, x1, x2)

inst_66397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffc00000000; valaddr_reg:x3; val_offset:199191*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199191*0 + 3*349*FLEN/8, x4, x1, x2)

inst_66398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffe00000000; valaddr_reg:x3; val_offset:199194*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199194*0 + 3*350*FLEN/8, x4, x1, x2)

inst_66399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffff00000000; valaddr_reg:x3; val_offset:199197*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199197*0 + 3*351*FLEN/8, x4, x1, x2)

inst_66400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffff80000000; valaddr_reg:x3; val_offset:199200*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199200*0 + 3*352*FLEN/8, x4, x1, x2)

inst_66401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffc0000000; valaddr_reg:x3; val_offset:199203*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199203*0 + 3*353*FLEN/8, x4, x1, x2)

inst_66402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffe0000000; valaddr_reg:x3; val_offset:199206*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199206*0 + 3*354*FLEN/8, x4, x1, x2)

inst_66403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffff0000000; valaddr_reg:x3; val_offset:199209*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199209*0 + 3*355*FLEN/8, x4, x1, x2)

inst_66404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffff8000000; valaddr_reg:x3; val_offset:199212*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199212*0 + 3*356*FLEN/8, x4, x1, x2)

inst_66405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffc000000; valaddr_reg:x3; val_offset:199215*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199215*0 + 3*357*FLEN/8, x4, x1, x2)

inst_66406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffe000000; valaddr_reg:x3; val_offset:199218*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199218*0 + 3*358*FLEN/8, x4, x1, x2)

inst_66407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffff000000; valaddr_reg:x3; val_offset:199221*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199221*0 + 3*359*FLEN/8, x4, x1, x2)

inst_66408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffff800000; valaddr_reg:x3; val_offset:199224*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199224*0 + 3*360*FLEN/8, x4, x1, x2)

inst_66409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffffc00000; valaddr_reg:x3; val_offset:199227*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199227*0 + 3*361*FLEN/8, x4, x1, x2)

inst_66410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffffe00000; valaddr_reg:x3; val_offset:199230*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199230*0 + 3*362*FLEN/8, x4, x1, x2)

inst_66411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffff00000; valaddr_reg:x3; val_offset:199233*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199233*0 + 3*363*FLEN/8, x4, x1, x2)

inst_66412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffff80000; valaddr_reg:x3; val_offset:199236*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199236*0 + 3*364*FLEN/8, x4, x1, x2)

inst_66413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffffc0000; valaddr_reg:x3; val_offset:199239*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199239*0 + 3*365*FLEN/8, x4, x1, x2)

inst_66414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffffe0000; valaddr_reg:x3; val_offset:199242*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199242*0 + 3*366*FLEN/8, x4, x1, x2)

inst_66415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffffff0000; valaddr_reg:x3; val_offset:199245*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199245*0 + 3*367*FLEN/8, x4, x1, x2)

inst_66416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffffff8000; valaddr_reg:x3; val_offset:199248*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199248*0 + 3*368*FLEN/8, x4, x1, x2)

inst_66417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffffffc000; valaddr_reg:x3; val_offset:199251*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199251*0 + 3*369*FLEN/8, x4, x1, x2)

inst_66418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffffffe000; valaddr_reg:x3; val_offset:199254*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199254*0 + 3*370*FLEN/8, x4, x1, x2)

inst_66419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffffff000; valaddr_reg:x3; val_offset:199257*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199257*0 + 3*371*FLEN/8, x4, x1, x2)

inst_66420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffffff800; valaddr_reg:x3; val_offset:199260*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199260*0 + 3*372*FLEN/8, x4, x1, x2)

inst_66421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffffffc00; valaddr_reg:x3; val_offset:199263*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199263*0 + 3*373*FLEN/8, x4, x1, x2)

inst_66422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffffffe00; valaddr_reg:x3; val_offset:199266*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199266*0 + 3*374*FLEN/8, x4, x1, x2)

inst_66423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffffffff00; valaddr_reg:x3; val_offset:199269*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199269*0 + 3*375*FLEN/8, x4, x1, x2)

inst_66424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffffffff80; valaddr_reg:x3; val_offset:199272*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199272*0 + 3*376*FLEN/8, x4, x1, x2)

inst_66425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffffffffc0; valaddr_reg:x3; val_offset:199275*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199275*0 + 3*377*FLEN/8, x4, x1, x2)

inst_66426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffffffffe0; valaddr_reg:x3; val_offset:199278*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199278*0 + 3*378*FLEN/8, x4, x1, x2)

inst_66427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffffffff0; valaddr_reg:x3; val_offset:199281*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199281*0 + 3*379*FLEN/8, x4, x1, x2)

inst_66428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffffffff8; valaddr_reg:x3; val_offset:199284*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199284*0 + 3*380*FLEN/8, x4, x1, x2)

inst_66429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffffffffc; valaddr_reg:x3; val_offset:199287*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199287*0 + 3*381*FLEN/8, x4, x1, x2)

inst_66430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83fffffffffffffe; valaddr_reg:x3; val_offset:199290*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199290*0 + 3*382*FLEN/8, x4, x1, x2)

inst_66431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x523b45920f068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa523b45920f068; op2val:0x8000;
op3val:0x83ffffffffffffff; valaddr_reg:x3; val_offset:199293*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199293*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_66432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:199296*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199296*0 + 3*384*FLEN/8, x4, x1, x2)

inst_66433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:199299*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199299*0 + 3*385*FLEN/8, x4, x1, x2)

inst_66434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:199302*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199302*0 + 3*386*FLEN/8, x4, x1, x2)

inst_66435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:199305*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199305*0 + 3*387*FLEN/8, x4, x1, x2)

inst_66436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:199308*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199308*0 + 3*388*FLEN/8, x4, x1, x2)

inst_66437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:199311*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199311*0 + 3*389*FLEN/8, x4, x1, x2)

inst_66438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:199314*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199314*0 + 3*390*FLEN/8, x4, x1, x2)

inst_66439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:199317*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199317*0 + 3*391*FLEN/8, x4, x1, x2)

inst_66440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:199320*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199320*0 + 3*392*FLEN/8, x4, x1, x2)

inst_66441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:199323*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199323*0 + 3*393*FLEN/8, x4, x1, x2)

inst_66442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:199326*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199326*0 + 3*394*FLEN/8, x4, x1, x2)

inst_66443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:199329*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199329*0 + 3*395*FLEN/8, x4, x1, x2)

inst_66444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:199332*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199332*0 + 3*396*FLEN/8, x4, x1, x2)

inst_66445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:199335*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199335*0 + 3*397*FLEN/8, x4, x1, x2)

inst_66446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:199338*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199338*0 + 3*398*FLEN/8, x4, x1, x2)

inst_66447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:199341*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199341*0 + 3*399*FLEN/8, x4, x1, x2)

inst_66448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:199344*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199344*0 + 3*400*FLEN/8, x4, x1, x2)

inst_66449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:199347*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199347*0 + 3*401*FLEN/8, x4, x1, x2)

inst_66450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:199350*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199350*0 + 3*402*FLEN/8, x4, x1, x2)

inst_66451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:199353*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199353*0 + 3*403*FLEN/8, x4, x1, x2)

inst_66452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:199356*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199356*0 + 3*404*FLEN/8, x4, x1, x2)

inst_66453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:199359*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199359*0 + 3*405*FLEN/8, x4, x1, x2)

inst_66454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000000000000; valaddr_reg:x3; val_offset:199362*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199362*0 + 3*406*FLEN/8, x4, x1, x2)

inst_66455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000000000001; valaddr_reg:x3; val_offset:199365*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199365*0 + 3*407*FLEN/8, x4, x1, x2)

inst_66456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000000000003; valaddr_reg:x3; val_offset:199368*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199368*0 + 3*408*FLEN/8, x4, x1, x2)

inst_66457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000000000007; valaddr_reg:x3; val_offset:199371*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199371*0 + 3*409*FLEN/8, x4, x1, x2)

inst_66458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000000000000f; valaddr_reg:x3; val_offset:199374*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199374*0 + 3*410*FLEN/8, x4, x1, x2)

inst_66459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000000000001f; valaddr_reg:x3; val_offset:199377*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199377*0 + 3*411*FLEN/8, x4, x1, x2)

inst_66460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000000000003f; valaddr_reg:x3; val_offset:199380*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199380*0 + 3*412*FLEN/8, x4, x1, x2)

inst_66461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000000000007f; valaddr_reg:x3; val_offset:199383*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199383*0 + 3*413*FLEN/8, x4, x1, x2)

inst_66462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00000000000ff; valaddr_reg:x3; val_offset:199386*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199386*0 + 3*414*FLEN/8, x4, x1, x2)

inst_66463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00000000001ff; valaddr_reg:x3; val_offset:199389*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199389*0 + 3*415*FLEN/8, x4, x1, x2)

inst_66464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00000000003ff; valaddr_reg:x3; val_offset:199392*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199392*0 + 3*416*FLEN/8, x4, x1, x2)

inst_66465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00000000007ff; valaddr_reg:x3; val_offset:199395*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199395*0 + 3*417*FLEN/8, x4, x1, x2)

inst_66466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000000000fff; valaddr_reg:x3; val_offset:199398*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199398*0 + 3*418*FLEN/8, x4, x1, x2)

inst_66467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000000001fff; valaddr_reg:x3; val_offset:199401*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199401*0 + 3*419*FLEN/8, x4, x1, x2)

inst_66468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000000003fff; valaddr_reg:x3; val_offset:199404*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199404*0 + 3*420*FLEN/8, x4, x1, x2)

inst_66469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000000007fff; valaddr_reg:x3; val_offset:199407*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199407*0 + 3*421*FLEN/8, x4, x1, x2)

inst_66470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000000000ffff; valaddr_reg:x3; val_offset:199410*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199410*0 + 3*422*FLEN/8, x4, x1, x2)

inst_66471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000000001ffff; valaddr_reg:x3; val_offset:199413*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199413*0 + 3*423*FLEN/8, x4, x1, x2)

inst_66472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000000003ffff; valaddr_reg:x3; val_offset:199416*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199416*0 + 3*424*FLEN/8, x4, x1, x2)

inst_66473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000000007ffff; valaddr_reg:x3; val_offset:199419*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199419*0 + 3*425*FLEN/8, x4, x1, x2)

inst_66474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00000000fffff; valaddr_reg:x3; val_offset:199422*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199422*0 + 3*426*FLEN/8, x4, x1, x2)

inst_66475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00000001fffff; valaddr_reg:x3; val_offset:199425*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199425*0 + 3*427*FLEN/8, x4, x1, x2)

inst_66476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00000003fffff; valaddr_reg:x3; val_offset:199428*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199428*0 + 3*428*FLEN/8, x4, x1, x2)

inst_66477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00000007fffff; valaddr_reg:x3; val_offset:199431*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199431*0 + 3*429*FLEN/8, x4, x1, x2)

inst_66478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000000ffffff; valaddr_reg:x3; val_offset:199434*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199434*0 + 3*430*FLEN/8, x4, x1, x2)

inst_66479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000001ffffff; valaddr_reg:x3; val_offset:199437*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199437*0 + 3*431*FLEN/8, x4, x1, x2)

inst_66480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000003ffffff; valaddr_reg:x3; val_offset:199440*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199440*0 + 3*432*FLEN/8, x4, x1, x2)

inst_66481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000007ffffff; valaddr_reg:x3; val_offset:199443*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199443*0 + 3*433*FLEN/8, x4, x1, x2)

inst_66482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000000fffffff; valaddr_reg:x3; val_offset:199446*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199446*0 + 3*434*FLEN/8, x4, x1, x2)

inst_66483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000001fffffff; valaddr_reg:x3; val_offset:199449*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199449*0 + 3*435*FLEN/8, x4, x1, x2)

inst_66484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000003fffffff; valaddr_reg:x3; val_offset:199452*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199452*0 + 3*436*FLEN/8, x4, x1, x2)

inst_66485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000007fffffff; valaddr_reg:x3; val_offset:199455*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199455*0 + 3*437*FLEN/8, x4, x1, x2)

inst_66486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00000ffffffff; valaddr_reg:x3; val_offset:199458*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199458*0 + 3*438*FLEN/8, x4, x1, x2)

inst_66487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00001ffffffff; valaddr_reg:x3; val_offset:199461*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199461*0 + 3*439*FLEN/8, x4, x1, x2)

inst_66488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00003ffffffff; valaddr_reg:x3; val_offset:199464*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199464*0 + 3*440*FLEN/8, x4, x1, x2)

inst_66489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00007ffffffff; valaddr_reg:x3; val_offset:199467*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199467*0 + 3*441*FLEN/8, x4, x1, x2)

inst_66490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0000fffffffff; valaddr_reg:x3; val_offset:199470*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199470*0 + 3*442*FLEN/8, x4, x1, x2)

inst_66491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0001fffffffff; valaddr_reg:x3; val_offset:199473*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199473*0 + 3*443*FLEN/8, x4, x1, x2)

inst_66492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0003fffffffff; valaddr_reg:x3; val_offset:199476*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199476*0 + 3*444*FLEN/8, x4, x1, x2)

inst_66493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0007fffffffff; valaddr_reg:x3; val_offset:199479*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199479*0 + 3*445*FLEN/8, x4, x1, x2)

inst_66494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee000ffffffffff; valaddr_reg:x3; val_offset:199482*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199482*0 + 3*446*FLEN/8, x4, x1, x2)

inst_66495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee001ffffffffff; valaddr_reg:x3; val_offset:199485*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199485*0 + 3*447*FLEN/8, x4, x1, x2)

inst_66496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee003ffffffffff; valaddr_reg:x3; val_offset:199488*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199488*0 + 3*448*FLEN/8, x4, x1, x2)

inst_66497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee007ffffffffff; valaddr_reg:x3; val_offset:199491*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199491*0 + 3*449*FLEN/8, x4, x1, x2)

inst_66498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee00fffffffffff; valaddr_reg:x3; val_offset:199494*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199494*0 + 3*450*FLEN/8, x4, x1, x2)

inst_66499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee01fffffffffff; valaddr_reg:x3; val_offset:199497*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199497*0 + 3*451*FLEN/8, x4, x1, x2)

inst_66500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee03fffffffffff; valaddr_reg:x3; val_offset:199500*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199500*0 + 3*452*FLEN/8, x4, x1, x2)

inst_66501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee07fffffffffff; valaddr_reg:x3; val_offset:199503*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199503*0 + 3*453*FLEN/8, x4, x1, x2)

inst_66502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee0ffffffffffff; valaddr_reg:x3; val_offset:199506*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199506*0 + 3*454*FLEN/8, x4, x1, x2)

inst_66503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee1ffffffffffff; valaddr_reg:x3; val_offset:199509*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199509*0 + 3*455*FLEN/8, x4, x1, x2)

inst_66504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee3ffffffffffff; valaddr_reg:x3; val_offset:199512*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199512*0 + 3*456*FLEN/8, x4, x1, x2)

inst_66505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee7ffffffffffff; valaddr_reg:x3; val_offset:199515*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199515*0 + 3*457*FLEN/8, x4, x1, x2)

inst_66506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1ee8000000000000; valaddr_reg:x3; val_offset:199518*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199518*0 + 3*458*FLEN/8, x4, x1, x2)

inst_66507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eec000000000000; valaddr_reg:x3; val_offset:199521*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199521*0 + 3*459*FLEN/8, x4, x1, x2)

inst_66508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eee000000000000; valaddr_reg:x3; val_offset:199524*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199524*0 + 3*460*FLEN/8, x4, x1, x2)

inst_66509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eef000000000000; valaddr_reg:x3; val_offset:199527*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199527*0 + 3*461*FLEN/8, x4, x1, x2)

inst_66510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eef800000000000; valaddr_reg:x3; val_offset:199530*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199530*0 + 3*462*FLEN/8, x4, x1, x2)

inst_66511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefc00000000000; valaddr_reg:x3; val_offset:199533*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199533*0 + 3*463*FLEN/8, x4, x1, x2)

inst_66512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefe00000000000; valaddr_reg:x3; val_offset:199536*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199536*0 + 3*464*FLEN/8, x4, x1, x2)

inst_66513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeff00000000000; valaddr_reg:x3; val_offset:199539*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199539*0 + 3*465*FLEN/8, x4, x1, x2)

inst_66514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeff80000000000; valaddr_reg:x3; val_offset:199542*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199542*0 + 3*466*FLEN/8, x4, x1, x2)

inst_66515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffc0000000000; valaddr_reg:x3; val_offset:199545*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199545*0 + 3*467*FLEN/8, x4, x1, x2)

inst_66516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffe0000000000; valaddr_reg:x3; val_offset:199548*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199548*0 + 3*468*FLEN/8, x4, x1, x2)

inst_66517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefff0000000000; valaddr_reg:x3; val_offset:199551*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199551*0 + 3*469*FLEN/8, x4, x1, x2)

inst_66518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefff8000000000; valaddr_reg:x3; val_offset:199554*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199554*0 + 3*470*FLEN/8, x4, x1, x2)

inst_66519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffc000000000; valaddr_reg:x3; val_offset:199557*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199557*0 + 3*471*FLEN/8, x4, x1, x2)

inst_66520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffe000000000; valaddr_reg:x3; val_offset:199560*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199560*0 + 3*472*FLEN/8, x4, x1, x2)

inst_66521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffff000000000; valaddr_reg:x3; val_offset:199563*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199563*0 + 3*473*FLEN/8, x4, x1, x2)

inst_66522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffff800000000; valaddr_reg:x3; val_offset:199566*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199566*0 + 3*474*FLEN/8, x4, x1, x2)

inst_66523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffc00000000; valaddr_reg:x3; val_offset:199569*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199569*0 + 3*475*FLEN/8, x4, x1, x2)

inst_66524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffe00000000; valaddr_reg:x3; val_offset:199572*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199572*0 + 3*476*FLEN/8, x4, x1, x2)

inst_66525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffff00000000; valaddr_reg:x3; val_offset:199575*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199575*0 + 3*477*FLEN/8, x4, x1, x2)

inst_66526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffff80000000; valaddr_reg:x3; val_offset:199578*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199578*0 + 3*478*FLEN/8, x4, x1, x2)

inst_66527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffc0000000; valaddr_reg:x3; val_offset:199581*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199581*0 + 3*479*FLEN/8, x4, x1, x2)

inst_66528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffe0000000; valaddr_reg:x3; val_offset:199584*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199584*0 + 3*480*FLEN/8, x4, x1, x2)

inst_66529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffff0000000; valaddr_reg:x3; val_offset:199587*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199587*0 + 3*481*FLEN/8, x4, x1, x2)

inst_66530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffff8000000; valaddr_reg:x3; val_offset:199590*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199590*0 + 3*482*FLEN/8, x4, x1, x2)

inst_66531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffc000000; valaddr_reg:x3; val_offset:199593*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199593*0 + 3*483*FLEN/8, x4, x1, x2)

inst_66532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffe000000; valaddr_reg:x3; val_offset:199596*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199596*0 + 3*484*FLEN/8, x4, x1, x2)

inst_66533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffff000000; valaddr_reg:x3; val_offset:199599*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199599*0 + 3*485*FLEN/8, x4, x1, x2)

inst_66534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffff800000; valaddr_reg:x3; val_offset:199602*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199602*0 + 3*486*FLEN/8, x4, x1, x2)

inst_66535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffffc00000; valaddr_reg:x3; val_offset:199605*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199605*0 + 3*487*FLEN/8, x4, x1, x2)

inst_66536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffffe00000; valaddr_reg:x3; val_offset:199608*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199608*0 + 3*488*FLEN/8, x4, x1, x2)

inst_66537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffff00000; valaddr_reg:x3; val_offset:199611*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199611*0 + 3*489*FLEN/8, x4, x1, x2)

inst_66538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffff80000; valaddr_reg:x3; val_offset:199614*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199614*0 + 3*490*FLEN/8, x4, x1, x2)

inst_66539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffffc0000; valaddr_reg:x3; val_offset:199617*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199617*0 + 3*491*FLEN/8, x4, x1, x2)

inst_66540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffffe0000; valaddr_reg:x3; val_offset:199620*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199620*0 + 3*492*FLEN/8, x4, x1, x2)

inst_66541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffffff0000; valaddr_reg:x3; val_offset:199623*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199623*0 + 3*493*FLEN/8, x4, x1, x2)

inst_66542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffffff8000; valaddr_reg:x3; val_offset:199626*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199626*0 + 3*494*FLEN/8, x4, x1, x2)

inst_66543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffffffc000; valaddr_reg:x3; val_offset:199629*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199629*0 + 3*495*FLEN/8, x4, x1, x2)

inst_66544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffffffe000; valaddr_reg:x3; val_offset:199632*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199632*0 + 3*496*FLEN/8, x4, x1, x2)

inst_66545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffffff000; valaddr_reg:x3; val_offset:199635*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199635*0 + 3*497*FLEN/8, x4, x1, x2)

inst_66546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffffff800; valaddr_reg:x3; val_offset:199638*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199638*0 + 3*498*FLEN/8, x4, x1, x2)

inst_66547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffffffc00; valaddr_reg:x3; val_offset:199641*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199641*0 + 3*499*FLEN/8, x4, x1, x2)

inst_66548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffffffe00; valaddr_reg:x3; val_offset:199644*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199644*0 + 3*500*FLEN/8, x4, x1, x2)

inst_66549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffffffff00; valaddr_reg:x3; val_offset:199647*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199647*0 + 3*501*FLEN/8, x4, x1, x2)

inst_66550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffffffff80; valaddr_reg:x3; val_offset:199650*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199650*0 + 3*502*FLEN/8, x4, x1, x2)

inst_66551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffffffffc0; valaddr_reg:x3; val_offset:199653*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199653*0 + 3*503*FLEN/8, x4, x1, x2)

inst_66552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffffffffe0; valaddr_reg:x3; val_offset:199656*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199656*0 + 3*504*FLEN/8, x4, x1, x2)

inst_66553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffffffff0; valaddr_reg:x3; val_offset:199659*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199659*0 + 3*505*FLEN/8, x4, x1, x2)

inst_66554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffffffff8; valaddr_reg:x3; val_offset:199662*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199662*0 + 3*506*FLEN/8, x4, x1, x2)

inst_66555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffffffffc; valaddr_reg:x3; val_offset:199665*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199665*0 + 3*507*FLEN/8, x4, x1, x2)

inst_66556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eeffffffffffffe; valaddr_reg:x3; val_offset:199668*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199668*0 + 3*508*FLEN/8, x4, x1, x2)

inst_66557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x538e5cc2f5da4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x1ee and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa538e5cc2f5da4; op2val:0x0;
op3val:0x1eefffffffffffff; valaddr_reg:x3; val_offset:199671*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199671*0 + 3*509*FLEN/8, x4, x1, x2)

inst_66558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000000000000; valaddr_reg:x3; val_offset:199674*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199674*0 + 3*510*FLEN/8, x4, x1, x2)

inst_66559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000000000001; valaddr_reg:x3; val_offset:199677*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199677*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_66560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000000000003; valaddr_reg:x3; val_offset:199680*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199680*0 + 3*512*FLEN/8, x4, x1, x2)

inst_66561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000000000007; valaddr_reg:x3; val_offset:199683*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199683*0 + 3*513*FLEN/8, x4, x1, x2)

inst_66562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000000000000f; valaddr_reg:x3; val_offset:199686*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199686*0 + 3*514*FLEN/8, x4, x1, x2)

inst_66563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000000000001f; valaddr_reg:x3; val_offset:199689*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199689*0 + 3*515*FLEN/8, x4, x1, x2)

inst_66564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000000000003f; valaddr_reg:x3; val_offset:199692*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199692*0 + 3*516*FLEN/8, x4, x1, x2)

inst_66565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000000000007f; valaddr_reg:x3; val_offset:199695*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199695*0 + 3*517*FLEN/8, x4, x1, x2)

inst_66566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300000000000ff; valaddr_reg:x3; val_offset:199698*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199698*0 + 3*518*FLEN/8, x4, x1, x2)

inst_66567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300000000001ff; valaddr_reg:x3; val_offset:199701*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199701*0 + 3*519*FLEN/8, x4, x1, x2)

inst_66568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300000000003ff; valaddr_reg:x3; val_offset:199704*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199704*0 + 3*520*FLEN/8, x4, x1, x2)

inst_66569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300000000007ff; valaddr_reg:x3; val_offset:199707*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199707*0 + 3*521*FLEN/8, x4, x1, x2)

inst_66570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000000000fff; valaddr_reg:x3; val_offset:199710*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199710*0 + 3*522*FLEN/8, x4, x1, x2)

inst_66571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000000001fff; valaddr_reg:x3; val_offset:199713*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199713*0 + 3*523*FLEN/8, x4, x1, x2)

inst_66572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000000003fff; valaddr_reg:x3; val_offset:199716*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199716*0 + 3*524*FLEN/8, x4, x1, x2)

inst_66573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000000007fff; valaddr_reg:x3; val_offset:199719*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199719*0 + 3*525*FLEN/8, x4, x1, x2)

inst_66574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000000000ffff; valaddr_reg:x3; val_offset:199722*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199722*0 + 3*526*FLEN/8, x4, x1, x2)

inst_66575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000000001ffff; valaddr_reg:x3; val_offset:199725*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199725*0 + 3*527*FLEN/8, x4, x1, x2)

inst_66576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000000003ffff; valaddr_reg:x3; val_offset:199728*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199728*0 + 3*528*FLEN/8, x4, x1, x2)

inst_66577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000000007ffff; valaddr_reg:x3; val_offset:199731*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199731*0 + 3*529*FLEN/8, x4, x1, x2)

inst_66578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300000000fffff; valaddr_reg:x3; val_offset:199734*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199734*0 + 3*530*FLEN/8, x4, x1, x2)

inst_66579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300000001fffff; valaddr_reg:x3; val_offset:199737*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199737*0 + 3*531*FLEN/8, x4, x1, x2)

inst_66580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300000003fffff; valaddr_reg:x3; val_offset:199740*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199740*0 + 3*532*FLEN/8, x4, x1, x2)

inst_66581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300000007fffff; valaddr_reg:x3; val_offset:199743*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199743*0 + 3*533*FLEN/8, x4, x1, x2)

inst_66582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000000ffffff; valaddr_reg:x3; val_offset:199746*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199746*0 + 3*534*FLEN/8, x4, x1, x2)

inst_66583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000001ffffff; valaddr_reg:x3; val_offset:199749*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199749*0 + 3*535*FLEN/8, x4, x1, x2)

inst_66584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000003ffffff; valaddr_reg:x3; val_offset:199752*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199752*0 + 3*536*FLEN/8, x4, x1, x2)

inst_66585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000007ffffff; valaddr_reg:x3; val_offset:199755*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199755*0 + 3*537*FLEN/8, x4, x1, x2)

inst_66586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000000fffffff; valaddr_reg:x3; val_offset:199758*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199758*0 + 3*538*FLEN/8, x4, x1, x2)

inst_66587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000001fffffff; valaddr_reg:x3; val_offset:199761*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199761*0 + 3*539*FLEN/8, x4, x1, x2)

inst_66588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000003fffffff; valaddr_reg:x3; val_offset:199764*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199764*0 + 3*540*FLEN/8, x4, x1, x2)

inst_66589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000007fffffff; valaddr_reg:x3; val_offset:199767*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199767*0 + 3*541*FLEN/8, x4, x1, x2)

inst_66590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300000ffffffff; valaddr_reg:x3; val_offset:199770*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199770*0 + 3*542*FLEN/8, x4, x1, x2)

inst_66591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300001ffffffff; valaddr_reg:x3; val_offset:199773*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199773*0 + 3*543*FLEN/8, x4, x1, x2)

inst_66592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300003ffffffff; valaddr_reg:x3; val_offset:199776*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199776*0 + 3*544*FLEN/8, x4, x1, x2)

inst_66593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300007ffffffff; valaddr_reg:x3; val_offset:199779*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199779*0 + 3*545*FLEN/8, x4, x1, x2)

inst_66594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930000fffffffff; valaddr_reg:x3; val_offset:199782*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199782*0 + 3*546*FLEN/8, x4, x1, x2)

inst_66595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930001fffffffff; valaddr_reg:x3; val_offset:199785*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199785*0 + 3*547*FLEN/8, x4, x1, x2)

inst_66596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930003fffffffff; valaddr_reg:x3; val_offset:199788*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199788*0 + 3*548*FLEN/8, x4, x1, x2)

inst_66597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930007fffffffff; valaddr_reg:x3; val_offset:199791*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199791*0 + 3*549*FLEN/8, x4, x1, x2)

inst_66598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393000ffffffffff; valaddr_reg:x3; val_offset:199794*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199794*0 + 3*550*FLEN/8, x4, x1, x2)

inst_66599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393001ffffffffff; valaddr_reg:x3; val_offset:199797*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199797*0 + 3*551*FLEN/8, x4, x1, x2)

inst_66600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393003ffffffffff; valaddr_reg:x3; val_offset:199800*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199800*0 + 3*552*FLEN/8, x4, x1, x2)

inst_66601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393007ffffffffff; valaddr_reg:x3; val_offset:199803*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199803*0 + 3*553*FLEN/8, x4, x1, x2)

inst_66602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39300fffffffffff; valaddr_reg:x3; val_offset:199806*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199806*0 + 3*554*FLEN/8, x4, x1, x2)

inst_66603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39301fffffffffff; valaddr_reg:x3; val_offset:199809*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199809*0 + 3*555*FLEN/8, x4, x1, x2)

inst_66604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39303fffffffffff; valaddr_reg:x3; val_offset:199812*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199812*0 + 3*556*FLEN/8, x4, x1, x2)

inst_66605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x39307fffffffffff; valaddr_reg:x3; val_offset:199815*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199815*0 + 3*557*FLEN/8, x4, x1, x2)

inst_66606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3930ffffffffffff; valaddr_reg:x3; val_offset:199818*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199818*0 + 3*558*FLEN/8, x4, x1, x2)

inst_66607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3931ffffffffffff; valaddr_reg:x3; val_offset:199821*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199821*0 + 3*559*FLEN/8, x4, x1, x2)

inst_66608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3933ffffffffffff; valaddr_reg:x3; val_offset:199824*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199824*0 + 3*560*FLEN/8, x4, x1, x2)

inst_66609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3937ffffffffffff; valaddr_reg:x3; val_offset:199827*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199827*0 + 3*561*FLEN/8, x4, x1, x2)

inst_66610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3938000000000000; valaddr_reg:x3; val_offset:199830*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199830*0 + 3*562*FLEN/8, x4, x1, x2)

inst_66611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393c000000000000; valaddr_reg:x3; val_offset:199833*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199833*0 + 3*563*FLEN/8, x4, x1, x2)

inst_66612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393e000000000000; valaddr_reg:x3; val_offset:199836*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199836*0 + 3*564*FLEN/8, x4, x1, x2)

inst_66613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393f000000000000; valaddr_reg:x3; val_offset:199839*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199839*0 + 3*565*FLEN/8, x4, x1, x2)

inst_66614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393f800000000000; valaddr_reg:x3; val_offset:199842*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199842*0 + 3*566*FLEN/8, x4, x1, x2)

inst_66615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fc00000000000; valaddr_reg:x3; val_offset:199845*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199845*0 + 3*567*FLEN/8, x4, x1, x2)

inst_66616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fe00000000000; valaddr_reg:x3; val_offset:199848*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199848*0 + 3*568*FLEN/8, x4, x1, x2)

inst_66617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ff00000000000; valaddr_reg:x3; val_offset:199851*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199851*0 + 3*569*FLEN/8, x4, x1, x2)

inst_66618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ff80000000000; valaddr_reg:x3; val_offset:199854*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199854*0 + 3*570*FLEN/8, x4, x1, x2)

inst_66619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffc0000000000; valaddr_reg:x3; val_offset:199857*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199857*0 + 3*571*FLEN/8, x4, x1, x2)

inst_66620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffe0000000000; valaddr_reg:x3; val_offset:199860*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199860*0 + 3*572*FLEN/8, x4, x1, x2)

inst_66621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fff0000000000; valaddr_reg:x3; val_offset:199863*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199863*0 + 3*573*FLEN/8, x4, x1, x2)

inst_66622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fff8000000000; valaddr_reg:x3; val_offset:199866*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199866*0 + 3*574*FLEN/8, x4, x1, x2)

inst_66623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffc000000000; valaddr_reg:x3; val_offset:199869*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199869*0 + 3*575*FLEN/8, x4, x1, x2)

inst_66624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffe000000000; valaddr_reg:x3; val_offset:199872*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199872*0 + 3*576*FLEN/8, x4, x1, x2)

inst_66625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffff000000000; valaddr_reg:x3; val_offset:199875*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199875*0 + 3*577*FLEN/8, x4, x1, x2)

inst_66626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffff800000000; valaddr_reg:x3; val_offset:199878*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199878*0 + 3*578*FLEN/8, x4, x1, x2)

inst_66627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffc00000000; valaddr_reg:x3; val_offset:199881*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199881*0 + 3*579*FLEN/8, x4, x1, x2)

inst_66628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffe00000000; valaddr_reg:x3; val_offset:199884*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199884*0 + 3*580*FLEN/8, x4, x1, x2)

inst_66629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffff00000000; valaddr_reg:x3; val_offset:199887*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199887*0 + 3*581*FLEN/8, x4, x1, x2)

inst_66630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffff80000000; valaddr_reg:x3; val_offset:199890*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199890*0 + 3*582*FLEN/8, x4, x1, x2)

inst_66631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffc0000000; valaddr_reg:x3; val_offset:199893*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199893*0 + 3*583*FLEN/8, x4, x1, x2)

inst_66632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffe0000000; valaddr_reg:x3; val_offset:199896*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199896*0 + 3*584*FLEN/8, x4, x1, x2)

inst_66633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffff0000000; valaddr_reg:x3; val_offset:199899*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199899*0 + 3*585*FLEN/8, x4, x1, x2)

inst_66634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffff8000000; valaddr_reg:x3; val_offset:199902*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199902*0 + 3*586*FLEN/8, x4, x1, x2)

inst_66635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffc000000; valaddr_reg:x3; val_offset:199905*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199905*0 + 3*587*FLEN/8, x4, x1, x2)

inst_66636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffe000000; valaddr_reg:x3; val_offset:199908*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199908*0 + 3*588*FLEN/8, x4, x1, x2)

inst_66637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffff000000; valaddr_reg:x3; val_offset:199911*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199911*0 + 3*589*FLEN/8, x4, x1, x2)

inst_66638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffff800000; valaddr_reg:x3; val_offset:199914*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199914*0 + 3*590*FLEN/8, x4, x1, x2)

inst_66639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffffc00000; valaddr_reg:x3; val_offset:199917*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199917*0 + 3*591*FLEN/8, x4, x1, x2)

inst_66640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffffe00000; valaddr_reg:x3; val_offset:199920*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199920*0 + 3*592*FLEN/8, x4, x1, x2)

inst_66641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffff00000; valaddr_reg:x3; val_offset:199923*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199923*0 + 3*593*FLEN/8, x4, x1, x2)

inst_66642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffff80000; valaddr_reg:x3; val_offset:199926*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199926*0 + 3*594*FLEN/8, x4, x1, x2)

inst_66643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffffc0000; valaddr_reg:x3; val_offset:199929*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199929*0 + 3*595*FLEN/8, x4, x1, x2)

inst_66644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffffe0000; valaddr_reg:x3; val_offset:199932*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199932*0 + 3*596*FLEN/8, x4, x1, x2)

inst_66645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffffff0000; valaddr_reg:x3; val_offset:199935*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199935*0 + 3*597*FLEN/8, x4, x1, x2)

inst_66646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffffff8000; valaddr_reg:x3; val_offset:199938*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199938*0 + 3*598*FLEN/8, x4, x1, x2)

inst_66647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffffffc000; valaddr_reg:x3; val_offset:199941*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199941*0 + 3*599*FLEN/8, x4, x1, x2)

inst_66648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffffffe000; valaddr_reg:x3; val_offset:199944*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199944*0 + 3*600*FLEN/8, x4, x1, x2)

inst_66649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffffff000; valaddr_reg:x3; val_offset:199947*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199947*0 + 3*601*FLEN/8, x4, x1, x2)

inst_66650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffffff800; valaddr_reg:x3; val_offset:199950*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199950*0 + 3*602*FLEN/8, x4, x1, x2)

inst_66651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffffffc00; valaddr_reg:x3; val_offset:199953*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199953*0 + 3*603*FLEN/8, x4, x1, x2)

inst_66652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffffffe00; valaddr_reg:x3; val_offset:199956*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199956*0 + 3*604*FLEN/8, x4, x1, x2)

inst_66653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffffffff00; valaddr_reg:x3; val_offset:199959*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199959*0 + 3*605*FLEN/8, x4, x1, x2)

inst_66654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffffffff80; valaddr_reg:x3; val_offset:199962*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199962*0 + 3*606*FLEN/8, x4, x1, x2)

inst_66655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffffffffc0; valaddr_reg:x3; val_offset:199965*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199965*0 + 3*607*FLEN/8, x4, x1, x2)

inst_66656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffffffffe0; valaddr_reg:x3; val_offset:199968*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199968*0 + 3*608*FLEN/8, x4, x1, x2)

inst_66657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffffffff0; valaddr_reg:x3; val_offset:199971*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199971*0 + 3*609*FLEN/8, x4, x1, x2)

inst_66658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffffffff8; valaddr_reg:x3; val_offset:199974*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199974*0 + 3*610*FLEN/8, x4, x1, x2)

inst_66659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffffffffc; valaddr_reg:x3; val_offset:199977*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199977*0 + 3*611*FLEN/8, x4, x1, x2)

inst_66660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393ffffffffffffe; valaddr_reg:x3; val_offset:199980*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199980*0 + 3*612*FLEN/8, x4, x1, x2)

inst_66661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x393 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x393fffffffffffff; valaddr_reg:x3; val_offset:199983*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199983*0 + 3*613*FLEN/8, x4, x1, x2)

inst_66662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:199986*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199986*0 + 3*614*FLEN/8, x4, x1, x2)

inst_66663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:199989*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199989*0 + 3*615*FLEN/8, x4, x1, x2)

inst_66664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:199992*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199992*0 + 3*616*FLEN/8, x4, x1, x2)

inst_66665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:199995*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199995*0 + 3*617*FLEN/8, x4, x1, x2)

inst_66666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:199998*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199998*0 + 3*618*FLEN/8, x4, x1, x2)

inst_66667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:200001*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200001*0 + 3*619*FLEN/8, x4, x1, x2)

inst_66668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:200004*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200004*0 + 3*620*FLEN/8, x4, x1, x2)

inst_66669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:200007*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200007*0 + 3*621*FLEN/8, x4, x1, x2)

inst_66670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:200010*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200010*0 + 3*622*FLEN/8, x4, x1, x2)

inst_66671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:200013*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200013*0 + 3*623*FLEN/8, x4, x1, x2)

inst_66672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:200016*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200016*0 + 3*624*FLEN/8, x4, x1, x2)

inst_66673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:200019*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200019*0 + 3*625*FLEN/8, x4, x1, x2)

inst_66674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:200022*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200022*0 + 3*626*FLEN/8, x4, x1, x2)

inst_66675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:200025*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200025*0 + 3*627*FLEN/8, x4, x1, x2)

inst_66676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:200028*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200028*0 + 3*628*FLEN/8, x4, x1, x2)

inst_66677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:200031*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200031*0 + 3*629*FLEN/8, x4, x1, x2)

inst_66678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:200034*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200034*0 + 3*630*FLEN/8, x4, x1, x2)

inst_66679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:200037*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200037*0 + 3*631*FLEN/8, x4, x1, x2)

inst_66680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:200040*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200040*0 + 3*632*FLEN/8, x4, x1, x2)

inst_66681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:200043*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200043*0 + 3*633*FLEN/8, x4, x1, x2)

inst_66682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:200046*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200046*0 + 3*634*FLEN/8, x4, x1, x2)

inst_66683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54ca494b303e0 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x809cad5e8a3a7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54ca494b303e0; op2val:0x203809cad5e8a3a7;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:200049*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200049*0 + 3*635*FLEN/8, x4, x1, x2)

inst_66684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:200052*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200052*0 + 3*636*FLEN/8, x4, x1, x2)

inst_66685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:200055*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200055*0 + 3*637*FLEN/8, x4, x1, x2)

inst_66686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:200058*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200058*0 + 3*638*FLEN/8, x4, x1, x2)

inst_66687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:200061*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200061*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_66688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:200064*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200064*0 + 3*640*FLEN/8, x4, x1, x2)

inst_66689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:200067*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200067*0 + 3*641*FLEN/8, x4, x1, x2)

inst_66690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:200070*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200070*0 + 3*642*FLEN/8, x4, x1, x2)

inst_66691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:200073*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200073*0 + 3*643*FLEN/8, x4, x1, x2)

inst_66692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:200076*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200076*0 + 3*644*FLEN/8, x4, x1, x2)

inst_66693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:200079*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200079*0 + 3*645*FLEN/8, x4, x1, x2)

inst_66694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:200082*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200082*0 + 3*646*FLEN/8, x4, x1, x2)

inst_66695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:200085*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200085*0 + 3*647*FLEN/8, x4, x1, x2)

inst_66696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:200088*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200088*0 + 3*648*FLEN/8, x4, x1, x2)

inst_66697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:200091*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200091*0 + 3*649*FLEN/8, x4, x1, x2)

inst_66698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:200094*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200094*0 + 3*650*FLEN/8, x4, x1, x2)

inst_66699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:200097*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200097*0 + 3*651*FLEN/8, x4, x1, x2)

inst_66700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:200100*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200100*0 + 3*652*FLEN/8, x4, x1, x2)

inst_66701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:200103*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200103*0 + 3*653*FLEN/8, x4, x1, x2)

inst_66702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:200106*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200106*0 + 3*654*FLEN/8, x4, x1, x2)

inst_66703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:200109*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200109*0 + 3*655*FLEN/8, x4, x1, x2)

inst_66704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:200112*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200112*0 + 3*656*FLEN/8, x4, x1, x2)

inst_66705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:200115*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200115*0 + 3*657*FLEN/8, x4, x1, x2)

inst_66706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000000000000; valaddr_reg:x3; val_offset:200118*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200118*0 + 3*658*FLEN/8, x4, x1, x2)

inst_66707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000000000001; valaddr_reg:x3; val_offset:200121*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200121*0 + 3*659*FLEN/8, x4, x1, x2)

inst_66708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000000000003; valaddr_reg:x3; val_offset:200124*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200124*0 + 3*660*FLEN/8, x4, x1, x2)

inst_66709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000000000007; valaddr_reg:x3; val_offset:200127*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200127*0 + 3*661*FLEN/8, x4, x1, x2)

inst_66710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000000000000f; valaddr_reg:x3; val_offset:200130*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200130*0 + 3*662*FLEN/8, x4, x1, x2)

inst_66711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000000000001f; valaddr_reg:x3; val_offset:200133*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200133*0 + 3*663*FLEN/8, x4, x1, x2)

inst_66712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000000000003f; valaddr_reg:x3; val_offset:200136*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200136*0 + 3*664*FLEN/8, x4, x1, x2)

inst_66713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000000000007f; valaddr_reg:x3; val_offset:200139*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200139*0 + 3*665*FLEN/8, x4, x1, x2)

inst_66714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200000000000ff; valaddr_reg:x3; val_offset:200142*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200142*0 + 3*666*FLEN/8, x4, x1, x2)

inst_66715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200000000001ff; valaddr_reg:x3; val_offset:200145*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200145*0 + 3*667*FLEN/8, x4, x1, x2)

inst_66716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200000000003ff; valaddr_reg:x3; val_offset:200148*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200148*0 + 3*668*FLEN/8, x4, x1, x2)

inst_66717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200000000007ff; valaddr_reg:x3; val_offset:200151*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200151*0 + 3*669*FLEN/8, x4, x1, x2)

inst_66718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000000000fff; valaddr_reg:x3; val_offset:200154*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200154*0 + 3*670*FLEN/8, x4, x1, x2)

inst_66719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000000001fff; valaddr_reg:x3; val_offset:200157*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200157*0 + 3*671*FLEN/8, x4, x1, x2)

inst_66720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000000003fff; valaddr_reg:x3; val_offset:200160*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200160*0 + 3*672*FLEN/8, x4, x1, x2)

inst_66721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000000007fff; valaddr_reg:x3; val_offset:200163*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200163*0 + 3*673*FLEN/8, x4, x1, x2)

inst_66722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000000000ffff; valaddr_reg:x3; val_offset:200166*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200166*0 + 3*674*FLEN/8, x4, x1, x2)

inst_66723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000000001ffff; valaddr_reg:x3; val_offset:200169*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200169*0 + 3*675*FLEN/8, x4, x1, x2)

inst_66724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000000003ffff; valaddr_reg:x3; val_offset:200172*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200172*0 + 3*676*FLEN/8, x4, x1, x2)

inst_66725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000000007ffff; valaddr_reg:x3; val_offset:200175*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200175*0 + 3*677*FLEN/8, x4, x1, x2)

inst_66726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200000000fffff; valaddr_reg:x3; val_offset:200178*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200178*0 + 3*678*FLEN/8, x4, x1, x2)

inst_66727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200000001fffff; valaddr_reg:x3; val_offset:200181*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200181*0 + 3*679*FLEN/8, x4, x1, x2)

inst_66728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200000003fffff; valaddr_reg:x3; val_offset:200184*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200184*0 + 3*680*FLEN/8, x4, x1, x2)

inst_66729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200000007fffff; valaddr_reg:x3; val_offset:200187*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200187*0 + 3*681*FLEN/8, x4, x1, x2)

inst_66730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000000ffffff; valaddr_reg:x3; val_offset:200190*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200190*0 + 3*682*FLEN/8, x4, x1, x2)

inst_66731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000001ffffff; valaddr_reg:x3; val_offset:200193*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200193*0 + 3*683*FLEN/8, x4, x1, x2)

inst_66732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000003ffffff; valaddr_reg:x3; val_offset:200196*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200196*0 + 3*684*FLEN/8, x4, x1, x2)

inst_66733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000007ffffff; valaddr_reg:x3; val_offset:200199*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200199*0 + 3*685*FLEN/8, x4, x1, x2)

inst_66734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000000fffffff; valaddr_reg:x3; val_offset:200202*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200202*0 + 3*686*FLEN/8, x4, x1, x2)

inst_66735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000001fffffff; valaddr_reg:x3; val_offset:200205*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200205*0 + 3*687*FLEN/8, x4, x1, x2)

inst_66736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000003fffffff; valaddr_reg:x3; val_offset:200208*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200208*0 + 3*688*FLEN/8, x4, x1, x2)

inst_66737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000007fffffff; valaddr_reg:x3; val_offset:200211*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200211*0 + 3*689*FLEN/8, x4, x1, x2)

inst_66738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200000ffffffff; valaddr_reg:x3; val_offset:200214*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200214*0 + 3*690*FLEN/8, x4, x1, x2)

inst_66739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200001ffffffff; valaddr_reg:x3; val_offset:200217*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200217*0 + 3*691*FLEN/8, x4, x1, x2)

inst_66740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200003ffffffff; valaddr_reg:x3; val_offset:200220*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200220*0 + 3*692*FLEN/8, x4, x1, x2)

inst_66741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200007ffffffff; valaddr_reg:x3; val_offset:200223*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200223*0 + 3*693*FLEN/8, x4, x1, x2)

inst_66742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220000fffffffff; valaddr_reg:x3; val_offset:200226*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200226*0 + 3*694*FLEN/8, x4, x1, x2)

inst_66743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220001fffffffff; valaddr_reg:x3; val_offset:200229*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200229*0 + 3*695*FLEN/8, x4, x1, x2)

inst_66744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220003fffffffff; valaddr_reg:x3; val_offset:200232*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200232*0 + 3*696*FLEN/8, x4, x1, x2)

inst_66745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220007fffffffff; valaddr_reg:x3; val_offset:200235*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200235*0 + 3*697*FLEN/8, x4, x1, x2)

inst_66746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22000ffffffffff; valaddr_reg:x3; val_offset:200238*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200238*0 + 3*698*FLEN/8, x4, x1, x2)

inst_66747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22001ffffffffff; valaddr_reg:x3; val_offset:200241*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200241*0 + 3*699*FLEN/8, x4, x1, x2)

inst_66748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22003ffffffffff; valaddr_reg:x3; val_offset:200244*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200244*0 + 3*700*FLEN/8, x4, x1, x2)

inst_66749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22007ffffffffff; valaddr_reg:x3; val_offset:200247*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200247*0 + 3*701*FLEN/8, x4, x1, x2)

inst_66750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2200fffffffffff; valaddr_reg:x3; val_offset:200250*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200250*0 + 3*702*FLEN/8, x4, x1, x2)

inst_66751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2201fffffffffff; valaddr_reg:x3; val_offset:200253*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200253*0 + 3*703*FLEN/8, x4, x1, x2)

inst_66752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2203fffffffffff; valaddr_reg:x3; val_offset:200256*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200256*0 + 3*704*FLEN/8, x4, x1, x2)

inst_66753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x2207fffffffffff; valaddr_reg:x3; val_offset:200259*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200259*0 + 3*705*FLEN/8, x4, x1, x2)

inst_66754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x220ffffffffffff; valaddr_reg:x3; val_offset:200262*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200262*0 + 3*706*FLEN/8, x4, x1, x2)

inst_66755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x221ffffffffffff; valaddr_reg:x3; val_offset:200265*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200265*0 + 3*707*FLEN/8, x4, x1, x2)

inst_66756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x223ffffffffffff; valaddr_reg:x3; val_offset:200268*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200268*0 + 3*708*FLEN/8, x4, x1, x2)

inst_66757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x227ffffffffffff; valaddr_reg:x3; val_offset:200271*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200271*0 + 3*709*FLEN/8, x4, x1, x2)

inst_66758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x228000000000000; valaddr_reg:x3; val_offset:200274*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200274*0 + 3*710*FLEN/8, x4, x1, x2)

inst_66759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22c000000000000; valaddr_reg:x3; val_offset:200277*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200277*0 + 3*711*FLEN/8, x4, x1, x2)

inst_66760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22e000000000000; valaddr_reg:x3; val_offset:200280*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200280*0 + 3*712*FLEN/8, x4, x1, x2)

inst_66761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22f000000000000; valaddr_reg:x3; val_offset:200283*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200283*0 + 3*713*FLEN/8, x4, x1, x2)

inst_66762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22f800000000000; valaddr_reg:x3; val_offset:200286*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200286*0 + 3*714*FLEN/8, x4, x1, x2)

inst_66763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fc00000000000; valaddr_reg:x3; val_offset:200289*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200289*0 + 3*715*FLEN/8, x4, x1, x2)

inst_66764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fe00000000000; valaddr_reg:x3; val_offset:200292*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200292*0 + 3*716*FLEN/8, x4, x1, x2)

inst_66765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ff00000000000; valaddr_reg:x3; val_offset:200295*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200295*0 + 3*717*FLEN/8, x4, x1, x2)

inst_66766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ff80000000000; valaddr_reg:x3; val_offset:200298*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200298*0 + 3*718*FLEN/8, x4, x1, x2)

inst_66767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffc0000000000; valaddr_reg:x3; val_offset:200301*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200301*0 + 3*719*FLEN/8, x4, x1, x2)

inst_66768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffe0000000000; valaddr_reg:x3; val_offset:200304*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200304*0 + 3*720*FLEN/8, x4, x1, x2)

inst_66769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fff0000000000; valaddr_reg:x3; val_offset:200307*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200307*0 + 3*721*FLEN/8, x4, x1, x2)

inst_66770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fff8000000000; valaddr_reg:x3; val_offset:200310*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200310*0 + 3*722*FLEN/8, x4, x1, x2)

inst_66771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffc000000000; valaddr_reg:x3; val_offset:200313*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200313*0 + 3*723*FLEN/8, x4, x1, x2)

inst_66772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffe000000000; valaddr_reg:x3; val_offset:200316*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200316*0 + 3*724*FLEN/8, x4, x1, x2)

inst_66773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffff000000000; valaddr_reg:x3; val_offset:200319*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200319*0 + 3*725*FLEN/8, x4, x1, x2)

inst_66774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffff800000000; valaddr_reg:x3; val_offset:200322*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200322*0 + 3*726*FLEN/8, x4, x1, x2)

inst_66775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffc00000000; valaddr_reg:x3; val_offset:200325*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200325*0 + 3*727*FLEN/8, x4, x1, x2)

inst_66776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffe00000000; valaddr_reg:x3; val_offset:200328*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200328*0 + 3*728*FLEN/8, x4, x1, x2)

inst_66777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffff00000000; valaddr_reg:x3; val_offset:200331*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200331*0 + 3*729*FLEN/8, x4, x1, x2)

inst_66778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffff80000000; valaddr_reg:x3; val_offset:200334*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200334*0 + 3*730*FLEN/8, x4, x1, x2)

inst_66779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffc0000000; valaddr_reg:x3; val_offset:200337*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200337*0 + 3*731*FLEN/8, x4, x1, x2)

inst_66780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffe0000000; valaddr_reg:x3; val_offset:200340*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200340*0 + 3*732*FLEN/8, x4, x1, x2)

inst_66781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffff0000000; valaddr_reg:x3; val_offset:200343*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200343*0 + 3*733*FLEN/8, x4, x1, x2)

inst_66782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffff8000000; valaddr_reg:x3; val_offset:200346*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200346*0 + 3*734*FLEN/8, x4, x1, x2)

inst_66783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffc000000; valaddr_reg:x3; val_offset:200349*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200349*0 + 3*735*FLEN/8, x4, x1, x2)

inst_66784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffe000000; valaddr_reg:x3; val_offset:200352*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200352*0 + 3*736*FLEN/8, x4, x1, x2)

inst_66785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffff000000; valaddr_reg:x3; val_offset:200355*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200355*0 + 3*737*FLEN/8, x4, x1, x2)

inst_66786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffff800000; valaddr_reg:x3; val_offset:200358*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200358*0 + 3*738*FLEN/8, x4, x1, x2)

inst_66787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffffc00000; valaddr_reg:x3; val_offset:200361*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200361*0 + 3*739*FLEN/8, x4, x1, x2)

inst_66788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffffe00000; valaddr_reg:x3; val_offset:200364*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200364*0 + 3*740*FLEN/8, x4, x1, x2)

inst_66789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffff00000; valaddr_reg:x3; val_offset:200367*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200367*0 + 3*741*FLEN/8, x4, x1, x2)

inst_66790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffff80000; valaddr_reg:x3; val_offset:200370*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200370*0 + 3*742*FLEN/8, x4, x1, x2)

inst_66791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffffc0000; valaddr_reg:x3; val_offset:200373*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200373*0 + 3*743*FLEN/8, x4, x1, x2)

inst_66792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffffe0000; valaddr_reg:x3; val_offset:200376*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200376*0 + 3*744*FLEN/8, x4, x1, x2)

inst_66793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffffff0000; valaddr_reg:x3; val_offset:200379*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200379*0 + 3*745*FLEN/8, x4, x1, x2)

inst_66794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffffff8000; valaddr_reg:x3; val_offset:200382*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200382*0 + 3*746*FLEN/8, x4, x1, x2)

inst_66795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffffffc000; valaddr_reg:x3; val_offset:200385*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200385*0 + 3*747*FLEN/8, x4, x1, x2)

inst_66796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffffffe000; valaddr_reg:x3; val_offset:200388*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200388*0 + 3*748*FLEN/8, x4, x1, x2)

inst_66797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffffff000; valaddr_reg:x3; val_offset:200391*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200391*0 + 3*749*FLEN/8, x4, x1, x2)

inst_66798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffffff800; valaddr_reg:x3; val_offset:200394*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200394*0 + 3*750*FLEN/8, x4, x1, x2)

inst_66799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffffffc00; valaddr_reg:x3; val_offset:200397*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200397*0 + 3*751*FLEN/8, x4, x1, x2)

inst_66800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffffffe00; valaddr_reg:x3; val_offset:200400*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200400*0 + 3*752*FLEN/8, x4, x1, x2)

inst_66801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffffffff00; valaddr_reg:x3; val_offset:200403*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200403*0 + 3*753*FLEN/8, x4, x1, x2)

inst_66802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffffffff80; valaddr_reg:x3; val_offset:200406*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200406*0 + 3*754*FLEN/8, x4, x1, x2)

inst_66803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffffffffc0; valaddr_reg:x3; val_offset:200409*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200409*0 + 3*755*FLEN/8, x4, x1, x2)

inst_66804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffffffffe0; valaddr_reg:x3; val_offset:200412*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200412*0 + 3*756*FLEN/8, x4, x1, x2)

inst_66805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffffffff0; valaddr_reg:x3; val_offset:200415*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200415*0 + 3*757*FLEN/8, x4, x1, x2)

inst_66806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffffffff8; valaddr_reg:x3; val_offset:200418*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200418*0 + 3*758*FLEN/8, x4, x1, x2)

inst_66807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffffffffc; valaddr_reg:x3; val_offset:200421*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200421*0 + 3*759*FLEN/8, x4, x1, x2)

inst_66808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22ffffffffffffe; valaddr_reg:x3; val_offset:200424*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200424*0 + 3*760*FLEN/8, x4, x1, x2)

inst_66809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54cd68fd36c6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54cd68fd36c6f; op2val:0x0;
op3val:0x22fffffffffffff; valaddr_reg:x3; val_offset:200427*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200427*0 + 3*761*FLEN/8, x4, x1, x2)

inst_66810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5625f693222e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5625f693222e6; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:200430*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200430*0 + 3*762*FLEN/8, x4, x1, x2)

inst_66811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5625f693222e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5625f693222e6; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:200433*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200433*0 + 3*763*FLEN/8, x4, x1, x2)

inst_66812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5625f693222e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5625f693222e6; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:200436*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200436*0 + 3*764*FLEN/8, x4, x1, x2)

inst_66813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5625f693222e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5625f693222e6; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:200439*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200439*0 + 3*765*FLEN/8, x4, x1, x2)

inst_66814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5625f693222e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5625f693222e6; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:200442*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200442*0 + 3*766*FLEN/8, x4, x1, x2)

inst_66815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5625f693222e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5625f693222e6; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:200445*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200445*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891927110395425917,64,FLEN)
NAN_BOXED(2321698579338606368,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891927110395425917,64,FLEN)
NAN_BOXED(2321698579338606368,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891927110395425917,64,FLEN)
NAN_BOXED(2321698579338606368,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891927110395425917,64,FLEN)
NAN_BOXED(2321698579338606368,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891927110395425917,64,FLEN)
NAN_BOXED(2321698579338606368,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891927110395425917,64,FLEN)
NAN_BOXED(2321698579338606368,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041600,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041601,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041603,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041607,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041615,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041631,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041663,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041727,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041855,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478042111,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478042623,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478043647,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478045695,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478049791,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478057983,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478074367,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478107135,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478172671,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478303743,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478565887,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217479090175,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217480138751,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217482235903,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217486430207,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217494818815,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217511596031,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217545150463,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217612259327,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217746477055,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559218014912511,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559218551783423,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559219625525247,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559221773008895,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559226067976191,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559234657910783,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559251837779967,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559286197518335,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559354916995071,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559492355948543,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559767233855487,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457560316989669375,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457561416501297151,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457563615524552703,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457568013571063807,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457576809664086015,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457594401850130431,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457629586222219263,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457699954966396927,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457840692454752255,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9458122167431462911,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9458685117384884223,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9459811017291726847,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9459811017291726848,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9460936917198569472,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9461499867151990784,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9461781342128701440,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9461922079617056768,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9461992448361234432,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462027632733323264,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462045224919367680,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462054021012389888,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462058419058900992,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462060618082156544,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462061717593784320,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062267349598208,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062542227505152,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062679666458624,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062748385935360,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062782745673728,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062799925542912,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062808515477504,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062812810444800,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062814957928448,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816031670272,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816568541184,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816836976640,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816971194368,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817038303232,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817071857664,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817088634880,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817097023488,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817101217792,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817103314944,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817104363520,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817104887808,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105149952,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105281024,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105346560,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105379328,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105395712,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105403904,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105408000,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105410048,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411072,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411584,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411840,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411968,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412032,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412064,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412080,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412088,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412092,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412094,64,FLEN)
NAN_BOXED(6891945166153095169,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412095,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297216,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297217,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297219,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297223,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297231,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297247,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297279,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297343,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297471,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297727,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284298239,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284299263,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284301311,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284305407,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284313599,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284329983,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284362751,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284428287,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284559359,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284821503,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828285345791,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828286394367,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828288491519,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828292685823,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828301074431,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828317851647,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828351406079,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828418514943,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828552732671,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828821168127,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954829358039039,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954830431780863,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954832579264511,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954836874231807,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954845464166399,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954862644035583,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954897003773951,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954965723250687,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326955103162204159,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326955378040111103,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326955927795924991,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326957027307552767,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326959226330808319,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326963624377319423,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326972420470341631,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326990012656386047,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9327025197028474879,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9327095565772652543,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9327236303261007871,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9327517778237718527,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9328080728191139839,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9329206628097982463,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9329206628097982464,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9330332528004825088,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9330895477958246400,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331176952934957056,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331317690423312384,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331388059167490048,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331423243539578880,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331440835725623296,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331449631818645504,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331454029865156608,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331456228888412160,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331457328400039936,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331457878155853824,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458153033760768,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458290472714240,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458359192190976,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458393551929344,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458410731798528,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458419321733120,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458423616700416,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458425764184064,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458426837925888,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427374796800,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427643232256,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427777449984,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427844558848,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427878113280,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427894890496,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427903279104,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427907473408,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427909570560,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427910619136,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911143424,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911405568,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911536640,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911602176,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911634944,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911651328,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911659520,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911663616,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911665664,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911666688,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667200,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667456,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667584,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667648,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667680,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667696,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667704,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667708,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667710,64,FLEN)
NAN_BOXED(6891950791931762149,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9331458427911667711,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117056,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117057,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117059,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117063,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117071,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117087,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117119,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117183,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117311,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117567,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379118079,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379119103,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379121151,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379125247,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379133439,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379149823,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379182591,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379248127,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379379199,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379641343,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813380165631,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813381214207,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813383311359,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813387505663,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813395894271,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813412671487,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813446225919,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813513334783,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813647552511,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813915987967,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098814452858879,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098815526600703,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098817674084351,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098821969051647,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098830558986239,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098847738855423,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098882098593791,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098950818070527,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099088257023999,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099363134930943,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099912890744831,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507101012402372607,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507103211425628159,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507107609472139263,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507116405565161471,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507133997751205887,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507169182123294719,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507239550867472383,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507380288355827711,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507661763332538367,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9508224713285959679,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802303,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802304,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9510476513099644928,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511039463053066240,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511320938029776896,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511461675518132224,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511532044262309888,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511567228634398720,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511584820820443136,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511593616913465344,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511598014959976448,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511600213983232000,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601313494859776,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601863250673664,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602138128580608,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602275567534080,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602344287010816,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602378646749184,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602395826618368,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602404416552960,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602408711520256,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602410859003904,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602411932745728,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412469616640,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412738052096,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412872269824,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412939378688,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412972933120,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412989710336,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412998098944,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413002293248,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413004390400,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005438976,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005963264,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006225408,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006356480,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006422016,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006454784,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006471168,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006479360,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006483456,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006485504,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006486528,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487040,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487296,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487424,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487488,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487520,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487536,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487544,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487548,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487550,64,FLEN)
NAN_BOXED(6891954062256828520,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487551,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921025024,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921025025,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921025027,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921025031,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921025039,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921025055,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921025087,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921025151,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921025279,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921025535,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921026047,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921027071,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921029119,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921033215,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921041407,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921057791,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921090559,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921156095,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921287167,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215921549311,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215922073599,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215923122175,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215925219327,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215929413631,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215937802239,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215954579455,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778215988133887,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778216055242751,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778216189460479,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778216457895935,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778216994766847,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778218068508671,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778220215992319,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778224510959615,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778233100894207,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778250280763391,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778284640501759,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778353359978495,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778490798931967,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224778765676838911,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224779315432652799,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224780414944280575,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224782613967536127,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224787012014047231,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224795808107069439,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224813400293113855,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224848584665202687,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2224918953409380351,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2225059690897735679,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2225341165874446335,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2225904115827867647,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2227030015734710271,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2227030015734710272,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2228155915641552896,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2228718865594974208,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229000340571684864,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229141078060040192,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229211446804217856,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229246631176306688,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229264223362351104,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229273019455373312,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229277417501884416,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229279616525139968,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229280716036767744,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281265792581632,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281540670488576,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281678109442048,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281746828918784,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281781188657152,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281798368526336,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281806958460928,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281811253428224,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281813400911872,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281814474653696,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815011524608,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815279960064,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815414177792,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815481286656,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815514841088,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815531618304,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815540006912,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815544201216,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815546298368,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815547346944,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815547871232,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548133376,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548264448,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548329984,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548362752,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548379136,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548387328,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548391424,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548393472,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548394496,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548395008,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548395264,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548395392,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548395456,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548395488,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548395504,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548395512,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548395516,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548395518,64,FLEN)
NAN_BOXED(6891977364384734628,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2229281815548395519,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044003840,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044003841,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044003843,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044003847,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044003855,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044003871,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044003903,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044003967,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044004095,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044004351,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044004863,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044005887,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044007935,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044012031,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044020223,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044036607,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044069375,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044134911,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044265983,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659044528127,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659045052415,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659046100991,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659048198143,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659052392447,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659060781055,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659077558271,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659111112703,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659178221567,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659312439295,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793659580874751,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793660117745663,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793661191487487,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793663338971135,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793667633938431,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793676223873023,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793693403742207,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793727763480575,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793796482957311,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120793933921910783,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120794208799817727,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120794758555631615,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120795858067259391,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120798057090514943,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120802455137026047,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120811251230048255,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120828843416092671,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120864027788181503,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4120934396532359167,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4121075134020714495,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4121356608997425151,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4121919558950846463,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4123045458857689087,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4123045458857689088,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4124171358764531712,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4124734308717953024,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125015783694663680,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125156521183019008,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125226889927196672,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125262074299285504,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125279666485329920,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125288462578352128,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125292860624863232,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125295059648118784,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125296159159746560,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125296708915560448,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125296983793467392,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297121232420864,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297189951897600,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297224311635968,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297241491505152,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297250081439744,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297254376407040,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297256523890688,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297257597632512,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258134503424,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258402938880,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258537156608,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258604265472,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258637819904,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258654597120,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258662985728,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258667180032,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258669277184,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258670325760,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258670850048,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671112192,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671243264,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671308800,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671341568,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671357952,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671366144,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671370240,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671372288,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671373312,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671373824,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671374080,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671374208,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671374272,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671374304,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671374320,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671374328,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671374332,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671374334,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4125297258671374335,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891999074513519584,64,FLEN)
NAN_BOXED(2321616374686327719,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596864,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596865,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596867,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596871,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596879,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596895,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596927,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596991,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597119,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597375,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597887,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330598911,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330600959,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330605055,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330613247,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330629631,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330662399,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330727935,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330859007,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331121151,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331645439,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387332694015,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387334791167,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387338985471,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387347374079,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387364151295,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387397705727,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387464814591,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387599032319,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387867467775,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122388404338687,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122389478080511,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122391625564159,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122395920531455,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122404510466047,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122421690335231,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122456050073599,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122524769550335,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122662208503807,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122937086410751,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153123486842224639,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153124586353852415,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153126785377107967,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153131183423619071,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153139979516641279,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153157571702685695,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153192756074774527,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153263124818952191,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153403862307307519,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153685337284018175,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(154248287237439487,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282111,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282112,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(156500087051124736,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157063037004546048,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157344511981256704,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157485249469612032,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157555618213789696,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157590802585878528,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157608394771922944,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157617190864945152,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157621588911456256,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157623787934711808,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157624887446339584,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625437202153472,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625712080060416,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625849519013888,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625918238490624,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625952598228992,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625969778098176,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625978368032768,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625982663000064,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625984810483712,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625985884225536,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986421096448,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986689531904,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986823749632,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986890858496,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986924412928,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986941190144,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986949578752,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986953773056,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986955870208,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986956918784,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957443072,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957705216,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957836288,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957901824,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957934592,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957950976,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957959168,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957963264,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957965312,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966336,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966848,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967104,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967232,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967296,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967328,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967344,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967352,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967356,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967358,64,FLEN)
NAN_BOXED(6891999289180122223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967359,64,FLEN)
NAN_BOXED(6892022966686720742,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892022966686720742,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892022966686720742,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892022966686720742,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892022966686720742,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892022966686720742,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
