
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_18432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b0003fffffffff; valaddr_reg:x3; val_offset:55296*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55296*0 + 3*0*FLEN/8, x4, x1, x2)

inst_18433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b0007fffffffff; valaddr_reg:x3; val_offset:55299*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55299*0 + 3*1*FLEN/8, x4, x1, x2)

inst_18434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b000ffffffffff; valaddr_reg:x3; val_offset:55302*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55302*0 + 3*2*FLEN/8, x4, x1, x2)

inst_18435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b001ffffffffff; valaddr_reg:x3; val_offset:55305*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55305*0 + 3*3*FLEN/8, x4, x1, x2)

inst_18436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b003ffffffffff; valaddr_reg:x3; val_offset:55308*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55308*0 + 3*4*FLEN/8, x4, x1, x2)

inst_18437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b007ffffffffff; valaddr_reg:x3; val_offset:55311*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55311*0 + 3*5*FLEN/8, x4, x1, x2)

inst_18438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b00fffffffffff; valaddr_reg:x3; val_offset:55314*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55314*0 + 3*6*FLEN/8, x4, x1, x2)

inst_18439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b01fffffffffff; valaddr_reg:x3; val_offset:55317*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55317*0 + 3*7*FLEN/8, x4, x1, x2)

inst_18440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b03fffffffffff; valaddr_reg:x3; val_offset:55320*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55320*0 + 3*8*FLEN/8, x4, x1, x2)

inst_18441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b07fffffffffff; valaddr_reg:x3; val_offset:55323*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55323*0 + 3*9*FLEN/8, x4, x1, x2)

inst_18442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b0ffffffffffff; valaddr_reg:x3; val_offset:55326*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55326*0 + 3*10*FLEN/8, x4, x1, x2)

inst_18443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b1ffffffffffff; valaddr_reg:x3; val_offset:55329*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55329*0 + 3*11*FLEN/8, x4, x1, x2)

inst_18444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b3ffffffffffff; valaddr_reg:x3; val_offset:55332*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55332*0 + 3*12*FLEN/8, x4, x1, x2)

inst_18445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b7ffffffffffff; valaddr_reg:x3; val_offset:55335*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55335*0 + 3*13*FLEN/8, x4, x1, x2)

inst_18446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1b8000000000000; valaddr_reg:x3; val_offset:55338*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55338*0 + 3*14*FLEN/8, x4, x1, x2)

inst_18447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bc000000000000; valaddr_reg:x3; val_offset:55341*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55341*0 + 3*15*FLEN/8, x4, x1, x2)

inst_18448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1be000000000000; valaddr_reg:x3; val_offset:55344*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55344*0 + 3*16*FLEN/8, x4, x1, x2)

inst_18449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bf000000000000; valaddr_reg:x3; val_offset:55347*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55347*0 + 3*17*FLEN/8, x4, x1, x2)

inst_18450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bf800000000000; valaddr_reg:x3; val_offset:55350*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55350*0 + 3*18*FLEN/8, x4, x1, x2)

inst_18451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfc00000000000; valaddr_reg:x3; val_offset:55353*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55353*0 + 3*19*FLEN/8, x4, x1, x2)

inst_18452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfe00000000000; valaddr_reg:x3; val_offset:55356*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55356*0 + 3*20*FLEN/8, x4, x1, x2)

inst_18453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bff00000000000; valaddr_reg:x3; val_offset:55359*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55359*0 + 3*21*FLEN/8, x4, x1, x2)

inst_18454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bff80000000000; valaddr_reg:x3; val_offset:55362*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55362*0 + 3*22*FLEN/8, x4, x1, x2)

inst_18455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffc0000000000; valaddr_reg:x3; val_offset:55365*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55365*0 + 3*23*FLEN/8, x4, x1, x2)

inst_18456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffe0000000000; valaddr_reg:x3; val_offset:55368*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55368*0 + 3*24*FLEN/8, x4, x1, x2)

inst_18457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfff0000000000; valaddr_reg:x3; val_offset:55371*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55371*0 + 3*25*FLEN/8, x4, x1, x2)

inst_18458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfff8000000000; valaddr_reg:x3; val_offset:55374*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55374*0 + 3*26*FLEN/8, x4, x1, x2)

inst_18459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffc000000000; valaddr_reg:x3; val_offset:55377*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55377*0 + 3*27*FLEN/8, x4, x1, x2)

inst_18460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffe000000000; valaddr_reg:x3; val_offset:55380*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55380*0 + 3*28*FLEN/8, x4, x1, x2)

inst_18461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffff000000000; valaddr_reg:x3; val_offset:55383*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55383*0 + 3*29*FLEN/8, x4, x1, x2)

inst_18462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffff800000000; valaddr_reg:x3; val_offset:55386*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55386*0 + 3*30*FLEN/8, x4, x1, x2)

inst_18463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffc00000000; valaddr_reg:x3; val_offset:55389*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55389*0 + 3*31*FLEN/8, x4, x1, x2)

inst_18464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffe00000000; valaddr_reg:x3; val_offset:55392*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55392*0 + 3*32*FLEN/8, x4, x1, x2)

inst_18465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffff00000000; valaddr_reg:x3; val_offset:55395*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55395*0 + 3*33*FLEN/8, x4, x1, x2)

inst_18466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffff80000000; valaddr_reg:x3; val_offset:55398*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55398*0 + 3*34*FLEN/8, x4, x1, x2)

inst_18467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffc0000000; valaddr_reg:x3; val_offset:55401*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55401*0 + 3*35*FLEN/8, x4, x1, x2)

inst_18468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffe0000000; valaddr_reg:x3; val_offset:55404*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55404*0 + 3*36*FLEN/8, x4, x1, x2)

inst_18469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffff0000000; valaddr_reg:x3; val_offset:55407*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55407*0 + 3*37*FLEN/8, x4, x1, x2)

inst_18470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffff8000000; valaddr_reg:x3; val_offset:55410*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55410*0 + 3*38*FLEN/8, x4, x1, x2)

inst_18471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffc000000; valaddr_reg:x3; val_offset:55413*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55413*0 + 3*39*FLEN/8, x4, x1, x2)

inst_18472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffe000000; valaddr_reg:x3; val_offset:55416*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55416*0 + 3*40*FLEN/8, x4, x1, x2)

inst_18473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffff000000; valaddr_reg:x3; val_offset:55419*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55419*0 + 3*41*FLEN/8, x4, x1, x2)

inst_18474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffff800000; valaddr_reg:x3; val_offset:55422*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55422*0 + 3*42*FLEN/8, x4, x1, x2)

inst_18475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffffc00000; valaddr_reg:x3; val_offset:55425*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55425*0 + 3*43*FLEN/8, x4, x1, x2)

inst_18476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffffe00000; valaddr_reg:x3; val_offset:55428*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55428*0 + 3*44*FLEN/8, x4, x1, x2)

inst_18477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffff00000; valaddr_reg:x3; val_offset:55431*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55431*0 + 3*45*FLEN/8, x4, x1, x2)

inst_18478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffff80000; valaddr_reg:x3; val_offset:55434*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55434*0 + 3*46*FLEN/8, x4, x1, x2)

inst_18479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffffc0000; valaddr_reg:x3; val_offset:55437*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55437*0 + 3*47*FLEN/8, x4, x1, x2)

inst_18480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffffe0000; valaddr_reg:x3; val_offset:55440*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55440*0 + 3*48*FLEN/8, x4, x1, x2)

inst_18481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffffff0000; valaddr_reg:x3; val_offset:55443*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55443*0 + 3*49*FLEN/8, x4, x1, x2)

inst_18482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffffff8000; valaddr_reg:x3; val_offset:55446*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55446*0 + 3*50*FLEN/8, x4, x1, x2)

inst_18483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffffffc000; valaddr_reg:x3; val_offset:55449*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55449*0 + 3*51*FLEN/8, x4, x1, x2)

inst_18484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffffffe000; valaddr_reg:x3; val_offset:55452*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55452*0 + 3*52*FLEN/8, x4, x1, x2)

inst_18485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffffff000; valaddr_reg:x3; val_offset:55455*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55455*0 + 3*53*FLEN/8, x4, x1, x2)

inst_18486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffffff800; valaddr_reg:x3; val_offset:55458*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55458*0 + 3*54*FLEN/8, x4, x1, x2)

inst_18487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffffffc00; valaddr_reg:x3; val_offset:55461*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55461*0 + 3*55*FLEN/8, x4, x1, x2)

inst_18488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffffffe00; valaddr_reg:x3; val_offset:55464*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55464*0 + 3*56*FLEN/8, x4, x1, x2)

inst_18489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffffffff00; valaddr_reg:x3; val_offset:55467*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55467*0 + 3*57*FLEN/8, x4, x1, x2)

inst_18490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffffffff80; valaddr_reg:x3; val_offset:55470*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55470*0 + 3*58*FLEN/8, x4, x1, x2)

inst_18491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffffffffc0; valaddr_reg:x3; val_offset:55473*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55473*0 + 3*59*FLEN/8, x4, x1, x2)

inst_18492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffffffffe0; valaddr_reg:x3; val_offset:55476*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55476*0 + 3*60*FLEN/8, x4, x1, x2)

inst_18493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffffffff0; valaddr_reg:x3; val_offset:55479*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55479*0 + 3*61*FLEN/8, x4, x1, x2)

inst_18494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffffffff8; valaddr_reg:x3; val_offset:55482*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55482*0 + 3*62*FLEN/8, x4, x1, x2)

inst_18495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffffffffc; valaddr_reg:x3; val_offset:55485*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55485*0 + 3*63*FLEN/8, x4, x1, x2)

inst_18496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bffffffffffffe; valaddr_reg:x3; val_offset:55488*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55488*0 + 3*64*FLEN/8, x4, x1, x2)

inst_18497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3b24d3cbb02fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83b24d3cbb02fb; op2val:0x0;
op3val:0x1bfffffffffffff; valaddr_reg:x3; val_offset:55491*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55491*0 + 3*65*FLEN/8, x4, x1, x2)

inst_18498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000000000000; valaddr_reg:x3; val_offset:55494*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55494*0 + 3*66*FLEN/8, x4, x1, x2)

inst_18499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000000000001; valaddr_reg:x3; val_offset:55497*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55497*0 + 3*67*FLEN/8, x4, x1, x2)

inst_18500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000000000003; valaddr_reg:x3; val_offset:55500*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55500*0 + 3*68*FLEN/8, x4, x1, x2)

inst_18501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000000000007; valaddr_reg:x3; val_offset:55503*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55503*0 + 3*69*FLEN/8, x4, x1, x2)

inst_18502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000000000000f; valaddr_reg:x3; val_offset:55506*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55506*0 + 3*70*FLEN/8, x4, x1, x2)

inst_18503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000000000001f; valaddr_reg:x3; val_offset:55509*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55509*0 + 3*71*FLEN/8, x4, x1, x2)

inst_18504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000000000003f; valaddr_reg:x3; val_offset:55512*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55512*0 + 3*72*FLEN/8, x4, x1, x2)

inst_18505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000000000007f; valaddr_reg:x3; val_offset:55515*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55515*0 + 3*73*FLEN/8, x4, x1, x2)

inst_18506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00000000000ff; valaddr_reg:x3; val_offset:55518*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55518*0 + 3*74*FLEN/8, x4, x1, x2)

inst_18507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00000000001ff; valaddr_reg:x3; val_offset:55521*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55521*0 + 3*75*FLEN/8, x4, x1, x2)

inst_18508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00000000003ff; valaddr_reg:x3; val_offset:55524*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55524*0 + 3*76*FLEN/8, x4, x1, x2)

inst_18509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00000000007ff; valaddr_reg:x3; val_offset:55527*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55527*0 + 3*77*FLEN/8, x4, x1, x2)

inst_18510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000000000fff; valaddr_reg:x3; val_offset:55530*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55530*0 + 3*78*FLEN/8, x4, x1, x2)

inst_18511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000000001fff; valaddr_reg:x3; val_offset:55533*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55533*0 + 3*79*FLEN/8, x4, x1, x2)

inst_18512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000000003fff; valaddr_reg:x3; val_offset:55536*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55536*0 + 3*80*FLEN/8, x4, x1, x2)

inst_18513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000000007fff; valaddr_reg:x3; val_offset:55539*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55539*0 + 3*81*FLEN/8, x4, x1, x2)

inst_18514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000000000ffff; valaddr_reg:x3; val_offset:55542*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55542*0 + 3*82*FLEN/8, x4, x1, x2)

inst_18515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000000001ffff; valaddr_reg:x3; val_offset:55545*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55545*0 + 3*83*FLEN/8, x4, x1, x2)

inst_18516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000000003ffff; valaddr_reg:x3; val_offset:55548*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55548*0 + 3*84*FLEN/8, x4, x1, x2)

inst_18517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000000007ffff; valaddr_reg:x3; val_offset:55551*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55551*0 + 3*85*FLEN/8, x4, x1, x2)

inst_18518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00000000fffff; valaddr_reg:x3; val_offset:55554*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55554*0 + 3*86*FLEN/8, x4, x1, x2)

inst_18519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00000001fffff; valaddr_reg:x3; val_offset:55557*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55557*0 + 3*87*FLEN/8, x4, x1, x2)

inst_18520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00000003fffff; valaddr_reg:x3; val_offset:55560*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55560*0 + 3*88*FLEN/8, x4, x1, x2)

inst_18521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00000007fffff; valaddr_reg:x3; val_offset:55563*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55563*0 + 3*89*FLEN/8, x4, x1, x2)

inst_18522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000000ffffff; valaddr_reg:x3; val_offset:55566*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55566*0 + 3*90*FLEN/8, x4, x1, x2)

inst_18523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000001ffffff; valaddr_reg:x3; val_offset:55569*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55569*0 + 3*91*FLEN/8, x4, x1, x2)

inst_18524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000003ffffff; valaddr_reg:x3; val_offset:55572*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55572*0 + 3*92*FLEN/8, x4, x1, x2)

inst_18525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000007ffffff; valaddr_reg:x3; val_offset:55575*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55575*0 + 3*93*FLEN/8, x4, x1, x2)

inst_18526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000000fffffff; valaddr_reg:x3; val_offset:55578*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55578*0 + 3*94*FLEN/8, x4, x1, x2)

inst_18527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000001fffffff; valaddr_reg:x3; val_offset:55581*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55581*0 + 3*95*FLEN/8, x4, x1, x2)

inst_18528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000003fffffff; valaddr_reg:x3; val_offset:55584*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55584*0 + 3*96*FLEN/8, x4, x1, x2)

inst_18529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000007fffffff; valaddr_reg:x3; val_offset:55587*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55587*0 + 3*97*FLEN/8, x4, x1, x2)

inst_18530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00000ffffffff; valaddr_reg:x3; val_offset:55590*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55590*0 + 3*98*FLEN/8, x4, x1, x2)

inst_18531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00001ffffffff; valaddr_reg:x3; val_offset:55593*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55593*0 + 3*99*FLEN/8, x4, x1, x2)

inst_18532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00003ffffffff; valaddr_reg:x3; val_offset:55596*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55596*0 + 3*100*FLEN/8, x4, x1, x2)

inst_18533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00007ffffffff; valaddr_reg:x3; val_offset:55599*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55599*0 + 3*101*FLEN/8, x4, x1, x2)

inst_18534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0000fffffffff; valaddr_reg:x3; val_offset:55602*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55602*0 + 3*102*FLEN/8, x4, x1, x2)

inst_18535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0001fffffffff; valaddr_reg:x3; val_offset:55605*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55605*0 + 3*103*FLEN/8, x4, x1, x2)

inst_18536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0003fffffffff; valaddr_reg:x3; val_offset:55608*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55608*0 + 3*104*FLEN/8, x4, x1, x2)

inst_18537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0007fffffffff; valaddr_reg:x3; val_offset:55611*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55611*0 + 3*105*FLEN/8, x4, x1, x2)

inst_18538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb000ffffffffff; valaddr_reg:x3; val_offset:55614*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55614*0 + 3*106*FLEN/8, x4, x1, x2)

inst_18539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb001ffffffffff; valaddr_reg:x3; val_offset:55617*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55617*0 + 3*107*FLEN/8, x4, x1, x2)

inst_18540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb003ffffffffff; valaddr_reg:x3; val_offset:55620*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55620*0 + 3*108*FLEN/8, x4, x1, x2)

inst_18541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb007ffffffffff; valaddr_reg:x3; val_offset:55623*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55623*0 + 3*109*FLEN/8, x4, x1, x2)

inst_18542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb00fffffffffff; valaddr_reg:x3; val_offset:55626*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55626*0 + 3*110*FLEN/8, x4, x1, x2)

inst_18543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb01fffffffffff; valaddr_reg:x3; val_offset:55629*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55629*0 + 3*111*FLEN/8, x4, x1, x2)

inst_18544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb03fffffffffff; valaddr_reg:x3; val_offset:55632*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55632*0 + 3*112*FLEN/8, x4, x1, x2)

inst_18545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb07fffffffffff; valaddr_reg:x3; val_offset:55635*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55635*0 + 3*113*FLEN/8, x4, x1, x2)

inst_18546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb0ffffffffffff; valaddr_reg:x3; val_offset:55638*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55638*0 + 3*114*FLEN/8, x4, x1, x2)

inst_18547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb1ffffffffffff; valaddr_reg:x3; val_offset:55641*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55641*0 + 3*115*FLEN/8, x4, x1, x2)

inst_18548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb3ffffffffffff; valaddr_reg:x3; val_offset:55644*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55644*0 + 3*116*FLEN/8, x4, x1, x2)

inst_18549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb7ffffffffffff; valaddr_reg:x3; val_offset:55647*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55647*0 + 3*117*FLEN/8, x4, x1, x2)

inst_18550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3eb8000000000000; valaddr_reg:x3; val_offset:55650*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55650*0 + 3*118*FLEN/8, x4, x1, x2)

inst_18551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebc000000000000; valaddr_reg:x3; val_offset:55653*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55653*0 + 3*119*FLEN/8, x4, x1, x2)

inst_18552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebe000000000000; valaddr_reg:x3; val_offset:55656*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55656*0 + 3*120*FLEN/8, x4, x1, x2)

inst_18553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebf000000000000; valaddr_reg:x3; val_offset:55659*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55659*0 + 3*121*FLEN/8, x4, x1, x2)

inst_18554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebf800000000000; valaddr_reg:x3; val_offset:55662*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55662*0 + 3*122*FLEN/8, x4, x1, x2)

inst_18555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfc00000000000; valaddr_reg:x3; val_offset:55665*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55665*0 + 3*123*FLEN/8, x4, x1, x2)

inst_18556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfe00000000000; valaddr_reg:x3; val_offset:55668*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55668*0 + 3*124*FLEN/8, x4, x1, x2)

inst_18557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebff00000000000; valaddr_reg:x3; val_offset:55671*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55671*0 + 3*125*FLEN/8, x4, x1, x2)

inst_18558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebff80000000000; valaddr_reg:x3; val_offset:55674*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55674*0 + 3*126*FLEN/8, x4, x1, x2)

inst_18559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffc0000000000; valaddr_reg:x3; val_offset:55677*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55677*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_18560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffe0000000000; valaddr_reg:x3; val_offset:55680*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55680*0 + 3*128*FLEN/8, x4, x1, x2)

inst_18561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfff0000000000; valaddr_reg:x3; val_offset:55683*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55683*0 + 3*129*FLEN/8, x4, x1, x2)

inst_18562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfff8000000000; valaddr_reg:x3; val_offset:55686*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55686*0 + 3*130*FLEN/8, x4, x1, x2)

inst_18563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffc000000000; valaddr_reg:x3; val_offset:55689*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55689*0 + 3*131*FLEN/8, x4, x1, x2)

inst_18564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffe000000000; valaddr_reg:x3; val_offset:55692*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55692*0 + 3*132*FLEN/8, x4, x1, x2)

inst_18565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffff000000000; valaddr_reg:x3; val_offset:55695*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55695*0 + 3*133*FLEN/8, x4, x1, x2)

inst_18566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffff800000000; valaddr_reg:x3; val_offset:55698*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55698*0 + 3*134*FLEN/8, x4, x1, x2)

inst_18567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffc00000000; valaddr_reg:x3; val_offset:55701*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55701*0 + 3*135*FLEN/8, x4, x1, x2)

inst_18568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffe00000000; valaddr_reg:x3; val_offset:55704*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55704*0 + 3*136*FLEN/8, x4, x1, x2)

inst_18569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffff00000000; valaddr_reg:x3; val_offset:55707*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55707*0 + 3*137*FLEN/8, x4, x1, x2)

inst_18570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffff80000000; valaddr_reg:x3; val_offset:55710*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55710*0 + 3*138*FLEN/8, x4, x1, x2)

inst_18571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffc0000000; valaddr_reg:x3; val_offset:55713*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55713*0 + 3*139*FLEN/8, x4, x1, x2)

inst_18572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffe0000000; valaddr_reg:x3; val_offset:55716*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55716*0 + 3*140*FLEN/8, x4, x1, x2)

inst_18573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffff0000000; valaddr_reg:x3; val_offset:55719*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55719*0 + 3*141*FLEN/8, x4, x1, x2)

inst_18574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffff8000000; valaddr_reg:x3; val_offset:55722*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55722*0 + 3*142*FLEN/8, x4, x1, x2)

inst_18575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffc000000; valaddr_reg:x3; val_offset:55725*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55725*0 + 3*143*FLEN/8, x4, x1, x2)

inst_18576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffe000000; valaddr_reg:x3; val_offset:55728*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55728*0 + 3*144*FLEN/8, x4, x1, x2)

inst_18577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffff000000; valaddr_reg:x3; val_offset:55731*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55731*0 + 3*145*FLEN/8, x4, x1, x2)

inst_18578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffff800000; valaddr_reg:x3; val_offset:55734*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55734*0 + 3*146*FLEN/8, x4, x1, x2)

inst_18579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffffc00000; valaddr_reg:x3; val_offset:55737*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55737*0 + 3*147*FLEN/8, x4, x1, x2)

inst_18580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffffe00000; valaddr_reg:x3; val_offset:55740*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55740*0 + 3*148*FLEN/8, x4, x1, x2)

inst_18581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffff00000; valaddr_reg:x3; val_offset:55743*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55743*0 + 3*149*FLEN/8, x4, x1, x2)

inst_18582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffff80000; valaddr_reg:x3; val_offset:55746*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55746*0 + 3*150*FLEN/8, x4, x1, x2)

inst_18583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffffc0000; valaddr_reg:x3; val_offset:55749*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55749*0 + 3*151*FLEN/8, x4, x1, x2)

inst_18584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffffe0000; valaddr_reg:x3; val_offset:55752*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55752*0 + 3*152*FLEN/8, x4, x1, x2)

inst_18585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffffff0000; valaddr_reg:x3; val_offset:55755*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55755*0 + 3*153*FLEN/8, x4, x1, x2)

inst_18586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffffff8000; valaddr_reg:x3; val_offset:55758*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55758*0 + 3*154*FLEN/8, x4, x1, x2)

inst_18587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffffffc000; valaddr_reg:x3; val_offset:55761*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55761*0 + 3*155*FLEN/8, x4, x1, x2)

inst_18588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffffffe000; valaddr_reg:x3; val_offset:55764*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55764*0 + 3*156*FLEN/8, x4, x1, x2)

inst_18589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffffff000; valaddr_reg:x3; val_offset:55767*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55767*0 + 3*157*FLEN/8, x4, x1, x2)

inst_18590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffffff800; valaddr_reg:x3; val_offset:55770*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55770*0 + 3*158*FLEN/8, x4, x1, x2)

inst_18591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffffffc00; valaddr_reg:x3; val_offset:55773*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55773*0 + 3*159*FLEN/8, x4, x1, x2)

inst_18592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffffffe00; valaddr_reg:x3; val_offset:55776*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55776*0 + 3*160*FLEN/8, x4, x1, x2)

inst_18593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffffffff00; valaddr_reg:x3; val_offset:55779*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55779*0 + 3*161*FLEN/8, x4, x1, x2)

inst_18594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffffffff80; valaddr_reg:x3; val_offset:55782*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55782*0 + 3*162*FLEN/8, x4, x1, x2)

inst_18595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffffffffc0; valaddr_reg:x3; val_offset:55785*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55785*0 + 3*163*FLEN/8, x4, x1, x2)

inst_18596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffffffffe0; valaddr_reg:x3; val_offset:55788*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55788*0 + 3*164*FLEN/8, x4, x1, x2)

inst_18597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffffffff0; valaddr_reg:x3; val_offset:55791*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55791*0 + 3*165*FLEN/8, x4, x1, x2)

inst_18598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffffffff8; valaddr_reg:x3; val_offset:55794*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55794*0 + 3*166*FLEN/8, x4, x1, x2)

inst_18599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffffffffc; valaddr_reg:x3; val_offset:55797*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55797*0 + 3*167*FLEN/8, x4, x1, x2)

inst_18600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebffffffffffffe; valaddr_reg:x3; val_offset:55800*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55800*0 + 3*168*FLEN/8, x4, x1, x2)

inst_18601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ebfffffffffffff; valaddr_reg:x3; val_offset:55803*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55803*0 + 3*169*FLEN/8, x4, x1, x2)

inst_18602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:55806*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55806*0 + 3*170*FLEN/8, x4, x1, x2)

inst_18603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:55809*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55809*0 + 3*171*FLEN/8, x4, x1, x2)

inst_18604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:55812*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55812*0 + 3*172*FLEN/8, x4, x1, x2)

inst_18605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:55815*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55815*0 + 3*173*FLEN/8, x4, x1, x2)

inst_18606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:55818*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55818*0 + 3*174*FLEN/8, x4, x1, x2)

inst_18607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:55821*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55821*0 + 3*175*FLEN/8, x4, x1, x2)

inst_18608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:55824*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55824*0 + 3*176*FLEN/8, x4, x1, x2)

inst_18609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:55827*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55827*0 + 3*177*FLEN/8, x4, x1, x2)

inst_18610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:55830*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55830*0 + 3*178*FLEN/8, x4, x1, x2)

inst_18611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:55833*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55833*0 + 3*179*FLEN/8, x4, x1, x2)

inst_18612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:55836*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55836*0 + 3*180*FLEN/8, x4, x1, x2)

inst_18613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:55839*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55839*0 + 3*181*FLEN/8, x4, x1, x2)

inst_18614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:55842*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55842*0 + 3*182*FLEN/8, x4, x1, x2)

inst_18615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:55845*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55845*0 + 3*183*FLEN/8, x4, x1, x2)

inst_18616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:55848*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55848*0 + 3*184*FLEN/8, x4, x1, x2)

inst_18617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:55851*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55851*0 + 3*185*FLEN/8, x4, x1, x2)

inst_18618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:55854*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55854*0 + 3*186*FLEN/8, x4, x1, x2)

inst_18619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:55857*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55857*0 + 3*187*FLEN/8, x4, x1, x2)

inst_18620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:55860*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55860*0 + 3*188*FLEN/8, x4, x1, x2)

inst_18621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:55863*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55863*0 + 3*189*FLEN/8, x4, x1, x2)

inst_18622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:55866*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55866*0 + 3*190*FLEN/8, x4, x1, x2)

inst_18623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3c4b1c4745dd7 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x9e66697eccd01 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83c4b1c4745dd7; op2val:0x2059e66697eccd01;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:55869*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55869*0 + 3*191*FLEN/8, x4, x1, x2)

inst_18624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:55872*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55872*0 + 3*192*FLEN/8, x4, x1, x2)

inst_18625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:55875*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55875*0 + 3*193*FLEN/8, x4, x1, x2)

inst_18626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:55878*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55878*0 + 3*194*FLEN/8, x4, x1, x2)

inst_18627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:55881*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55881*0 + 3*195*FLEN/8, x4, x1, x2)

inst_18628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:55884*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55884*0 + 3*196*FLEN/8, x4, x1, x2)

inst_18629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:55887*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55887*0 + 3*197*FLEN/8, x4, x1, x2)

inst_18630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:55890*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55890*0 + 3*198*FLEN/8, x4, x1, x2)

inst_18631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:55893*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55893*0 + 3*199*FLEN/8, x4, x1, x2)

inst_18632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:55896*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55896*0 + 3*200*FLEN/8, x4, x1, x2)

inst_18633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:55899*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55899*0 + 3*201*FLEN/8, x4, x1, x2)

inst_18634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:55902*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55902*0 + 3*202*FLEN/8, x4, x1, x2)

inst_18635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:55905*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55905*0 + 3*203*FLEN/8, x4, x1, x2)

inst_18636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:55908*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55908*0 + 3*204*FLEN/8, x4, x1, x2)

inst_18637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:55911*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55911*0 + 3*205*FLEN/8, x4, x1, x2)

inst_18638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:55914*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55914*0 + 3*206*FLEN/8, x4, x1, x2)

inst_18639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:55917*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55917*0 + 3*207*FLEN/8, x4, x1, x2)

inst_18640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:55920*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55920*0 + 3*208*FLEN/8, x4, x1, x2)

inst_18641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:55923*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55923*0 + 3*209*FLEN/8, x4, x1, x2)

inst_18642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:55926*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55926*0 + 3*210*FLEN/8, x4, x1, x2)

inst_18643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:55929*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55929*0 + 3*211*FLEN/8, x4, x1, x2)

inst_18644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:55932*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55932*0 + 3*212*FLEN/8, x4, x1, x2)

inst_18645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:55935*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55935*0 + 3*213*FLEN/8, x4, x1, x2)

inst_18646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000000000000; valaddr_reg:x3; val_offset:55938*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55938*0 + 3*214*FLEN/8, x4, x1, x2)

inst_18647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000000000001; valaddr_reg:x3; val_offset:55941*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55941*0 + 3*215*FLEN/8, x4, x1, x2)

inst_18648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000000000003; valaddr_reg:x3; val_offset:55944*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55944*0 + 3*216*FLEN/8, x4, x1, x2)

inst_18649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000000000007; valaddr_reg:x3; val_offset:55947*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55947*0 + 3*217*FLEN/8, x4, x1, x2)

inst_18650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000000000000f; valaddr_reg:x3; val_offset:55950*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55950*0 + 3*218*FLEN/8, x4, x1, x2)

inst_18651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000000000001f; valaddr_reg:x3; val_offset:55953*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55953*0 + 3*219*FLEN/8, x4, x1, x2)

inst_18652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000000000003f; valaddr_reg:x3; val_offset:55956*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55956*0 + 3*220*FLEN/8, x4, x1, x2)

inst_18653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000000000007f; valaddr_reg:x3; val_offset:55959*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55959*0 + 3*221*FLEN/8, x4, x1, x2)

inst_18654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00000000000ff; valaddr_reg:x3; val_offset:55962*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55962*0 + 3*222*FLEN/8, x4, x1, x2)

inst_18655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00000000001ff; valaddr_reg:x3; val_offset:55965*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55965*0 + 3*223*FLEN/8, x4, x1, x2)

inst_18656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00000000003ff; valaddr_reg:x3; val_offset:55968*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55968*0 + 3*224*FLEN/8, x4, x1, x2)

inst_18657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00000000007ff; valaddr_reg:x3; val_offset:55971*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55971*0 + 3*225*FLEN/8, x4, x1, x2)

inst_18658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000000000fff; valaddr_reg:x3; val_offset:55974*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55974*0 + 3*226*FLEN/8, x4, x1, x2)

inst_18659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000000001fff; valaddr_reg:x3; val_offset:55977*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55977*0 + 3*227*FLEN/8, x4, x1, x2)

inst_18660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000000003fff; valaddr_reg:x3; val_offset:55980*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55980*0 + 3*228*FLEN/8, x4, x1, x2)

inst_18661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000000007fff; valaddr_reg:x3; val_offset:55983*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55983*0 + 3*229*FLEN/8, x4, x1, x2)

inst_18662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000000000ffff; valaddr_reg:x3; val_offset:55986*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55986*0 + 3*230*FLEN/8, x4, x1, x2)

inst_18663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000000001ffff; valaddr_reg:x3; val_offset:55989*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55989*0 + 3*231*FLEN/8, x4, x1, x2)

inst_18664:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000000003ffff; valaddr_reg:x3; val_offset:55992*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55992*0 + 3*232*FLEN/8, x4, x1, x2)

inst_18665:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000000007ffff; valaddr_reg:x3; val_offset:55995*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55995*0 + 3*233*FLEN/8, x4, x1, x2)

inst_18666:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00000000fffff; valaddr_reg:x3; val_offset:55998*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 55998*0 + 3*234*FLEN/8, x4, x1, x2)

inst_18667:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00000001fffff; valaddr_reg:x3; val_offset:56001*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56001*0 + 3*235*FLEN/8, x4, x1, x2)

inst_18668:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00000003fffff; valaddr_reg:x3; val_offset:56004*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56004*0 + 3*236*FLEN/8, x4, x1, x2)

inst_18669:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00000007fffff; valaddr_reg:x3; val_offset:56007*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56007*0 + 3*237*FLEN/8, x4, x1, x2)

inst_18670:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000000ffffff; valaddr_reg:x3; val_offset:56010*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56010*0 + 3*238*FLEN/8, x4, x1, x2)

inst_18671:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000001ffffff; valaddr_reg:x3; val_offset:56013*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56013*0 + 3*239*FLEN/8, x4, x1, x2)

inst_18672:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000003ffffff; valaddr_reg:x3; val_offset:56016*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56016*0 + 3*240*FLEN/8, x4, x1, x2)

inst_18673:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000007ffffff; valaddr_reg:x3; val_offset:56019*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56019*0 + 3*241*FLEN/8, x4, x1, x2)

inst_18674:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000000fffffff; valaddr_reg:x3; val_offset:56022*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56022*0 + 3*242*FLEN/8, x4, x1, x2)

inst_18675:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000001fffffff; valaddr_reg:x3; val_offset:56025*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56025*0 + 3*243*FLEN/8, x4, x1, x2)

inst_18676:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000003fffffff; valaddr_reg:x3; val_offset:56028*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56028*0 + 3*244*FLEN/8, x4, x1, x2)

inst_18677:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000007fffffff; valaddr_reg:x3; val_offset:56031*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56031*0 + 3*245*FLEN/8, x4, x1, x2)

inst_18678:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00000ffffffff; valaddr_reg:x3; val_offset:56034*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56034*0 + 3*246*FLEN/8, x4, x1, x2)

inst_18679:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00001ffffffff; valaddr_reg:x3; val_offset:56037*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56037*0 + 3*247*FLEN/8, x4, x1, x2)

inst_18680:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00003ffffffff; valaddr_reg:x3; val_offset:56040*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56040*0 + 3*248*FLEN/8, x4, x1, x2)

inst_18681:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00007ffffffff; valaddr_reg:x3; val_offset:56043*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56043*0 + 3*249*FLEN/8, x4, x1, x2)

inst_18682:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0000fffffffff; valaddr_reg:x3; val_offset:56046*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56046*0 + 3*250*FLEN/8, x4, x1, x2)

inst_18683:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0001fffffffff; valaddr_reg:x3; val_offset:56049*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56049*0 + 3*251*FLEN/8, x4, x1, x2)

inst_18684:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0003fffffffff; valaddr_reg:x3; val_offset:56052*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56052*0 + 3*252*FLEN/8, x4, x1, x2)

inst_18685:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0007fffffffff; valaddr_reg:x3; val_offset:56055*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56055*0 + 3*253*FLEN/8, x4, x1, x2)

inst_18686:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a000ffffffffff; valaddr_reg:x3; val_offset:56058*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56058*0 + 3*254*FLEN/8, x4, x1, x2)

inst_18687:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a001ffffffffff; valaddr_reg:x3; val_offset:56061*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56061*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_18688:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a003ffffffffff; valaddr_reg:x3; val_offset:56064*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56064*0 + 3*256*FLEN/8, x4, x1, x2)

inst_18689:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a007ffffffffff; valaddr_reg:x3; val_offset:56067*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56067*0 + 3*257*FLEN/8, x4, x1, x2)

inst_18690:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a00fffffffffff; valaddr_reg:x3; val_offset:56070*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56070*0 + 3*258*FLEN/8, x4, x1, x2)

inst_18691:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a01fffffffffff; valaddr_reg:x3; val_offset:56073*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56073*0 + 3*259*FLEN/8, x4, x1, x2)

inst_18692:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a03fffffffffff; valaddr_reg:x3; val_offset:56076*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56076*0 + 3*260*FLEN/8, x4, x1, x2)

inst_18693:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a07fffffffffff; valaddr_reg:x3; val_offset:56079*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56079*0 + 3*261*FLEN/8, x4, x1, x2)

inst_18694:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a0ffffffffffff; valaddr_reg:x3; val_offset:56082*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56082*0 + 3*262*FLEN/8, x4, x1, x2)

inst_18695:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a1ffffffffffff; valaddr_reg:x3; val_offset:56085*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56085*0 + 3*263*FLEN/8, x4, x1, x2)

inst_18696:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a3ffffffffffff; valaddr_reg:x3; val_offset:56088*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56088*0 + 3*264*FLEN/8, x4, x1, x2)

inst_18697:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a7ffffffffffff; valaddr_reg:x3; val_offset:56091*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56091*0 + 3*265*FLEN/8, x4, x1, x2)

inst_18698:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83a8000000000000; valaddr_reg:x3; val_offset:56094*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56094*0 + 3*266*FLEN/8, x4, x1, x2)

inst_18699:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83ac000000000000; valaddr_reg:x3; val_offset:56097*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56097*0 + 3*267*FLEN/8, x4, x1, x2)

inst_18700:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83ae000000000000; valaddr_reg:x3; val_offset:56100*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56100*0 + 3*268*FLEN/8, x4, x1, x2)

inst_18701:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83af000000000000; valaddr_reg:x3; val_offset:56103*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56103*0 + 3*269*FLEN/8, x4, x1, x2)

inst_18702:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83af800000000000; valaddr_reg:x3; val_offset:56106*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56106*0 + 3*270*FLEN/8, x4, x1, x2)

inst_18703:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afc00000000000; valaddr_reg:x3; val_offset:56109*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56109*0 + 3*271*FLEN/8, x4, x1, x2)

inst_18704:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afe00000000000; valaddr_reg:x3; val_offset:56112*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56112*0 + 3*272*FLEN/8, x4, x1, x2)

inst_18705:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83aff00000000000; valaddr_reg:x3; val_offset:56115*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56115*0 + 3*273*FLEN/8, x4, x1, x2)

inst_18706:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83aff80000000000; valaddr_reg:x3; val_offset:56118*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56118*0 + 3*274*FLEN/8, x4, x1, x2)

inst_18707:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affc0000000000; valaddr_reg:x3; val_offset:56121*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56121*0 + 3*275*FLEN/8, x4, x1, x2)

inst_18708:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affe0000000000; valaddr_reg:x3; val_offset:56124*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56124*0 + 3*276*FLEN/8, x4, x1, x2)

inst_18709:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afff0000000000; valaddr_reg:x3; val_offset:56127*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56127*0 + 3*277*FLEN/8, x4, x1, x2)

inst_18710:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afff8000000000; valaddr_reg:x3; val_offset:56130*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56130*0 + 3*278*FLEN/8, x4, x1, x2)

inst_18711:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffc000000000; valaddr_reg:x3; val_offset:56133*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56133*0 + 3*279*FLEN/8, x4, x1, x2)

inst_18712:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffe000000000; valaddr_reg:x3; val_offset:56136*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56136*0 + 3*280*FLEN/8, x4, x1, x2)

inst_18713:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affff000000000; valaddr_reg:x3; val_offset:56139*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56139*0 + 3*281*FLEN/8, x4, x1, x2)

inst_18714:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affff800000000; valaddr_reg:x3; val_offset:56142*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56142*0 + 3*282*FLEN/8, x4, x1, x2)

inst_18715:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffc00000000; valaddr_reg:x3; val_offset:56145*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56145*0 + 3*283*FLEN/8, x4, x1, x2)

inst_18716:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffe00000000; valaddr_reg:x3; val_offset:56148*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56148*0 + 3*284*FLEN/8, x4, x1, x2)

inst_18717:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffff00000000; valaddr_reg:x3; val_offset:56151*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56151*0 + 3*285*FLEN/8, x4, x1, x2)

inst_18718:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffff80000000; valaddr_reg:x3; val_offset:56154*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56154*0 + 3*286*FLEN/8, x4, x1, x2)

inst_18719:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffc0000000; valaddr_reg:x3; val_offset:56157*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56157*0 + 3*287*FLEN/8, x4, x1, x2)

inst_18720:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffe0000000; valaddr_reg:x3; val_offset:56160*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56160*0 + 3*288*FLEN/8, x4, x1, x2)

inst_18721:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffff0000000; valaddr_reg:x3; val_offset:56163*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56163*0 + 3*289*FLEN/8, x4, x1, x2)

inst_18722:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffff8000000; valaddr_reg:x3; val_offset:56166*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56166*0 + 3*290*FLEN/8, x4, x1, x2)

inst_18723:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffc000000; valaddr_reg:x3; val_offset:56169*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56169*0 + 3*291*FLEN/8, x4, x1, x2)

inst_18724:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffe000000; valaddr_reg:x3; val_offset:56172*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56172*0 + 3*292*FLEN/8, x4, x1, x2)

inst_18725:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffff000000; valaddr_reg:x3; val_offset:56175*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56175*0 + 3*293*FLEN/8, x4, x1, x2)

inst_18726:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffff800000; valaddr_reg:x3; val_offset:56178*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56178*0 + 3*294*FLEN/8, x4, x1, x2)

inst_18727:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffffc00000; valaddr_reg:x3; val_offset:56181*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56181*0 + 3*295*FLEN/8, x4, x1, x2)

inst_18728:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffffe00000; valaddr_reg:x3; val_offset:56184*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56184*0 + 3*296*FLEN/8, x4, x1, x2)

inst_18729:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffff00000; valaddr_reg:x3; val_offset:56187*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56187*0 + 3*297*FLEN/8, x4, x1, x2)

inst_18730:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffff80000; valaddr_reg:x3; val_offset:56190*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56190*0 + 3*298*FLEN/8, x4, x1, x2)

inst_18731:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffffc0000; valaddr_reg:x3; val_offset:56193*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56193*0 + 3*299*FLEN/8, x4, x1, x2)

inst_18732:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffffe0000; valaddr_reg:x3; val_offset:56196*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56196*0 + 3*300*FLEN/8, x4, x1, x2)

inst_18733:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffffff0000; valaddr_reg:x3; val_offset:56199*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56199*0 + 3*301*FLEN/8, x4, x1, x2)

inst_18734:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffffff8000; valaddr_reg:x3; val_offset:56202*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56202*0 + 3*302*FLEN/8, x4, x1, x2)

inst_18735:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffffffc000; valaddr_reg:x3; val_offset:56205*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56205*0 + 3*303*FLEN/8, x4, x1, x2)

inst_18736:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffffffe000; valaddr_reg:x3; val_offset:56208*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56208*0 + 3*304*FLEN/8, x4, x1, x2)

inst_18737:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffffff000; valaddr_reg:x3; val_offset:56211*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56211*0 + 3*305*FLEN/8, x4, x1, x2)

inst_18738:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffffff800; valaddr_reg:x3; val_offset:56214*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56214*0 + 3*306*FLEN/8, x4, x1, x2)

inst_18739:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffffffc00; valaddr_reg:x3; val_offset:56217*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56217*0 + 3*307*FLEN/8, x4, x1, x2)

inst_18740:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffffffe00; valaddr_reg:x3; val_offset:56220*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56220*0 + 3*308*FLEN/8, x4, x1, x2)

inst_18741:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffffffff00; valaddr_reg:x3; val_offset:56223*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56223*0 + 3*309*FLEN/8, x4, x1, x2)

inst_18742:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffffffff80; valaddr_reg:x3; val_offset:56226*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56226*0 + 3*310*FLEN/8, x4, x1, x2)

inst_18743:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffffffffc0; valaddr_reg:x3; val_offset:56229*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56229*0 + 3*311*FLEN/8, x4, x1, x2)

inst_18744:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffffffffe0; valaddr_reg:x3; val_offset:56232*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56232*0 + 3*312*FLEN/8, x4, x1, x2)

inst_18745:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffffffff0; valaddr_reg:x3; val_offset:56235*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56235*0 + 3*313*FLEN/8, x4, x1, x2)

inst_18746:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffffffff8; valaddr_reg:x3; val_offset:56238*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56238*0 + 3*314*FLEN/8, x4, x1, x2)

inst_18747:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffffffffc; valaddr_reg:x3; val_offset:56241*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56241*0 + 3*315*FLEN/8, x4, x1, x2)

inst_18748:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83affffffffffffe; valaddr_reg:x3; val_offset:56244*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56244*0 + 3*316*FLEN/8, x4, x1, x2)

inst_18749:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x40503f606821b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f840503f606821b; op2val:0x8000;
op3val:0x83afffffffffffff; valaddr_reg:x3; val_offset:56247*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56247*0 + 3*317*FLEN/8, x4, x1, x2)

inst_18750:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:56250*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56250*0 + 3*318*FLEN/8, x4, x1, x2)

inst_18751:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:56253*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56253*0 + 3*319*FLEN/8, x4, x1, x2)

inst_18752:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:56256*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56256*0 + 3*320*FLEN/8, x4, x1, x2)

inst_18753:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:56259*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56259*0 + 3*321*FLEN/8, x4, x1, x2)

inst_18754:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:56262*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56262*0 + 3*322*FLEN/8, x4, x1, x2)

inst_18755:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:56265*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56265*0 + 3*323*FLEN/8, x4, x1, x2)

inst_18756:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:56268*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56268*0 + 3*324*FLEN/8, x4, x1, x2)

inst_18757:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:56271*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56271*0 + 3*325*FLEN/8, x4, x1, x2)

inst_18758:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:56274*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56274*0 + 3*326*FLEN/8, x4, x1, x2)

inst_18759:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:56277*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56277*0 + 3*327*FLEN/8, x4, x1, x2)

inst_18760:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:56280*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56280*0 + 3*328*FLEN/8, x4, x1, x2)

inst_18761:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:56283*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56283*0 + 3*329*FLEN/8, x4, x1, x2)

inst_18762:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:56286*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56286*0 + 3*330*FLEN/8, x4, x1, x2)

inst_18763:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:56289*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56289*0 + 3*331*FLEN/8, x4, x1, x2)

inst_18764:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:56292*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56292*0 + 3*332*FLEN/8, x4, x1, x2)

inst_18765:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:56295*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56295*0 + 3*333*FLEN/8, x4, x1, x2)

inst_18766:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:56298*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56298*0 + 3*334*FLEN/8, x4, x1, x2)

inst_18767:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:56301*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56301*0 + 3*335*FLEN/8, x4, x1, x2)

inst_18768:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:56304*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56304*0 + 3*336*FLEN/8, x4, x1, x2)

inst_18769:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:56307*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56307*0 + 3*337*FLEN/8, x4, x1, x2)

inst_18770:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:56310*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56310*0 + 3*338*FLEN/8, x4, x1, x2)

inst_18771:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:56313*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56313*0 + 3*339*FLEN/8, x4, x1, x2)

inst_18772:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000000000000; valaddr_reg:x3; val_offset:56316*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56316*0 + 3*340*FLEN/8, x4, x1, x2)

inst_18773:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000000000001; valaddr_reg:x3; val_offset:56319*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56319*0 + 3*341*FLEN/8, x4, x1, x2)

inst_18774:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000000000003; valaddr_reg:x3; val_offset:56322*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56322*0 + 3*342*FLEN/8, x4, x1, x2)

inst_18775:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000000000007; valaddr_reg:x3; val_offset:56325*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56325*0 + 3*343*FLEN/8, x4, x1, x2)

inst_18776:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000000000000f; valaddr_reg:x3; val_offset:56328*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56328*0 + 3*344*FLEN/8, x4, x1, x2)

inst_18777:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000000000001f; valaddr_reg:x3; val_offset:56331*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56331*0 + 3*345*FLEN/8, x4, x1, x2)

inst_18778:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000000000003f; valaddr_reg:x3; val_offset:56334*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56334*0 + 3*346*FLEN/8, x4, x1, x2)

inst_18779:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000000000007f; valaddr_reg:x3; val_offset:56337*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56337*0 + 3*347*FLEN/8, x4, x1, x2)

inst_18780:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900000000000ff; valaddr_reg:x3; val_offset:56340*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56340*0 + 3*348*FLEN/8, x4, x1, x2)

inst_18781:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900000000001ff; valaddr_reg:x3; val_offset:56343*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56343*0 + 3*349*FLEN/8, x4, x1, x2)

inst_18782:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900000000003ff; valaddr_reg:x3; val_offset:56346*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56346*0 + 3*350*FLEN/8, x4, x1, x2)

inst_18783:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900000000007ff; valaddr_reg:x3; val_offset:56349*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56349*0 + 3*351*FLEN/8, x4, x1, x2)

inst_18784:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000000000fff; valaddr_reg:x3; val_offset:56352*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56352*0 + 3*352*FLEN/8, x4, x1, x2)

inst_18785:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000000001fff; valaddr_reg:x3; val_offset:56355*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56355*0 + 3*353*FLEN/8, x4, x1, x2)

inst_18786:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000000003fff; valaddr_reg:x3; val_offset:56358*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56358*0 + 3*354*FLEN/8, x4, x1, x2)

inst_18787:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000000007fff; valaddr_reg:x3; val_offset:56361*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56361*0 + 3*355*FLEN/8, x4, x1, x2)

inst_18788:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000000000ffff; valaddr_reg:x3; val_offset:56364*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56364*0 + 3*356*FLEN/8, x4, x1, x2)

inst_18789:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000000001ffff; valaddr_reg:x3; val_offset:56367*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56367*0 + 3*357*FLEN/8, x4, x1, x2)

inst_18790:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000000003ffff; valaddr_reg:x3; val_offset:56370*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56370*0 + 3*358*FLEN/8, x4, x1, x2)

inst_18791:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000000007ffff; valaddr_reg:x3; val_offset:56373*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56373*0 + 3*359*FLEN/8, x4, x1, x2)

inst_18792:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900000000fffff; valaddr_reg:x3; val_offset:56376*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56376*0 + 3*360*FLEN/8, x4, x1, x2)

inst_18793:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900000001fffff; valaddr_reg:x3; val_offset:56379*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56379*0 + 3*361*FLEN/8, x4, x1, x2)

inst_18794:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900000003fffff; valaddr_reg:x3; val_offset:56382*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56382*0 + 3*362*FLEN/8, x4, x1, x2)

inst_18795:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900000007fffff; valaddr_reg:x3; val_offset:56385*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56385*0 + 3*363*FLEN/8, x4, x1, x2)

inst_18796:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000000ffffff; valaddr_reg:x3; val_offset:56388*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56388*0 + 3*364*FLEN/8, x4, x1, x2)

inst_18797:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000001ffffff; valaddr_reg:x3; val_offset:56391*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56391*0 + 3*365*FLEN/8, x4, x1, x2)

inst_18798:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000003ffffff; valaddr_reg:x3; val_offset:56394*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56394*0 + 3*366*FLEN/8, x4, x1, x2)

inst_18799:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000007ffffff; valaddr_reg:x3; val_offset:56397*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56397*0 + 3*367*FLEN/8, x4, x1, x2)

inst_18800:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000000fffffff; valaddr_reg:x3; val_offset:56400*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56400*0 + 3*368*FLEN/8, x4, x1, x2)

inst_18801:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000001fffffff; valaddr_reg:x3; val_offset:56403*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56403*0 + 3*369*FLEN/8, x4, x1, x2)

inst_18802:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000003fffffff; valaddr_reg:x3; val_offset:56406*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56406*0 + 3*370*FLEN/8, x4, x1, x2)

inst_18803:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000007fffffff; valaddr_reg:x3; val_offset:56409*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56409*0 + 3*371*FLEN/8, x4, x1, x2)

inst_18804:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900000ffffffff; valaddr_reg:x3; val_offset:56412*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56412*0 + 3*372*FLEN/8, x4, x1, x2)

inst_18805:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900001ffffffff; valaddr_reg:x3; val_offset:56415*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56415*0 + 3*373*FLEN/8, x4, x1, x2)

inst_18806:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900003ffffffff; valaddr_reg:x3; val_offset:56418*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56418*0 + 3*374*FLEN/8, x4, x1, x2)

inst_18807:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900007ffffffff; valaddr_reg:x3; val_offset:56421*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56421*0 + 3*375*FLEN/8, x4, x1, x2)

inst_18808:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190000fffffffff; valaddr_reg:x3; val_offset:56424*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56424*0 + 3*376*FLEN/8, x4, x1, x2)

inst_18809:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190001fffffffff; valaddr_reg:x3; val_offset:56427*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56427*0 + 3*377*FLEN/8, x4, x1, x2)

inst_18810:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190003fffffffff; valaddr_reg:x3; val_offset:56430*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56430*0 + 3*378*FLEN/8, x4, x1, x2)

inst_18811:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190007fffffffff; valaddr_reg:x3; val_offset:56433*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56433*0 + 3*379*FLEN/8, x4, x1, x2)

inst_18812:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819000ffffffffff; valaddr_reg:x3; val_offset:56436*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56436*0 + 3*380*FLEN/8, x4, x1, x2)

inst_18813:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819001ffffffffff; valaddr_reg:x3; val_offset:56439*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56439*0 + 3*381*FLEN/8, x4, x1, x2)

inst_18814:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819003ffffffffff; valaddr_reg:x3; val_offset:56442*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56442*0 + 3*382*FLEN/8, x4, x1, x2)

inst_18815:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819007ffffffffff; valaddr_reg:x3; val_offset:56445*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56445*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_18816:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81900fffffffffff; valaddr_reg:x3; val_offset:56448*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56448*0 + 3*384*FLEN/8, x4, x1, x2)

inst_18817:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81901fffffffffff; valaddr_reg:x3; val_offset:56451*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56451*0 + 3*385*FLEN/8, x4, x1, x2)

inst_18818:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81903fffffffffff; valaddr_reg:x3; val_offset:56454*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56454*0 + 3*386*FLEN/8, x4, x1, x2)

inst_18819:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x81907fffffffffff; valaddr_reg:x3; val_offset:56457*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56457*0 + 3*387*FLEN/8, x4, x1, x2)

inst_18820:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8190ffffffffffff; valaddr_reg:x3; val_offset:56460*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56460*0 + 3*388*FLEN/8, x4, x1, x2)

inst_18821:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8191ffffffffffff; valaddr_reg:x3; val_offset:56463*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56463*0 + 3*389*FLEN/8, x4, x1, x2)

inst_18822:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8193ffffffffffff; valaddr_reg:x3; val_offset:56466*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56466*0 + 3*390*FLEN/8, x4, x1, x2)

inst_18823:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8197ffffffffffff; valaddr_reg:x3; val_offset:56469*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56469*0 + 3*391*FLEN/8, x4, x1, x2)

inst_18824:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x8198000000000000; valaddr_reg:x3; val_offset:56472*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56472*0 + 3*392*FLEN/8, x4, x1, x2)

inst_18825:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819c000000000000; valaddr_reg:x3; val_offset:56475*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56475*0 + 3*393*FLEN/8, x4, x1, x2)

inst_18826:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819e000000000000; valaddr_reg:x3; val_offset:56478*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56478*0 + 3*394*FLEN/8, x4, x1, x2)

inst_18827:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819f000000000000; valaddr_reg:x3; val_offset:56481*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56481*0 + 3*395*FLEN/8, x4, x1, x2)

inst_18828:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819f800000000000; valaddr_reg:x3; val_offset:56484*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56484*0 + 3*396*FLEN/8, x4, x1, x2)

inst_18829:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fc00000000000; valaddr_reg:x3; val_offset:56487*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56487*0 + 3*397*FLEN/8, x4, x1, x2)

inst_18830:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fe00000000000; valaddr_reg:x3; val_offset:56490*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56490*0 + 3*398*FLEN/8, x4, x1, x2)

inst_18831:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ff00000000000; valaddr_reg:x3; val_offset:56493*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56493*0 + 3*399*FLEN/8, x4, x1, x2)

inst_18832:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ff80000000000; valaddr_reg:x3; val_offset:56496*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56496*0 + 3*400*FLEN/8, x4, x1, x2)

inst_18833:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffc0000000000; valaddr_reg:x3; val_offset:56499*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56499*0 + 3*401*FLEN/8, x4, x1, x2)

inst_18834:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffe0000000000; valaddr_reg:x3; val_offset:56502*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56502*0 + 3*402*FLEN/8, x4, x1, x2)

inst_18835:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fff0000000000; valaddr_reg:x3; val_offset:56505*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56505*0 + 3*403*FLEN/8, x4, x1, x2)

inst_18836:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fff8000000000; valaddr_reg:x3; val_offset:56508*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56508*0 + 3*404*FLEN/8, x4, x1, x2)

inst_18837:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffc000000000; valaddr_reg:x3; val_offset:56511*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56511*0 + 3*405*FLEN/8, x4, x1, x2)

inst_18838:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffe000000000; valaddr_reg:x3; val_offset:56514*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56514*0 + 3*406*FLEN/8, x4, x1, x2)

inst_18839:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffff000000000; valaddr_reg:x3; val_offset:56517*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56517*0 + 3*407*FLEN/8, x4, x1, x2)

inst_18840:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffff800000000; valaddr_reg:x3; val_offset:56520*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56520*0 + 3*408*FLEN/8, x4, x1, x2)

inst_18841:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffc00000000; valaddr_reg:x3; val_offset:56523*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56523*0 + 3*409*FLEN/8, x4, x1, x2)

inst_18842:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffe00000000; valaddr_reg:x3; val_offset:56526*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56526*0 + 3*410*FLEN/8, x4, x1, x2)

inst_18843:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffff00000000; valaddr_reg:x3; val_offset:56529*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56529*0 + 3*411*FLEN/8, x4, x1, x2)

inst_18844:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffff80000000; valaddr_reg:x3; val_offset:56532*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56532*0 + 3*412*FLEN/8, x4, x1, x2)

inst_18845:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffc0000000; valaddr_reg:x3; val_offset:56535*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56535*0 + 3*413*FLEN/8, x4, x1, x2)

inst_18846:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffe0000000; valaddr_reg:x3; val_offset:56538*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56538*0 + 3*414*FLEN/8, x4, x1, x2)

inst_18847:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffff0000000; valaddr_reg:x3; val_offset:56541*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56541*0 + 3*415*FLEN/8, x4, x1, x2)

inst_18848:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffff8000000; valaddr_reg:x3; val_offset:56544*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56544*0 + 3*416*FLEN/8, x4, x1, x2)

inst_18849:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffc000000; valaddr_reg:x3; val_offset:56547*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56547*0 + 3*417*FLEN/8, x4, x1, x2)

inst_18850:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffe000000; valaddr_reg:x3; val_offset:56550*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56550*0 + 3*418*FLEN/8, x4, x1, x2)

inst_18851:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffff000000; valaddr_reg:x3; val_offset:56553*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56553*0 + 3*419*FLEN/8, x4, x1, x2)

inst_18852:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffff800000; valaddr_reg:x3; val_offset:56556*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56556*0 + 3*420*FLEN/8, x4, x1, x2)

inst_18853:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffffc00000; valaddr_reg:x3; val_offset:56559*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56559*0 + 3*421*FLEN/8, x4, x1, x2)

inst_18854:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffffe00000; valaddr_reg:x3; val_offset:56562*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56562*0 + 3*422*FLEN/8, x4, x1, x2)

inst_18855:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffff00000; valaddr_reg:x3; val_offset:56565*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56565*0 + 3*423*FLEN/8, x4, x1, x2)

inst_18856:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffff80000; valaddr_reg:x3; val_offset:56568*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56568*0 + 3*424*FLEN/8, x4, x1, x2)

inst_18857:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffffc0000; valaddr_reg:x3; val_offset:56571*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56571*0 + 3*425*FLEN/8, x4, x1, x2)

inst_18858:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffffe0000; valaddr_reg:x3; val_offset:56574*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56574*0 + 3*426*FLEN/8, x4, x1, x2)

inst_18859:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffffff0000; valaddr_reg:x3; val_offset:56577*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56577*0 + 3*427*FLEN/8, x4, x1, x2)

inst_18860:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffffff8000; valaddr_reg:x3; val_offset:56580*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56580*0 + 3*428*FLEN/8, x4, x1, x2)

inst_18861:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffffffc000; valaddr_reg:x3; val_offset:56583*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56583*0 + 3*429*FLEN/8, x4, x1, x2)

inst_18862:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffffffe000; valaddr_reg:x3; val_offset:56586*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56586*0 + 3*430*FLEN/8, x4, x1, x2)

inst_18863:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffffff000; valaddr_reg:x3; val_offset:56589*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56589*0 + 3*431*FLEN/8, x4, x1, x2)

inst_18864:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffffff800; valaddr_reg:x3; val_offset:56592*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56592*0 + 3*432*FLEN/8, x4, x1, x2)

inst_18865:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffffffc00; valaddr_reg:x3; val_offset:56595*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56595*0 + 3*433*FLEN/8, x4, x1, x2)

inst_18866:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffffffe00; valaddr_reg:x3; val_offset:56598*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56598*0 + 3*434*FLEN/8, x4, x1, x2)

inst_18867:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffffffff00; valaddr_reg:x3; val_offset:56601*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56601*0 + 3*435*FLEN/8, x4, x1, x2)

inst_18868:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffffffff80; valaddr_reg:x3; val_offset:56604*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56604*0 + 3*436*FLEN/8, x4, x1, x2)

inst_18869:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffffffffc0; valaddr_reg:x3; val_offset:56607*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56607*0 + 3*437*FLEN/8, x4, x1, x2)

inst_18870:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffffffffe0; valaddr_reg:x3; val_offset:56610*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56610*0 + 3*438*FLEN/8, x4, x1, x2)

inst_18871:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffffffff0; valaddr_reg:x3; val_offset:56613*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56613*0 + 3*439*FLEN/8, x4, x1, x2)

inst_18872:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffffffff8; valaddr_reg:x3; val_offset:56616*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56616*0 + 3*440*FLEN/8, x4, x1, x2)

inst_18873:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffffffffc; valaddr_reg:x3; val_offset:56619*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56619*0 + 3*441*FLEN/8, x4, x1, x2)

inst_18874:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819ffffffffffffe; valaddr_reg:x3; val_offset:56622*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56622*0 + 3*442*FLEN/8, x4, x1, x2)

inst_18875:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41ade61f9078b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f841ade61f9078b; op2val:0x8000;
op3val:0x819fffffffffffff; valaddr_reg:x3; val_offset:56625*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56625*0 + 3*443*FLEN/8, x4, x1, x2)

inst_18876:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000000000000; valaddr_reg:x3; val_offset:56628*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56628*0 + 3*444*FLEN/8, x4, x1, x2)

inst_18877:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000000000001; valaddr_reg:x3; val_offset:56631*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56631*0 + 3*445*FLEN/8, x4, x1, x2)

inst_18878:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000000000003; valaddr_reg:x3; val_offset:56634*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56634*0 + 3*446*FLEN/8, x4, x1, x2)

inst_18879:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000000000007; valaddr_reg:x3; val_offset:56637*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56637*0 + 3*447*FLEN/8, x4, x1, x2)

inst_18880:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000000000000f; valaddr_reg:x3; val_offset:56640*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56640*0 + 3*448*FLEN/8, x4, x1, x2)

inst_18881:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000000000001f; valaddr_reg:x3; val_offset:56643*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56643*0 + 3*449*FLEN/8, x4, x1, x2)

inst_18882:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000000000003f; valaddr_reg:x3; val_offset:56646*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56646*0 + 3*450*FLEN/8, x4, x1, x2)

inst_18883:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000000000007f; valaddr_reg:x3; val_offset:56649*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56649*0 + 3*451*FLEN/8, x4, x1, x2)

inst_18884:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00000000000ff; valaddr_reg:x3; val_offset:56652*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56652*0 + 3*452*FLEN/8, x4, x1, x2)

inst_18885:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00000000001ff; valaddr_reg:x3; val_offset:56655*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56655*0 + 3*453*FLEN/8, x4, x1, x2)

inst_18886:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00000000003ff; valaddr_reg:x3; val_offset:56658*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56658*0 + 3*454*FLEN/8, x4, x1, x2)

inst_18887:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00000000007ff; valaddr_reg:x3; val_offset:56661*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56661*0 + 3*455*FLEN/8, x4, x1, x2)

inst_18888:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000000000fff; valaddr_reg:x3; val_offset:56664*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56664*0 + 3*456*FLEN/8, x4, x1, x2)

inst_18889:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000000001fff; valaddr_reg:x3; val_offset:56667*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56667*0 + 3*457*FLEN/8, x4, x1, x2)

inst_18890:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000000003fff; valaddr_reg:x3; val_offset:56670*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56670*0 + 3*458*FLEN/8, x4, x1, x2)

inst_18891:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000000007fff; valaddr_reg:x3; val_offset:56673*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56673*0 + 3*459*FLEN/8, x4, x1, x2)

inst_18892:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000000000ffff; valaddr_reg:x3; val_offset:56676*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56676*0 + 3*460*FLEN/8, x4, x1, x2)

inst_18893:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000000001ffff; valaddr_reg:x3; val_offset:56679*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56679*0 + 3*461*FLEN/8, x4, x1, x2)

inst_18894:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000000003ffff; valaddr_reg:x3; val_offset:56682*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56682*0 + 3*462*FLEN/8, x4, x1, x2)

inst_18895:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000000007ffff; valaddr_reg:x3; val_offset:56685*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56685*0 + 3*463*FLEN/8, x4, x1, x2)

inst_18896:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00000000fffff; valaddr_reg:x3; val_offset:56688*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56688*0 + 3*464*FLEN/8, x4, x1, x2)

inst_18897:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00000001fffff; valaddr_reg:x3; val_offset:56691*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56691*0 + 3*465*FLEN/8, x4, x1, x2)

inst_18898:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00000003fffff; valaddr_reg:x3; val_offset:56694*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56694*0 + 3*466*FLEN/8, x4, x1, x2)

inst_18899:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00000007fffff; valaddr_reg:x3; val_offset:56697*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56697*0 + 3*467*FLEN/8, x4, x1, x2)

inst_18900:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000000ffffff; valaddr_reg:x3; val_offset:56700*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56700*0 + 3*468*FLEN/8, x4, x1, x2)

inst_18901:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000001ffffff; valaddr_reg:x3; val_offset:56703*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56703*0 + 3*469*FLEN/8, x4, x1, x2)

inst_18902:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000003ffffff; valaddr_reg:x3; val_offset:56706*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56706*0 + 3*470*FLEN/8, x4, x1, x2)

inst_18903:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000007ffffff; valaddr_reg:x3; val_offset:56709*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56709*0 + 3*471*FLEN/8, x4, x1, x2)

inst_18904:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000000fffffff; valaddr_reg:x3; val_offset:56712*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56712*0 + 3*472*FLEN/8, x4, x1, x2)

inst_18905:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000001fffffff; valaddr_reg:x3; val_offset:56715*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56715*0 + 3*473*FLEN/8, x4, x1, x2)

inst_18906:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000003fffffff; valaddr_reg:x3; val_offset:56718*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56718*0 + 3*474*FLEN/8, x4, x1, x2)

inst_18907:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000007fffffff; valaddr_reg:x3; val_offset:56721*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56721*0 + 3*475*FLEN/8, x4, x1, x2)

inst_18908:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00000ffffffff; valaddr_reg:x3; val_offset:56724*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56724*0 + 3*476*FLEN/8, x4, x1, x2)

inst_18909:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00001ffffffff; valaddr_reg:x3; val_offset:56727*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56727*0 + 3*477*FLEN/8, x4, x1, x2)

inst_18910:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00003ffffffff; valaddr_reg:x3; val_offset:56730*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56730*0 + 3*478*FLEN/8, x4, x1, x2)

inst_18911:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00007ffffffff; valaddr_reg:x3; val_offset:56733*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56733*0 + 3*479*FLEN/8, x4, x1, x2)

inst_18912:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0000fffffffff; valaddr_reg:x3; val_offset:56736*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56736*0 + 3*480*FLEN/8, x4, x1, x2)

inst_18913:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0001fffffffff; valaddr_reg:x3; val_offset:56739*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56739*0 + 3*481*FLEN/8, x4, x1, x2)

inst_18914:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0003fffffffff; valaddr_reg:x3; val_offset:56742*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56742*0 + 3*482*FLEN/8, x4, x1, x2)

inst_18915:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0007fffffffff; valaddr_reg:x3; val_offset:56745*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56745*0 + 3*483*FLEN/8, x4, x1, x2)

inst_18916:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e000ffffffffff; valaddr_reg:x3; val_offset:56748*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56748*0 + 3*484*FLEN/8, x4, x1, x2)

inst_18917:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e001ffffffffff; valaddr_reg:x3; val_offset:56751*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56751*0 + 3*485*FLEN/8, x4, x1, x2)

inst_18918:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e003ffffffffff; valaddr_reg:x3; val_offset:56754*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56754*0 + 3*486*FLEN/8, x4, x1, x2)

inst_18919:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e007ffffffffff; valaddr_reg:x3; val_offset:56757*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56757*0 + 3*487*FLEN/8, x4, x1, x2)

inst_18920:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e00fffffffffff; valaddr_reg:x3; val_offset:56760*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56760*0 + 3*488*FLEN/8, x4, x1, x2)

inst_18921:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e01fffffffffff; valaddr_reg:x3; val_offset:56763*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56763*0 + 3*489*FLEN/8, x4, x1, x2)

inst_18922:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e03fffffffffff; valaddr_reg:x3; val_offset:56766*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56766*0 + 3*490*FLEN/8, x4, x1, x2)

inst_18923:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e07fffffffffff; valaddr_reg:x3; val_offset:56769*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56769*0 + 3*491*FLEN/8, x4, x1, x2)

inst_18924:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e0ffffffffffff; valaddr_reg:x3; val_offset:56772*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56772*0 + 3*492*FLEN/8, x4, x1, x2)

inst_18925:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e1ffffffffffff; valaddr_reg:x3; val_offset:56775*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56775*0 + 3*493*FLEN/8, x4, x1, x2)

inst_18926:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e3ffffffffffff; valaddr_reg:x3; val_offset:56778*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56778*0 + 3*494*FLEN/8, x4, x1, x2)

inst_18927:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e7ffffffffffff; valaddr_reg:x3; val_offset:56781*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56781*0 + 3*495*FLEN/8, x4, x1, x2)

inst_18928:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38e8000000000000; valaddr_reg:x3; val_offset:56784*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56784*0 + 3*496*FLEN/8, x4, x1, x2)

inst_18929:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38ec000000000000; valaddr_reg:x3; val_offset:56787*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56787*0 + 3*497*FLEN/8, x4, x1, x2)

inst_18930:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38ee000000000000; valaddr_reg:x3; val_offset:56790*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56790*0 + 3*498*FLEN/8, x4, x1, x2)

inst_18931:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38ef000000000000; valaddr_reg:x3; val_offset:56793*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56793*0 + 3*499*FLEN/8, x4, x1, x2)

inst_18932:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38ef800000000000; valaddr_reg:x3; val_offset:56796*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56796*0 + 3*500*FLEN/8, x4, x1, x2)

inst_18933:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efc00000000000; valaddr_reg:x3; val_offset:56799*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56799*0 + 3*501*FLEN/8, x4, x1, x2)

inst_18934:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efe00000000000; valaddr_reg:x3; val_offset:56802*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56802*0 + 3*502*FLEN/8, x4, x1, x2)

inst_18935:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38eff00000000000; valaddr_reg:x3; val_offset:56805*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56805*0 + 3*503*FLEN/8, x4, x1, x2)

inst_18936:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38eff80000000000; valaddr_reg:x3; val_offset:56808*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56808*0 + 3*504*FLEN/8, x4, x1, x2)

inst_18937:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effc0000000000; valaddr_reg:x3; val_offset:56811*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56811*0 + 3*505*FLEN/8, x4, x1, x2)

inst_18938:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effe0000000000; valaddr_reg:x3; val_offset:56814*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56814*0 + 3*506*FLEN/8, x4, x1, x2)

inst_18939:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efff0000000000; valaddr_reg:x3; val_offset:56817*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56817*0 + 3*507*FLEN/8, x4, x1, x2)

inst_18940:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efff8000000000; valaddr_reg:x3; val_offset:56820*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56820*0 + 3*508*FLEN/8, x4, x1, x2)

inst_18941:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffc000000000; valaddr_reg:x3; val_offset:56823*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56823*0 + 3*509*FLEN/8, x4, x1, x2)

inst_18942:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffe000000000; valaddr_reg:x3; val_offset:56826*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56826*0 + 3*510*FLEN/8, x4, x1, x2)

inst_18943:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effff000000000; valaddr_reg:x3; val_offset:56829*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56829*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_18944:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effff800000000; valaddr_reg:x3; val_offset:56832*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56832*0 + 3*512*FLEN/8, x4, x1, x2)

inst_18945:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffc00000000; valaddr_reg:x3; val_offset:56835*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56835*0 + 3*513*FLEN/8, x4, x1, x2)

inst_18946:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffe00000000; valaddr_reg:x3; val_offset:56838*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56838*0 + 3*514*FLEN/8, x4, x1, x2)

inst_18947:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffff00000000; valaddr_reg:x3; val_offset:56841*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56841*0 + 3*515*FLEN/8, x4, x1, x2)

inst_18948:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffff80000000; valaddr_reg:x3; val_offset:56844*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56844*0 + 3*516*FLEN/8, x4, x1, x2)

inst_18949:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffc0000000; valaddr_reg:x3; val_offset:56847*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56847*0 + 3*517*FLEN/8, x4, x1, x2)

inst_18950:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffe0000000; valaddr_reg:x3; val_offset:56850*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56850*0 + 3*518*FLEN/8, x4, x1, x2)

inst_18951:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffff0000000; valaddr_reg:x3; val_offset:56853*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56853*0 + 3*519*FLEN/8, x4, x1, x2)

inst_18952:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffff8000000; valaddr_reg:x3; val_offset:56856*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56856*0 + 3*520*FLEN/8, x4, x1, x2)

inst_18953:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffc000000; valaddr_reg:x3; val_offset:56859*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56859*0 + 3*521*FLEN/8, x4, x1, x2)

inst_18954:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffe000000; valaddr_reg:x3; val_offset:56862*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56862*0 + 3*522*FLEN/8, x4, x1, x2)

inst_18955:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffff000000; valaddr_reg:x3; val_offset:56865*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56865*0 + 3*523*FLEN/8, x4, x1, x2)

inst_18956:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffff800000; valaddr_reg:x3; val_offset:56868*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56868*0 + 3*524*FLEN/8, x4, x1, x2)

inst_18957:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffffc00000; valaddr_reg:x3; val_offset:56871*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56871*0 + 3*525*FLEN/8, x4, x1, x2)

inst_18958:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffffe00000; valaddr_reg:x3; val_offset:56874*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56874*0 + 3*526*FLEN/8, x4, x1, x2)

inst_18959:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffff00000; valaddr_reg:x3; val_offset:56877*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56877*0 + 3*527*FLEN/8, x4, x1, x2)

inst_18960:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffff80000; valaddr_reg:x3; val_offset:56880*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56880*0 + 3*528*FLEN/8, x4, x1, x2)

inst_18961:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffffc0000; valaddr_reg:x3; val_offset:56883*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56883*0 + 3*529*FLEN/8, x4, x1, x2)

inst_18962:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffffe0000; valaddr_reg:x3; val_offset:56886*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56886*0 + 3*530*FLEN/8, x4, x1, x2)

inst_18963:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffffff0000; valaddr_reg:x3; val_offset:56889*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56889*0 + 3*531*FLEN/8, x4, x1, x2)

inst_18964:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffffff8000; valaddr_reg:x3; val_offset:56892*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56892*0 + 3*532*FLEN/8, x4, x1, x2)

inst_18965:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffffffc000; valaddr_reg:x3; val_offset:56895*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56895*0 + 3*533*FLEN/8, x4, x1, x2)

inst_18966:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffffffe000; valaddr_reg:x3; val_offset:56898*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56898*0 + 3*534*FLEN/8, x4, x1, x2)

inst_18967:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffffff000; valaddr_reg:x3; val_offset:56901*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56901*0 + 3*535*FLEN/8, x4, x1, x2)

inst_18968:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffffff800; valaddr_reg:x3; val_offset:56904*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56904*0 + 3*536*FLEN/8, x4, x1, x2)

inst_18969:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffffffc00; valaddr_reg:x3; val_offset:56907*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56907*0 + 3*537*FLEN/8, x4, x1, x2)

inst_18970:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffffffe00; valaddr_reg:x3; val_offset:56910*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56910*0 + 3*538*FLEN/8, x4, x1, x2)

inst_18971:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffffffff00; valaddr_reg:x3; val_offset:56913*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56913*0 + 3*539*FLEN/8, x4, x1, x2)

inst_18972:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffffffff80; valaddr_reg:x3; val_offset:56916*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56916*0 + 3*540*FLEN/8, x4, x1, x2)

inst_18973:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffffffffc0; valaddr_reg:x3; val_offset:56919*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56919*0 + 3*541*FLEN/8, x4, x1, x2)

inst_18974:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffffffffe0; valaddr_reg:x3; val_offset:56922*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56922*0 + 3*542*FLEN/8, x4, x1, x2)

inst_18975:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffffffff0; valaddr_reg:x3; val_offset:56925*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56925*0 + 3*543*FLEN/8, x4, x1, x2)

inst_18976:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffffffff8; valaddr_reg:x3; val_offset:56928*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56928*0 + 3*544*FLEN/8, x4, x1, x2)

inst_18977:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffffffffc; valaddr_reg:x3; val_offset:56931*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56931*0 + 3*545*FLEN/8, x4, x1, x2)

inst_18978:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38effffffffffffe; valaddr_reg:x3; val_offset:56934*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56934*0 + 3*546*FLEN/8, x4, x1, x2)

inst_18979:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x38e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x38efffffffffffff; valaddr_reg:x3; val_offset:56937*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56937*0 + 3*547*FLEN/8, x4, x1, x2)

inst_18980:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:56940*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56940*0 + 3*548*FLEN/8, x4, x1, x2)

inst_18981:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:56943*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56943*0 + 3*549*FLEN/8, x4, x1, x2)

inst_18982:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:56946*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56946*0 + 3*550*FLEN/8, x4, x1, x2)

inst_18983:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:56949*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56949*0 + 3*551*FLEN/8, x4, x1, x2)

inst_18984:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:56952*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56952*0 + 3*552*FLEN/8, x4, x1, x2)

inst_18985:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:56955*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56955*0 + 3*553*FLEN/8, x4, x1, x2)

inst_18986:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:56958*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56958*0 + 3*554*FLEN/8, x4, x1, x2)

inst_18987:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:56961*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56961*0 + 3*555*FLEN/8, x4, x1, x2)

inst_18988:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:56964*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56964*0 + 3*556*FLEN/8, x4, x1, x2)

inst_18989:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:56967*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56967*0 + 3*557*FLEN/8, x4, x1, x2)

inst_18990:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:56970*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56970*0 + 3*558*FLEN/8, x4, x1, x2)

inst_18991:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:56973*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56973*0 + 3*559*FLEN/8, x4, x1, x2)

inst_18992:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:56976*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56976*0 + 3*560*FLEN/8, x4, x1, x2)

inst_18993:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:56979*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56979*0 + 3*561*FLEN/8, x4, x1, x2)

inst_18994:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:56982*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56982*0 + 3*562*FLEN/8, x4, x1, x2)

inst_18995:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:56985*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56985*0 + 3*563*FLEN/8, x4, x1, x2)

inst_18996:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:56988*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56988*0 + 3*564*FLEN/8, x4, x1, x2)

inst_18997:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:56991*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56991*0 + 3*565*FLEN/8, x4, x1, x2)

inst_18998:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:56994*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56994*0 + 3*566*FLEN/8, x4, x1, x2)

inst_18999:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:56997*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 56997*0 + 3*567*FLEN/8, x4, x1, x2)

inst_19000:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:57000*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57000*0 + 3*568*FLEN/8, x4, x1, x2)

inst_19001:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4402e2d86dbef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x94877551c72c2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84402e2d86dbef; op2val:0x20594877551c72c2;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:57003*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57003*0 + 3*569*FLEN/8, x4, x1, x2)

inst_19002:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000000000000; valaddr_reg:x3; val_offset:57006*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57006*0 + 3*570*FLEN/8, x4, x1, x2)

inst_19003:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000000000001; valaddr_reg:x3; val_offset:57009*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57009*0 + 3*571*FLEN/8, x4, x1, x2)

inst_19004:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000000000003; valaddr_reg:x3; val_offset:57012*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57012*0 + 3*572*FLEN/8, x4, x1, x2)

inst_19005:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000000000007; valaddr_reg:x3; val_offset:57015*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57015*0 + 3*573*FLEN/8, x4, x1, x2)

inst_19006:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000000000000f; valaddr_reg:x3; val_offset:57018*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57018*0 + 3*574*FLEN/8, x4, x1, x2)

inst_19007:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000000000001f; valaddr_reg:x3; val_offset:57021*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57021*0 + 3*575*FLEN/8, x4, x1, x2)

inst_19008:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000000000003f; valaddr_reg:x3; val_offset:57024*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57024*0 + 3*576*FLEN/8, x4, x1, x2)

inst_19009:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000000000007f; valaddr_reg:x3; val_offset:57027*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57027*0 + 3*577*FLEN/8, x4, x1, x2)

inst_19010:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100000000000ff; valaddr_reg:x3; val_offset:57030*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57030*0 + 3*578*FLEN/8, x4, x1, x2)

inst_19011:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100000000001ff; valaddr_reg:x3; val_offset:57033*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57033*0 + 3*579*FLEN/8, x4, x1, x2)

inst_19012:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100000000003ff; valaddr_reg:x3; val_offset:57036*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57036*0 + 3*580*FLEN/8, x4, x1, x2)

inst_19013:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100000000007ff; valaddr_reg:x3; val_offset:57039*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57039*0 + 3*581*FLEN/8, x4, x1, x2)

inst_19014:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000000000fff; valaddr_reg:x3; val_offset:57042*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57042*0 + 3*582*FLEN/8, x4, x1, x2)

inst_19015:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000000001fff; valaddr_reg:x3; val_offset:57045*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57045*0 + 3*583*FLEN/8, x4, x1, x2)

inst_19016:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000000003fff; valaddr_reg:x3; val_offset:57048*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57048*0 + 3*584*FLEN/8, x4, x1, x2)

inst_19017:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000000007fff; valaddr_reg:x3; val_offset:57051*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57051*0 + 3*585*FLEN/8, x4, x1, x2)

inst_19018:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000000000ffff; valaddr_reg:x3; val_offset:57054*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57054*0 + 3*586*FLEN/8, x4, x1, x2)

inst_19019:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000000001ffff; valaddr_reg:x3; val_offset:57057*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57057*0 + 3*587*FLEN/8, x4, x1, x2)

inst_19020:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000000003ffff; valaddr_reg:x3; val_offset:57060*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57060*0 + 3*588*FLEN/8, x4, x1, x2)

inst_19021:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000000007ffff; valaddr_reg:x3; val_offset:57063*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57063*0 + 3*589*FLEN/8, x4, x1, x2)

inst_19022:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100000000fffff; valaddr_reg:x3; val_offset:57066*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57066*0 + 3*590*FLEN/8, x4, x1, x2)

inst_19023:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100000001fffff; valaddr_reg:x3; val_offset:57069*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57069*0 + 3*591*FLEN/8, x4, x1, x2)

inst_19024:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100000003fffff; valaddr_reg:x3; val_offset:57072*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57072*0 + 3*592*FLEN/8, x4, x1, x2)

inst_19025:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100000007fffff; valaddr_reg:x3; val_offset:57075*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57075*0 + 3*593*FLEN/8, x4, x1, x2)

inst_19026:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000000ffffff; valaddr_reg:x3; val_offset:57078*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57078*0 + 3*594*FLEN/8, x4, x1, x2)

inst_19027:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000001ffffff; valaddr_reg:x3; val_offset:57081*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57081*0 + 3*595*FLEN/8, x4, x1, x2)

inst_19028:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000003ffffff; valaddr_reg:x3; val_offset:57084*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57084*0 + 3*596*FLEN/8, x4, x1, x2)

inst_19029:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000007ffffff; valaddr_reg:x3; val_offset:57087*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57087*0 + 3*597*FLEN/8, x4, x1, x2)

inst_19030:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000000fffffff; valaddr_reg:x3; val_offset:57090*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57090*0 + 3*598*FLEN/8, x4, x1, x2)

inst_19031:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000001fffffff; valaddr_reg:x3; val_offset:57093*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57093*0 + 3*599*FLEN/8, x4, x1, x2)

inst_19032:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000003fffffff; valaddr_reg:x3; val_offset:57096*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57096*0 + 3*600*FLEN/8, x4, x1, x2)

inst_19033:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000007fffffff; valaddr_reg:x3; val_offset:57099*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57099*0 + 3*601*FLEN/8, x4, x1, x2)

inst_19034:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100000ffffffff; valaddr_reg:x3; val_offset:57102*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57102*0 + 3*602*FLEN/8, x4, x1, x2)

inst_19035:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100001ffffffff; valaddr_reg:x3; val_offset:57105*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57105*0 + 3*603*FLEN/8, x4, x1, x2)

inst_19036:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100003ffffffff; valaddr_reg:x3; val_offset:57108*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57108*0 + 3*604*FLEN/8, x4, x1, x2)

inst_19037:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100007ffffffff; valaddr_reg:x3; val_offset:57111*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57111*0 + 3*605*FLEN/8, x4, x1, x2)

inst_19038:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10000fffffffff; valaddr_reg:x3; val_offset:57114*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57114*0 + 3*606*FLEN/8, x4, x1, x2)

inst_19039:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10001fffffffff; valaddr_reg:x3; val_offset:57117*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57117*0 + 3*607*FLEN/8, x4, x1, x2)

inst_19040:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10003fffffffff; valaddr_reg:x3; val_offset:57120*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57120*0 + 3*608*FLEN/8, x4, x1, x2)

inst_19041:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10007fffffffff; valaddr_reg:x3; val_offset:57123*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57123*0 + 3*609*FLEN/8, x4, x1, x2)

inst_19042:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1000ffffffffff; valaddr_reg:x3; val_offset:57126*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57126*0 + 3*610*FLEN/8, x4, x1, x2)

inst_19043:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1001ffffffffff; valaddr_reg:x3; val_offset:57129*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57129*0 + 3*611*FLEN/8, x4, x1, x2)

inst_19044:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1003ffffffffff; valaddr_reg:x3; val_offset:57132*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57132*0 + 3*612*FLEN/8, x4, x1, x2)

inst_19045:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1007ffffffffff; valaddr_reg:x3; val_offset:57135*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57135*0 + 3*613*FLEN/8, x4, x1, x2)

inst_19046:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b100fffffffffff; valaddr_reg:x3; val_offset:57138*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57138*0 + 3*614*FLEN/8, x4, x1, x2)

inst_19047:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b101fffffffffff; valaddr_reg:x3; val_offset:57141*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57141*0 + 3*615*FLEN/8, x4, x1, x2)

inst_19048:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b103fffffffffff; valaddr_reg:x3; val_offset:57144*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57144*0 + 3*616*FLEN/8, x4, x1, x2)

inst_19049:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b107fffffffffff; valaddr_reg:x3; val_offset:57147*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57147*0 + 3*617*FLEN/8, x4, x1, x2)

inst_19050:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b10ffffffffffff; valaddr_reg:x3; val_offset:57150*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57150*0 + 3*618*FLEN/8, x4, x1, x2)

inst_19051:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b11ffffffffffff; valaddr_reg:x3; val_offset:57153*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57153*0 + 3*619*FLEN/8, x4, x1, x2)

inst_19052:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b13ffffffffffff; valaddr_reg:x3; val_offset:57156*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57156*0 + 3*620*FLEN/8, x4, x1, x2)

inst_19053:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b17ffffffffffff; valaddr_reg:x3; val_offset:57159*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57159*0 + 3*621*FLEN/8, x4, x1, x2)

inst_19054:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b18000000000000; valaddr_reg:x3; val_offset:57162*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57162*0 + 3*622*FLEN/8, x4, x1, x2)

inst_19055:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1c000000000000; valaddr_reg:x3; val_offset:57165*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57165*0 + 3*623*FLEN/8, x4, x1, x2)

inst_19056:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1e000000000000; valaddr_reg:x3; val_offset:57168*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57168*0 + 3*624*FLEN/8, x4, x1, x2)

inst_19057:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1f000000000000; valaddr_reg:x3; val_offset:57171*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57171*0 + 3*625*FLEN/8, x4, x1, x2)

inst_19058:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1f800000000000; valaddr_reg:x3; val_offset:57174*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57174*0 + 3*626*FLEN/8, x4, x1, x2)

inst_19059:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fc00000000000; valaddr_reg:x3; val_offset:57177*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57177*0 + 3*627*FLEN/8, x4, x1, x2)

inst_19060:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fe00000000000; valaddr_reg:x3; val_offset:57180*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57180*0 + 3*628*FLEN/8, x4, x1, x2)

inst_19061:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ff00000000000; valaddr_reg:x3; val_offset:57183*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57183*0 + 3*629*FLEN/8, x4, x1, x2)

inst_19062:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ff80000000000; valaddr_reg:x3; val_offset:57186*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57186*0 + 3*630*FLEN/8, x4, x1, x2)

inst_19063:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffc0000000000; valaddr_reg:x3; val_offset:57189*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57189*0 + 3*631*FLEN/8, x4, x1, x2)

inst_19064:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffe0000000000; valaddr_reg:x3; val_offset:57192*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57192*0 + 3*632*FLEN/8, x4, x1, x2)

inst_19065:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fff0000000000; valaddr_reg:x3; val_offset:57195*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57195*0 + 3*633*FLEN/8, x4, x1, x2)

inst_19066:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fff8000000000; valaddr_reg:x3; val_offset:57198*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57198*0 + 3*634*FLEN/8, x4, x1, x2)

inst_19067:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffc000000000; valaddr_reg:x3; val_offset:57201*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57201*0 + 3*635*FLEN/8, x4, x1, x2)

inst_19068:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffe000000000; valaddr_reg:x3; val_offset:57204*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57204*0 + 3*636*FLEN/8, x4, x1, x2)

inst_19069:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffff000000000; valaddr_reg:x3; val_offset:57207*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57207*0 + 3*637*FLEN/8, x4, x1, x2)

inst_19070:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffff800000000; valaddr_reg:x3; val_offset:57210*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57210*0 + 3*638*FLEN/8, x4, x1, x2)

inst_19071:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffc00000000; valaddr_reg:x3; val_offset:57213*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57213*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_19072:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffe00000000; valaddr_reg:x3; val_offset:57216*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57216*0 + 3*640*FLEN/8, x4, x1, x2)

inst_19073:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffff00000000; valaddr_reg:x3; val_offset:57219*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57219*0 + 3*641*FLEN/8, x4, x1, x2)

inst_19074:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffff80000000; valaddr_reg:x3; val_offset:57222*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57222*0 + 3*642*FLEN/8, x4, x1, x2)

inst_19075:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffc0000000; valaddr_reg:x3; val_offset:57225*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57225*0 + 3*643*FLEN/8, x4, x1, x2)

inst_19076:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffe0000000; valaddr_reg:x3; val_offset:57228*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57228*0 + 3*644*FLEN/8, x4, x1, x2)

inst_19077:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffff0000000; valaddr_reg:x3; val_offset:57231*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57231*0 + 3*645*FLEN/8, x4, x1, x2)

inst_19078:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffff8000000; valaddr_reg:x3; val_offset:57234*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57234*0 + 3*646*FLEN/8, x4, x1, x2)

inst_19079:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffc000000; valaddr_reg:x3; val_offset:57237*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57237*0 + 3*647*FLEN/8, x4, x1, x2)

inst_19080:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffe000000; valaddr_reg:x3; val_offset:57240*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57240*0 + 3*648*FLEN/8, x4, x1, x2)

inst_19081:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffff000000; valaddr_reg:x3; val_offset:57243*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57243*0 + 3*649*FLEN/8, x4, x1, x2)

inst_19082:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffff800000; valaddr_reg:x3; val_offset:57246*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57246*0 + 3*650*FLEN/8, x4, x1, x2)

inst_19083:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffffc00000; valaddr_reg:x3; val_offset:57249*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57249*0 + 3*651*FLEN/8, x4, x1, x2)

inst_19084:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffffe00000; valaddr_reg:x3; val_offset:57252*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57252*0 + 3*652*FLEN/8, x4, x1, x2)

inst_19085:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffff00000; valaddr_reg:x3; val_offset:57255*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57255*0 + 3*653*FLEN/8, x4, x1, x2)

inst_19086:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffff80000; valaddr_reg:x3; val_offset:57258*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57258*0 + 3*654*FLEN/8, x4, x1, x2)

inst_19087:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffffc0000; valaddr_reg:x3; val_offset:57261*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57261*0 + 3*655*FLEN/8, x4, x1, x2)

inst_19088:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffffe0000; valaddr_reg:x3; val_offset:57264*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57264*0 + 3*656*FLEN/8, x4, x1, x2)

inst_19089:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffffff0000; valaddr_reg:x3; val_offset:57267*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57267*0 + 3*657*FLEN/8, x4, x1, x2)

inst_19090:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffffff8000; valaddr_reg:x3; val_offset:57270*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57270*0 + 3*658*FLEN/8, x4, x1, x2)

inst_19091:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffffffc000; valaddr_reg:x3; val_offset:57273*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57273*0 + 3*659*FLEN/8, x4, x1, x2)

inst_19092:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffffffe000; valaddr_reg:x3; val_offset:57276*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57276*0 + 3*660*FLEN/8, x4, x1, x2)

inst_19093:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffffff000; valaddr_reg:x3; val_offset:57279*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57279*0 + 3*661*FLEN/8, x4, x1, x2)

inst_19094:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffffff800; valaddr_reg:x3; val_offset:57282*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57282*0 + 3*662*FLEN/8, x4, x1, x2)

inst_19095:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffffffc00; valaddr_reg:x3; val_offset:57285*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57285*0 + 3*663*FLEN/8, x4, x1, x2)

inst_19096:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffffffe00; valaddr_reg:x3; val_offset:57288*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57288*0 + 3*664*FLEN/8, x4, x1, x2)

inst_19097:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffffffff00; valaddr_reg:x3; val_offset:57291*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57291*0 + 3*665*FLEN/8, x4, x1, x2)

inst_19098:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffffffff80; valaddr_reg:x3; val_offset:57294*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57294*0 + 3*666*FLEN/8, x4, x1, x2)

inst_19099:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffffffffc0; valaddr_reg:x3; val_offset:57297*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57297*0 + 3*667*FLEN/8, x4, x1, x2)

inst_19100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffffffffe0; valaddr_reg:x3; val_offset:57300*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57300*0 + 3*668*FLEN/8, x4, x1, x2)

inst_19101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffffffff0; valaddr_reg:x3; val_offset:57303*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57303*0 + 3*669*FLEN/8, x4, x1, x2)

inst_19102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffffffff8; valaddr_reg:x3; val_offset:57306*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57306*0 + 3*670*FLEN/8, x4, x1, x2)

inst_19103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffffffffc; valaddr_reg:x3; val_offset:57309*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57309*0 + 3*671*FLEN/8, x4, x1, x2)

inst_19104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1ffffffffffffe; valaddr_reg:x3; val_offset:57312*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57312*0 + 3*672*FLEN/8, x4, x1, x2)

inst_19105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3b1 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3b1fffffffffffff; valaddr_reg:x3; val_offset:57315*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57315*0 + 3*673*FLEN/8, x4, x1, x2)

inst_19106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:57318*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57318*0 + 3*674*FLEN/8, x4, x1, x2)

inst_19107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:57321*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57321*0 + 3*675*FLEN/8, x4, x1, x2)

inst_19108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:57324*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57324*0 + 3*676*FLEN/8, x4, x1, x2)

inst_19109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:57327*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57327*0 + 3*677*FLEN/8, x4, x1, x2)

inst_19110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:57330*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57330*0 + 3*678*FLEN/8, x4, x1, x2)

inst_19111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:57333*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57333*0 + 3*679*FLEN/8, x4, x1, x2)

inst_19112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:57336*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57336*0 + 3*680*FLEN/8, x4, x1, x2)

inst_19113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:57339*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57339*0 + 3*681*FLEN/8, x4, x1, x2)

inst_19114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:57342*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57342*0 + 3*682*FLEN/8, x4, x1, x2)

inst_19115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:57345*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57345*0 + 3*683*FLEN/8, x4, x1, x2)

inst_19116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:57348*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57348*0 + 3*684*FLEN/8, x4, x1, x2)

inst_19117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:57351*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57351*0 + 3*685*FLEN/8, x4, x1, x2)

inst_19118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:57354*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57354*0 + 3*686*FLEN/8, x4, x1, x2)

inst_19119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:57357*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57357*0 + 3*687*FLEN/8, x4, x1, x2)

inst_19120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:57360*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57360*0 + 3*688*FLEN/8, x4, x1, x2)

inst_19121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:57363*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57363*0 + 3*689*FLEN/8, x4, x1, x2)

inst_19122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:57366*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57366*0 + 3*690*FLEN/8, x4, x1, x2)

inst_19123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:57369*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57369*0 + 3*691*FLEN/8, x4, x1, x2)

inst_19124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:57372*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57372*0 + 3*692*FLEN/8, x4, x1, x2)

inst_19125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:57375*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57375*0 + 3*693*FLEN/8, x4, x1, x2)

inst_19126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:57378*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57378*0 + 3*694*FLEN/8, x4, x1, x2)

inst_19127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x47d7e83d4a5d3 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x8fccf784d1282 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f847d7e83d4a5d3; op2val:0x2058fccf784d1282;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:57381*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57381*0 + 3*695*FLEN/8, x4, x1, x2)

inst_19128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000000000000; valaddr_reg:x3; val_offset:57384*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57384*0 + 3*696*FLEN/8, x4, x1, x2)

inst_19129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000000000001; valaddr_reg:x3; val_offset:57387*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57387*0 + 3*697*FLEN/8, x4, x1, x2)

inst_19130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000000000003; valaddr_reg:x3; val_offset:57390*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57390*0 + 3*698*FLEN/8, x4, x1, x2)

inst_19131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000000000007; valaddr_reg:x3; val_offset:57393*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57393*0 + 3*699*FLEN/8, x4, x1, x2)

inst_19132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000000000000f; valaddr_reg:x3; val_offset:57396*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57396*0 + 3*700*FLEN/8, x4, x1, x2)

inst_19133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000000000001f; valaddr_reg:x3; val_offset:57399*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57399*0 + 3*701*FLEN/8, x4, x1, x2)

inst_19134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000000000003f; valaddr_reg:x3; val_offset:57402*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57402*0 + 3*702*FLEN/8, x4, x1, x2)

inst_19135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000000000007f; valaddr_reg:x3; val_offset:57405*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57405*0 + 3*703*FLEN/8, x4, x1, x2)

inst_19136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300000000000ff; valaddr_reg:x3; val_offset:57408*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57408*0 + 3*704*FLEN/8, x4, x1, x2)

inst_19137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300000000001ff; valaddr_reg:x3; val_offset:57411*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57411*0 + 3*705*FLEN/8, x4, x1, x2)

inst_19138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300000000003ff; valaddr_reg:x3; val_offset:57414*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57414*0 + 3*706*FLEN/8, x4, x1, x2)

inst_19139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300000000007ff; valaddr_reg:x3; val_offset:57417*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57417*0 + 3*707*FLEN/8, x4, x1, x2)

inst_19140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000000000fff; valaddr_reg:x3; val_offset:57420*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57420*0 + 3*708*FLEN/8, x4, x1, x2)

inst_19141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000000001fff; valaddr_reg:x3; val_offset:57423*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57423*0 + 3*709*FLEN/8, x4, x1, x2)

inst_19142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000000003fff; valaddr_reg:x3; val_offset:57426*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57426*0 + 3*710*FLEN/8, x4, x1, x2)

inst_19143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000000007fff; valaddr_reg:x3; val_offset:57429*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57429*0 + 3*711*FLEN/8, x4, x1, x2)

inst_19144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000000000ffff; valaddr_reg:x3; val_offset:57432*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57432*0 + 3*712*FLEN/8, x4, x1, x2)

inst_19145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000000001ffff; valaddr_reg:x3; val_offset:57435*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57435*0 + 3*713*FLEN/8, x4, x1, x2)

inst_19146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000000003ffff; valaddr_reg:x3; val_offset:57438*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57438*0 + 3*714*FLEN/8, x4, x1, x2)

inst_19147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000000007ffff; valaddr_reg:x3; val_offset:57441*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57441*0 + 3*715*FLEN/8, x4, x1, x2)

inst_19148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300000000fffff; valaddr_reg:x3; val_offset:57444*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57444*0 + 3*716*FLEN/8, x4, x1, x2)

inst_19149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300000001fffff; valaddr_reg:x3; val_offset:57447*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57447*0 + 3*717*FLEN/8, x4, x1, x2)

inst_19150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300000003fffff; valaddr_reg:x3; val_offset:57450*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57450*0 + 3*718*FLEN/8, x4, x1, x2)

inst_19151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300000007fffff; valaddr_reg:x3; val_offset:57453*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57453*0 + 3*719*FLEN/8, x4, x1, x2)

inst_19152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000000ffffff; valaddr_reg:x3; val_offset:57456*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57456*0 + 3*720*FLEN/8, x4, x1, x2)

inst_19153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000001ffffff; valaddr_reg:x3; val_offset:57459*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57459*0 + 3*721*FLEN/8, x4, x1, x2)

inst_19154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000003ffffff; valaddr_reg:x3; val_offset:57462*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57462*0 + 3*722*FLEN/8, x4, x1, x2)

inst_19155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000007ffffff; valaddr_reg:x3; val_offset:57465*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57465*0 + 3*723*FLEN/8, x4, x1, x2)

inst_19156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000000fffffff; valaddr_reg:x3; val_offset:57468*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57468*0 + 3*724*FLEN/8, x4, x1, x2)

inst_19157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000001fffffff; valaddr_reg:x3; val_offset:57471*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57471*0 + 3*725*FLEN/8, x4, x1, x2)

inst_19158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000003fffffff; valaddr_reg:x3; val_offset:57474*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57474*0 + 3*726*FLEN/8, x4, x1, x2)

inst_19159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000007fffffff; valaddr_reg:x3; val_offset:57477*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57477*0 + 3*727*FLEN/8, x4, x1, x2)

inst_19160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300000ffffffff; valaddr_reg:x3; val_offset:57480*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57480*0 + 3*728*FLEN/8, x4, x1, x2)

inst_19161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300001ffffffff; valaddr_reg:x3; val_offset:57483*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57483*0 + 3*729*FLEN/8, x4, x1, x2)

inst_19162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300003ffffffff; valaddr_reg:x3; val_offset:57486*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57486*0 + 3*730*FLEN/8, x4, x1, x2)

inst_19163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300007ffffffff; valaddr_reg:x3; val_offset:57489*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57489*0 + 3*731*FLEN/8, x4, x1, x2)

inst_19164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30000fffffffff; valaddr_reg:x3; val_offset:57492*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57492*0 + 3*732*FLEN/8, x4, x1, x2)

inst_19165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30001fffffffff; valaddr_reg:x3; val_offset:57495*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57495*0 + 3*733*FLEN/8, x4, x1, x2)

inst_19166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30003fffffffff; valaddr_reg:x3; val_offset:57498*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57498*0 + 3*734*FLEN/8, x4, x1, x2)

inst_19167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30007fffffffff; valaddr_reg:x3; val_offset:57501*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57501*0 + 3*735*FLEN/8, x4, x1, x2)

inst_19168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3000ffffffffff; valaddr_reg:x3; val_offset:57504*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57504*0 + 3*736*FLEN/8, x4, x1, x2)

inst_19169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3001ffffffffff; valaddr_reg:x3; val_offset:57507*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57507*0 + 3*737*FLEN/8, x4, x1, x2)

inst_19170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3003ffffffffff; valaddr_reg:x3; val_offset:57510*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57510*0 + 3*738*FLEN/8, x4, x1, x2)

inst_19171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3007ffffffffff; valaddr_reg:x3; val_offset:57513*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57513*0 + 3*739*FLEN/8, x4, x1, x2)

inst_19172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe300fffffffffff; valaddr_reg:x3; val_offset:57516*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57516*0 + 3*740*FLEN/8, x4, x1, x2)

inst_19173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe301fffffffffff; valaddr_reg:x3; val_offset:57519*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57519*0 + 3*741*FLEN/8, x4, x1, x2)

inst_19174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe303fffffffffff; valaddr_reg:x3; val_offset:57522*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57522*0 + 3*742*FLEN/8, x4, x1, x2)

inst_19175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe307fffffffffff; valaddr_reg:x3; val_offset:57525*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57525*0 + 3*743*FLEN/8, x4, x1, x2)

inst_19176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe30ffffffffffff; valaddr_reg:x3; val_offset:57528*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57528*0 + 3*744*FLEN/8, x4, x1, x2)

inst_19177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe31ffffffffffff; valaddr_reg:x3; val_offset:57531*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57531*0 + 3*745*FLEN/8, x4, x1, x2)

inst_19178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe33ffffffffffff; valaddr_reg:x3; val_offset:57534*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57534*0 + 3*746*FLEN/8, x4, x1, x2)

inst_19179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe37ffffffffffff; valaddr_reg:x3; val_offset:57537*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57537*0 + 3*747*FLEN/8, x4, x1, x2)

inst_19180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe38000000000000; valaddr_reg:x3; val_offset:57540*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57540*0 + 3*748*FLEN/8, x4, x1, x2)

inst_19181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3c000000000000; valaddr_reg:x3; val_offset:57543*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57543*0 + 3*749*FLEN/8, x4, x1, x2)

inst_19182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3e000000000000; valaddr_reg:x3; val_offset:57546*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57546*0 + 3*750*FLEN/8, x4, x1, x2)

inst_19183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3f000000000000; valaddr_reg:x3; val_offset:57549*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57549*0 + 3*751*FLEN/8, x4, x1, x2)

inst_19184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3f800000000000; valaddr_reg:x3; val_offset:57552*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57552*0 + 3*752*FLEN/8, x4, x1, x2)

inst_19185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3fc00000000000; valaddr_reg:x3; val_offset:57555*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57555*0 + 3*753*FLEN/8, x4, x1, x2)

inst_19186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3fe00000000000; valaddr_reg:x3; val_offset:57558*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57558*0 + 3*754*FLEN/8, x4, x1, x2)

inst_19187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3ff00000000000; valaddr_reg:x3; val_offset:57561*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57561*0 + 3*755*FLEN/8, x4, x1, x2)

inst_19188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3ff80000000000; valaddr_reg:x3; val_offset:57564*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57564*0 + 3*756*FLEN/8, x4, x1, x2)

inst_19189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3ffc0000000000; valaddr_reg:x3; val_offset:57567*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57567*0 + 3*757*FLEN/8, x4, x1, x2)

inst_19190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3ffe0000000000; valaddr_reg:x3; val_offset:57570*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57570*0 + 3*758*FLEN/8, x4, x1, x2)

inst_19191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3fff0000000000; valaddr_reg:x3; val_offset:57573*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57573*0 + 3*759*FLEN/8, x4, x1, x2)

inst_19192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3fff8000000000; valaddr_reg:x3; val_offset:57576*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57576*0 + 3*760*FLEN/8, x4, x1, x2)

inst_19193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3fffc000000000; valaddr_reg:x3; val_offset:57579*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57579*0 + 3*761*FLEN/8, x4, x1, x2)

inst_19194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3fffe000000000; valaddr_reg:x3; val_offset:57582*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57582*0 + 3*762*FLEN/8, x4, x1, x2)

inst_19195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3ffff000000000; valaddr_reg:x3; val_offset:57585*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57585*0 + 3*763*FLEN/8, x4, x1, x2)

inst_19196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3ffff800000000; valaddr_reg:x3; val_offset:57588*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57588*0 + 3*764*FLEN/8, x4, x1, x2)

inst_19197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3ffffc00000000; valaddr_reg:x3; val_offset:57591*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57591*0 + 3*765*FLEN/8, x4, x1, x2)

inst_19198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3ffffe00000000; valaddr_reg:x3; val_offset:57594*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57594*0 + 3*766*FLEN/8, x4, x1, x2)

inst_19199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4917deccf7197 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x8e48420b4ccc3 and fs3 == 1 and fe3 == 0x3e3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f84917deccf7197; op2val:0x9fe8e48420b4ccc3;
op3val:0xbe3fffff00000000; valaddr_reg:x3; val_offset:57597*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 57597*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597464816910335,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597739694817279,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121598289450631167,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121599388962258943,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121601587985514495,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121605986032025599,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121614782125047807,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121632374311092223,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121667558683181055,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121737927427358719,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121878664915714047,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(122160139892424703,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(122723089845846015,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(123848989752688639,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(123848989752688640,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(124974889659531264,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(125537839612952576,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(125819314589663232,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(125960052078018560,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126030420822196224,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126065605194285056,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126083197380329472,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126091993473351680,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126096391519862784,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126098590543118336,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126099690054746112,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100239810560000,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100514688466944,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100652127420416,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100720846897152,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100755206635520,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100772386504704,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100780976439296,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100785271406592,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100787418890240,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100788492632064,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789029502976,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789297938432,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789432156160,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789499265024,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789532819456,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789549596672,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789557985280,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789562179584,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789564276736,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789565325312,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789565849600,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566111744,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566242816,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566308352,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566341120,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566357504,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566365696,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566369792,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566371840,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566372864,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373376,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373632,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373760,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373824,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373856,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373872,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373880,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373884,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373886,64,FLEN)
NAN_BOXED(6882540700353364731,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373887,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252607488,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252607489,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252607491,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252607495,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252607503,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252607519,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252607551,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252607615,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252607743,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252607999,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252608511,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252609535,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252611583,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252615679,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252623871,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252640255,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252673023,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252738559,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426252869631,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426253131775,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426253656063,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426254704639,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426256801791,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426260996095,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426269384703,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426286161919,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426319716351,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426386825215,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426521042943,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110426789478399,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110427326349311,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110428400091135,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110430547574783,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110434842542079,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110443432476671,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110460612345855,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110494972084223,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110563691560959,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110701130514431,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517110976008421375,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517111525764235263,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517112625275863039,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517114824299118591,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517119222345629695,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517128018438651903,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517145610624696319,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517180794996785151,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517251163740962815,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517391901229318143,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4517673376206028799,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4518236326159450111,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4519362226066292735,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4519362226066292736,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4520488125973135360,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521051075926556672,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521332550903267328,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521473288391622656,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521543657135800320,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521578841507889152,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521596433693933568,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521605229786955776,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521609627833466880,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521611826856722432,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521612926368350208,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521613476124164096,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521613751002071040,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521613888441024512,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521613957160501248,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521613991520239616,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614008700108800,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614017290043392,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614021585010688,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614023732494336,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614024806236160,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025343107072,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025611542528,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025745760256,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025812869120,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025846423552,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025863200768,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025871589376,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025875783680,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025877880832,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025878929408,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879453696,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879715840,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879846912,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879912448,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879945216,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879961600,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879969792,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879973888,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879975936,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879976960,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879977472,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879977728,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879977856,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879977920,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879977952,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879977968,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879977976,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879977980,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879977982,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4521614025879977983,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6882560923336465879,64,FLEN)
NAN_BOXED(2331147610450873601,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264576,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264577,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264579,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264583,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264591,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264607,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264639,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264703,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264831,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242265087,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242265599,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242266623,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242268671,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242272767,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242280959,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242297343,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242330111,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242395647,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242526719,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242788863,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815243313151,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815244361727,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815246458879,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815250653183,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815259041791,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815275819007,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815309373439,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815376482303,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815510700031,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815779135487,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580816316006399,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580817389748223,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580819537231871,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580823832199167,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580832422133759,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580849602002943,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580883961741311,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580952681218047,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581090120171519,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581364998078463,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484581914753892351,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484583014265520127,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484585213288775679,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484589611335286783,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484598407428308991,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484615999614353407,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484651183986442239,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484721552730619903,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484862290218975231,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9485143765195685887,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9485706715149107199,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9486832615055949823,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9486832615055949824,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9487958514962792448,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488521464916213760,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488802939892924416,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9488943677381279744,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489014046125457408,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489049230497546240,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489066822683590656,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489075618776612864,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489080016823123968,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489082215846379520,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489083315358007296,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489083865113821184,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084139991728128,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084277430681600,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084346150158336,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084380509896704,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084397689765888,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084406279700480,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084410574667776,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084412722151424,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084413795893248,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414332764160,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414601199616,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414735417344,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414802526208,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414836080640,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414852857856,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414861246464,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414865440768,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414867537920,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414868586496,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869110784,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869372928,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869504000,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869569536,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869602304,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869618688,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869626880,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869630976,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869633024,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634048,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634560,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634816,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869634944,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635008,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635040,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635056,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635064,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635068,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635070,64,FLEN)
NAN_BOXED(6882631645099622939,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9489084414869635071,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038208,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038209,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038211,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038215,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038223,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038239,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038271,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038335,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038463,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038719,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539039231,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539040255,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539042303,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539046399,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539054591,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539070975,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539103743,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539169279,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539300351,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539562495,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027540086783,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027541135359,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027543232511,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027547426815,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027555815423,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027572592639,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027606147071,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027673255935,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027807473663,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962028075909119,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962028612780031,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962029686521855,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962031834005503,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962036128972799,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962044718907391,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962061898776575,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962096258514943,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962164977991679,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962302416945151,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962577294852095,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335963127050665983,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335964226562293759,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335966425585549311,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335970823632060415,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335979619725082623,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335997211911127039,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9336032396283215871,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9336102765027393535,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9336243502515748863,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9336524977492459519,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9337087927445880831,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9338213827352723455,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9338213827352723456,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9339339727259566080,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9339902677212987392,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340184152189698048,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340324889678053376,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340395258422231040,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340430442794319872,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340448034980364288,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340456831073386496,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340461229119897600,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340463428143153152,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340464527654780928,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465077410594816,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465352288501760,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465489727455232,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465558446931968,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465592806670336,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465609986539520,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465618576474112,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465622871441408,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465625018925056,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465626092666880,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465626629537792,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465626897973248,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627032190976,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627099299840,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627132854272,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627149631488,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627158020096,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627162214400,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627164311552,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627165360128,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627165884416,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166146560,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166277632,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166343168,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166375936,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166392320,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166400512,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166404608,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166406656,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166407680,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408192,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408448,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408576,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408640,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408672,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408688,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408696,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408700,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408702,64,FLEN)
NAN_BOXED(6882655672957732747,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408703,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907151360,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907151361,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907151363,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907151367,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907151375,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907151391,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907151423,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907151487,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907151615,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907151871,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907152383,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907153407,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907155455,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907159551,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907167743,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907184127,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907216895,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907282431,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907413503,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660907675647,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660908199935,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660909248511,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660911345663,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660915539967,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660923928575,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660940705791,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275660974260223,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275661041369087,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275661175586815,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275661444022271,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275661980893183,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275663054635007,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275665202118655,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275669497085951,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275678087020543,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275695266889727,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275729626628095,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275798346104831,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098275935785058303,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098276210662965247,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098276760418779135,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098277859930406911,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098280058953662463,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098284457000173567,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098293253093195775,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098310845279240191,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098346029651329023,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098416398395506687,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098557135883862015,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4098838610860572671,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4099401560813993983,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4100527460720836607,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4100527460720836608,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4101653360627679232,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102216310581100544,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102497785557811200,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102638523046166528,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102708891790344192,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102744076162433024,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102761668348477440,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102770464441499648,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102774862488010752,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102777061511266304,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102778161022894080,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102778710778707968,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102778985656614912,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779123095568384,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779191815045120,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779226174783488,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779243354652672,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779251944587264,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779256239554560,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779258387038208,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779259460780032,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779259997650944,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260266086400,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260400304128,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260467412992,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260500967424,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260517744640,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260526133248,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260530327552,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260532424704,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260533473280,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260533997568,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534259712,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534390784,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534456320,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534489088,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534505472,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534513664,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534517760,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534519808,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534520832,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534521344,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534521600,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534521728,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534521792,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534521824,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534521840,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534521848,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534521852,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534521854,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4102779260534521855,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6882696697605446639,64,FLEN)
NAN_BOXED(2330973959507178178,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865118720,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865118721,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865118723,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865118727,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865118735,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865118751,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865118783,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865118847,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865118975,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865119231,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865119743,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865120767,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865122815,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865126911,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865135103,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865151487,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865184255,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865249791,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865380863,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647865643007,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647866167295,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647867215871,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647869313023,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647873507327,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647881895935,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647898673151,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647932227583,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901647999336447,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901648133554175,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901648401989631,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901648938860543,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901650012602367,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901652160086015,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901656455053311,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901665044987903,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901682224857087,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901716584595455,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901785304072191,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255901922743025663,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255902197620932607,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255902747376746495,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255903846888374271,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255906045911629823,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255910443958140927,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255919240051163135,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255936832237207551,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4255972016609296383,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4256042385353474047,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4256183122841829375,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4256464597818540031,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4257027547771961343,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4258153447678803967,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4258153447678803968,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4259279347585646592,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4259842297539067904,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260123772515778560,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260264510004133888,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260334878748311552,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260370063120400384,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260387655306444800,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260396451399467008,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260400849445978112,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260403048469233664,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260404147980861440,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260404697736675328,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260404972614582272,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405110053535744,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405178773012480,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405213132750848,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405230312620032,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405238902554624,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405243197521920,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405245345005568,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405246418747392,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405246955618304,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247224053760,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247358271488,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247425380352,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247458934784,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247475712000,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247484100608,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247488294912,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247490392064,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247491440640,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247491964928,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492227072,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492358144,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492423680,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492456448,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492472832,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492481024,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492485120,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492487168,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492488192,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492488704,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492488960,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492489088,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492489152,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492489184,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492489200,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492489208,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492489212,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492489214,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4260405247492489215,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6882764112860063187,64,FLEN)
NAN_BOXED(2330890775170978434,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088419328,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088419329,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088419331,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088419335,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088419343,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088419359,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088419391,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088419455,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088419583,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088419839,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088420351,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088421375,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088423423,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088427519,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088435711,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088452095,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088484863,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088550399,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088681471,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666088943615,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666089467903,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666090516479,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666092613631,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666096807935,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666105196543,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666121973759,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666155528191,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666222637055,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666356854783,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453666625290239,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453667162161151,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453668235902975,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453670383386623,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453674678353919,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453683268288511,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453700448157695,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453734807896063,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453803527372799,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704453940966326271,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704454215844233215,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704454765600047103,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704455865111674879,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704458064134930431,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704462462181441535,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704471258274463743,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704488850460508159,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704524034832596991,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704594403576774655,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13704735141065129983,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13705016616041840639,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13705579565995261951,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13706705465902104575,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13706705465902104576,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13707831365808947200,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708394315762368512,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708675790739079168,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708816528227434496,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708886896971612160,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708922081343700992,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708939673529745408,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708948469622767616,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708952867669278720,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708955066692534272,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708956166204162048,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708956715959975936,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708956990837882880,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708957128276836352,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708957196996313088,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708957231356051456,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708957248535920640,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708957257125855232,64,FLEN)
NAN_BOXED(6882786100558918039,64,FLEN)
NAN_BOXED(11522710902762949827,64,FLEN)
NAN_BOXED(13708957261420822528,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
