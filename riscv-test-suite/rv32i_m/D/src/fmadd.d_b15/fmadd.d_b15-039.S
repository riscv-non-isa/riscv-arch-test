
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_29184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:87552*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87552*0 + 3*0*FLEN/8, x4, x1, x2)

inst_29185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:87555*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87555*0 + 3*1*FLEN/8, x4, x1, x2)

inst_29186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:87558*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87558*0 + 3*2*FLEN/8, x4, x1, x2)

inst_29187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:87561*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87561*0 + 3*3*FLEN/8, x4, x1, x2)

inst_29188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:87564*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87564*0 + 3*4*FLEN/8, x4, x1, x2)

inst_29189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:87567*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87567*0 + 3*5*FLEN/8, x4, x1, x2)

inst_29190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:87570*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87570*0 + 3*6*FLEN/8, x4, x1, x2)

inst_29191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:87573*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87573*0 + 3*7*FLEN/8, x4, x1, x2)

inst_29192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:87576*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87576*0 + 3*8*FLEN/8, x4, x1, x2)

inst_29193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:87579*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87579*0 + 3*9*FLEN/8, x4, x1, x2)

inst_29194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000000000000; valaddr_reg:x3; val_offset:87582*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87582*0 + 3*10*FLEN/8, x4, x1, x2)

inst_29195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000000000001; valaddr_reg:x3; val_offset:87585*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87585*0 + 3*11*FLEN/8, x4, x1, x2)

inst_29196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000000000003; valaddr_reg:x3; val_offset:87588*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87588*0 + 3*12*FLEN/8, x4, x1, x2)

inst_29197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000000000007; valaddr_reg:x3; val_offset:87591*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87591*0 + 3*13*FLEN/8, x4, x1, x2)

inst_29198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000000000000f; valaddr_reg:x3; val_offset:87594*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87594*0 + 3*14*FLEN/8, x4, x1, x2)

inst_29199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000000000001f; valaddr_reg:x3; val_offset:87597*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87597*0 + 3*15*FLEN/8, x4, x1, x2)

inst_29200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000000000003f; valaddr_reg:x3; val_offset:87600*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87600*0 + 3*16*FLEN/8, x4, x1, x2)

inst_29201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000000000007f; valaddr_reg:x3; val_offset:87603*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87603*0 + 3*17*FLEN/8, x4, x1, x2)

inst_29202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00000000000ff; valaddr_reg:x3; val_offset:87606*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87606*0 + 3*18*FLEN/8, x4, x1, x2)

inst_29203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00000000001ff; valaddr_reg:x3; val_offset:87609*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87609*0 + 3*19*FLEN/8, x4, x1, x2)

inst_29204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00000000003ff; valaddr_reg:x3; val_offset:87612*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87612*0 + 3*20*FLEN/8, x4, x1, x2)

inst_29205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00000000007ff; valaddr_reg:x3; val_offset:87615*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87615*0 + 3*21*FLEN/8, x4, x1, x2)

inst_29206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000000000fff; valaddr_reg:x3; val_offset:87618*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87618*0 + 3*22*FLEN/8, x4, x1, x2)

inst_29207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000000001fff; valaddr_reg:x3; val_offset:87621*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87621*0 + 3*23*FLEN/8, x4, x1, x2)

inst_29208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000000003fff; valaddr_reg:x3; val_offset:87624*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87624*0 + 3*24*FLEN/8, x4, x1, x2)

inst_29209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000000007fff; valaddr_reg:x3; val_offset:87627*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87627*0 + 3*25*FLEN/8, x4, x1, x2)

inst_29210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000000000ffff; valaddr_reg:x3; val_offset:87630*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87630*0 + 3*26*FLEN/8, x4, x1, x2)

inst_29211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000000001ffff; valaddr_reg:x3; val_offset:87633*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87633*0 + 3*27*FLEN/8, x4, x1, x2)

inst_29212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000000003ffff; valaddr_reg:x3; val_offset:87636*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87636*0 + 3*28*FLEN/8, x4, x1, x2)

inst_29213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000000007ffff; valaddr_reg:x3; val_offset:87639*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87639*0 + 3*29*FLEN/8, x4, x1, x2)

inst_29214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00000000fffff; valaddr_reg:x3; val_offset:87642*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87642*0 + 3*30*FLEN/8, x4, x1, x2)

inst_29215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00000001fffff; valaddr_reg:x3; val_offset:87645*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87645*0 + 3*31*FLEN/8, x4, x1, x2)

inst_29216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00000003fffff; valaddr_reg:x3; val_offset:87648*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87648*0 + 3*32*FLEN/8, x4, x1, x2)

inst_29217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00000007fffff; valaddr_reg:x3; val_offset:87651*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87651*0 + 3*33*FLEN/8, x4, x1, x2)

inst_29218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000000ffffff; valaddr_reg:x3; val_offset:87654*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87654*0 + 3*34*FLEN/8, x4, x1, x2)

inst_29219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000001ffffff; valaddr_reg:x3; val_offset:87657*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87657*0 + 3*35*FLEN/8, x4, x1, x2)

inst_29220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000003ffffff; valaddr_reg:x3; val_offset:87660*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87660*0 + 3*36*FLEN/8, x4, x1, x2)

inst_29221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000007ffffff; valaddr_reg:x3; val_offset:87663*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87663*0 + 3*37*FLEN/8, x4, x1, x2)

inst_29222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000000fffffff; valaddr_reg:x3; val_offset:87666*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87666*0 + 3*38*FLEN/8, x4, x1, x2)

inst_29223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000001fffffff; valaddr_reg:x3; val_offset:87669*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87669*0 + 3*39*FLEN/8, x4, x1, x2)

inst_29224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000003fffffff; valaddr_reg:x3; val_offset:87672*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87672*0 + 3*40*FLEN/8, x4, x1, x2)

inst_29225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000007fffffff; valaddr_reg:x3; val_offset:87675*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87675*0 + 3*41*FLEN/8, x4, x1, x2)

inst_29226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00000ffffffff; valaddr_reg:x3; val_offset:87678*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87678*0 + 3*42*FLEN/8, x4, x1, x2)

inst_29227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00001ffffffff; valaddr_reg:x3; val_offset:87681*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87681*0 + 3*43*FLEN/8, x4, x1, x2)

inst_29228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00003ffffffff; valaddr_reg:x3; val_offset:87684*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87684*0 + 3*44*FLEN/8, x4, x1, x2)

inst_29229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00007ffffffff; valaddr_reg:x3; val_offset:87687*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87687*0 + 3*45*FLEN/8, x4, x1, x2)

inst_29230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0000fffffffff; valaddr_reg:x3; val_offset:87690*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87690*0 + 3*46*FLEN/8, x4, x1, x2)

inst_29231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0001fffffffff; valaddr_reg:x3; val_offset:87693*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87693*0 + 3*47*FLEN/8, x4, x1, x2)

inst_29232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0003fffffffff; valaddr_reg:x3; val_offset:87696*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87696*0 + 3*48*FLEN/8, x4, x1, x2)

inst_29233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0007fffffffff; valaddr_reg:x3; val_offset:87699*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87699*0 + 3*49*FLEN/8, x4, x1, x2)

inst_29234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e000ffffffffff; valaddr_reg:x3; val_offset:87702*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87702*0 + 3*50*FLEN/8, x4, x1, x2)

inst_29235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e001ffffffffff; valaddr_reg:x3; val_offset:87705*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87705*0 + 3*51*FLEN/8, x4, x1, x2)

inst_29236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e003ffffffffff; valaddr_reg:x3; val_offset:87708*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87708*0 + 3*52*FLEN/8, x4, x1, x2)

inst_29237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e007ffffffffff; valaddr_reg:x3; val_offset:87711*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87711*0 + 3*53*FLEN/8, x4, x1, x2)

inst_29238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e00fffffffffff; valaddr_reg:x3; val_offset:87714*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87714*0 + 3*54*FLEN/8, x4, x1, x2)

inst_29239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e01fffffffffff; valaddr_reg:x3; val_offset:87717*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87717*0 + 3*55*FLEN/8, x4, x1, x2)

inst_29240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e03fffffffffff; valaddr_reg:x3; val_offset:87720*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87720*0 + 3*56*FLEN/8, x4, x1, x2)

inst_29241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e07fffffffffff; valaddr_reg:x3; val_offset:87723*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87723*0 + 3*57*FLEN/8, x4, x1, x2)

inst_29242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e0ffffffffffff; valaddr_reg:x3; val_offset:87726*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87726*0 + 3*58*FLEN/8, x4, x1, x2)

inst_29243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e1ffffffffffff; valaddr_reg:x3; val_offset:87729*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87729*0 + 3*59*FLEN/8, x4, x1, x2)

inst_29244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e3ffffffffffff; valaddr_reg:x3; val_offset:87732*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87732*0 + 3*60*FLEN/8, x4, x1, x2)

inst_29245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e7ffffffffffff; valaddr_reg:x3; val_offset:87735*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87735*0 + 3*61*FLEN/8, x4, x1, x2)

inst_29246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3e8000000000000; valaddr_reg:x3; val_offset:87738*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87738*0 + 3*62*FLEN/8, x4, x1, x2)

inst_29247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3ec000000000000; valaddr_reg:x3; val_offset:87741*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87741*0 + 3*63*FLEN/8, x4, x1, x2)

inst_29248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3ee000000000000; valaddr_reg:x3; val_offset:87744*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87744*0 + 3*64*FLEN/8, x4, x1, x2)

inst_29249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3ef000000000000; valaddr_reg:x3; val_offset:87747*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87747*0 + 3*65*FLEN/8, x4, x1, x2)

inst_29250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3ef800000000000; valaddr_reg:x3; val_offset:87750*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87750*0 + 3*66*FLEN/8, x4, x1, x2)

inst_29251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efc00000000000; valaddr_reg:x3; val_offset:87753*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87753*0 + 3*67*FLEN/8, x4, x1, x2)

inst_29252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efe00000000000; valaddr_reg:x3; val_offset:87756*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87756*0 + 3*68*FLEN/8, x4, x1, x2)

inst_29253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3eff00000000000; valaddr_reg:x3; val_offset:87759*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87759*0 + 3*69*FLEN/8, x4, x1, x2)

inst_29254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3eff80000000000; valaddr_reg:x3; val_offset:87762*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87762*0 + 3*70*FLEN/8, x4, x1, x2)

inst_29255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effc0000000000; valaddr_reg:x3; val_offset:87765*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87765*0 + 3*71*FLEN/8, x4, x1, x2)

inst_29256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effe0000000000; valaddr_reg:x3; val_offset:87768*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87768*0 + 3*72*FLEN/8, x4, x1, x2)

inst_29257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efff0000000000; valaddr_reg:x3; val_offset:87771*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87771*0 + 3*73*FLEN/8, x4, x1, x2)

inst_29258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efff8000000000; valaddr_reg:x3; val_offset:87774*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87774*0 + 3*74*FLEN/8, x4, x1, x2)

inst_29259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffc000000000; valaddr_reg:x3; val_offset:87777*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87777*0 + 3*75*FLEN/8, x4, x1, x2)

inst_29260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffe000000000; valaddr_reg:x3; val_offset:87780*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87780*0 + 3*76*FLEN/8, x4, x1, x2)

inst_29261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effff000000000; valaddr_reg:x3; val_offset:87783*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87783*0 + 3*77*FLEN/8, x4, x1, x2)

inst_29262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effff800000000; valaddr_reg:x3; val_offset:87786*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87786*0 + 3*78*FLEN/8, x4, x1, x2)

inst_29263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffc00000000; valaddr_reg:x3; val_offset:87789*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87789*0 + 3*79*FLEN/8, x4, x1, x2)

inst_29264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffe00000000; valaddr_reg:x3; val_offset:87792*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87792*0 + 3*80*FLEN/8, x4, x1, x2)

inst_29265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffff00000000; valaddr_reg:x3; val_offset:87795*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87795*0 + 3*81*FLEN/8, x4, x1, x2)

inst_29266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffff80000000; valaddr_reg:x3; val_offset:87798*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87798*0 + 3*82*FLEN/8, x4, x1, x2)

inst_29267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffc0000000; valaddr_reg:x3; val_offset:87801*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87801*0 + 3*83*FLEN/8, x4, x1, x2)

inst_29268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffe0000000; valaddr_reg:x3; val_offset:87804*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87804*0 + 3*84*FLEN/8, x4, x1, x2)

inst_29269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffff0000000; valaddr_reg:x3; val_offset:87807*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87807*0 + 3*85*FLEN/8, x4, x1, x2)

inst_29270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffff8000000; valaddr_reg:x3; val_offset:87810*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87810*0 + 3*86*FLEN/8, x4, x1, x2)

inst_29271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffc000000; valaddr_reg:x3; val_offset:87813*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87813*0 + 3*87*FLEN/8, x4, x1, x2)

inst_29272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffe000000; valaddr_reg:x3; val_offset:87816*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87816*0 + 3*88*FLEN/8, x4, x1, x2)

inst_29273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffff000000; valaddr_reg:x3; val_offset:87819*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87819*0 + 3*89*FLEN/8, x4, x1, x2)

inst_29274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffff800000; valaddr_reg:x3; val_offset:87822*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87822*0 + 3*90*FLEN/8, x4, x1, x2)

inst_29275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffffc00000; valaddr_reg:x3; val_offset:87825*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87825*0 + 3*91*FLEN/8, x4, x1, x2)

inst_29276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffffe00000; valaddr_reg:x3; val_offset:87828*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87828*0 + 3*92*FLEN/8, x4, x1, x2)

inst_29277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffff00000; valaddr_reg:x3; val_offset:87831*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87831*0 + 3*93*FLEN/8, x4, x1, x2)

inst_29278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffff80000; valaddr_reg:x3; val_offset:87834*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87834*0 + 3*94*FLEN/8, x4, x1, x2)

inst_29279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffffc0000; valaddr_reg:x3; val_offset:87837*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87837*0 + 3*95*FLEN/8, x4, x1, x2)

inst_29280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffffe0000; valaddr_reg:x3; val_offset:87840*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87840*0 + 3*96*FLEN/8, x4, x1, x2)

inst_29281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffffff0000; valaddr_reg:x3; val_offset:87843*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87843*0 + 3*97*FLEN/8, x4, x1, x2)

inst_29282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffffff8000; valaddr_reg:x3; val_offset:87846*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87846*0 + 3*98*FLEN/8, x4, x1, x2)

inst_29283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffffffc000; valaddr_reg:x3; val_offset:87849*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87849*0 + 3*99*FLEN/8, x4, x1, x2)

inst_29284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffffffe000; valaddr_reg:x3; val_offset:87852*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87852*0 + 3*100*FLEN/8, x4, x1, x2)

inst_29285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffffff000; valaddr_reg:x3; val_offset:87855*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87855*0 + 3*101*FLEN/8, x4, x1, x2)

inst_29286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffffff800; valaddr_reg:x3; val_offset:87858*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87858*0 + 3*102*FLEN/8, x4, x1, x2)

inst_29287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffffffc00; valaddr_reg:x3; val_offset:87861*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87861*0 + 3*103*FLEN/8, x4, x1, x2)

inst_29288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffffffe00; valaddr_reg:x3; val_offset:87864*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87864*0 + 3*104*FLEN/8, x4, x1, x2)

inst_29289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffffffff00; valaddr_reg:x3; val_offset:87867*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87867*0 + 3*105*FLEN/8, x4, x1, x2)

inst_29290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffffffff80; valaddr_reg:x3; val_offset:87870*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87870*0 + 3*106*FLEN/8, x4, x1, x2)

inst_29291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffffffffc0; valaddr_reg:x3; val_offset:87873*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87873*0 + 3*107*FLEN/8, x4, x1, x2)

inst_29292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffffffffe0; valaddr_reg:x3; val_offset:87876*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87876*0 + 3*108*FLEN/8, x4, x1, x2)

inst_29293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffffffff0; valaddr_reg:x3; val_offset:87879*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87879*0 + 3*109*FLEN/8, x4, x1, x2)

inst_29294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffffffff8; valaddr_reg:x3; val_offset:87882*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87882*0 + 3*110*FLEN/8, x4, x1, x2)

inst_29295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffffffffc; valaddr_reg:x3; val_offset:87885*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87885*0 + 3*111*FLEN/8, x4, x1, x2)

inst_29296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3effffffffffffe; valaddr_reg:x3; val_offset:87888*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87888*0 + 3*112*FLEN/8, x4, x1, x2)

inst_29297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x268fa038f5667 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9268fa038f5667; op2val:0x0;
op3val:0x3efffffffffffff; valaddr_reg:x3; val_offset:87891*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87891*0 + 3*113*FLEN/8, x4, x1, x2)

inst_29298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:87894*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87894*0 + 3*114*FLEN/8, x4, x1, x2)

inst_29299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:87897*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87897*0 + 3*115*FLEN/8, x4, x1, x2)

inst_29300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:87900*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87900*0 + 3*116*FLEN/8, x4, x1, x2)

inst_29301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:87903*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87903*0 + 3*117*FLEN/8, x4, x1, x2)

inst_29302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:87906*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87906*0 + 3*118*FLEN/8, x4, x1, x2)

inst_29303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:87909*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87909*0 + 3*119*FLEN/8, x4, x1, x2)

inst_29304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:87912*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87912*0 + 3*120*FLEN/8, x4, x1, x2)

inst_29305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:87915*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87915*0 + 3*121*FLEN/8, x4, x1, x2)

inst_29306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:87918*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87918*0 + 3*122*FLEN/8, x4, x1, x2)

inst_29307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:87921*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87921*0 + 3*123*FLEN/8, x4, x1, x2)

inst_29308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:87924*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87924*0 + 3*124*FLEN/8, x4, x1, x2)

inst_29309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:87927*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87927*0 + 3*125*FLEN/8, x4, x1, x2)

inst_29310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:87930*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87930*0 + 3*126*FLEN/8, x4, x1, x2)

inst_29311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:87933*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87933*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_29312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:87936*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87936*0 + 3*128*FLEN/8, x4, x1, x2)

inst_29313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:87939*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87939*0 + 3*129*FLEN/8, x4, x1, x2)

inst_29314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:87942*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87942*0 + 3*130*FLEN/8, x4, x1, x2)

inst_29315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:87945*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87945*0 + 3*131*FLEN/8, x4, x1, x2)

inst_29316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:87948*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87948*0 + 3*132*FLEN/8, x4, x1, x2)

inst_29317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:87951*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87951*0 + 3*133*FLEN/8, x4, x1, x2)

inst_29318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:87954*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87954*0 + 3*134*FLEN/8, x4, x1, x2)

inst_29319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:87957*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87957*0 + 3*135*FLEN/8, x4, x1, x2)

inst_29320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000000000000; valaddr_reg:x3; val_offset:87960*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87960*0 + 3*136*FLEN/8, x4, x1, x2)

inst_29321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000000000001; valaddr_reg:x3; val_offset:87963*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87963*0 + 3*137*FLEN/8, x4, x1, x2)

inst_29322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000000000003; valaddr_reg:x3; val_offset:87966*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87966*0 + 3*138*FLEN/8, x4, x1, x2)

inst_29323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000000000007; valaddr_reg:x3; val_offset:87969*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87969*0 + 3*139*FLEN/8, x4, x1, x2)

inst_29324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000000000000f; valaddr_reg:x3; val_offset:87972*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87972*0 + 3*140*FLEN/8, x4, x1, x2)

inst_29325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000000000001f; valaddr_reg:x3; val_offset:87975*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87975*0 + 3*141*FLEN/8, x4, x1, x2)

inst_29326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000000000003f; valaddr_reg:x3; val_offset:87978*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87978*0 + 3*142*FLEN/8, x4, x1, x2)

inst_29327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000000000007f; valaddr_reg:x3; val_offset:87981*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87981*0 + 3*143*FLEN/8, x4, x1, x2)

inst_29328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00000000000ff; valaddr_reg:x3; val_offset:87984*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87984*0 + 3*144*FLEN/8, x4, x1, x2)

inst_29329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00000000001ff; valaddr_reg:x3; val_offset:87987*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87987*0 + 3*145*FLEN/8, x4, x1, x2)

inst_29330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00000000003ff; valaddr_reg:x3; val_offset:87990*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87990*0 + 3*146*FLEN/8, x4, x1, x2)

inst_29331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00000000007ff; valaddr_reg:x3; val_offset:87993*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87993*0 + 3*147*FLEN/8, x4, x1, x2)

inst_29332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000000000fff; valaddr_reg:x3; val_offset:87996*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87996*0 + 3*148*FLEN/8, x4, x1, x2)

inst_29333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000000001fff; valaddr_reg:x3; val_offset:87999*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87999*0 + 3*149*FLEN/8, x4, x1, x2)

inst_29334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000000003fff; valaddr_reg:x3; val_offset:88002*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88002*0 + 3*150*FLEN/8, x4, x1, x2)

inst_29335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000000007fff; valaddr_reg:x3; val_offset:88005*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88005*0 + 3*151*FLEN/8, x4, x1, x2)

inst_29336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000000000ffff; valaddr_reg:x3; val_offset:88008*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88008*0 + 3*152*FLEN/8, x4, x1, x2)

inst_29337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000000001ffff; valaddr_reg:x3; val_offset:88011*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88011*0 + 3*153*FLEN/8, x4, x1, x2)

inst_29338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000000003ffff; valaddr_reg:x3; val_offset:88014*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88014*0 + 3*154*FLEN/8, x4, x1, x2)

inst_29339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000000007ffff; valaddr_reg:x3; val_offset:88017*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88017*0 + 3*155*FLEN/8, x4, x1, x2)

inst_29340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00000000fffff; valaddr_reg:x3; val_offset:88020*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88020*0 + 3*156*FLEN/8, x4, x1, x2)

inst_29341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00000001fffff; valaddr_reg:x3; val_offset:88023*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88023*0 + 3*157*FLEN/8, x4, x1, x2)

inst_29342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00000003fffff; valaddr_reg:x3; val_offset:88026*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88026*0 + 3*158*FLEN/8, x4, x1, x2)

inst_29343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00000007fffff; valaddr_reg:x3; val_offset:88029*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88029*0 + 3*159*FLEN/8, x4, x1, x2)

inst_29344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000000ffffff; valaddr_reg:x3; val_offset:88032*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88032*0 + 3*160*FLEN/8, x4, x1, x2)

inst_29345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000001ffffff; valaddr_reg:x3; val_offset:88035*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88035*0 + 3*161*FLEN/8, x4, x1, x2)

inst_29346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000003ffffff; valaddr_reg:x3; val_offset:88038*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88038*0 + 3*162*FLEN/8, x4, x1, x2)

inst_29347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000007ffffff; valaddr_reg:x3; val_offset:88041*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88041*0 + 3*163*FLEN/8, x4, x1, x2)

inst_29348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000000fffffff; valaddr_reg:x3; val_offset:88044*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88044*0 + 3*164*FLEN/8, x4, x1, x2)

inst_29349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000001fffffff; valaddr_reg:x3; val_offset:88047*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88047*0 + 3*165*FLEN/8, x4, x1, x2)

inst_29350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000003fffffff; valaddr_reg:x3; val_offset:88050*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88050*0 + 3*166*FLEN/8, x4, x1, x2)

inst_29351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000007fffffff; valaddr_reg:x3; val_offset:88053*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88053*0 + 3*167*FLEN/8, x4, x1, x2)

inst_29352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00000ffffffff; valaddr_reg:x3; val_offset:88056*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88056*0 + 3*168*FLEN/8, x4, x1, x2)

inst_29353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00001ffffffff; valaddr_reg:x3; val_offset:88059*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88059*0 + 3*169*FLEN/8, x4, x1, x2)

inst_29354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00003ffffffff; valaddr_reg:x3; val_offset:88062*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88062*0 + 3*170*FLEN/8, x4, x1, x2)

inst_29355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00007ffffffff; valaddr_reg:x3; val_offset:88065*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88065*0 + 3*171*FLEN/8, x4, x1, x2)

inst_29356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0000fffffffff; valaddr_reg:x3; val_offset:88068*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88068*0 + 3*172*FLEN/8, x4, x1, x2)

inst_29357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0001fffffffff; valaddr_reg:x3; val_offset:88071*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88071*0 + 3*173*FLEN/8, x4, x1, x2)

inst_29358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0003fffffffff; valaddr_reg:x3; val_offset:88074*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88074*0 + 3*174*FLEN/8, x4, x1, x2)

inst_29359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0007fffffffff; valaddr_reg:x3; val_offset:88077*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88077*0 + 3*175*FLEN/8, x4, x1, x2)

inst_29360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e000ffffffffff; valaddr_reg:x3; val_offset:88080*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88080*0 + 3*176*FLEN/8, x4, x1, x2)

inst_29361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e001ffffffffff; valaddr_reg:x3; val_offset:88083*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88083*0 + 3*177*FLEN/8, x4, x1, x2)

inst_29362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e003ffffffffff; valaddr_reg:x3; val_offset:88086*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88086*0 + 3*178*FLEN/8, x4, x1, x2)

inst_29363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e007ffffffffff; valaddr_reg:x3; val_offset:88089*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88089*0 + 3*179*FLEN/8, x4, x1, x2)

inst_29364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e00fffffffffff; valaddr_reg:x3; val_offset:88092*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88092*0 + 3*180*FLEN/8, x4, x1, x2)

inst_29365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e01fffffffffff; valaddr_reg:x3; val_offset:88095*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88095*0 + 3*181*FLEN/8, x4, x1, x2)

inst_29366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e03fffffffffff; valaddr_reg:x3; val_offset:88098*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88098*0 + 3*182*FLEN/8, x4, x1, x2)

inst_29367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e07fffffffffff; valaddr_reg:x3; val_offset:88101*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88101*0 + 3*183*FLEN/8, x4, x1, x2)

inst_29368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e0ffffffffffff; valaddr_reg:x3; val_offset:88104*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88104*0 + 3*184*FLEN/8, x4, x1, x2)

inst_29369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e1ffffffffffff; valaddr_reg:x3; val_offset:88107*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88107*0 + 3*185*FLEN/8, x4, x1, x2)

inst_29370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e3ffffffffffff; valaddr_reg:x3; val_offset:88110*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88110*0 + 3*186*FLEN/8, x4, x1, x2)

inst_29371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e7ffffffffffff; valaddr_reg:x3; val_offset:88113*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88113*0 + 3*187*FLEN/8, x4, x1, x2)

inst_29372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83e8000000000000; valaddr_reg:x3; val_offset:88116*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88116*0 + 3*188*FLEN/8, x4, x1, x2)

inst_29373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83ec000000000000; valaddr_reg:x3; val_offset:88119*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88119*0 + 3*189*FLEN/8, x4, x1, x2)

inst_29374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83ee000000000000; valaddr_reg:x3; val_offset:88122*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88122*0 + 3*190*FLEN/8, x4, x1, x2)

inst_29375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83ef000000000000; valaddr_reg:x3; val_offset:88125*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88125*0 + 3*191*FLEN/8, x4, x1, x2)

inst_29376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83ef800000000000; valaddr_reg:x3; val_offset:88128*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88128*0 + 3*192*FLEN/8, x4, x1, x2)

inst_29377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efc00000000000; valaddr_reg:x3; val_offset:88131*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88131*0 + 3*193*FLEN/8, x4, x1, x2)

inst_29378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efe00000000000; valaddr_reg:x3; val_offset:88134*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88134*0 + 3*194*FLEN/8, x4, x1, x2)

inst_29379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83eff00000000000; valaddr_reg:x3; val_offset:88137*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88137*0 + 3*195*FLEN/8, x4, x1, x2)

inst_29380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83eff80000000000; valaddr_reg:x3; val_offset:88140*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88140*0 + 3*196*FLEN/8, x4, x1, x2)

inst_29381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effc0000000000; valaddr_reg:x3; val_offset:88143*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88143*0 + 3*197*FLEN/8, x4, x1, x2)

inst_29382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effe0000000000; valaddr_reg:x3; val_offset:88146*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88146*0 + 3*198*FLEN/8, x4, x1, x2)

inst_29383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efff0000000000; valaddr_reg:x3; val_offset:88149*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88149*0 + 3*199*FLEN/8, x4, x1, x2)

inst_29384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efff8000000000; valaddr_reg:x3; val_offset:88152*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88152*0 + 3*200*FLEN/8, x4, x1, x2)

inst_29385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffc000000000; valaddr_reg:x3; val_offset:88155*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88155*0 + 3*201*FLEN/8, x4, x1, x2)

inst_29386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffe000000000; valaddr_reg:x3; val_offset:88158*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88158*0 + 3*202*FLEN/8, x4, x1, x2)

inst_29387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effff000000000; valaddr_reg:x3; val_offset:88161*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88161*0 + 3*203*FLEN/8, x4, x1, x2)

inst_29388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effff800000000; valaddr_reg:x3; val_offset:88164*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88164*0 + 3*204*FLEN/8, x4, x1, x2)

inst_29389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffc00000000; valaddr_reg:x3; val_offset:88167*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88167*0 + 3*205*FLEN/8, x4, x1, x2)

inst_29390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffe00000000; valaddr_reg:x3; val_offset:88170*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88170*0 + 3*206*FLEN/8, x4, x1, x2)

inst_29391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffff00000000; valaddr_reg:x3; val_offset:88173*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88173*0 + 3*207*FLEN/8, x4, x1, x2)

inst_29392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffff80000000; valaddr_reg:x3; val_offset:88176*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88176*0 + 3*208*FLEN/8, x4, x1, x2)

inst_29393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffc0000000; valaddr_reg:x3; val_offset:88179*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88179*0 + 3*209*FLEN/8, x4, x1, x2)

inst_29394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffe0000000; valaddr_reg:x3; val_offset:88182*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88182*0 + 3*210*FLEN/8, x4, x1, x2)

inst_29395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffff0000000; valaddr_reg:x3; val_offset:88185*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88185*0 + 3*211*FLEN/8, x4, x1, x2)

inst_29396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffff8000000; valaddr_reg:x3; val_offset:88188*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88188*0 + 3*212*FLEN/8, x4, x1, x2)

inst_29397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffc000000; valaddr_reg:x3; val_offset:88191*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88191*0 + 3*213*FLEN/8, x4, x1, x2)

inst_29398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffe000000; valaddr_reg:x3; val_offset:88194*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88194*0 + 3*214*FLEN/8, x4, x1, x2)

inst_29399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffff000000; valaddr_reg:x3; val_offset:88197*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88197*0 + 3*215*FLEN/8, x4, x1, x2)

inst_29400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffff800000; valaddr_reg:x3; val_offset:88200*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88200*0 + 3*216*FLEN/8, x4, x1, x2)

inst_29401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffffc00000; valaddr_reg:x3; val_offset:88203*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88203*0 + 3*217*FLEN/8, x4, x1, x2)

inst_29402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffffe00000; valaddr_reg:x3; val_offset:88206*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88206*0 + 3*218*FLEN/8, x4, x1, x2)

inst_29403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffff00000; valaddr_reg:x3; val_offset:88209*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88209*0 + 3*219*FLEN/8, x4, x1, x2)

inst_29404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffff80000; valaddr_reg:x3; val_offset:88212*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88212*0 + 3*220*FLEN/8, x4, x1, x2)

inst_29405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffffc0000; valaddr_reg:x3; val_offset:88215*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88215*0 + 3*221*FLEN/8, x4, x1, x2)

inst_29406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffffe0000; valaddr_reg:x3; val_offset:88218*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88218*0 + 3*222*FLEN/8, x4, x1, x2)

inst_29407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffffff0000; valaddr_reg:x3; val_offset:88221*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88221*0 + 3*223*FLEN/8, x4, x1, x2)

inst_29408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffffff8000; valaddr_reg:x3; val_offset:88224*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88224*0 + 3*224*FLEN/8, x4, x1, x2)

inst_29409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffffffc000; valaddr_reg:x3; val_offset:88227*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88227*0 + 3*225*FLEN/8, x4, x1, x2)

inst_29410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffffffe000; valaddr_reg:x3; val_offset:88230*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88230*0 + 3*226*FLEN/8, x4, x1, x2)

inst_29411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffffff000; valaddr_reg:x3; val_offset:88233*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88233*0 + 3*227*FLEN/8, x4, x1, x2)

inst_29412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffffff800; valaddr_reg:x3; val_offset:88236*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88236*0 + 3*228*FLEN/8, x4, x1, x2)

inst_29413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffffffc00; valaddr_reg:x3; val_offset:88239*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88239*0 + 3*229*FLEN/8, x4, x1, x2)

inst_29414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffffffe00; valaddr_reg:x3; val_offset:88242*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88242*0 + 3*230*FLEN/8, x4, x1, x2)

inst_29415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffffffff00; valaddr_reg:x3; val_offset:88245*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88245*0 + 3*231*FLEN/8, x4, x1, x2)

inst_29416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffffffff80; valaddr_reg:x3; val_offset:88248*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88248*0 + 3*232*FLEN/8, x4, x1, x2)

inst_29417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffffffffc0; valaddr_reg:x3; val_offset:88251*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88251*0 + 3*233*FLEN/8, x4, x1, x2)

inst_29418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffffffffe0; valaddr_reg:x3; val_offset:88254*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88254*0 + 3*234*FLEN/8, x4, x1, x2)

inst_29419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffffffff0; valaddr_reg:x3; val_offset:88257*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88257*0 + 3*235*FLEN/8, x4, x1, x2)

inst_29420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffffffff8; valaddr_reg:x3; val_offset:88260*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88260*0 + 3*236*FLEN/8, x4, x1, x2)

inst_29421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffffffffc; valaddr_reg:x3; val_offset:88263*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88263*0 + 3*237*FLEN/8, x4, x1, x2)

inst_29422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83effffffffffffe; valaddr_reg:x3; val_offset:88266*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88266*0 + 3*238*FLEN/8, x4, x1, x2)

inst_29423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x26d5939879623 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f926d5939879623; op2val:0x8000;
op3val:0x83efffffffffffff; valaddr_reg:x3; val_offset:88269*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88269*0 + 3*239*FLEN/8, x4, x1, x2)

inst_29424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000000000000; valaddr_reg:x3; val_offset:88272*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88272*0 + 3*240*FLEN/8, x4, x1, x2)

inst_29425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000000000001; valaddr_reg:x3; val_offset:88275*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88275*0 + 3*241*FLEN/8, x4, x1, x2)

inst_29426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000000000003; valaddr_reg:x3; val_offset:88278*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88278*0 + 3*242*FLEN/8, x4, x1, x2)

inst_29427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000000000007; valaddr_reg:x3; val_offset:88281*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88281*0 + 3*243*FLEN/8, x4, x1, x2)

inst_29428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000000000000f; valaddr_reg:x3; val_offset:88284*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88284*0 + 3*244*FLEN/8, x4, x1, x2)

inst_29429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000000000001f; valaddr_reg:x3; val_offset:88287*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88287*0 + 3*245*FLEN/8, x4, x1, x2)

inst_29430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000000000003f; valaddr_reg:x3; val_offset:88290*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88290*0 + 3*246*FLEN/8, x4, x1, x2)

inst_29431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000000000007f; valaddr_reg:x3; val_offset:88293*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88293*0 + 3*247*FLEN/8, x4, x1, x2)

inst_29432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00000000000ff; valaddr_reg:x3; val_offset:88296*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88296*0 + 3*248*FLEN/8, x4, x1, x2)

inst_29433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00000000001ff; valaddr_reg:x3; val_offset:88299*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88299*0 + 3*249*FLEN/8, x4, x1, x2)

inst_29434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00000000003ff; valaddr_reg:x3; val_offset:88302*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88302*0 + 3*250*FLEN/8, x4, x1, x2)

inst_29435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00000000007ff; valaddr_reg:x3; val_offset:88305*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88305*0 + 3*251*FLEN/8, x4, x1, x2)

inst_29436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000000000fff; valaddr_reg:x3; val_offset:88308*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88308*0 + 3*252*FLEN/8, x4, x1, x2)

inst_29437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000000001fff; valaddr_reg:x3; val_offset:88311*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88311*0 + 3*253*FLEN/8, x4, x1, x2)

inst_29438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000000003fff; valaddr_reg:x3; val_offset:88314*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88314*0 + 3*254*FLEN/8, x4, x1, x2)

inst_29439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000000007fff; valaddr_reg:x3; val_offset:88317*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88317*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_29440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000000000ffff; valaddr_reg:x3; val_offset:88320*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88320*0 + 3*256*FLEN/8, x4, x1, x2)

inst_29441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000000001ffff; valaddr_reg:x3; val_offset:88323*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88323*0 + 3*257*FLEN/8, x4, x1, x2)

inst_29442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000000003ffff; valaddr_reg:x3; val_offset:88326*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88326*0 + 3*258*FLEN/8, x4, x1, x2)

inst_29443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000000007ffff; valaddr_reg:x3; val_offset:88329*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88329*0 + 3*259*FLEN/8, x4, x1, x2)

inst_29444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00000000fffff; valaddr_reg:x3; val_offset:88332*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88332*0 + 3*260*FLEN/8, x4, x1, x2)

inst_29445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00000001fffff; valaddr_reg:x3; val_offset:88335*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88335*0 + 3*261*FLEN/8, x4, x1, x2)

inst_29446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00000003fffff; valaddr_reg:x3; val_offset:88338*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88338*0 + 3*262*FLEN/8, x4, x1, x2)

inst_29447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00000007fffff; valaddr_reg:x3; val_offset:88341*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88341*0 + 3*263*FLEN/8, x4, x1, x2)

inst_29448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000000ffffff; valaddr_reg:x3; val_offset:88344*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88344*0 + 3*264*FLEN/8, x4, x1, x2)

inst_29449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000001ffffff; valaddr_reg:x3; val_offset:88347*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88347*0 + 3*265*FLEN/8, x4, x1, x2)

inst_29450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000003ffffff; valaddr_reg:x3; val_offset:88350*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88350*0 + 3*266*FLEN/8, x4, x1, x2)

inst_29451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000007ffffff; valaddr_reg:x3; val_offset:88353*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88353*0 + 3*267*FLEN/8, x4, x1, x2)

inst_29452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000000fffffff; valaddr_reg:x3; val_offset:88356*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88356*0 + 3*268*FLEN/8, x4, x1, x2)

inst_29453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000001fffffff; valaddr_reg:x3; val_offset:88359*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88359*0 + 3*269*FLEN/8, x4, x1, x2)

inst_29454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000003fffffff; valaddr_reg:x3; val_offset:88362*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88362*0 + 3*270*FLEN/8, x4, x1, x2)

inst_29455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000007fffffff; valaddr_reg:x3; val_offset:88365*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88365*0 + 3*271*FLEN/8, x4, x1, x2)

inst_29456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00000ffffffff; valaddr_reg:x3; val_offset:88368*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88368*0 + 3*272*FLEN/8, x4, x1, x2)

inst_29457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00001ffffffff; valaddr_reg:x3; val_offset:88371*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88371*0 + 3*273*FLEN/8, x4, x1, x2)

inst_29458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00003ffffffff; valaddr_reg:x3; val_offset:88374*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88374*0 + 3*274*FLEN/8, x4, x1, x2)

inst_29459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00007ffffffff; valaddr_reg:x3; val_offset:88377*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88377*0 + 3*275*FLEN/8, x4, x1, x2)

inst_29460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0000fffffffff; valaddr_reg:x3; val_offset:88380*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88380*0 + 3*276*FLEN/8, x4, x1, x2)

inst_29461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0001fffffffff; valaddr_reg:x3; val_offset:88383*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88383*0 + 3*277*FLEN/8, x4, x1, x2)

inst_29462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0003fffffffff; valaddr_reg:x3; val_offset:88386*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88386*0 + 3*278*FLEN/8, x4, x1, x2)

inst_29463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0007fffffffff; valaddr_reg:x3; val_offset:88389*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88389*0 + 3*279*FLEN/8, x4, x1, x2)

inst_29464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e000ffffffffff; valaddr_reg:x3; val_offset:88392*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88392*0 + 3*280*FLEN/8, x4, x1, x2)

inst_29465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e001ffffffffff; valaddr_reg:x3; val_offset:88395*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88395*0 + 3*281*FLEN/8, x4, x1, x2)

inst_29466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e003ffffffffff; valaddr_reg:x3; val_offset:88398*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88398*0 + 3*282*FLEN/8, x4, x1, x2)

inst_29467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e007ffffffffff; valaddr_reg:x3; val_offset:88401*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88401*0 + 3*283*FLEN/8, x4, x1, x2)

inst_29468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e00fffffffffff; valaddr_reg:x3; val_offset:88404*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88404*0 + 3*284*FLEN/8, x4, x1, x2)

inst_29469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e01fffffffffff; valaddr_reg:x3; val_offset:88407*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88407*0 + 3*285*FLEN/8, x4, x1, x2)

inst_29470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e03fffffffffff; valaddr_reg:x3; val_offset:88410*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88410*0 + 3*286*FLEN/8, x4, x1, x2)

inst_29471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e07fffffffffff; valaddr_reg:x3; val_offset:88413*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88413*0 + 3*287*FLEN/8, x4, x1, x2)

inst_29472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e0ffffffffffff; valaddr_reg:x3; val_offset:88416*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88416*0 + 3*288*FLEN/8, x4, x1, x2)

inst_29473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e1ffffffffffff; valaddr_reg:x3; val_offset:88419*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88419*0 + 3*289*FLEN/8, x4, x1, x2)

inst_29474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e3ffffffffffff; valaddr_reg:x3; val_offset:88422*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88422*0 + 3*290*FLEN/8, x4, x1, x2)

inst_29475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e7ffffffffffff; valaddr_reg:x3; val_offset:88425*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88425*0 + 3*291*FLEN/8, x4, x1, x2)

inst_29476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7e8000000000000; valaddr_reg:x3; val_offset:88428*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88428*0 + 3*292*FLEN/8, x4, x1, x2)

inst_29477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7ec000000000000; valaddr_reg:x3; val_offset:88431*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88431*0 + 3*293*FLEN/8, x4, x1, x2)

inst_29478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7ee000000000000; valaddr_reg:x3; val_offset:88434*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88434*0 + 3*294*FLEN/8, x4, x1, x2)

inst_29479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7ef000000000000; valaddr_reg:x3; val_offset:88437*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88437*0 + 3*295*FLEN/8, x4, x1, x2)

inst_29480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7ef800000000000; valaddr_reg:x3; val_offset:88440*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88440*0 + 3*296*FLEN/8, x4, x1, x2)

inst_29481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efc00000000000; valaddr_reg:x3; val_offset:88443*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88443*0 + 3*297*FLEN/8, x4, x1, x2)

inst_29482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efe00000000000; valaddr_reg:x3; val_offset:88446*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88446*0 + 3*298*FLEN/8, x4, x1, x2)

inst_29483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7eff00000000000; valaddr_reg:x3; val_offset:88449*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88449*0 + 3*299*FLEN/8, x4, x1, x2)

inst_29484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7eff80000000000; valaddr_reg:x3; val_offset:88452*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88452*0 + 3*300*FLEN/8, x4, x1, x2)

inst_29485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effc0000000000; valaddr_reg:x3; val_offset:88455*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88455*0 + 3*301*FLEN/8, x4, x1, x2)

inst_29486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effe0000000000; valaddr_reg:x3; val_offset:88458*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88458*0 + 3*302*FLEN/8, x4, x1, x2)

inst_29487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efff0000000000; valaddr_reg:x3; val_offset:88461*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88461*0 + 3*303*FLEN/8, x4, x1, x2)

inst_29488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efff8000000000; valaddr_reg:x3; val_offset:88464*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88464*0 + 3*304*FLEN/8, x4, x1, x2)

inst_29489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffc000000000; valaddr_reg:x3; val_offset:88467*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88467*0 + 3*305*FLEN/8, x4, x1, x2)

inst_29490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffe000000000; valaddr_reg:x3; val_offset:88470*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88470*0 + 3*306*FLEN/8, x4, x1, x2)

inst_29491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effff000000000; valaddr_reg:x3; val_offset:88473*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88473*0 + 3*307*FLEN/8, x4, x1, x2)

inst_29492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effff800000000; valaddr_reg:x3; val_offset:88476*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88476*0 + 3*308*FLEN/8, x4, x1, x2)

inst_29493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffc00000000; valaddr_reg:x3; val_offset:88479*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88479*0 + 3*309*FLEN/8, x4, x1, x2)

inst_29494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffe00000000; valaddr_reg:x3; val_offset:88482*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88482*0 + 3*310*FLEN/8, x4, x1, x2)

inst_29495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffff00000000; valaddr_reg:x3; val_offset:88485*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88485*0 + 3*311*FLEN/8, x4, x1, x2)

inst_29496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffff80000000; valaddr_reg:x3; val_offset:88488*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88488*0 + 3*312*FLEN/8, x4, x1, x2)

inst_29497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffc0000000; valaddr_reg:x3; val_offset:88491*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88491*0 + 3*313*FLEN/8, x4, x1, x2)

inst_29498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffe0000000; valaddr_reg:x3; val_offset:88494*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88494*0 + 3*314*FLEN/8, x4, x1, x2)

inst_29499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffff0000000; valaddr_reg:x3; val_offset:88497*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88497*0 + 3*315*FLEN/8, x4, x1, x2)

inst_29500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffff8000000; valaddr_reg:x3; val_offset:88500*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88500*0 + 3*316*FLEN/8, x4, x1, x2)

inst_29501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffc000000; valaddr_reg:x3; val_offset:88503*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88503*0 + 3*317*FLEN/8, x4, x1, x2)

inst_29502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffe000000; valaddr_reg:x3; val_offset:88506*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88506*0 + 3*318*FLEN/8, x4, x1, x2)

inst_29503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffff000000; valaddr_reg:x3; val_offset:88509*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88509*0 + 3*319*FLEN/8, x4, x1, x2)

inst_29504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffff800000; valaddr_reg:x3; val_offset:88512*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88512*0 + 3*320*FLEN/8, x4, x1, x2)

inst_29505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffffc00000; valaddr_reg:x3; val_offset:88515*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88515*0 + 3*321*FLEN/8, x4, x1, x2)

inst_29506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffffe00000; valaddr_reg:x3; val_offset:88518*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88518*0 + 3*322*FLEN/8, x4, x1, x2)

inst_29507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffff00000; valaddr_reg:x3; val_offset:88521*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88521*0 + 3*323*FLEN/8, x4, x1, x2)

inst_29508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffff80000; valaddr_reg:x3; val_offset:88524*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88524*0 + 3*324*FLEN/8, x4, x1, x2)

inst_29509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffffc0000; valaddr_reg:x3; val_offset:88527*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88527*0 + 3*325*FLEN/8, x4, x1, x2)

inst_29510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffffe0000; valaddr_reg:x3; val_offset:88530*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88530*0 + 3*326*FLEN/8, x4, x1, x2)

inst_29511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffffff0000; valaddr_reg:x3; val_offset:88533*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88533*0 + 3*327*FLEN/8, x4, x1, x2)

inst_29512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffffff8000; valaddr_reg:x3; val_offset:88536*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88536*0 + 3*328*FLEN/8, x4, x1, x2)

inst_29513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffffffc000; valaddr_reg:x3; val_offset:88539*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88539*0 + 3*329*FLEN/8, x4, x1, x2)

inst_29514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffffffe000; valaddr_reg:x3; val_offset:88542*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88542*0 + 3*330*FLEN/8, x4, x1, x2)

inst_29515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffffff000; valaddr_reg:x3; val_offset:88545*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88545*0 + 3*331*FLEN/8, x4, x1, x2)

inst_29516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffffff800; valaddr_reg:x3; val_offset:88548*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88548*0 + 3*332*FLEN/8, x4, x1, x2)

inst_29517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffffffc00; valaddr_reg:x3; val_offset:88551*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88551*0 + 3*333*FLEN/8, x4, x1, x2)

inst_29518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffffffe00; valaddr_reg:x3; val_offset:88554*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88554*0 + 3*334*FLEN/8, x4, x1, x2)

inst_29519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffffffff00; valaddr_reg:x3; val_offset:88557*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88557*0 + 3*335*FLEN/8, x4, x1, x2)

inst_29520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffffffff80; valaddr_reg:x3; val_offset:88560*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88560*0 + 3*336*FLEN/8, x4, x1, x2)

inst_29521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffffffffc0; valaddr_reg:x3; val_offset:88563*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88563*0 + 3*337*FLEN/8, x4, x1, x2)

inst_29522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffffffffe0; valaddr_reg:x3; val_offset:88566*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88566*0 + 3*338*FLEN/8, x4, x1, x2)

inst_29523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffffffff0; valaddr_reg:x3; val_offset:88569*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88569*0 + 3*339*FLEN/8, x4, x1, x2)

inst_29524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffffffff8; valaddr_reg:x3; val_offset:88572*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88572*0 + 3*340*FLEN/8, x4, x1, x2)

inst_29525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffffffffc; valaddr_reg:x3; val_offset:88575*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88575*0 + 3*341*FLEN/8, x4, x1, x2)

inst_29526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7effffffffffffe; valaddr_reg:x3; val_offset:88578*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88578*0 + 3*342*FLEN/8, x4, x1, x2)

inst_29527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x37e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xb7efffffffffffff; valaddr_reg:x3; val_offset:88581*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88581*0 + 3*343*FLEN/8, x4, x1, x2)

inst_29528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:88584*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88584*0 + 3*344*FLEN/8, x4, x1, x2)

inst_29529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:88587*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88587*0 + 3*345*FLEN/8, x4, x1, x2)

inst_29530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:88590*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88590*0 + 3*346*FLEN/8, x4, x1, x2)

inst_29531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:88593*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88593*0 + 3*347*FLEN/8, x4, x1, x2)

inst_29532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:88596*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88596*0 + 3*348*FLEN/8, x4, x1, x2)

inst_29533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:88599*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88599*0 + 3*349*FLEN/8, x4, x1, x2)

inst_29534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:88602*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88602*0 + 3*350*FLEN/8, x4, x1, x2)

inst_29535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:88605*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88605*0 + 3*351*FLEN/8, x4, x1, x2)

inst_29536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:88608*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88608*0 + 3*352*FLEN/8, x4, x1, x2)

inst_29537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:88611*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88611*0 + 3*353*FLEN/8, x4, x1, x2)

inst_29538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:88614*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88614*0 + 3*354*FLEN/8, x4, x1, x2)

inst_29539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:88617*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88617*0 + 3*355*FLEN/8, x4, x1, x2)

inst_29540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:88620*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88620*0 + 3*356*FLEN/8, x4, x1, x2)

inst_29541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:88623*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88623*0 + 3*357*FLEN/8, x4, x1, x2)

inst_29542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:88626*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88626*0 + 3*358*FLEN/8, x4, x1, x2)

inst_29543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:88629*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88629*0 + 3*359*FLEN/8, x4, x1, x2)

inst_29544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:88632*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88632*0 + 3*360*FLEN/8, x4, x1, x2)

inst_29545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:88635*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88635*0 + 3*361*FLEN/8, x4, x1, x2)

inst_29546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:88638*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88638*0 + 3*362*FLEN/8, x4, x1, x2)

inst_29547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:88641*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88641*0 + 3*363*FLEN/8, x4, x1, x2)

inst_29548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:88644*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88644*0 + 3*364*FLEN/8, x4, x1, x2)

inst_29549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x287ac6ae322ff and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xba18319c62958 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9287ac6ae322ff; op2val:0x9fdba18319c62958;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:88647*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88647*0 + 3*365*FLEN/8, x4, x1, x2)

inst_29550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:88650*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88650*0 + 3*366*FLEN/8, x4, x1, x2)

inst_29551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:88653*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88653*0 + 3*367*FLEN/8, x4, x1, x2)

inst_29552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:88656*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88656*0 + 3*368*FLEN/8, x4, x1, x2)

inst_29553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:88659*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88659*0 + 3*369*FLEN/8, x4, x1, x2)

inst_29554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:88662*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88662*0 + 3*370*FLEN/8, x4, x1, x2)

inst_29555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:88665*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88665*0 + 3*371*FLEN/8, x4, x1, x2)

inst_29556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:88668*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88668*0 + 3*372*FLEN/8, x4, x1, x2)

inst_29557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:88671*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88671*0 + 3*373*FLEN/8, x4, x1, x2)

inst_29558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:88674*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88674*0 + 3*374*FLEN/8, x4, x1, x2)

inst_29559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:88677*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88677*0 + 3*375*FLEN/8, x4, x1, x2)

inst_29560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:88680*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88680*0 + 3*376*FLEN/8, x4, x1, x2)

inst_29561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:88683*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88683*0 + 3*377*FLEN/8, x4, x1, x2)

inst_29562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:88686*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88686*0 + 3*378*FLEN/8, x4, x1, x2)

inst_29563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:88689*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88689*0 + 3*379*FLEN/8, x4, x1, x2)

inst_29564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:88692*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88692*0 + 3*380*FLEN/8, x4, x1, x2)

inst_29565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:88695*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88695*0 + 3*381*FLEN/8, x4, x1, x2)

inst_29566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:88698*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88698*0 + 3*382*FLEN/8, x4, x1, x2)

inst_29567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:88701*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88701*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_29568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:88704*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88704*0 + 3*384*FLEN/8, x4, x1, x2)

inst_29569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:88707*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88707*0 + 3*385*FLEN/8, x4, x1, x2)

inst_29570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:88710*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88710*0 + 3*386*FLEN/8, x4, x1, x2)

inst_29571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:88713*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88713*0 + 3*387*FLEN/8, x4, x1, x2)

inst_29572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000000000000; valaddr_reg:x3; val_offset:88716*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88716*0 + 3*388*FLEN/8, x4, x1, x2)

inst_29573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000000000001; valaddr_reg:x3; val_offset:88719*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88719*0 + 3*389*FLEN/8, x4, x1, x2)

inst_29574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000000000003; valaddr_reg:x3; val_offset:88722*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88722*0 + 3*390*FLEN/8, x4, x1, x2)

inst_29575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000000000007; valaddr_reg:x3; val_offset:88725*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88725*0 + 3*391*FLEN/8, x4, x1, x2)

inst_29576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000000000000f; valaddr_reg:x3; val_offset:88728*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88728*0 + 3*392*FLEN/8, x4, x1, x2)

inst_29577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000000000001f; valaddr_reg:x3; val_offset:88731*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88731*0 + 3*393*FLEN/8, x4, x1, x2)

inst_29578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000000000003f; valaddr_reg:x3; val_offset:88734*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88734*0 + 3*394*FLEN/8, x4, x1, x2)

inst_29579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000000000007f; valaddr_reg:x3; val_offset:88737*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88737*0 + 3*395*FLEN/8, x4, x1, x2)

inst_29580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00000000000ff; valaddr_reg:x3; val_offset:88740*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88740*0 + 3*396*FLEN/8, x4, x1, x2)

inst_29581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00000000001ff; valaddr_reg:x3; val_offset:88743*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88743*0 + 3*397*FLEN/8, x4, x1, x2)

inst_29582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00000000003ff; valaddr_reg:x3; val_offset:88746*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88746*0 + 3*398*FLEN/8, x4, x1, x2)

inst_29583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00000000007ff; valaddr_reg:x3; val_offset:88749*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88749*0 + 3*399*FLEN/8, x4, x1, x2)

inst_29584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000000000fff; valaddr_reg:x3; val_offset:88752*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88752*0 + 3*400*FLEN/8, x4, x1, x2)

inst_29585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000000001fff; valaddr_reg:x3; val_offset:88755*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88755*0 + 3*401*FLEN/8, x4, x1, x2)

inst_29586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000000003fff; valaddr_reg:x3; val_offset:88758*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88758*0 + 3*402*FLEN/8, x4, x1, x2)

inst_29587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000000007fff; valaddr_reg:x3; val_offset:88761*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88761*0 + 3*403*FLEN/8, x4, x1, x2)

inst_29588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000000000ffff; valaddr_reg:x3; val_offset:88764*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88764*0 + 3*404*FLEN/8, x4, x1, x2)

inst_29589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000000001ffff; valaddr_reg:x3; val_offset:88767*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88767*0 + 3*405*FLEN/8, x4, x1, x2)

inst_29590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000000003ffff; valaddr_reg:x3; val_offset:88770*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88770*0 + 3*406*FLEN/8, x4, x1, x2)

inst_29591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000000007ffff; valaddr_reg:x3; val_offset:88773*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88773*0 + 3*407*FLEN/8, x4, x1, x2)

inst_29592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00000000fffff; valaddr_reg:x3; val_offset:88776*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88776*0 + 3*408*FLEN/8, x4, x1, x2)

inst_29593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00000001fffff; valaddr_reg:x3; val_offset:88779*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88779*0 + 3*409*FLEN/8, x4, x1, x2)

inst_29594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00000003fffff; valaddr_reg:x3; val_offset:88782*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88782*0 + 3*410*FLEN/8, x4, x1, x2)

inst_29595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00000007fffff; valaddr_reg:x3; val_offset:88785*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88785*0 + 3*411*FLEN/8, x4, x1, x2)

inst_29596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000000ffffff; valaddr_reg:x3; val_offset:88788*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88788*0 + 3*412*FLEN/8, x4, x1, x2)

inst_29597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000001ffffff; valaddr_reg:x3; val_offset:88791*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88791*0 + 3*413*FLEN/8, x4, x1, x2)

inst_29598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000003ffffff; valaddr_reg:x3; val_offset:88794*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88794*0 + 3*414*FLEN/8, x4, x1, x2)

inst_29599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000007ffffff; valaddr_reg:x3; val_offset:88797*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88797*0 + 3*415*FLEN/8, x4, x1, x2)

inst_29600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000000fffffff; valaddr_reg:x3; val_offset:88800*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88800*0 + 3*416*FLEN/8, x4, x1, x2)

inst_29601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000001fffffff; valaddr_reg:x3; val_offset:88803*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88803*0 + 3*417*FLEN/8, x4, x1, x2)

inst_29602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000003fffffff; valaddr_reg:x3; val_offset:88806*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88806*0 + 3*418*FLEN/8, x4, x1, x2)

inst_29603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000007fffffff; valaddr_reg:x3; val_offset:88809*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88809*0 + 3*419*FLEN/8, x4, x1, x2)

inst_29604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00000ffffffff; valaddr_reg:x3; val_offset:88812*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88812*0 + 3*420*FLEN/8, x4, x1, x2)

inst_29605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00001ffffffff; valaddr_reg:x3; val_offset:88815*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88815*0 + 3*421*FLEN/8, x4, x1, x2)

inst_29606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00003ffffffff; valaddr_reg:x3; val_offset:88818*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88818*0 + 3*422*FLEN/8, x4, x1, x2)

inst_29607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00007ffffffff; valaddr_reg:x3; val_offset:88821*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88821*0 + 3*423*FLEN/8, x4, x1, x2)

inst_29608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0000fffffffff; valaddr_reg:x3; val_offset:88824*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88824*0 + 3*424*FLEN/8, x4, x1, x2)

inst_29609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0001fffffffff; valaddr_reg:x3; val_offset:88827*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88827*0 + 3*425*FLEN/8, x4, x1, x2)

inst_29610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0003fffffffff; valaddr_reg:x3; val_offset:88830*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88830*0 + 3*426*FLEN/8, x4, x1, x2)

inst_29611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0007fffffffff; valaddr_reg:x3; val_offset:88833*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88833*0 + 3*427*FLEN/8, x4, x1, x2)

inst_29612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c000ffffffffff; valaddr_reg:x3; val_offset:88836*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88836*0 + 3*428*FLEN/8, x4, x1, x2)

inst_29613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c001ffffffffff; valaddr_reg:x3; val_offset:88839*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88839*0 + 3*429*FLEN/8, x4, x1, x2)

inst_29614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c003ffffffffff; valaddr_reg:x3; val_offset:88842*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88842*0 + 3*430*FLEN/8, x4, x1, x2)

inst_29615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c007ffffffffff; valaddr_reg:x3; val_offset:88845*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88845*0 + 3*431*FLEN/8, x4, x1, x2)

inst_29616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c00fffffffffff; valaddr_reg:x3; val_offset:88848*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88848*0 + 3*432*FLEN/8, x4, x1, x2)

inst_29617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c01fffffffffff; valaddr_reg:x3; val_offset:88851*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88851*0 + 3*433*FLEN/8, x4, x1, x2)

inst_29618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c03fffffffffff; valaddr_reg:x3; val_offset:88854*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88854*0 + 3*434*FLEN/8, x4, x1, x2)

inst_29619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c07fffffffffff; valaddr_reg:x3; val_offset:88857*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88857*0 + 3*435*FLEN/8, x4, x1, x2)

inst_29620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c0ffffffffffff; valaddr_reg:x3; val_offset:88860*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88860*0 + 3*436*FLEN/8, x4, x1, x2)

inst_29621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c1ffffffffffff; valaddr_reg:x3; val_offset:88863*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88863*0 + 3*437*FLEN/8, x4, x1, x2)

inst_29622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c3ffffffffffff; valaddr_reg:x3; val_offset:88866*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88866*0 + 3*438*FLEN/8, x4, x1, x2)

inst_29623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c7ffffffffffff; valaddr_reg:x3; val_offset:88869*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88869*0 + 3*439*FLEN/8, x4, x1, x2)

inst_29624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80c8000000000000; valaddr_reg:x3; val_offset:88872*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88872*0 + 3*440*FLEN/8, x4, x1, x2)

inst_29625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cc000000000000; valaddr_reg:x3; val_offset:88875*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88875*0 + 3*441*FLEN/8, x4, x1, x2)

inst_29626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80ce000000000000; valaddr_reg:x3; val_offset:88878*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88878*0 + 3*442*FLEN/8, x4, x1, x2)

inst_29627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cf000000000000; valaddr_reg:x3; val_offset:88881*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88881*0 + 3*443*FLEN/8, x4, x1, x2)

inst_29628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cf800000000000; valaddr_reg:x3; val_offset:88884*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88884*0 + 3*444*FLEN/8, x4, x1, x2)

inst_29629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfc00000000000; valaddr_reg:x3; val_offset:88887*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88887*0 + 3*445*FLEN/8, x4, x1, x2)

inst_29630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfe00000000000; valaddr_reg:x3; val_offset:88890*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88890*0 + 3*446*FLEN/8, x4, x1, x2)

inst_29631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cff00000000000; valaddr_reg:x3; val_offset:88893*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88893*0 + 3*447*FLEN/8, x4, x1, x2)

inst_29632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cff80000000000; valaddr_reg:x3; val_offset:88896*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88896*0 + 3*448*FLEN/8, x4, x1, x2)

inst_29633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffc0000000000; valaddr_reg:x3; val_offset:88899*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88899*0 + 3*449*FLEN/8, x4, x1, x2)

inst_29634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffe0000000000; valaddr_reg:x3; val_offset:88902*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88902*0 + 3*450*FLEN/8, x4, x1, x2)

inst_29635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfff0000000000; valaddr_reg:x3; val_offset:88905*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88905*0 + 3*451*FLEN/8, x4, x1, x2)

inst_29636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfff8000000000; valaddr_reg:x3; val_offset:88908*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88908*0 + 3*452*FLEN/8, x4, x1, x2)

inst_29637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffc000000000; valaddr_reg:x3; val_offset:88911*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88911*0 + 3*453*FLEN/8, x4, x1, x2)

inst_29638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffe000000000; valaddr_reg:x3; val_offset:88914*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88914*0 + 3*454*FLEN/8, x4, x1, x2)

inst_29639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffff000000000; valaddr_reg:x3; val_offset:88917*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88917*0 + 3*455*FLEN/8, x4, x1, x2)

inst_29640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffff800000000; valaddr_reg:x3; val_offset:88920*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88920*0 + 3*456*FLEN/8, x4, x1, x2)

inst_29641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffc00000000; valaddr_reg:x3; val_offset:88923*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88923*0 + 3*457*FLEN/8, x4, x1, x2)

inst_29642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffe00000000; valaddr_reg:x3; val_offset:88926*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88926*0 + 3*458*FLEN/8, x4, x1, x2)

inst_29643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffff00000000; valaddr_reg:x3; val_offset:88929*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88929*0 + 3*459*FLEN/8, x4, x1, x2)

inst_29644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffff80000000; valaddr_reg:x3; val_offset:88932*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88932*0 + 3*460*FLEN/8, x4, x1, x2)

inst_29645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffc0000000; valaddr_reg:x3; val_offset:88935*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88935*0 + 3*461*FLEN/8, x4, x1, x2)

inst_29646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffe0000000; valaddr_reg:x3; val_offset:88938*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88938*0 + 3*462*FLEN/8, x4, x1, x2)

inst_29647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffff0000000; valaddr_reg:x3; val_offset:88941*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88941*0 + 3*463*FLEN/8, x4, x1, x2)

inst_29648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffff8000000; valaddr_reg:x3; val_offset:88944*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88944*0 + 3*464*FLEN/8, x4, x1, x2)

inst_29649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffc000000; valaddr_reg:x3; val_offset:88947*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88947*0 + 3*465*FLEN/8, x4, x1, x2)

inst_29650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffe000000; valaddr_reg:x3; val_offset:88950*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88950*0 + 3*466*FLEN/8, x4, x1, x2)

inst_29651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffff000000; valaddr_reg:x3; val_offset:88953*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88953*0 + 3*467*FLEN/8, x4, x1, x2)

inst_29652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffff800000; valaddr_reg:x3; val_offset:88956*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88956*0 + 3*468*FLEN/8, x4, x1, x2)

inst_29653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffffc00000; valaddr_reg:x3; val_offset:88959*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88959*0 + 3*469*FLEN/8, x4, x1, x2)

inst_29654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffffe00000; valaddr_reg:x3; val_offset:88962*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88962*0 + 3*470*FLEN/8, x4, x1, x2)

inst_29655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffff00000; valaddr_reg:x3; val_offset:88965*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88965*0 + 3*471*FLEN/8, x4, x1, x2)

inst_29656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffff80000; valaddr_reg:x3; val_offset:88968*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88968*0 + 3*472*FLEN/8, x4, x1, x2)

inst_29657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffffc0000; valaddr_reg:x3; val_offset:88971*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88971*0 + 3*473*FLEN/8, x4, x1, x2)

inst_29658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffffe0000; valaddr_reg:x3; val_offset:88974*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88974*0 + 3*474*FLEN/8, x4, x1, x2)

inst_29659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffffff0000; valaddr_reg:x3; val_offset:88977*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88977*0 + 3*475*FLEN/8, x4, x1, x2)

inst_29660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffffff8000; valaddr_reg:x3; val_offset:88980*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88980*0 + 3*476*FLEN/8, x4, x1, x2)

inst_29661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffffffc000; valaddr_reg:x3; val_offset:88983*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88983*0 + 3*477*FLEN/8, x4, x1, x2)

inst_29662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffffffe000; valaddr_reg:x3; val_offset:88986*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88986*0 + 3*478*FLEN/8, x4, x1, x2)

inst_29663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffffff000; valaddr_reg:x3; val_offset:88989*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88989*0 + 3*479*FLEN/8, x4, x1, x2)

inst_29664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffffff800; valaddr_reg:x3; val_offset:88992*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88992*0 + 3*480*FLEN/8, x4, x1, x2)

inst_29665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffffffc00; valaddr_reg:x3; val_offset:88995*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88995*0 + 3*481*FLEN/8, x4, x1, x2)

inst_29666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffffffe00; valaddr_reg:x3; val_offset:88998*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 88998*0 + 3*482*FLEN/8, x4, x1, x2)

inst_29667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffffffff00; valaddr_reg:x3; val_offset:89001*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89001*0 + 3*483*FLEN/8, x4, x1, x2)

inst_29668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffffffff80; valaddr_reg:x3; val_offset:89004*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89004*0 + 3*484*FLEN/8, x4, x1, x2)

inst_29669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffffffffc0; valaddr_reg:x3; val_offset:89007*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89007*0 + 3*485*FLEN/8, x4, x1, x2)

inst_29670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffffffffe0; valaddr_reg:x3; val_offset:89010*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89010*0 + 3*486*FLEN/8, x4, x1, x2)

inst_29671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffffffff0; valaddr_reg:x3; val_offset:89013*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89013*0 + 3*487*FLEN/8, x4, x1, x2)

inst_29672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffffffff8; valaddr_reg:x3; val_offset:89016*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89016*0 + 3*488*FLEN/8, x4, x1, x2)

inst_29673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffffffffc; valaddr_reg:x3; val_offset:89019*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89019*0 + 3*489*FLEN/8, x4, x1, x2)

inst_29674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cffffffffffffe; valaddr_reg:x3; val_offset:89022*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89022*0 + 3*490*FLEN/8, x4, x1, x2)

inst_29675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28a501a431151 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928a501a431151; op2val:0x8000;
op3val:0x80cfffffffffffff; valaddr_reg:x3; val_offset:89025*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89025*0 + 3*491*FLEN/8, x4, x1, x2)

inst_29676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:89028*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89028*0 + 3*492*FLEN/8, x4, x1, x2)

inst_29677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:89031*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89031*0 + 3*493*FLEN/8, x4, x1, x2)

inst_29678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:89034*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89034*0 + 3*494*FLEN/8, x4, x1, x2)

inst_29679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:89037*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89037*0 + 3*495*FLEN/8, x4, x1, x2)

inst_29680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:89040*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89040*0 + 3*496*FLEN/8, x4, x1, x2)

inst_29681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:89043*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89043*0 + 3*497*FLEN/8, x4, x1, x2)

inst_29682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:89046*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89046*0 + 3*498*FLEN/8, x4, x1, x2)

inst_29683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:89049*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89049*0 + 3*499*FLEN/8, x4, x1, x2)

inst_29684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:89052*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89052*0 + 3*500*FLEN/8, x4, x1, x2)

inst_29685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:89055*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89055*0 + 3*501*FLEN/8, x4, x1, x2)

inst_29686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:89058*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89058*0 + 3*502*FLEN/8, x4, x1, x2)

inst_29687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:89061*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89061*0 + 3*503*FLEN/8, x4, x1, x2)

inst_29688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:89064*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89064*0 + 3*504*FLEN/8, x4, x1, x2)

inst_29689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:89067*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89067*0 + 3*505*FLEN/8, x4, x1, x2)

inst_29690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:89070*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89070*0 + 3*506*FLEN/8, x4, x1, x2)

inst_29691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:89073*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89073*0 + 3*507*FLEN/8, x4, x1, x2)

inst_29692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:89076*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89076*0 + 3*508*FLEN/8, x4, x1, x2)

inst_29693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:89079*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89079*0 + 3*509*FLEN/8, x4, x1, x2)

inst_29694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:89082*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89082*0 + 3*510*FLEN/8, x4, x1, x2)

inst_29695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:89085*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89085*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_29696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:89088*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89088*0 + 3*512*FLEN/8, x4, x1, x2)

inst_29697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:89091*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89091*0 + 3*513*FLEN/8, x4, x1, x2)

inst_29698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000000000000; valaddr_reg:x3; val_offset:89094*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89094*0 + 3*514*FLEN/8, x4, x1, x2)

inst_29699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000000000001; valaddr_reg:x3; val_offset:89097*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89097*0 + 3*515*FLEN/8, x4, x1, x2)

inst_29700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000000000003; valaddr_reg:x3; val_offset:89100*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89100*0 + 3*516*FLEN/8, x4, x1, x2)

inst_29701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000000000007; valaddr_reg:x3; val_offset:89103*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89103*0 + 3*517*FLEN/8, x4, x1, x2)

inst_29702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000000000000f; valaddr_reg:x3; val_offset:89106*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89106*0 + 3*518*FLEN/8, x4, x1, x2)

inst_29703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000000000001f; valaddr_reg:x3; val_offset:89109*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89109*0 + 3*519*FLEN/8, x4, x1, x2)

inst_29704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000000000003f; valaddr_reg:x3; val_offset:89112*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89112*0 + 3*520*FLEN/8, x4, x1, x2)

inst_29705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000000000007f; valaddr_reg:x3; val_offset:89115*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89115*0 + 3*521*FLEN/8, x4, x1, x2)

inst_29706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00000000000ff; valaddr_reg:x3; val_offset:89118*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89118*0 + 3*522*FLEN/8, x4, x1, x2)

inst_29707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00000000001ff; valaddr_reg:x3; val_offset:89121*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89121*0 + 3*523*FLEN/8, x4, x1, x2)

inst_29708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00000000003ff; valaddr_reg:x3; val_offset:89124*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89124*0 + 3*524*FLEN/8, x4, x1, x2)

inst_29709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00000000007ff; valaddr_reg:x3; val_offset:89127*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89127*0 + 3*525*FLEN/8, x4, x1, x2)

inst_29710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000000000fff; valaddr_reg:x3; val_offset:89130*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89130*0 + 3*526*FLEN/8, x4, x1, x2)

inst_29711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000000001fff; valaddr_reg:x3; val_offset:89133*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89133*0 + 3*527*FLEN/8, x4, x1, x2)

inst_29712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000000003fff; valaddr_reg:x3; val_offset:89136*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89136*0 + 3*528*FLEN/8, x4, x1, x2)

inst_29713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000000007fff; valaddr_reg:x3; val_offset:89139*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89139*0 + 3*529*FLEN/8, x4, x1, x2)

inst_29714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000000000ffff; valaddr_reg:x3; val_offset:89142*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89142*0 + 3*530*FLEN/8, x4, x1, x2)

inst_29715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000000001ffff; valaddr_reg:x3; val_offset:89145*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89145*0 + 3*531*FLEN/8, x4, x1, x2)

inst_29716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000000003ffff; valaddr_reg:x3; val_offset:89148*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89148*0 + 3*532*FLEN/8, x4, x1, x2)

inst_29717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000000007ffff; valaddr_reg:x3; val_offset:89151*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89151*0 + 3*533*FLEN/8, x4, x1, x2)

inst_29718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00000000fffff; valaddr_reg:x3; val_offset:89154*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89154*0 + 3*534*FLEN/8, x4, x1, x2)

inst_29719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00000001fffff; valaddr_reg:x3; val_offset:89157*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89157*0 + 3*535*FLEN/8, x4, x1, x2)

inst_29720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00000003fffff; valaddr_reg:x3; val_offset:89160*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89160*0 + 3*536*FLEN/8, x4, x1, x2)

inst_29721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00000007fffff; valaddr_reg:x3; val_offset:89163*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89163*0 + 3*537*FLEN/8, x4, x1, x2)

inst_29722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000000ffffff; valaddr_reg:x3; val_offset:89166*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89166*0 + 3*538*FLEN/8, x4, x1, x2)

inst_29723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000001ffffff; valaddr_reg:x3; val_offset:89169*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89169*0 + 3*539*FLEN/8, x4, x1, x2)

inst_29724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000003ffffff; valaddr_reg:x3; val_offset:89172*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89172*0 + 3*540*FLEN/8, x4, x1, x2)

inst_29725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000007ffffff; valaddr_reg:x3; val_offset:89175*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89175*0 + 3*541*FLEN/8, x4, x1, x2)

inst_29726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000000fffffff; valaddr_reg:x3; val_offset:89178*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89178*0 + 3*542*FLEN/8, x4, x1, x2)

inst_29727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000001fffffff; valaddr_reg:x3; val_offset:89181*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89181*0 + 3*543*FLEN/8, x4, x1, x2)

inst_29728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000003fffffff; valaddr_reg:x3; val_offset:89184*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89184*0 + 3*544*FLEN/8, x4, x1, x2)

inst_29729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000007fffffff; valaddr_reg:x3; val_offset:89187*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89187*0 + 3*545*FLEN/8, x4, x1, x2)

inst_29730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00000ffffffff; valaddr_reg:x3; val_offset:89190*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89190*0 + 3*546*FLEN/8, x4, x1, x2)

inst_29731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00001ffffffff; valaddr_reg:x3; val_offset:89193*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89193*0 + 3*547*FLEN/8, x4, x1, x2)

inst_29732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00003ffffffff; valaddr_reg:x3; val_offset:89196*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89196*0 + 3*548*FLEN/8, x4, x1, x2)

inst_29733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00007ffffffff; valaddr_reg:x3; val_offset:89199*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89199*0 + 3*549*FLEN/8, x4, x1, x2)

inst_29734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0000fffffffff; valaddr_reg:x3; val_offset:89202*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89202*0 + 3*550*FLEN/8, x4, x1, x2)

inst_29735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0001fffffffff; valaddr_reg:x3; val_offset:89205*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89205*0 + 3*551*FLEN/8, x4, x1, x2)

inst_29736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0003fffffffff; valaddr_reg:x3; val_offset:89208*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89208*0 + 3*552*FLEN/8, x4, x1, x2)

inst_29737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0007fffffffff; valaddr_reg:x3; val_offset:89211*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89211*0 + 3*553*FLEN/8, x4, x1, x2)

inst_29738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e000ffffffffff; valaddr_reg:x3; val_offset:89214*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89214*0 + 3*554*FLEN/8, x4, x1, x2)

inst_29739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e001ffffffffff; valaddr_reg:x3; val_offset:89217*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89217*0 + 3*555*FLEN/8, x4, x1, x2)

inst_29740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e003ffffffffff; valaddr_reg:x3; val_offset:89220*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89220*0 + 3*556*FLEN/8, x4, x1, x2)

inst_29741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e007ffffffffff; valaddr_reg:x3; val_offset:89223*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89223*0 + 3*557*FLEN/8, x4, x1, x2)

inst_29742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e00fffffffffff; valaddr_reg:x3; val_offset:89226*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89226*0 + 3*558*FLEN/8, x4, x1, x2)

inst_29743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e01fffffffffff; valaddr_reg:x3; val_offset:89229*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89229*0 + 3*559*FLEN/8, x4, x1, x2)

inst_29744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e03fffffffffff; valaddr_reg:x3; val_offset:89232*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89232*0 + 3*560*FLEN/8, x4, x1, x2)

inst_29745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e07fffffffffff; valaddr_reg:x3; val_offset:89235*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89235*0 + 3*561*FLEN/8, x4, x1, x2)

inst_29746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e0ffffffffffff; valaddr_reg:x3; val_offset:89238*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89238*0 + 3*562*FLEN/8, x4, x1, x2)

inst_29747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e1ffffffffffff; valaddr_reg:x3; val_offset:89241*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89241*0 + 3*563*FLEN/8, x4, x1, x2)

inst_29748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e3ffffffffffff; valaddr_reg:x3; val_offset:89244*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89244*0 + 3*564*FLEN/8, x4, x1, x2)

inst_29749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e7ffffffffffff; valaddr_reg:x3; val_offset:89247*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89247*0 + 3*565*FLEN/8, x4, x1, x2)

inst_29750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2e8000000000000; valaddr_reg:x3; val_offset:89250*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89250*0 + 3*566*FLEN/8, x4, x1, x2)

inst_29751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2ec000000000000; valaddr_reg:x3; val_offset:89253*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89253*0 + 3*567*FLEN/8, x4, x1, x2)

inst_29752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2ee000000000000; valaddr_reg:x3; val_offset:89256*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89256*0 + 3*568*FLEN/8, x4, x1, x2)

inst_29753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2ef000000000000; valaddr_reg:x3; val_offset:89259*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89259*0 + 3*569*FLEN/8, x4, x1, x2)

inst_29754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2ef800000000000; valaddr_reg:x3; val_offset:89262*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89262*0 + 3*570*FLEN/8, x4, x1, x2)

inst_29755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efc00000000000; valaddr_reg:x3; val_offset:89265*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89265*0 + 3*571*FLEN/8, x4, x1, x2)

inst_29756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efe00000000000; valaddr_reg:x3; val_offset:89268*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89268*0 + 3*572*FLEN/8, x4, x1, x2)

inst_29757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2eff00000000000; valaddr_reg:x3; val_offset:89271*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89271*0 + 3*573*FLEN/8, x4, x1, x2)

inst_29758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2eff80000000000; valaddr_reg:x3; val_offset:89274*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89274*0 + 3*574*FLEN/8, x4, x1, x2)

inst_29759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effc0000000000; valaddr_reg:x3; val_offset:89277*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89277*0 + 3*575*FLEN/8, x4, x1, x2)

inst_29760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effe0000000000; valaddr_reg:x3; val_offset:89280*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89280*0 + 3*576*FLEN/8, x4, x1, x2)

inst_29761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efff0000000000; valaddr_reg:x3; val_offset:89283*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89283*0 + 3*577*FLEN/8, x4, x1, x2)

inst_29762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efff8000000000; valaddr_reg:x3; val_offset:89286*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89286*0 + 3*578*FLEN/8, x4, x1, x2)

inst_29763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffc000000000; valaddr_reg:x3; val_offset:89289*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89289*0 + 3*579*FLEN/8, x4, x1, x2)

inst_29764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffe000000000; valaddr_reg:x3; val_offset:89292*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89292*0 + 3*580*FLEN/8, x4, x1, x2)

inst_29765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effff000000000; valaddr_reg:x3; val_offset:89295*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89295*0 + 3*581*FLEN/8, x4, x1, x2)

inst_29766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effff800000000; valaddr_reg:x3; val_offset:89298*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89298*0 + 3*582*FLEN/8, x4, x1, x2)

inst_29767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffc00000000; valaddr_reg:x3; val_offset:89301*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89301*0 + 3*583*FLEN/8, x4, x1, x2)

inst_29768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffe00000000; valaddr_reg:x3; val_offset:89304*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89304*0 + 3*584*FLEN/8, x4, x1, x2)

inst_29769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffff00000000; valaddr_reg:x3; val_offset:89307*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89307*0 + 3*585*FLEN/8, x4, x1, x2)

inst_29770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffff80000000; valaddr_reg:x3; val_offset:89310*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89310*0 + 3*586*FLEN/8, x4, x1, x2)

inst_29771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffc0000000; valaddr_reg:x3; val_offset:89313*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89313*0 + 3*587*FLEN/8, x4, x1, x2)

inst_29772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffe0000000; valaddr_reg:x3; val_offset:89316*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89316*0 + 3*588*FLEN/8, x4, x1, x2)

inst_29773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffff0000000; valaddr_reg:x3; val_offset:89319*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89319*0 + 3*589*FLEN/8, x4, x1, x2)

inst_29774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffff8000000; valaddr_reg:x3; val_offset:89322*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89322*0 + 3*590*FLEN/8, x4, x1, x2)

inst_29775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffc000000; valaddr_reg:x3; val_offset:89325*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89325*0 + 3*591*FLEN/8, x4, x1, x2)

inst_29776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffe000000; valaddr_reg:x3; val_offset:89328*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89328*0 + 3*592*FLEN/8, x4, x1, x2)

inst_29777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffff000000; valaddr_reg:x3; val_offset:89331*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89331*0 + 3*593*FLEN/8, x4, x1, x2)

inst_29778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffff800000; valaddr_reg:x3; val_offset:89334*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89334*0 + 3*594*FLEN/8, x4, x1, x2)

inst_29779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffffc00000; valaddr_reg:x3; val_offset:89337*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89337*0 + 3*595*FLEN/8, x4, x1, x2)

inst_29780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffffe00000; valaddr_reg:x3; val_offset:89340*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89340*0 + 3*596*FLEN/8, x4, x1, x2)

inst_29781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffff00000; valaddr_reg:x3; val_offset:89343*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89343*0 + 3*597*FLEN/8, x4, x1, x2)

inst_29782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffff80000; valaddr_reg:x3; val_offset:89346*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89346*0 + 3*598*FLEN/8, x4, x1, x2)

inst_29783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffffc0000; valaddr_reg:x3; val_offset:89349*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89349*0 + 3*599*FLEN/8, x4, x1, x2)

inst_29784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffffe0000; valaddr_reg:x3; val_offset:89352*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89352*0 + 3*600*FLEN/8, x4, x1, x2)

inst_29785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffffff0000; valaddr_reg:x3; val_offset:89355*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89355*0 + 3*601*FLEN/8, x4, x1, x2)

inst_29786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffffff8000; valaddr_reg:x3; val_offset:89358*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89358*0 + 3*602*FLEN/8, x4, x1, x2)

inst_29787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffffffc000; valaddr_reg:x3; val_offset:89361*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89361*0 + 3*603*FLEN/8, x4, x1, x2)

inst_29788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffffffe000; valaddr_reg:x3; val_offset:89364*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89364*0 + 3*604*FLEN/8, x4, x1, x2)

inst_29789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffffff000; valaddr_reg:x3; val_offset:89367*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89367*0 + 3*605*FLEN/8, x4, x1, x2)

inst_29790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffffff800; valaddr_reg:x3; val_offset:89370*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89370*0 + 3*606*FLEN/8, x4, x1, x2)

inst_29791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffffffc00; valaddr_reg:x3; val_offset:89373*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89373*0 + 3*607*FLEN/8, x4, x1, x2)

inst_29792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffffffe00; valaddr_reg:x3; val_offset:89376*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89376*0 + 3*608*FLEN/8, x4, x1, x2)

inst_29793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffffffff00; valaddr_reg:x3; val_offset:89379*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89379*0 + 3*609*FLEN/8, x4, x1, x2)

inst_29794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffffffff80; valaddr_reg:x3; val_offset:89382*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89382*0 + 3*610*FLEN/8, x4, x1, x2)

inst_29795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffffffffc0; valaddr_reg:x3; val_offset:89385*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89385*0 + 3*611*FLEN/8, x4, x1, x2)

inst_29796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffffffffe0; valaddr_reg:x3; val_offset:89388*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89388*0 + 3*612*FLEN/8, x4, x1, x2)

inst_29797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffffffff0; valaddr_reg:x3; val_offset:89391*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89391*0 + 3*613*FLEN/8, x4, x1, x2)

inst_29798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffffffff8; valaddr_reg:x3; val_offset:89394*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89394*0 + 3*614*FLEN/8, x4, x1, x2)

inst_29799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffffffffc; valaddr_reg:x3; val_offset:89397*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89397*0 + 3*615*FLEN/8, x4, x1, x2)

inst_29800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2effffffffffffe; valaddr_reg:x3; val_offset:89400*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89400*0 + 3*616*FLEN/8, x4, x1, x2)

inst_29801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x28c3df53cad61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f928c3df53cad61; op2val:0x0;
op3val:0x2efffffffffffff; valaddr_reg:x3; val_offset:89403*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89403*0 + 3*617*FLEN/8, x4, x1, x2)

inst_29802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:89406*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89406*0 + 3*618*FLEN/8, x4, x1, x2)

inst_29803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:89409*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89409*0 + 3*619*FLEN/8, x4, x1, x2)

inst_29804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:89412*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89412*0 + 3*620*FLEN/8, x4, x1, x2)

inst_29805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:89415*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89415*0 + 3*621*FLEN/8, x4, x1, x2)

inst_29806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:89418*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89418*0 + 3*622*FLEN/8, x4, x1, x2)

inst_29807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:89421*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89421*0 + 3*623*FLEN/8, x4, x1, x2)

inst_29808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:89424*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89424*0 + 3*624*FLEN/8, x4, x1, x2)

inst_29809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:89427*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89427*0 + 3*625*FLEN/8, x4, x1, x2)

inst_29810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:89430*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89430*0 + 3*626*FLEN/8, x4, x1, x2)

inst_29811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:89433*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89433*0 + 3*627*FLEN/8, x4, x1, x2)

inst_29812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:89436*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89436*0 + 3*628*FLEN/8, x4, x1, x2)

inst_29813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:89439*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89439*0 + 3*629*FLEN/8, x4, x1, x2)

inst_29814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:89442*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89442*0 + 3*630*FLEN/8, x4, x1, x2)

inst_29815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:89445*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89445*0 + 3*631*FLEN/8, x4, x1, x2)

inst_29816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:89448*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89448*0 + 3*632*FLEN/8, x4, x1, x2)

inst_29817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:89451*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89451*0 + 3*633*FLEN/8, x4, x1, x2)

inst_29818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:89454*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89454*0 + 3*634*FLEN/8, x4, x1, x2)

inst_29819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:89457*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89457*0 + 3*635*FLEN/8, x4, x1, x2)

inst_29820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:89460*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89460*0 + 3*636*FLEN/8, x4, x1, x2)

inst_29821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:89463*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89463*0 + 3*637*FLEN/8, x4, x1, x2)

inst_29822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:89466*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89466*0 + 3*638*FLEN/8, x4, x1, x2)

inst_29823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:89469*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89469*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_29824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000000000000; valaddr_reg:x3; val_offset:89472*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89472*0 + 3*640*FLEN/8, x4, x1, x2)

inst_29825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000000000001; valaddr_reg:x3; val_offset:89475*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89475*0 + 3*641*FLEN/8, x4, x1, x2)

inst_29826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000000000003; valaddr_reg:x3; val_offset:89478*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89478*0 + 3*642*FLEN/8, x4, x1, x2)

inst_29827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000000000007; valaddr_reg:x3; val_offset:89481*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89481*0 + 3*643*FLEN/8, x4, x1, x2)

inst_29828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000000000000f; valaddr_reg:x3; val_offset:89484*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89484*0 + 3*644*FLEN/8, x4, x1, x2)

inst_29829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000000000001f; valaddr_reg:x3; val_offset:89487*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89487*0 + 3*645*FLEN/8, x4, x1, x2)

inst_29830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000000000003f; valaddr_reg:x3; val_offset:89490*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89490*0 + 3*646*FLEN/8, x4, x1, x2)

inst_29831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000000000007f; valaddr_reg:x3; val_offset:89493*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89493*0 + 3*647*FLEN/8, x4, x1, x2)

inst_29832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800000000000ff; valaddr_reg:x3; val_offset:89496*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89496*0 + 3*648*FLEN/8, x4, x1, x2)

inst_29833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800000000001ff; valaddr_reg:x3; val_offset:89499*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89499*0 + 3*649*FLEN/8, x4, x1, x2)

inst_29834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800000000003ff; valaddr_reg:x3; val_offset:89502*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89502*0 + 3*650*FLEN/8, x4, x1, x2)

inst_29835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800000000007ff; valaddr_reg:x3; val_offset:89505*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89505*0 + 3*651*FLEN/8, x4, x1, x2)

inst_29836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000000000fff; valaddr_reg:x3; val_offset:89508*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89508*0 + 3*652*FLEN/8, x4, x1, x2)

inst_29837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000000001fff; valaddr_reg:x3; val_offset:89511*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89511*0 + 3*653*FLEN/8, x4, x1, x2)

inst_29838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000000003fff; valaddr_reg:x3; val_offset:89514*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89514*0 + 3*654*FLEN/8, x4, x1, x2)

inst_29839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000000007fff; valaddr_reg:x3; val_offset:89517*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89517*0 + 3*655*FLEN/8, x4, x1, x2)

inst_29840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000000000ffff; valaddr_reg:x3; val_offset:89520*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89520*0 + 3*656*FLEN/8, x4, x1, x2)

inst_29841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000000001ffff; valaddr_reg:x3; val_offset:89523*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89523*0 + 3*657*FLEN/8, x4, x1, x2)

inst_29842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000000003ffff; valaddr_reg:x3; val_offset:89526*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89526*0 + 3*658*FLEN/8, x4, x1, x2)

inst_29843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000000007ffff; valaddr_reg:x3; val_offset:89529*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89529*0 + 3*659*FLEN/8, x4, x1, x2)

inst_29844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800000000fffff; valaddr_reg:x3; val_offset:89532*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89532*0 + 3*660*FLEN/8, x4, x1, x2)

inst_29845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800000001fffff; valaddr_reg:x3; val_offset:89535*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89535*0 + 3*661*FLEN/8, x4, x1, x2)

inst_29846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800000003fffff; valaddr_reg:x3; val_offset:89538*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89538*0 + 3*662*FLEN/8, x4, x1, x2)

inst_29847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800000007fffff; valaddr_reg:x3; val_offset:89541*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89541*0 + 3*663*FLEN/8, x4, x1, x2)

inst_29848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000000ffffff; valaddr_reg:x3; val_offset:89544*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89544*0 + 3*664*FLEN/8, x4, x1, x2)

inst_29849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000001ffffff; valaddr_reg:x3; val_offset:89547*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89547*0 + 3*665*FLEN/8, x4, x1, x2)

inst_29850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000003ffffff; valaddr_reg:x3; val_offset:89550*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89550*0 + 3*666*FLEN/8, x4, x1, x2)

inst_29851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000007ffffff; valaddr_reg:x3; val_offset:89553*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89553*0 + 3*667*FLEN/8, x4, x1, x2)

inst_29852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000000fffffff; valaddr_reg:x3; val_offset:89556*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89556*0 + 3*668*FLEN/8, x4, x1, x2)

inst_29853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000001fffffff; valaddr_reg:x3; val_offset:89559*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89559*0 + 3*669*FLEN/8, x4, x1, x2)

inst_29854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000003fffffff; valaddr_reg:x3; val_offset:89562*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89562*0 + 3*670*FLEN/8, x4, x1, x2)

inst_29855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000007fffffff; valaddr_reg:x3; val_offset:89565*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89565*0 + 3*671*FLEN/8, x4, x1, x2)

inst_29856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800000ffffffff; valaddr_reg:x3; val_offset:89568*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89568*0 + 3*672*FLEN/8, x4, x1, x2)

inst_29857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800001ffffffff; valaddr_reg:x3; val_offset:89571*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89571*0 + 3*673*FLEN/8, x4, x1, x2)

inst_29858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800003ffffffff; valaddr_reg:x3; val_offset:89574*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89574*0 + 3*674*FLEN/8, x4, x1, x2)

inst_29859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800007ffffffff; valaddr_reg:x3; val_offset:89577*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89577*0 + 3*675*FLEN/8, x4, x1, x2)

inst_29860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380000fffffffff; valaddr_reg:x3; val_offset:89580*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89580*0 + 3*676*FLEN/8, x4, x1, x2)

inst_29861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380001fffffffff; valaddr_reg:x3; val_offset:89583*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89583*0 + 3*677*FLEN/8, x4, x1, x2)

inst_29862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380003fffffffff; valaddr_reg:x3; val_offset:89586*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89586*0 + 3*678*FLEN/8, x4, x1, x2)

inst_29863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380007fffffffff; valaddr_reg:x3; val_offset:89589*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89589*0 + 3*679*FLEN/8, x4, x1, x2)

inst_29864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938000ffffffffff; valaddr_reg:x3; val_offset:89592*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89592*0 + 3*680*FLEN/8, x4, x1, x2)

inst_29865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938001ffffffffff; valaddr_reg:x3; val_offset:89595*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89595*0 + 3*681*FLEN/8, x4, x1, x2)

inst_29866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938003ffffffffff; valaddr_reg:x3; val_offset:89598*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89598*0 + 3*682*FLEN/8, x4, x1, x2)

inst_29867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938007ffffffffff; valaddr_reg:x3; val_offset:89601*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89601*0 + 3*683*FLEN/8, x4, x1, x2)

inst_29868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93800fffffffffff; valaddr_reg:x3; val_offset:89604*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89604*0 + 3*684*FLEN/8, x4, x1, x2)

inst_29869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93801fffffffffff; valaddr_reg:x3; val_offset:89607*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89607*0 + 3*685*FLEN/8, x4, x1, x2)

inst_29870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93803fffffffffff; valaddr_reg:x3; val_offset:89610*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89610*0 + 3*686*FLEN/8, x4, x1, x2)

inst_29871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x93807fffffffffff; valaddr_reg:x3; val_offset:89613*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89613*0 + 3*687*FLEN/8, x4, x1, x2)

inst_29872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9380ffffffffffff; valaddr_reg:x3; val_offset:89616*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89616*0 + 3*688*FLEN/8, x4, x1, x2)

inst_29873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9381ffffffffffff; valaddr_reg:x3; val_offset:89619*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89619*0 + 3*689*FLEN/8, x4, x1, x2)

inst_29874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9383ffffffffffff; valaddr_reg:x3; val_offset:89622*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89622*0 + 3*690*FLEN/8, x4, x1, x2)

inst_29875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9387ffffffffffff; valaddr_reg:x3; val_offset:89625*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89625*0 + 3*691*FLEN/8, x4, x1, x2)

inst_29876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x9388000000000000; valaddr_reg:x3; val_offset:89628*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89628*0 + 3*692*FLEN/8, x4, x1, x2)

inst_29877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938c000000000000; valaddr_reg:x3; val_offset:89631*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89631*0 + 3*693*FLEN/8, x4, x1, x2)

inst_29878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938e000000000000; valaddr_reg:x3; val_offset:89634*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89634*0 + 3*694*FLEN/8, x4, x1, x2)

inst_29879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938f000000000000; valaddr_reg:x3; val_offset:89637*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89637*0 + 3*695*FLEN/8, x4, x1, x2)

inst_29880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938f800000000000; valaddr_reg:x3; val_offset:89640*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89640*0 + 3*696*FLEN/8, x4, x1, x2)

inst_29881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fc00000000000; valaddr_reg:x3; val_offset:89643*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89643*0 + 3*697*FLEN/8, x4, x1, x2)

inst_29882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fe00000000000; valaddr_reg:x3; val_offset:89646*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89646*0 + 3*698*FLEN/8, x4, x1, x2)

inst_29883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ff00000000000; valaddr_reg:x3; val_offset:89649*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89649*0 + 3*699*FLEN/8, x4, x1, x2)

inst_29884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ff80000000000; valaddr_reg:x3; val_offset:89652*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89652*0 + 3*700*FLEN/8, x4, x1, x2)

inst_29885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffc0000000000; valaddr_reg:x3; val_offset:89655*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89655*0 + 3*701*FLEN/8, x4, x1, x2)

inst_29886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffe0000000000; valaddr_reg:x3; val_offset:89658*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89658*0 + 3*702*FLEN/8, x4, x1, x2)

inst_29887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fff0000000000; valaddr_reg:x3; val_offset:89661*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89661*0 + 3*703*FLEN/8, x4, x1, x2)

inst_29888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fff8000000000; valaddr_reg:x3; val_offset:89664*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89664*0 + 3*704*FLEN/8, x4, x1, x2)

inst_29889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffc000000000; valaddr_reg:x3; val_offset:89667*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89667*0 + 3*705*FLEN/8, x4, x1, x2)

inst_29890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffe000000000; valaddr_reg:x3; val_offset:89670*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89670*0 + 3*706*FLEN/8, x4, x1, x2)

inst_29891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffff000000000; valaddr_reg:x3; val_offset:89673*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89673*0 + 3*707*FLEN/8, x4, x1, x2)

inst_29892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffff800000000; valaddr_reg:x3; val_offset:89676*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89676*0 + 3*708*FLEN/8, x4, x1, x2)

inst_29893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffc00000000; valaddr_reg:x3; val_offset:89679*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89679*0 + 3*709*FLEN/8, x4, x1, x2)

inst_29894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffe00000000; valaddr_reg:x3; val_offset:89682*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89682*0 + 3*710*FLEN/8, x4, x1, x2)

inst_29895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffff00000000; valaddr_reg:x3; val_offset:89685*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89685*0 + 3*711*FLEN/8, x4, x1, x2)

inst_29896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffff80000000; valaddr_reg:x3; val_offset:89688*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89688*0 + 3*712*FLEN/8, x4, x1, x2)

inst_29897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffc0000000; valaddr_reg:x3; val_offset:89691*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89691*0 + 3*713*FLEN/8, x4, x1, x2)

inst_29898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffe0000000; valaddr_reg:x3; val_offset:89694*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89694*0 + 3*714*FLEN/8, x4, x1, x2)

inst_29899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffff0000000; valaddr_reg:x3; val_offset:89697*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89697*0 + 3*715*FLEN/8, x4, x1, x2)

inst_29900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffff8000000; valaddr_reg:x3; val_offset:89700*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89700*0 + 3*716*FLEN/8, x4, x1, x2)

inst_29901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffc000000; valaddr_reg:x3; val_offset:89703*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89703*0 + 3*717*FLEN/8, x4, x1, x2)

inst_29902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffe000000; valaddr_reg:x3; val_offset:89706*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89706*0 + 3*718*FLEN/8, x4, x1, x2)

inst_29903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffff000000; valaddr_reg:x3; val_offset:89709*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89709*0 + 3*719*FLEN/8, x4, x1, x2)

inst_29904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffff800000; valaddr_reg:x3; val_offset:89712*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89712*0 + 3*720*FLEN/8, x4, x1, x2)

inst_29905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffffc00000; valaddr_reg:x3; val_offset:89715*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89715*0 + 3*721*FLEN/8, x4, x1, x2)

inst_29906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffffe00000; valaddr_reg:x3; val_offset:89718*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89718*0 + 3*722*FLEN/8, x4, x1, x2)

inst_29907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffff00000; valaddr_reg:x3; val_offset:89721*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89721*0 + 3*723*FLEN/8, x4, x1, x2)

inst_29908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffff80000; valaddr_reg:x3; val_offset:89724*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89724*0 + 3*724*FLEN/8, x4, x1, x2)

inst_29909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffffc0000; valaddr_reg:x3; val_offset:89727*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89727*0 + 3*725*FLEN/8, x4, x1, x2)

inst_29910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffffe0000; valaddr_reg:x3; val_offset:89730*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89730*0 + 3*726*FLEN/8, x4, x1, x2)

inst_29911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffffff0000; valaddr_reg:x3; val_offset:89733*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89733*0 + 3*727*FLEN/8, x4, x1, x2)

inst_29912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffffff8000; valaddr_reg:x3; val_offset:89736*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89736*0 + 3*728*FLEN/8, x4, x1, x2)

inst_29913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffffffc000; valaddr_reg:x3; val_offset:89739*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89739*0 + 3*729*FLEN/8, x4, x1, x2)

inst_29914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffffffe000; valaddr_reg:x3; val_offset:89742*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89742*0 + 3*730*FLEN/8, x4, x1, x2)

inst_29915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffffff000; valaddr_reg:x3; val_offset:89745*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89745*0 + 3*731*FLEN/8, x4, x1, x2)

inst_29916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffffff800; valaddr_reg:x3; val_offset:89748*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89748*0 + 3*732*FLEN/8, x4, x1, x2)

inst_29917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffffffc00; valaddr_reg:x3; val_offset:89751*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89751*0 + 3*733*FLEN/8, x4, x1, x2)

inst_29918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffffffe00; valaddr_reg:x3; val_offset:89754*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89754*0 + 3*734*FLEN/8, x4, x1, x2)

inst_29919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffffffff00; valaddr_reg:x3; val_offset:89757*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89757*0 + 3*735*FLEN/8, x4, x1, x2)

inst_29920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffffffff80; valaddr_reg:x3; val_offset:89760*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89760*0 + 3*736*FLEN/8, x4, x1, x2)

inst_29921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffffffffc0; valaddr_reg:x3; val_offset:89763*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89763*0 + 3*737*FLEN/8, x4, x1, x2)

inst_29922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffffffffe0; valaddr_reg:x3; val_offset:89766*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89766*0 + 3*738*FLEN/8, x4, x1, x2)

inst_29923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffffffff0; valaddr_reg:x3; val_offset:89769*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89769*0 + 3*739*FLEN/8, x4, x1, x2)

inst_29924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffffffff8; valaddr_reg:x3; val_offset:89772*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89772*0 + 3*740*FLEN/8, x4, x1, x2)

inst_29925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffffffffc; valaddr_reg:x3; val_offset:89775*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89775*0 + 3*741*FLEN/8, x4, x1, x2)

inst_29926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938ffffffffffffe; valaddr_reg:x3; val_offset:89778*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89778*0 + 3*742*FLEN/8, x4, x1, x2)

inst_29927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x138 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9294c231789029; op2val:0x8000;
op3val:0x938fffffffffffff; valaddr_reg:x3; val_offset:89781*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89781*0 + 3*743*FLEN/8, x4, x1, x2)

inst_29928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe0000000000000; valaddr_reg:x3; val_offset:89784*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89784*0 + 3*744*FLEN/8, x4, x1, x2)

inst_29929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe0000000000001; valaddr_reg:x3; val_offset:89787*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89787*0 + 3*745*FLEN/8, x4, x1, x2)

inst_29930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe0000000000003; valaddr_reg:x3; val_offset:89790*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89790*0 + 3*746*FLEN/8, x4, x1, x2)

inst_29931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe0000000000007; valaddr_reg:x3; val_offset:89793*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89793*0 + 3*747*FLEN/8, x4, x1, x2)

inst_29932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe000000000000f; valaddr_reg:x3; val_offset:89796*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89796*0 + 3*748*FLEN/8, x4, x1, x2)

inst_29933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe000000000001f; valaddr_reg:x3; val_offset:89799*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89799*0 + 3*749*FLEN/8, x4, x1, x2)

inst_29934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe000000000003f; valaddr_reg:x3; val_offset:89802*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89802*0 + 3*750*FLEN/8, x4, x1, x2)

inst_29935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe000000000007f; valaddr_reg:x3; val_offset:89805*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89805*0 + 3*751*FLEN/8, x4, x1, x2)

inst_29936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe00000000000ff; valaddr_reg:x3; val_offset:89808*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89808*0 + 3*752*FLEN/8, x4, x1, x2)

inst_29937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe00000000001ff; valaddr_reg:x3; val_offset:89811*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89811*0 + 3*753*FLEN/8, x4, x1, x2)

inst_29938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe00000000003ff; valaddr_reg:x3; val_offset:89814*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89814*0 + 3*754*FLEN/8, x4, x1, x2)

inst_29939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe00000000007ff; valaddr_reg:x3; val_offset:89817*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89817*0 + 3*755*FLEN/8, x4, x1, x2)

inst_29940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe0000000000fff; valaddr_reg:x3; val_offset:89820*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89820*0 + 3*756*FLEN/8, x4, x1, x2)

inst_29941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe0000000001fff; valaddr_reg:x3; val_offset:89823*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89823*0 + 3*757*FLEN/8, x4, x1, x2)

inst_29942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe0000000003fff; valaddr_reg:x3; val_offset:89826*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89826*0 + 3*758*FLEN/8, x4, x1, x2)

inst_29943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe0000000007fff; valaddr_reg:x3; val_offset:89829*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89829*0 + 3*759*FLEN/8, x4, x1, x2)

inst_29944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe000000000ffff; valaddr_reg:x3; val_offset:89832*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89832*0 + 3*760*FLEN/8, x4, x1, x2)

inst_29945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe000000001ffff; valaddr_reg:x3; val_offset:89835*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89835*0 + 3*761*FLEN/8, x4, x1, x2)

inst_29946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe000000003ffff; valaddr_reg:x3; val_offset:89838*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89838*0 + 3*762*FLEN/8, x4, x1, x2)

inst_29947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe000000007ffff; valaddr_reg:x3; val_offset:89841*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89841*0 + 3*763*FLEN/8, x4, x1, x2)

inst_29948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe00000000fffff; valaddr_reg:x3; val_offset:89844*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89844*0 + 3*764*FLEN/8, x4, x1, x2)

inst_29949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe00000001fffff; valaddr_reg:x3; val_offset:89847*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89847*0 + 3*765*FLEN/8, x4, x1, x2)

inst_29950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe00000003fffff; valaddr_reg:x3; val_offset:89850*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89850*0 + 3*766*FLEN/8, x4, x1, x2)

inst_29951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a053501238a1 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xb7cf1486ace3d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f92a053501238a1; op2val:0x204b7cf1486ace3d;
op3val:0x3fe00000007fffff; valaddr_reg:x3; val_offset:89853*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 89853*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970752,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970753,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970755,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970759,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970767,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970783,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970815,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970879,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896971007,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896971263,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896971775,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896972799,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896974847,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896978943,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896987135,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897003519,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897036287,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897101823,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897232895,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897495039,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176898019327,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176899067903,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176901165055,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176905359359,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176913747967,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176930525183,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176964079615,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223177031188479,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223177165406207,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223177433841663,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223177970712575,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223179044454399,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223181191938047,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223185486905343,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223194076839935,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223211256709119,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223245616447487,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223314335924223,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223451774877695,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223726652784639,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279224276408598527,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279225375920226303,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279227574943481855,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279231972989992959,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279240769083015167,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279258361269059583,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279293545641148415,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279363914385326079,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279504651873681407,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279786126850392063,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(280349076803813375,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710655999,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710656000,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(282600876617498624,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283163826570919936,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283445301547630592,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283586039035985920,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283656407780163584,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283691592152252416,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283709184338296832,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283717980431319040,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283722378477830144,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283724577501085696,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283725677012713472,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726226768527360,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726501646434304,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726639085387776,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726707804864512,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726742164602880,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726759344472064,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726767934406656,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726772229373952,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726774376857600,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726775450599424,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726775987470336,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776255905792,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776390123520,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776457232384,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776490786816,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776507564032,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776515952640,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776520146944,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776522244096,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776523292672,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776523816960,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524079104,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524210176,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524275712,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524308480,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524324864,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524333056,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524337152,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524339200,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524340224,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524340736,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524340992,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341120,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341184,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341216,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341232,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341240,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341244,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341246,64,FLEN)
NAN_BOXED(6886682203213747815,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341247,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746560,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746561,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746563,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746567,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746575,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746591,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746623,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746687,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746815,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747071,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747583,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751748607,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751750655,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751754751,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751762943,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751779327,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751812095,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751877631,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752008703,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752270847,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752795135,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213753843711,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213755940863,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213760135167,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213768523775,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213785300991,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213818855423,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213885964287,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214020182015,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214288617471,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214825488383,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595215899230207,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595218046713855,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595222341681151,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595230931615743,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595248111484927,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595282471223295,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595351190700031,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595488629653503,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595763507560447,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502596313263374335,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502597412775002111,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502599611798257663,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502604009844768767,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502612805937790975,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502630398123835391,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502665582495924223,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502735951240101887,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502876688728457215,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503158163705167871,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503721113658589183,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431807,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431808,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9505972913472274432,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506535863425695744,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506817338402406400,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506958075890761728,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507028444634939392,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507063629007028224,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507081221193072640,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507090017286094848,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507094415332605952,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507096614355861504,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507097713867489280,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098263623303168,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098538501210112,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098675940163584,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098744659640320,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098779019378688,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098796199247872,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098804789182464,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098809084149760,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098811231633408,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812305375232,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812842246144,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813110681600,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813244899328,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813312008192,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813345562624,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813362339840,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813370728448,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813374922752,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813377019904,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378068480,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378592768,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378854912,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378985984,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379051520,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379084288,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379100672,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379108864,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379112960,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379115008,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116032,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116544,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116800,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116928,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116992,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117024,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117040,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117048,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117052,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117054,64,FLEN)
NAN_BOXED(6886687010187613731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117055,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103723999232,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103723999233,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103723999235,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103723999239,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103723999247,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103723999263,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103723999295,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103723999359,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103723999487,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103723999743,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103724000255,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103724001279,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103724003327,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103724007423,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103724015615,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103724031999,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103724064767,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103724130303,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103724261375,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103724523519,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103725047807,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103726096383,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103728193535,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103732387839,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103740776447,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103757553663,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103791108095,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103858216959,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590103992434687,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590104260870143,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590104797741055,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590105871482879,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590108018966527,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590112313933823,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590120903868415,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590138083737599,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590172443475967,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590241162952703,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590378601906175,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249590653479813119,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249591203235627007,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249592302747254783,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249594501770510335,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249598899817021439,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249607695910043647,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249625288096088063,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249660472468176895,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249730841212354559,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13249871578700709887,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13250153053677420543,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13250716003630841855,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13251841903537684479,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13251841903537684480,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13252967803444527104,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13253530753397948416,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13253812228374659072,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13253952965863014400,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254023334607192064,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254058518979280896,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254076111165325312,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254084907258347520,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254089305304858624,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254091504328114176,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254092603839741952,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093153595555840,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093428473462784,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093565912416256,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093634631892992,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093668991631360,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093686171500544,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093694761435136,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093699056402432,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093701203886080,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093702277627904,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093702814498816,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703082934272,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703217152000,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703284260864,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703317815296,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703334592512,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703342981120,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703347175424,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703349272576,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703350321152,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703350845440,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351107584,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351238656,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351304192,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351336960,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351353344,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351361536,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351365632,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351367680,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351368704,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351369216,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351369472,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351369600,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351369664,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351369696,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351369712,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351369720,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351369724,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351369726,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13254093703351369727,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6886715954800304895,64,FLEN)
NAN_BOXED(11518978056375380312,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221760,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221761,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221763,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221767,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221775,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221791,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221823,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221887,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383222015,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383222271,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383222783,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383223807,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383225855,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383229951,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383238143,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383254527,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383287295,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383352831,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383483903,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383746047,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232384270335,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232385318911,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232387416063,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232391610367,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232399998975,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232416776191,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232450330623,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232517439487,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232651657215,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232920092671,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415233456963583,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415234530705407,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415236678189055,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415240973156351,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415249563090943,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415266742960127,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415301102698495,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415369822175231,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415507261128703,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415782139035647,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277416331894849535,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277417431406477311,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277419630429732863,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277424028476243967,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277432824569266175,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277450416755310591,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277485601127399423,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277555969871577087,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277696707359932415,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277978182336643071,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9278541132290064383,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9279667032196907007,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9279667032196907008,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9280792932103749632,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281355882057170944,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281637357033881600,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281778094522236928,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281848463266414592,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281883647638503424,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281901239824547840,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281910035917570048,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281914433964081152,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281916632987336704,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281917732498964480,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918282254778368,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918557132685312,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918694571638784,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918763291115520,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918797650853888,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918814830723072,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918823420657664,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918827715624960,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918829863108608,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918830936850432,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831473721344,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831742156800,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831876374528,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831943483392,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831977037824,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831993815040,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832002203648,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832006397952,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832008495104,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832009543680,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010067968,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010330112,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010461184,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010526720,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010559488,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010575872,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010584064,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010588160,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010590208,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010591232,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010591744,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592000,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592128,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592192,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592224,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592240,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592248,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592252,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592254,64,FLEN)
NAN_BOXED(6886718856845529425,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592255,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042816,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042817,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042819,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042823,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042831,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042847,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042879,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042943,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859043071,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859043327,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859043839,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859044863,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859046911,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859051007,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859059199,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859075583,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859108351,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859173887,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859304959,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859567103,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582860091391,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582861139967,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582863237119,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582867431423,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582875820031,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582892597247,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582926151679,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582993260543,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165583127478271,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165583395913727,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165583932784639,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165585006526463,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165587154010111,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165591448977407,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165600038911999,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165617218781183,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165651578519551,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165720297996287,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165857736949759,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207166132614856703,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207166682370670591,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207167781882298367,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207169980905553919,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207174378952065023,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207183175045087231,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207200767231131647,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207235951603220479,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207306320347398143,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207447057835753471,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207728532812464127,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(208291482765885439,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(209417382672728063,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(209417382672728064,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(210543282579570688,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211106232532992000,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211387707509702656,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211528444998057984,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211598813742235648,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211633998114324480,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211651590300368896,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211660386393391104,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211664784439902208,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211666983463157760,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211668082974785536,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211668632730599424,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211668907608506368,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669045047459840,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669113766936576,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669148126674944,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669165306544128,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669173896478720,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669178191446016,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669180338929664,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669181412671488,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669181949542400,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182217977856,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182352195584,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182419304448,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182452858880,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182469636096,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182478024704,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182482219008,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182484316160,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182485364736,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182485889024,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486151168,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486282240,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486347776,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486380544,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486396928,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486405120,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486409216,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486411264,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486412288,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486412800,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413056,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413184,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413248,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413280,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413296,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413304,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413308,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413310,64,FLEN)
NAN_BOXED(6886720977938197857,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413311,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594370560,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594370561,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594370563,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594370567,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594370575,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594370591,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594370623,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594370687,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594370815,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594371071,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594371583,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594372607,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594374655,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594378751,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594386943,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594403327,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594436095,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594501631,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594632703,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120594894847,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120595419135,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120596467711,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120598564863,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120602759167,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120611147775,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120627924991,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120661479423,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120728588287,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495120862806015,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495121131241471,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495121668112383,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495122741854207,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495124889337855,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495129184305151,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495137774239743,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495154954108927,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495189313847295,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495258033324031,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495395472277503,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628495670350184447,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628496220105998335,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628497319617626111,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628499518640881663,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628503916687392767,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628512712780414975,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628530304966459391,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628565489338548223,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628635858082725887,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10628776595571081215,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10629058070547791871,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10629621020501213183,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10630746920408055807,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10630746920408055808,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10631872820314898432,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632435770268319744,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632717245245030400,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632857982733385728,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632928351477563392,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632963535849652224,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632981128035696640,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632989924128718848,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632994322175229952,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632996521198485504,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632997620710113280,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998170465927168,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998445343834112,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998582782787584,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998651502264320,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998685862002688,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998703041871872,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998711631806464,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998715926773760,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998718074257408,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998719147999232,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998719684870144,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998719953305600,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720087523328,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720154632192,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720188186624,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720204963840,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720213352448,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720217546752,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720219643904,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720220692480,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221216768,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221478912,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221609984,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221675520,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221708288,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221724672,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221732864,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221736960,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221739008,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221740032,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221740544,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221740800,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221740928,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221740992,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221741024,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221741040,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221741048,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221741052,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221741054,64,FLEN)
NAN_BOXED(6886730341977460777,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(10632998720221741055,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172646912,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172646913,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172646915,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172646919,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172646927,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172646943,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172646975,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172647039,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172647167,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172647423,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172647935,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172648959,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172651007,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172655103,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172663295,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172679679,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172712447,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172777983,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819172909055,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819173171199,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819173695487,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819174744063,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819176841215,64,FLEN)
NAN_BOXED(6886743059889010849,64,FLEN)
NAN_BOXED(2327091008210914877,64,FLEN)
NAN_BOXED(4602678819181035519,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
