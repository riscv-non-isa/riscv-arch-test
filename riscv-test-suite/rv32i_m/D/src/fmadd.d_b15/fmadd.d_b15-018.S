
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_13056:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83ffffffff800000; valaddr_reg:x3; val_offset:39168*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39168*0 + 3*0*FLEN/8, x4, x1, x2)

inst_13057:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83ffffffffc00000; valaddr_reg:x3; val_offset:39171*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39171*0 + 3*1*FLEN/8, x4, x1, x2)

inst_13058:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83ffffffffe00000; valaddr_reg:x3; val_offset:39174*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39174*0 + 3*2*FLEN/8, x4, x1, x2)

inst_13059:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83fffffffff00000; valaddr_reg:x3; val_offset:39177*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39177*0 + 3*3*FLEN/8, x4, x1, x2)

inst_13060:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83fffffffff80000; valaddr_reg:x3; val_offset:39180*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39180*0 + 3*4*FLEN/8, x4, x1, x2)

inst_13061:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83fffffffffc0000; valaddr_reg:x3; val_offset:39183*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39183*0 + 3*5*FLEN/8, x4, x1, x2)

inst_13062:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83fffffffffe0000; valaddr_reg:x3; val_offset:39186*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39186*0 + 3*6*FLEN/8, x4, x1, x2)

inst_13063:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83ffffffffff0000; valaddr_reg:x3; val_offset:39189*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39189*0 + 3*7*FLEN/8, x4, x1, x2)

inst_13064:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83ffffffffff8000; valaddr_reg:x3; val_offset:39192*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39192*0 + 3*8*FLEN/8, x4, x1, x2)

inst_13065:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83ffffffffffc000; valaddr_reg:x3; val_offset:39195*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39195*0 + 3*9*FLEN/8, x4, x1, x2)

inst_13066:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83ffffffffffe000; valaddr_reg:x3; val_offset:39198*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39198*0 + 3*10*FLEN/8, x4, x1, x2)

inst_13067:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83fffffffffff000; valaddr_reg:x3; val_offset:39201*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39201*0 + 3*11*FLEN/8, x4, x1, x2)

inst_13068:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83fffffffffff800; valaddr_reg:x3; val_offset:39204*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39204*0 + 3*12*FLEN/8, x4, x1, x2)

inst_13069:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83fffffffffffc00; valaddr_reg:x3; val_offset:39207*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39207*0 + 3*13*FLEN/8, x4, x1, x2)

inst_13070:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83fffffffffffe00; valaddr_reg:x3; val_offset:39210*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39210*0 + 3*14*FLEN/8, x4, x1, x2)

inst_13071:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83ffffffffffff00; valaddr_reg:x3; val_offset:39213*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39213*0 + 3*15*FLEN/8, x4, x1, x2)

inst_13072:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83ffffffffffff80; valaddr_reg:x3; val_offset:39216*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39216*0 + 3*16*FLEN/8, x4, x1, x2)

inst_13073:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83ffffffffffffc0; valaddr_reg:x3; val_offset:39219*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39219*0 + 3*17*FLEN/8, x4, x1, x2)

inst_13074:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83ffffffffffffe0; valaddr_reg:x3; val_offset:39222*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39222*0 + 3*18*FLEN/8, x4, x1, x2)

inst_13075:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83fffffffffffff0; valaddr_reg:x3; val_offset:39225*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39225*0 + 3*19*FLEN/8, x4, x1, x2)

inst_13076:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83fffffffffffff8; valaddr_reg:x3; val_offset:39228*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39228*0 + 3*20*FLEN/8, x4, x1, x2)

inst_13077:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83fffffffffffffc; valaddr_reg:x3; val_offset:39231*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39231*0 + 3*21*FLEN/8, x4, x1, x2)

inst_13078:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83fffffffffffffe; valaddr_reg:x3; val_offset:39234*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39234*0 + 3*22*FLEN/8, x4, x1, x2)

inst_13079:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaff71ade37b9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aff71ade37b9f; op2val:0x8000;
op3val:0x83ffffffffffffff; valaddr_reg:x3; val_offset:39237*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39237*0 + 3*23*FLEN/8, x4, x1, x2)

inst_13080:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:39240*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39240*0 + 3*24*FLEN/8, x4, x1, x2)

inst_13081:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:39243*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39243*0 + 3*25*FLEN/8, x4, x1, x2)

inst_13082:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:39246*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39246*0 + 3*26*FLEN/8, x4, x1, x2)

inst_13083:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:39249*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39249*0 + 3*27*FLEN/8, x4, x1, x2)

inst_13084:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:39252*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39252*0 + 3*28*FLEN/8, x4, x1, x2)

inst_13085:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:39255*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39255*0 + 3*29*FLEN/8, x4, x1, x2)

inst_13086:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:39258*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39258*0 + 3*30*FLEN/8, x4, x1, x2)

inst_13087:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:39261*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39261*0 + 3*31*FLEN/8, x4, x1, x2)

inst_13088:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:39264*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39264*0 + 3*32*FLEN/8, x4, x1, x2)

inst_13089:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:39267*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39267*0 + 3*33*FLEN/8, x4, x1, x2)

inst_13090:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:39270*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39270*0 + 3*34*FLEN/8, x4, x1, x2)

inst_13091:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:39273*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39273*0 + 3*35*FLEN/8, x4, x1, x2)

inst_13092:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:39276*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39276*0 + 3*36*FLEN/8, x4, x1, x2)

inst_13093:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:39279*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39279*0 + 3*37*FLEN/8, x4, x1, x2)

inst_13094:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:39282*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39282*0 + 3*38*FLEN/8, x4, x1, x2)

inst_13095:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:39285*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39285*0 + 3*39*FLEN/8, x4, x1, x2)

inst_13096:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:39288*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39288*0 + 3*40*FLEN/8, x4, x1, x2)

inst_13097:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:39291*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39291*0 + 3*41*FLEN/8, x4, x1, x2)

inst_13098:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:39294*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39294*0 + 3*42*FLEN/8, x4, x1, x2)

inst_13099:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:39297*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39297*0 + 3*43*FLEN/8, x4, x1, x2)

inst_13100:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:39300*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39300*0 + 3*44*FLEN/8, x4, x1, x2)

inst_13101:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:39303*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39303*0 + 3*45*FLEN/8, x4, x1, x2)

inst_13102:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000000000000; valaddr_reg:x3; val_offset:39306*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39306*0 + 3*46*FLEN/8, x4, x1, x2)

inst_13103:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000000000001; valaddr_reg:x3; val_offset:39309*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39309*0 + 3*47*FLEN/8, x4, x1, x2)

inst_13104:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000000000003; valaddr_reg:x3; val_offset:39312*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39312*0 + 3*48*FLEN/8, x4, x1, x2)

inst_13105:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000000000007; valaddr_reg:x3; val_offset:39315*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39315*0 + 3*49*FLEN/8, x4, x1, x2)

inst_13106:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000000000000f; valaddr_reg:x3; val_offset:39318*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39318*0 + 3*50*FLEN/8, x4, x1, x2)

inst_13107:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000000000001f; valaddr_reg:x3; val_offset:39321*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39321*0 + 3*51*FLEN/8, x4, x1, x2)

inst_13108:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000000000003f; valaddr_reg:x3; val_offset:39324*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39324*0 + 3*52*FLEN/8, x4, x1, x2)

inst_13109:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000000000007f; valaddr_reg:x3; val_offset:39327*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39327*0 + 3*53*FLEN/8, x4, x1, x2)

inst_13110:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800000000000ff; valaddr_reg:x3; val_offset:39330*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39330*0 + 3*54*FLEN/8, x4, x1, x2)

inst_13111:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800000000001ff; valaddr_reg:x3; val_offset:39333*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39333*0 + 3*55*FLEN/8, x4, x1, x2)

inst_13112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800000000003ff; valaddr_reg:x3; val_offset:39336*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39336*0 + 3*56*FLEN/8, x4, x1, x2)

inst_13113:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800000000007ff; valaddr_reg:x3; val_offset:39339*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39339*0 + 3*57*FLEN/8, x4, x1, x2)

inst_13114:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000000000fff; valaddr_reg:x3; val_offset:39342*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39342*0 + 3*58*FLEN/8, x4, x1, x2)

inst_13115:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000000001fff; valaddr_reg:x3; val_offset:39345*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39345*0 + 3*59*FLEN/8, x4, x1, x2)

inst_13116:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000000003fff; valaddr_reg:x3; val_offset:39348*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39348*0 + 3*60*FLEN/8, x4, x1, x2)

inst_13117:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000000007fff; valaddr_reg:x3; val_offset:39351*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39351*0 + 3*61*FLEN/8, x4, x1, x2)

inst_13118:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000000000ffff; valaddr_reg:x3; val_offset:39354*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39354*0 + 3*62*FLEN/8, x4, x1, x2)

inst_13119:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000000001ffff; valaddr_reg:x3; val_offset:39357*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39357*0 + 3*63*FLEN/8, x4, x1, x2)

inst_13120:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000000003ffff; valaddr_reg:x3; val_offset:39360*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39360*0 + 3*64*FLEN/8, x4, x1, x2)

inst_13121:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000000007ffff; valaddr_reg:x3; val_offset:39363*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39363*0 + 3*65*FLEN/8, x4, x1, x2)

inst_13122:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800000000fffff; valaddr_reg:x3; val_offset:39366*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39366*0 + 3*66*FLEN/8, x4, x1, x2)

inst_13123:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800000001fffff; valaddr_reg:x3; val_offset:39369*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39369*0 + 3*67*FLEN/8, x4, x1, x2)

inst_13124:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800000003fffff; valaddr_reg:x3; val_offset:39372*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39372*0 + 3*68*FLEN/8, x4, x1, x2)

inst_13125:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800000007fffff; valaddr_reg:x3; val_offset:39375*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39375*0 + 3*69*FLEN/8, x4, x1, x2)

inst_13126:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000000ffffff; valaddr_reg:x3; val_offset:39378*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39378*0 + 3*70*FLEN/8, x4, x1, x2)

inst_13127:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000001ffffff; valaddr_reg:x3; val_offset:39381*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39381*0 + 3*71*FLEN/8, x4, x1, x2)

inst_13128:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000003ffffff; valaddr_reg:x3; val_offset:39384*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39384*0 + 3*72*FLEN/8, x4, x1, x2)

inst_13129:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000007ffffff; valaddr_reg:x3; val_offset:39387*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39387*0 + 3*73*FLEN/8, x4, x1, x2)

inst_13130:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000000fffffff; valaddr_reg:x3; val_offset:39390*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39390*0 + 3*74*FLEN/8, x4, x1, x2)

inst_13131:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000001fffffff; valaddr_reg:x3; val_offset:39393*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39393*0 + 3*75*FLEN/8, x4, x1, x2)

inst_13132:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000003fffffff; valaddr_reg:x3; val_offset:39396*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39396*0 + 3*76*FLEN/8, x4, x1, x2)

inst_13133:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000007fffffff; valaddr_reg:x3; val_offset:39399*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39399*0 + 3*77*FLEN/8, x4, x1, x2)

inst_13134:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800000ffffffff; valaddr_reg:x3; val_offset:39402*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39402*0 + 3*78*FLEN/8, x4, x1, x2)

inst_13135:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800001ffffffff; valaddr_reg:x3; val_offset:39405*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39405*0 + 3*79*FLEN/8, x4, x1, x2)

inst_13136:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800003ffffffff; valaddr_reg:x3; val_offset:39408*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39408*0 + 3*80*FLEN/8, x4, x1, x2)

inst_13137:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800007ffffffff; valaddr_reg:x3; val_offset:39411*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39411*0 + 3*81*FLEN/8, x4, x1, x2)

inst_13138:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180000fffffffff; valaddr_reg:x3; val_offset:39414*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39414*0 + 3*82*FLEN/8, x4, x1, x2)

inst_13139:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180001fffffffff; valaddr_reg:x3; val_offset:39417*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39417*0 + 3*83*FLEN/8, x4, x1, x2)

inst_13140:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180003fffffffff; valaddr_reg:x3; val_offset:39420*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39420*0 + 3*84*FLEN/8, x4, x1, x2)

inst_13141:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180007fffffffff; valaddr_reg:x3; val_offset:39423*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39423*0 + 3*85*FLEN/8, x4, x1, x2)

inst_13142:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18000ffffffffff; valaddr_reg:x3; val_offset:39426*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39426*0 + 3*86*FLEN/8, x4, x1, x2)

inst_13143:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18001ffffffffff; valaddr_reg:x3; val_offset:39429*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39429*0 + 3*87*FLEN/8, x4, x1, x2)

inst_13144:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18003ffffffffff; valaddr_reg:x3; val_offset:39432*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39432*0 + 3*88*FLEN/8, x4, x1, x2)

inst_13145:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18007ffffffffff; valaddr_reg:x3; val_offset:39435*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39435*0 + 3*89*FLEN/8, x4, x1, x2)

inst_13146:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1800fffffffffff; valaddr_reg:x3; val_offset:39438*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39438*0 + 3*90*FLEN/8, x4, x1, x2)

inst_13147:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1801fffffffffff; valaddr_reg:x3; val_offset:39441*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39441*0 + 3*91*FLEN/8, x4, x1, x2)

inst_13148:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1803fffffffffff; valaddr_reg:x3; val_offset:39444*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39444*0 + 3*92*FLEN/8, x4, x1, x2)

inst_13149:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x1807fffffffffff; valaddr_reg:x3; val_offset:39447*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39447*0 + 3*93*FLEN/8, x4, x1, x2)

inst_13150:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x180ffffffffffff; valaddr_reg:x3; val_offset:39450*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39450*0 + 3*94*FLEN/8, x4, x1, x2)

inst_13151:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x181ffffffffffff; valaddr_reg:x3; val_offset:39453*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39453*0 + 3*95*FLEN/8, x4, x1, x2)

inst_13152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x183ffffffffffff; valaddr_reg:x3; val_offset:39456*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39456*0 + 3*96*FLEN/8, x4, x1, x2)

inst_13153:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x187ffffffffffff; valaddr_reg:x3; val_offset:39459*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39459*0 + 3*97*FLEN/8, x4, x1, x2)

inst_13154:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x188000000000000; valaddr_reg:x3; val_offset:39462*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39462*0 + 3*98*FLEN/8, x4, x1, x2)

inst_13155:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18c000000000000; valaddr_reg:x3; val_offset:39465*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39465*0 + 3*99*FLEN/8, x4, x1, x2)

inst_13156:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18e000000000000; valaddr_reg:x3; val_offset:39468*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39468*0 + 3*100*FLEN/8, x4, x1, x2)

inst_13157:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18f000000000000; valaddr_reg:x3; val_offset:39471*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39471*0 + 3*101*FLEN/8, x4, x1, x2)

inst_13158:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18f800000000000; valaddr_reg:x3; val_offset:39474*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39474*0 + 3*102*FLEN/8, x4, x1, x2)

inst_13159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fc00000000000; valaddr_reg:x3; val_offset:39477*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39477*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13160:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fe00000000000; valaddr_reg:x3; val_offset:39480*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39480*0 + 3*104*FLEN/8, x4, x1, x2)

inst_13161:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ff00000000000; valaddr_reg:x3; val_offset:39483*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39483*0 + 3*105*FLEN/8, x4, x1, x2)

inst_13162:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ff80000000000; valaddr_reg:x3; val_offset:39486*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39486*0 + 3*106*FLEN/8, x4, x1, x2)

inst_13163:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffc0000000000; valaddr_reg:x3; val_offset:39489*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39489*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13164:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffe0000000000; valaddr_reg:x3; val_offset:39492*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39492*0 + 3*108*FLEN/8, x4, x1, x2)

inst_13165:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fff0000000000; valaddr_reg:x3; val_offset:39495*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39495*0 + 3*109*FLEN/8, x4, x1, x2)

inst_13166:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fff8000000000; valaddr_reg:x3; val_offset:39498*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39498*0 + 3*110*FLEN/8, x4, x1, x2)

inst_13167:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffc000000000; valaddr_reg:x3; val_offset:39501*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39501*0 + 3*111*FLEN/8, x4, x1, x2)

inst_13168:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffe000000000; valaddr_reg:x3; val_offset:39504*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39504*0 + 3*112*FLEN/8, x4, x1, x2)

inst_13169:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffff000000000; valaddr_reg:x3; val_offset:39507*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39507*0 + 3*113*FLEN/8, x4, x1, x2)

inst_13170:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffff800000000; valaddr_reg:x3; val_offset:39510*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39510*0 + 3*114*FLEN/8, x4, x1, x2)

inst_13171:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffc00000000; valaddr_reg:x3; val_offset:39513*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39513*0 + 3*115*FLEN/8, x4, x1, x2)

inst_13172:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffe00000000; valaddr_reg:x3; val_offset:39516*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39516*0 + 3*116*FLEN/8, x4, x1, x2)

inst_13173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffff00000000; valaddr_reg:x3; val_offset:39519*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39519*0 + 3*117*FLEN/8, x4, x1, x2)

inst_13174:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffff80000000; valaddr_reg:x3; val_offset:39522*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39522*0 + 3*118*FLEN/8, x4, x1, x2)

inst_13175:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffc0000000; valaddr_reg:x3; val_offset:39525*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39525*0 + 3*119*FLEN/8, x4, x1, x2)

inst_13176:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffe0000000; valaddr_reg:x3; val_offset:39528*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39528*0 + 3*120*FLEN/8, x4, x1, x2)

inst_13177:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffff0000000; valaddr_reg:x3; val_offset:39531*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39531*0 + 3*121*FLEN/8, x4, x1, x2)

inst_13178:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffff8000000; valaddr_reg:x3; val_offset:39534*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39534*0 + 3*122*FLEN/8, x4, x1, x2)

inst_13179:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffc000000; valaddr_reg:x3; val_offset:39537*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39537*0 + 3*123*FLEN/8, x4, x1, x2)

inst_13180:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffe000000; valaddr_reg:x3; val_offset:39540*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39540*0 + 3*124*FLEN/8, x4, x1, x2)

inst_13181:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffff000000; valaddr_reg:x3; val_offset:39543*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39543*0 + 3*125*FLEN/8, x4, x1, x2)

inst_13182:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffff800000; valaddr_reg:x3; val_offset:39546*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39546*0 + 3*126*FLEN/8, x4, x1, x2)

inst_13183:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffffc00000; valaddr_reg:x3; val_offset:39549*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39549*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_13184:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffffe00000; valaddr_reg:x3; val_offset:39552*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39552*0 + 3*128*FLEN/8, x4, x1, x2)

inst_13185:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffff00000; valaddr_reg:x3; val_offset:39555*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39555*0 + 3*129*FLEN/8, x4, x1, x2)

inst_13186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffff80000; valaddr_reg:x3; val_offset:39558*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39558*0 + 3*130*FLEN/8, x4, x1, x2)

inst_13187:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffffc0000; valaddr_reg:x3; val_offset:39561*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39561*0 + 3*131*FLEN/8, x4, x1, x2)

inst_13188:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffffe0000; valaddr_reg:x3; val_offset:39564*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39564*0 + 3*132*FLEN/8, x4, x1, x2)

inst_13189:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffffff0000; valaddr_reg:x3; val_offset:39567*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39567*0 + 3*133*FLEN/8, x4, x1, x2)

inst_13190:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffffff8000; valaddr_reg:x3; val_offset:39570*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39570*0 + 3*134*FLEN/8, x4, x1, x2)

inst_13191:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffffffc000; valaddr_reg:x3; val_offset:39573*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39573*0 + 3*135*FLEN/8, x4, x1, x2)

inst_13192:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffffffe000; valaddr_reg:x3; val_offset:39576*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39576*0 + 3*136*FLEN/8, x4, x1, x2)

inst_13193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffffff000; valaddr_reg:x3; val_offset:39579*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39579*0 + 3*137*FLEN/8, x4, x1, x2)

inst_13194:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffffff800; valaddr_reg:x3; val_offset:39582*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39582*0 + 3*138*FLEN/8, x4, x1, x2)

inst_13195:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffffffc00; valaddr_reg:x3; val_offset:39585*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39585*0 + 3*139*FLEN/8, x4, x1, x2)

inst_13196:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffffffe00; valaddr_reg:x3; val_offset:39588*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39588*0 + 3*140*FLEN/8, x4, x1, x2)

inst_13197:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffffffff00; valaddr_reg:x3; val_offset:39591*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39591*0 + 3*141*FLEN/8, x4, x1, x2)

inst_13198:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffffffff80; valaddr_reg:x3; val_offset:39594*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39594*0 + 3*142*FLEN/8, x4, x1, x2)

inst_13199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffffffffc0; valaddr_reg:x3; val_offset:39597*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39597*0 + 3*143*FLEN/8, x4, x1, x2)

inst_13200:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffffffffe0; valaddr_reg:x3; val_offset:39600*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39600*0 + 3*144*FLEN/8, x4, x1, x2)

inst_13201:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffffffff0; valaddr_reg:x3; val_offset:39603*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39603*0 + 3*145*FLEN/8, x4, x1, x2)

inst_13202:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffffffff8; valaddr_reg:x3; val_offset:39606*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39606*0 + 3*146*FLEN/8, x4, x1, x2)

inst_13203:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffffffffc; valaddr_reg:x3; val_offset:39609*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39609*0 + 3*147*FLEN/8, x4, x1, x2)

inst_13204:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18ffffffffffffe; valaddr_reg:x3; val_offset:39612*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39612*0 + 3*148*FLEN/8, x4, x1, x2)

inst_13205:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xbce35c8dcf0af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7bce35c8dcf0af; op2val:0x0;
op3val:0x18fffffffffffff; valaddr_reg:x3; val_offset:39615*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39615*0 + 3*149*FLEN/8, x4, x1, x2)

inst_13206:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:39618*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39618*0 + 3*150*FLEN/8, x4, x1, x2)

inst_13207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:39621*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39621*0 + 3*151*FLEN/8, x4, x1, x2)

inst_13208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:39624*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39624*0 + 3*152*FLEN/8, x4, x1, x2)

inst_13209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:39627*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39627*0 + 3*153*FLEN/8, x4, x1, x2)

inst_13210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:39630*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39630*0 + 3*154*FLEN/8, x4, x1, x2)

inst_13211:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:39633*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39633*0 + 3*155*FLEN/8, x4, x1, x2)

inst_13212:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:39636*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39636*0 + 3*156*FLEN/8, x4, x1, x2)

inst_13213:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:39639*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39639*0 + 3*157*FLEN/8, x4, x1, x2)

inst_13214:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:39642*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39642*0 + 3*158*FLEN/8, x4, x1, x2)

inst_13215:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:39645*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39645*0 + 3*159*FLEN/8, x4, x1, x2)

inst_13216:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:39648*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39648*0 + 3*160*FLEN/8, x4, x1, x2)

inst_13217:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:39651*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39651*0 + 3*161*FLEN/8, x4, x1, x2)

inst_13218:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:39654*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39654*0 + 3*162*FLEN/8, x4, x1, x2)

inst_13219:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:39657*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39657*0 + 3*163*FLEN/8, x4, x1, x2)

inst_13220:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:39660*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39660*0 + 3*164*FLEN/8, x4, x1, x2)

inst_13221:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:39663*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39663*0 + 3*165*FLEN/8, x4, x1, x2)

inst_13222:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:39666*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39666*0 + 3*166*FLEN/8, x4, x1, x2)

inst_13223:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:39669*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39669*0 + 3*167*FLEN/8, x4, x1, x2)

inst_13224:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:39672*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39672*0 + 3*168*FLEN/8, x4, x1, x2)

inst_13225:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:39675*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39675*0 + 3*169*FLEN/8, x4, x1, x2)

inst_13226:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:39678*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39678*0 + 3*170*FLEN/8, x4, x1, x2)

inst_13227:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:39681*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39681*0 + 3*171*FLEN/8, x4, x1, x2)

inst_13228:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000000000000; valaddr_reg:x3; val_offset:39684*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39684*0 + 3*172*FLEN/8, x4, x1, x2)

inst_13229:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000000000001; valaddr_reg:x3; val_offset:39687*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39687*0 + 3*173*FLEN/8, x4, x1, x2)

inst_13230:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000000000003; valaddr_reg:x3; val_offset:39690*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39690*0 + 3*174*FLEN/8, x4, x1, x2)

inst_13231:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000000000007; valaddr_reg:x3; val_offset:39693*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39693*0 + 3*175*FLEN/8, x4, x1, x2)

inst_13232:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000000000000f; valaddr_reg:x3; val_offset:39696*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39696*0 + 3*176*FLEN/8, x4, x1, x2)

inst_13233:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000000000001f; valaddr_reg:x3; val_offset:39699*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39699*0 + 3*177*FLEN/8, x4, x1, x2)

inst_13234:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000000000003f; valaddr_reg:x3; val_offset:39702*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39702*0 + 3*178*FLEN/8, x4, x1, x2)

inst_13235:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000000000007f; valaddr_reg:x3; val_offset:39705*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39705*0 + 3*179*FLEN/8, x4, x1, x2)

inst_13236:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100000000000ff; valaddr_reg:x3; val_offset:39708*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39708*0 + 3*180*FLEN/8, x4, x1, x2)

inst_13237:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100000000001ff; valaddr_reg:x3; val_offset:39711*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39711*0 + 3*181*FLEN/8, x4, x1, x2)

inst_13238:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100000000003ff; valaddr_reg:x3; val_offset:39714*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39714*0 + 3*182*FLEN/8, x4, x1, x2)

inst_13239:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100000000007ff; valaddr_reg:x3; val_offset:39717*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39717*0 + 3*183*FLEN/8, x4, x1, x2)

inst_13240:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000000000fff; valaddr_reg:x3; val_offset:39720*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39720*0 + 3*184*FLEN/8, x4, x1, x2)

inst_13241:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000000001fff; valaddr_reg:x3; val_offset:39723*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39723*0 + 3*185*FLEN/8, x4, x1, x2)

inst_13242:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000000003fff; valaddr_reg:x3; val_offset:39726*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39726*0 + 3*186*FLEN/8, x4, x1, x2)

inst_13243:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000000007fff; valaddr_reg:x3; val_offset:39729*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39729*0 + 3*187*FLEN/8, x4, x1, x2)

inst_13244:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000000000ffff; valaddr_reg:x3; val_offset:39732*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39732*0 + 3*188*FLEN/8, x4, x1, x2)

inst_13245:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000000001ffff; valaddr_reg:x3; val_offset:39735*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39735*0 + 3*189*FLEN/8, x4, x1, x2)

inst_13246:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000000003ffff; valaddr_reg:x3; val_offset:39738*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39738*0 + 3*190*FLEN/8, x4, x1, x2)

inst_13247:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000000007ffff; valaddr_reg:x3; val_offset:39741*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39741*0 + 3*191*FLEN/8, x4, x1, x2)

inst_13248:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100000000fffff; valaddr_reg:x3; val_offset:39744*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39744*0 + 3*192*FLEN/8, x4, x1, x2)

inst_13249:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100000001fffff; valaddr_reg:x3; val_offset:39747*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39747*0 + 3*193*FLEN/8, x4, x1, x2)

inst_13250:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100000003fffff; valaddr_reg:x3; val_offset:39750*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39750*0 + 3*194*FLEN/8, x4, x1, x2)

inst_13251:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100000007fffff; valaddr_reg:x3; val_offset:39753*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39753*0 + 3*195*FLEN/8, x4, x1, x2)

inst_13252:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000000ffffff; valaddr_reg:x3; val_offset:39756*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39756*0 + 3*196*FLEN/8, x4, x1, x2)

inst_13253:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000001ffffff; valaddr_reg:x3; val_offset:39759*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39759*0 + 3*197*FLEN/8, x4, x1, x2)

inst_13254:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000003ffffff; valaddr_reg:x3; val_offset:39762*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39762*0 + 3*198*FLEN/8, x4, x1, x2)

inst_13255:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000007ffffff; valaddr_reg:x3; val_offset:39765*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39765*0 + 3*199*FLEN/8, x4, x1, x2)

inst_13256:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000000fffffff; valaddr_reg:x3; val_offset:39768*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39768*0 + 3*200*FLEN/8, x4, x1, x2)

inst_13257:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000001fffffff; valaddr_reg:x3; val_offset:39771*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39771*0 + 3*201*FLEN/8, x4, x1, x2)

inst_13258:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000003fffffff; valaddr_reg:x3; val_offset:39774*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39774*0 + 3*202*FLEN/8, x4, x1, x2)

inst_13259:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000007fffffff; valaddr_reg:x3; val_offset:39777*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39777*0 + 3*203*FLEN/8, x4, x1, x2)

inst_13260:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100000ffffffff; valaddr_reg:x3; val_offset:39780*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39780*0 + 3*204*FLEN/8, x4, x1, x2)

inst_13261:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100001ffffffff; valaddr_reg:x3; val_offset:39783*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39783*0 + 3*205*FLEN/8, x4, x1, x2)

inst_13262:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100003ffffffff; valaddr_reg:x3; val_offset:39786*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39786*0 + 3*206*FLEN/8, x4, x1, x2)

inst_13263:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100007ffffffff; valaddr_reg:x3; val_offset:39789*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39789*0 + 3*207*FLEN/8, x4, x1, x2)

inst_13264:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210000fffffffff; valaddr_reg:x3; val_offset:39792*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39792*0 + 3*208*FLEN/8, x4, x1, x2)

inst_13265:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210001fffffffff; valaddr_reg:x3; val_offset:39795*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39795*0 + 3*209*FLEN/8, x4, x1, x2)

inst_13266:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210003fffffffff; valaddr_reg:x3; val_offset:39798*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39798*0 + 3*210*FLEN/8, x4, x1, x2)

inst_13267:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210007fffffffff; valaddr_reg:x3; val_offset:39801*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39801*0 + 3*211*FLEN/8, x4, x1, x2)

inst_13268:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21000ffffffffff; valaddr_reg:x3; val_offset:39804*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39804*0 + 3*212*FLEN/8, x4, x1, x2)

inst_13269:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21001ffffffffff; valaddr_reg:x3; val_offset:39807*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39807*0 + 3*213*FLEN/8, x4, x1, x2)

inst_13270:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21003ffffffffff; valaddr_reg:x3; val_offset:39810*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39810*0 + 3*214*FLEN/8, x4, x1, x2)

inst_13271:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21007ffffffffff; valaddr_reg:x3; val_offset:39813*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39813*0 + 3*215*FLEN/8, x4, x1, x2)

inst_13272:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2100fffffffffff; valaddr_reg:x3; val_offset:39816*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39816*0 + 3*216*FLEN/8, x4, x1, x2)

inst_13273:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2101fffffffffff; valaddr_reg:x3; val_offset:39819*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39819*0 + 3*217*FLEN/8, x4, x1, x2)

inst_13274:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2103fffffffffff; valaddr_reg:x3; val_offset:39822*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39822*0 + 3*218*FLEN/8, x4, x1, x2)

inst_13275:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x2107fffffffffff; valaddr_reg:x3; val_offset:39825*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39825*0 + 3*219*FLEN/8, x4, x1, x2)

inst_13276:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x210ffffffffffff; valaddr_reg:x3; val_offset:39828*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39828*0 + 3*220*FLEN/8, x4, x1, x2)

inst_13277:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x211ffffffffffff; valaddr_reg:x3; val_offset:39831*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39831*0 + 3*221*FLEN/8, x4, x1, x2)

inst_13278:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x213ffffffffffff; valaddr_reg:x3; val_offset:39834*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39834*0 + 3*222*FLEN/8, x4, x1, x2)

inst_13279:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x217ffffffffffff; valaddr_reg:x3; val_offset:39837*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39837*0 + 3*223*FLEN/8, x4, x1, x2)

inst_13280:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x218000000000000; valaddr_reg:x3; val_offset:39840*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39840*0 + 3*224*FLEN/8, x4, x1, x2)

inst_13281:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21c000000000000; valaddr_reg:x3; val_offset:39843*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39843*0 + 3*225*FLEN/8, x4, x1, x2)

inst_13282:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21e000000000000; valaddr_reg:x3; val_offset:39846*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39846*0 + 3*226*FLEN/8, x4, x1, x2)

inst_13283:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21f000000000000; valaddr_reg:x3; val_offset:39849*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39849*0 + 3*227*FLEN/8, x4, x1, x2)

inst_13284:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21f800000000000; valaddr_reg:x3; val_offset:39852*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39852*0 + 3*228*FLEN/8, x4, x1, x2)

inst_13285:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fc00000000000; valaddr_reg:x3; val_offset:39855*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39855*0 + 3*229*FLEN/8, x4, x1, x2)

inst_13286:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fe00000000000; valaddr_reg:x3; val_offset:39858*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39858*0 + 3*230*FLEN/8, x4, x1, x2)

inst_13287:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ff00000000000; valaddr_reg:x3; val_offset:39861*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39861*0 + 3*231*FLEN/8, x4, x1, x2)

inst_13288:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ff80000000000; valaddr_reg:x3; val_offset:39864*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39864*0 + 3*232*FLEN/8, x4, x1, x2)

inst_13289:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffc0000000000; valaddr_reg:x3; val_offset:39867*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39867*0 + 3*233*FLEN/8, x4, x1, x2)

inst_13290:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffe0000000000; valaddr_reg:x3; val_offset:39870*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39870*0 + 3*234*FLEN/8, x4, x1, x2)

inst_13291:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fff0000000000; valaddr_reg:x3; val_offset:39873*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39873*0 + 3*235*FLEN/8, x4, x1, x2)

inst_13292:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fff8000000000; valaddr_reg:x3; val_offset:39876*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39876*0 + 3*236*FLEN/8, x4, x1, x2)

inst_13293:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffc000000000; valaddr_reg:x3; val_offset:39879*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39879*0 + 3*237*FLEN/8, x4, x1, x2)

inst_13294:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffe000000000; valaddr_reg:x3; val_offset:39882*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39882*0 + 3*238*FLEN/8, x4, x1, x2)

inst_13295:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffff000000000; valaddr_reg:x3; val_offset:39885*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39885*0 + 3*239*FLEN/8, x4, x1, x2)

inst_13296:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffff800000000; valaddr_reg:x3; val_offset:39888*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39888*0 + 3*240*FLEN/8, x4, x1, x2)

inst_13297:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffc00000000; valaddr_reg:x3; val_offset:39891*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39891*0 + 3*241*FLEN/8, x4, x1, x2)

inst_13298:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffe00000000; valaddr_reg:x3; val_offset:39894*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39894*0 + 3*242*FLEN/8, x4, x1, x2)

inst_13299:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffff00000000; valaddr_reg:x3; val_offset:39897*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39897*0 + 3*243*FLEN/8, x4, x1, x2)

inst_13300:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffff80000000; valaddr_reg:x3; val_offset:39900*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39900*0 + 3*244*FLEN/8, x4, x1, x2)

inst_13301:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffc0000000; valaddr_reg:x3; val_offset:39903*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39903*0 + 3*245*FLEN/8, x4, x1, x2)

inst_13302:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffe0000000; valaddr_reg:x3; val_offset:39906*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39906*0 + 3*246*FLEN/8, x4, x1, x2)

inst_13303:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffff0000000; valaddr_reg:x3; val_offset:39909*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39909*0 + 3*247*FLEN/8, x4, x1, x2)

inst_13304:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffff8000000; valaddr_reg:x3; val_offset:39912*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39912*0 + 3*248*FLEN/8, x4, x1, x2)

inst_13305:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffc000000; valaddr_reg:x3; val_offset:39915*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39915*0 + 3*249*FLEN/8, x4, x1, x2)

inst_13306:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffe000000; valaddr_reg:x3; val_offset:39918*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39918*0 + 3*250*FLEN/8, x4, x1, x2)

inst_13307:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffff000000; valaddr_reg:x3; val_offset:39921*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39921*0 + 3*251*FLEN/8, x4, x1, x2)

inst_13308:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffff800000; valaddr_reg:x3; val_offset:39924*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39924*0 + 3*252*FLEN/8, x4, x1, x2)

inst_13309:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffffc00000; valaddr_reg:x3; val_offset:39927*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39927*0 + 3*253*FLEN/8, x4, x1, x2)

inst_13310:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffffe00000; valaddr_reg:x3; val_offset:39930*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39930*0 + 3*254*FLEN/8, x4, x1, x2)

inst_13311:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffff00000; valaddr_reg:x3; val_offset:39933*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39933*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_13312:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffff80000; valaddr_reg:x3; val_offset:39936*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39936*0 + 3*256*FLEN/8, x4, x1, x2)

inst_13313:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffffc0000; valaddr_reg:x3; val_offset:39939*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39939*0 + 3*257*FLEN/8, x4, x1, x2)

inst_13314:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffffe0000; valaddr_reg:x3; val_offset:39942*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39942*0 + 3*258*FLEN/8, x4, x1, x2)

inst_13315:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffffff0000; valaddr_reg:x3; val_offset:39945*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39945*0 + 3*259*FLEN/8, x4, x1, x2)

inst_13316:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffffff8000; valaddr_reg:x3; val_offset:39948*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39948*0 + 3*260*FLEN/8, x4, x1, x2)

inst_13317:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffffffc000; valaddr_reg:x3; val_offset:39951*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39951*0 + 3*261*FLEN/8, x4, x1, x2)

inst_13318:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffffffe000; valaddr_reg:x3; val_offset:39954*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39954*0 + 3*262*FLEN/8, x4, x1, x2)

inst_13319:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffffff000; valaddr_reg:x3; val_offset:39957*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39957*0 + 3*263*FLEN/8, x4, x1, x2)

inst_13320:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffffff800; valaddr_reg:x3; val_offset:39960*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39960*0 + 3*264*FLEN/8, x4, x1, x2)

inst_13321:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffffffc00; valaddr_reg:x3; val_offset:39963*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39963*0 + 3*265*FLEN/8, x4, x1, x2)

inst_13322:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffffffe00; valaddr_reg:x3; val_offset:39966*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39966*0 + 3*266*FLEN/8, x4, x1, x2)

inst_13323:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffffffff00; valaddr_reg:x3; val_offset:39969*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39969*0 + 3*267*FLEN/8, x4, x1, x2)

inst_13324:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffffffff80; valaddr_reg:x3; val_offset:39972*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39972*0 + 3*268*FLEN/8, x4, x1, x2)

inst_13325:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffffffffc0; valaddr_reg:x3; val_offset:39975*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39975*0 + 3*269*FLEN/8, x4, x1, x2)

inst_13326:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffffffffe0; valaddr_reg:x3; val_offset:39978*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39978*0 + 3*270*FLEN/8, x4, x1, x2)

inst_13327:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffffffff0; valaddr_reg:x3; val_offset:39981*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39981*0 + 3*271*FLEN/8, x4, x1, x2)

inst_13328:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffffffff8; valaddr_reg:x3; val_offset:39984*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39984*0 + 3*272*FLEN/8, x4, x1, x2)

inst_13329:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffffffffc; valaddr_reg:x3; val_offset:39987*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39987*0 + 3*273*FLEN/8, x4, x1, x2)

inst_13330:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21ffffffffffffe; valaddr_reg:x3; val_offset:39990*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39990*0 + 3*274*FLEN/8, x4, x1, x2)

inst_13331:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc6a4b5c336aff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c6a4b5c336aff; op2val:0x0;
op3val:0x21fffffffffffff; valaddr_reg:x3; val_offset:39993*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39993*0 + 3*275*FLEN/8, x4, x1, x2)

inst_13332:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:39996*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39996*0 + 3*276*FLEN/8, x4, x1, x2)

inst_13333:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:39999*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39999*0 + 3*277*FLEN/8, x4, x1, x2)

inst_13334:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:40002*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40002*0 + 3*278*FLEN/8, x4, x1, x2)

inst_13335:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:40005*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40005*0 + 3*279*FLEN/8, x4, x1, x2)

inst_13336:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:40008*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40008*0 + 3*280*FLEN/8, x4, x1, x2)

inst_13337:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:40011*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40011*0 + 3*281*FLEN/8, x4, x1, x2)

inst_13338:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:40014*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40014*0 + 3*282*FLEN/8, x4, x1, x2)

inst_13339:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:40017*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40017*0 + 3*283*FLEN/8, x4, x1, x2)

inst_13340:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:40020*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40020*0 + 3*284*FLEN/8, x4, x1, x2)

inst_13341:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:40023*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40023*0 + 3*285*FLEN/8, x4, x1, x2)

inst_13342:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:40026*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40026*0 + 3*286*FLEN/8, x4, x1, x2)

inst_13343:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:40029*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40029*0 + 3*287*FLEN/8, x4, x1, x2)

inst_13344:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:40032*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40032*0 + 3*288*FLEN/8, x4, x1, x2)

inst_13345:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:40035*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40035*0 + 3*289*FLEN/8, x4, x1, x2)

inst_13346:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:40038*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40038*0 + 3*290*FLEN/8, x4, x1, x2)

inst_13347:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:40041*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40041*0 + 3*291*FLEN/8, x4, x1, x2)

inst_13348:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:40044*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40044*0 + 3*292*FLEN/8, x4, x1, x2)

inst_13349:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:40047*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40047*0 + 3*293*FLEN/8, x4, x1, x2)

inst_13350:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:40050*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40050*0 + 3*294*FLEN/8, x4, x1, x2)

inst_13351:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:40053*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40053*0 + 3*295*FLEN/8, x4, x1, x2)

inst_13352:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:40056*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40056*0 + 3*296*FLEN/8, x4, x1, x2)

inst_13353:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:40059*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40059*0 + 3*297*FLEN/8, x4, x1, x2)

inst_13354:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000000000000; valaddr_reg:x3; val_offset:40062*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40062*0 + 3*298*FLEN/8, x4, x1, x2)

inst_13355:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000000000001; valaddr_reg:x3; val_offset:40065*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40065*0 + 3*299*FLEN/8, x4, x1, x2)

inst_13356:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000000000003; valaddr_reg:x3; val_offset:40068*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40068*0 + 3*300*FLEN/8, x4, x1, x2)

inst_13357:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000000000007; valaddr_reg:x3; val_offset:40071*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40071*0 + 3*301*FLEN/8, x4, x1, x2)

inst_13358:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000000000000f; valaddr_reg:x3; val_offset:40074*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40074*0 + 3*302*FLEN/8, x4, x1, x2)

inst_13359:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000000000001f; valaddr_reg:x3; val_offset:40077*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40077*0 + 3*303*FLEN/8, x4, x1, x2)

inst_13360:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000000000003f; valaddr_reg:x3; val_offset:40080*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40080*0 + 3*304*FLEN/8, x4, x1, x2)

inst_13361:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000000000007f; valaddr_reg:x3; val_offset:40083*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40083*0 + 3*305*FLEN/8, x4, x1, x2)

inst_13362:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900000000000ff; valaddr_reg:x3; val_offset:40086*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40086*0 + 3*306*FLEN/8, x4, x1, x2)

inst_13363:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900000000001ff; valaddr_reg:x3; val_offset:40089*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40089*0 + 3*307*FLEN/8, x4, x1, x2)

inst_13364:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900000000003ff; valaddr_reg:x3; val_offset:40092*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40092*0 + 3*308*FLEN/8, x4, x1, x2)

inst_13365:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900000000007ff; valaddr_reg:x3; val_offset:40095*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40095*0 + 3*309*FLEN/8, x4, x1, x2)

inst_13366:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000000000fff; valaddr_reg:x3; val_offset:40098*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40098*0 + 3*310*FLEN/8, x4, x1, x2)

inst_13367:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000000001fff; valaddr_reg:x3; val_offset:40101*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40101*0 + 3*311*FLEN/8, x4, x1, x2)

inst_13368:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000000003fff; valaddr_reg:x3; val_offset:40104*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40104*0 + 3*312*FLEN/8, x4, x1, x2)

inst_13369:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000000007fff; valaddr_reg:x3; val_offset:40107*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40107*0 + 3*313*FLEN/8, x4, x1, x2)

inst_13370:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000000000ffff; valaddr_reg:x3; val_offset:40110*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40110*0 + 3*314*FLEN/8, x4, x1, x2)

inst_13371:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000000001ffff; valaddr_reg:x3; val_offset:40113*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40113*0 + 3*315*FLEN/8, x4, x1, x2)

inst_13372:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000000003ffff; valaddr_reg:x3; val_offset:40116*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40116*0 + 3*316*FLEN/8, x4, x1, x2)

inst_13373:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000000007ffff; valaddr_reg:x3; val_offset:40119*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40119*0 + 3*317*FLEN/8, x4, x1, x2)

inst_13374:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900000000fffff; valaddr_reg:x3; val_offset:40122*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40122*0 + 3*318*FLEN/8, x4, x1, x2)

inst_13375:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900000001fffff; valaddr_reg:x3; val_offset:40125*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40125*0 + 3*319*FLEN/8, x4, x1, x2)

inst_13376:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900000003fffff; valaddr_reg:x3; val_offset:40128*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40128*0 + 3*320*FLEN/8, x4, x1, x2)

inst_13377:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900000007fffff; valaddr_reg:x3; val_offset:40131*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40131*0 + 3*321*FLEN/8, x4, x1, x2)

inst_13378:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000000ffffff; valaddr_reg:x3; val_offset:40134*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40134*0 + 3*322*FLEN/8, x4, x1, x2)

inst_13379:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000001ffffff; valaddr_reg:x3; val_offset:40137*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40137*0 + 3*323*FLEN/8, x4, x1, x2)

inst_13380:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000003ffffff; valaddr_reg:x3; val_offset:40140*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40140*0 + 3*324*FLEN/8, x4, x1, x2)

inst_13381:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000007ffffff; valaddr_reg:x3; val_offset:40143*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40143*0 + 3*325*FLEN/8, x4, x1, x2)

inst_13382:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000000fffffff; valaddr_reg:x3; val_offset:40146*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40146*0 + 3*326*FLEN/8, x4, x1, x2)

inst_13383:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000001fffffff; valaddr_reg:x3; val_offset:40149*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40149*0 + 3*327*FLEN/8, x4, x1, x2)

inst_13384:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000003fffffff; valaddr_reg:x3; val_offset:40152*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40152*0 + 3*328*FLEN/8, x4, x1, x2)

inst_13385:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000007fffffff; valaddr_reg:x3; val_offset:40155*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40155*0 + 3*329*FLEN/8, x4, x1, x2)

inst_13386:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900000ffffffff; valaddr_reg:x3; val_offset:40158*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40158*0 + 3*330*FLEN/8, x4, x1, x2)

inst_13387:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900001ffffffff; valaddr_reg:x3; val_offset:40161*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40161*0 + 3*331*FLEN/8, x4, x1, x2)

inst_13388:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900003ffffffff; valaddr_reg:x3; val_offset:40164*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40164*0 + 3*332*FLEN/8, x4, x1, x2)

inst_13389:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900007ffffffff; valaddr_reg:x3; val_offset:40167*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40167*0 + 3*333*FLEN/8, x4, x1, x2)

inst_13390:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190000fffffffff; valaddr_reg:x3; val_offset:40170*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40170*0 + 3*334*FLEN/8, x4, x1, x2)

inst_13391:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190001fffffffff; valaddr_reg:x3; val_offset:40173*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40173*0 + 3*335*FLEN/8, x4, x1, x2)

inst_13392:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190003fffffffff; valaddr_reg:x3; val_offset:40176*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40176*0 + 3*336*FLEN/8, x4, x1, x2)

inst_13393:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190007fffffffff; valaddr_reg:x3; val_offset:40179*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40179*0 + 3*337*FLEN/8, x4, x1, x2)

inst_13394:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19000ffffffffff; valaddr_reg:x3; val_offset:40182*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40182*0 + 3*338*FLEN/8, x4, x1, x2)

inst_13395:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19001ffffffffff; valaddr_reg:x3; val_offset:40185*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40185*0 + 3*339*FLEN/8, x4, x1, x2)

inst_13396:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19003ffffffffff; valaddr_reg:x3; val_offset:40188*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40188*0 + 3*340*FLEN/8, x4, x1, x2)

inst_13397:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19007ffffffffff; valaddr_reg:x3; val_offset:40191*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40191*0 + 3*341*FLEN/8, x4, x1, x2)

inst_13398:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1900fffffffffff; valaddr_reg:x3; val_offset:40194*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40194*0 + 3*342*FLEN/8, x4, x1, x2)

inst_13399:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1901fffffffffff; valaddr_reg:x3; val_offset:40197*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40197*0 + 3*343*FLEN/8, x4, x1, x2)

inst_13400:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1903fffffffffff; valaddr_reg:x3; val_offset:40200*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40200*0 + 3*344*FLEN/8, x4, x1, x2)

inst_13401:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x1907fffffffffff; valaddr_reg:x3; val_offset:40203*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40203*0 + 3*345*FLEN/8, x4, x1, x2)

inst_13402:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x190ffffffffffff; valaddr_reg:x3; val_offset:40206*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40206*0 + 3*346*FLEN/8, x4, x1, x2)

inst_13403:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x191ffffffffffff; valaddr_reg:x3; val_offset:40209*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40209*0 + 3*347*FLEN/8, x4, x1, x2)

inst_13404:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x193ffffffffffff; valaddr_reg:x3; val_offset:40212*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40212*0 + 3*348*FLEN/8, x4, x1, x2)

inst_13405:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x197ffffffffffff; valaddr_reg:x3; val_offset:40215*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40215*0 + 3*349*FLEN/8, x4, x1, x2)

inst_13406:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x198000000000000; valaddr_reg:x3; val_offset:40218*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40218*0 + 3*350*FLEN/8, x4, x1, x2)

inst_13407:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19c000000000000; valaddr_reg:x3; val_offset:40221*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40221*0 + 3*351*FLEN/8, x4, x1, x2)

inst_13408:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19e000000000000; valaddr_reg:x3; val_offset:40224*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40224*0 + 3*352*FLEN/8, x4, x1, x2)

inst_13409:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19f000000000000; valaddr_reg:x3; val_offset:40227*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40227*0 + 3*353*FLEN/8, x4, x1, x2)

inst_13410:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19f800000000000; valaddr_reg:x3; val_offset:40230*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40230*0 + 3*354*FLEN/8, x4, x1, x2)

inst_13411:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fc00000000000; valaddr_reg:x3; val_offset:40233*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40233*0 + 3*355*FLEN/8, x4, x1, x2)

inst_13412:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fe00000000000; valaddr_reg:x3; val_offset:40236*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40236*0 + 3*356*FLEN/8, x4, x1, x2)

inst_13413:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ff00000000000; valaddr_reg:x3; val_offset:40239*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40239*0 + 3*357*FLEN/8, x4, x1, x2)

inst_13414:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ff80000000000; valaddr_reg:x3; val_offset:40242*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40242*0 + 3*358*FLEN/8, x4, x1, x2)

inst_13415:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffc0000000000; valaddr_reg:x3; val_offset:40245*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40245*0 + 3*359*FLEN/8, x4, x1, x2)

inst_13416:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffe0000000000; valaddr_reg:x3; val_offset:40248*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40248*0 + 3*360*FLEN/8, x4, x1, x2)

inst_13417:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fff0000000000; valaddr_reg:x3; val_offset:40251*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40251*0 + 3*361*FLEN/8, x4, x1, x2)

inst_13418:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fff8000000000; valaddr_reg:x3; val_offset:40254*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40254*0 + 3*362*FLEN/8, x4, x1, x2)

inst_13419:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffc000000000; valaddr_reg:x3; val_offset:40257*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40257*0 + 3*363*FLEN/8, x4, x1, x2)

inst_13420:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffe000000000; valaddr_reg:x3; val_offset:40260*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40260*0 + 3*364*FLEN/8, x4, x1, x2)

inst_13421:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffff000000000; valaddr_reg:x3; val_offset:40263*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40263*0 + 3*365*FLEN/8, x4, x1, x2)

inst_13422:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffff800000000; valaddr_reg:x3; val_offset:40266*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40266*0 + 3*366*FLEN/8, x4, x1, x2)

inst_13423:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffc00000000; valaddr_reg:x3; val_offset:40269*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40269*0 + 3*367*FLEN/8, x4, x1, x2)

inst_13424:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffe00000000; valaddr_reg:x3; val_offset:40272*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40272*0 + 3*368*FLEN/8, x4, x1, x2)

inst_13425:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffff00000000; valaddr_reg:x3; val_offset:40275*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40275*0 + 3*369*FLEN/8, x4, x1, x2)

inst_13426:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffff80000000; valaddr_reg:x3; val_offset:40278*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40278*0 + 3*370*FLEN/8, x4, x1, x2)

inst_13427:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffc0000000; valaddr_reg:x3; val_offset:40281*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40281*0 + 3*371*FLEN/8, x4, x1, x2)

inst_13428:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffe0000000; valaddr_reg:x3; val_offset:40284*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40284*0 + 3*372*FLEN/8, x4, x1, x2)

inst_13429:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffff0000000; valaddr_reg:x3; val_offset:40287*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40287*0 + 3*373*FLEN/8, x4, x1, x2)

inst_13430:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffff8000000; valaddr_reg:x3; val_offset:40290*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40290*0 + 3*374*FLEN/8, x4, x1, x2)

inst_13431:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffc000000; valaddr_reg:x3; val_offset:40293*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40293*0 + 3*375*FLEN/8, x4, x1, x2)

inst_13432:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffe000000; valaddr_reg:x3; val_offset:40296*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40296*0 + 3*376*FLEN/8, x4, x1, x2)

inst_13433:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffff000000; valaddr_reg:x3; val_offset:40299*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40299*0 + 3*377*FLEN/8, x4, x1, x2)

inst_13434:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffff800000; valaddr_reg:x3; val_offset:40302*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40302*0 + 3*378*FLEN/8, x4, x1, x2)

inst_13435:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffffc00000; valaddr_reg:x3; val_offset:40305*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40305*0 + 3*379*FLEN/8, x4, x1, x2)

inst_13436:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffffe00000; valaddr_reg:x3; val_offset:40308*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40308*0 + 3*380*FLEN/8, x4, x1, x2)

inst_13437:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffff00000; valaddr_reg:x3; val_offset:40311*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40311*0 + 3*381*FLEN/8, x4, x1, x2)

inst_13438:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffff80000; valaddr_reg:x3; val_offset:40314*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40314*0 + 3*382*FLEN/8, x4, x1, x2)

inst_13439:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffffc0000; valaddr_reg:x3; val_offset:40317*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40317*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_13440:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffffe0000; valaddr_reg:x3; val_offset:40320*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40320*0 + 3*384*FLEN/8, x4, x1, x2)

inst_13441:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffffff0000; valaddr_reg:x3; val_offset:40323*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40323*0 + 3*385*FLEN/8, x4, x1, x2)

inst_13442:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffffff8000; valaddr_reg:x3; val_offset:40326*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40326*0 + 3*386*FLEN/8, x4, x1, x2)

inst_13443:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffffffc000; valaddr_reg:x3; val_offset:40329*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40329*0 + 3*387*FLEN/8, x4, x1, x2)

inst_13444:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffffffe000; valaddr_reg:x3; val_offset:40332*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40332*0 + 3*388*FLEN/8, x4, x1, x2)

inst_13445:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffffff000; valaddr_reg:x3; val_offset:40335*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40335*0 + 3*389*FLEN/8, x4, x1, x2)

inst_13446:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffffff800; valaddr_reg:x3; val_offset:40338*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40338*0 + 3*390*FLEN/8, x4, x1, x2)

inst_13447:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffffffc00; valaddr_reg:x3; val_offset:40341*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40341*0 + 3*391*FLEN/8, x4, x1, x2)

inst_13448:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffffffe00; valaddr_reg:x3; val_offset:40344*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40344*0 + 3*392*FLEN/8, x4, x1, x2)

inst_13449:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffffffff00; valaddr_reg:x3; val_offset:40347*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40347*0 + 3*393*FLEN/8, x4, x1, x2)

inst_13450:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffffffff80; valaddr_reg:x3; val_offset:40350*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40350*0 + 3*394*FLEN/8, x4, x1, x2)

inst_13451:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffffffffc0; valaddr_reg:x3; val_offset:40353*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40353*0 + 3*395*FLEN/8, x4, x1, x2)

inst_13452:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffffffffe0; valaddr_reg:x3; val_offset:40356*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40356*0 + 3*396*FLEN/8, x4, x1, x2)

inst_13453:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffffffff0; valaddr_reg:x3; val_offset:40359*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40359*0 + 3*397*FLEN/8, x4, x1, x2)

inst_13454:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffffffff8; valaddr_reg:x3; val_offset:40362*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40362*0 + 3*398*FLEN/8, x4, x1, x2)

inst_13455:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffffffffc; valaddr_reg:x3; val_offset:40365*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40365*0 + 3*399*FLEN/8, x4, x1, x2)

inst_13456:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19ffffffffffffe; valaddr_reg:x3; val_offset:40368*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40368*0 + 3*400*FLEN/8, x4, x1, x2)

inst_13457:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb66f71dc9f9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb66f71dc9f9f; op2val:0x0;
op3val:0x19fffffffffffff; valaddr_reg:x3; val_offset:40371*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40371*0 + 3*401*FLEN/8, x4, x1, x2)

inst_13458:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:40374*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40374*0 + 3*402*FLEN/8, x4, x1, x2)

inst_13459:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:40377*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40377*0 + 3*403*FLEN/8, x4, x1, x2)

inst_13460:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:40380*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40380*0 + 3*404*FLEN/8, x4, x1, x2)

inst_13461:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:40383*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40383*0 + 3*405*FLEN/8, x4, x1, x2)

inst_13462:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:40386*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40386*0 + 3*406*FLEN/8, x4, x1, x2)

inst_13463:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:40389*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40389*0 + 3*407*FLEN/8, x4, x1, x2)

inst_13464:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:40392*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40392*0 + 3*408*FLEN/8, x4, x1, x2)

inst_13465:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:40395*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40395*0 + 3*409*FLEN/8, x4, x1, x2)

inst_13466:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:40398*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40398*0 + 3*410*FLEN/8, x4, x1, x2)

inst_13467:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:40401*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40401*0 + 3*411*FLEN/8, x4, x1, x2)

inst_13468:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:40404*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40404*0 + 3*412*FLEN/8, x4, x1, x2)

inst_13469:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:40407*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40407*0 + 3*413*FLEN/8, x4, x1, x2)

inst_13470:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:40410*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40410*0 + 3*414*FLEN/8, x4, x1, x2)

inst_13471:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:40413*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40413*0 + 3*415*FLEN/8, x4, x1, x2)

inst_13472:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:40416*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40416*0 + 3*416*FLEN/8, x4, x1, x2)

inst_13473:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:40419*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40419*0 + 3*417*FLEN/8, x4, x1, x2)

inst_13474:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:40422*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40422*0 + 3*418*FLEN/8, x4, x1, x2)

inst_13475:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:40425*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40425*0 + 3*419*FLEN/8, x4, x1, x2)

inst_13476:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:40428*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40428*0 + 3*420*FLEN/8, x4, x1, x2)

inst_13477:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:40431*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40431*0 + 3*421*FLEN/8, x4, x1, x2)

inst_13478:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:40434*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40434*0 + 3*422*FLEN/8, x4, x1, x2)

inst_13479:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:40437*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40437*0 + 3*423*FLEN/8, x4, x1, x2)

inst_13480:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000000000000; valaddr_reg:x3; val_offset:40440*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40440*0 + 3*424*FLEN/8, x4, x1, x2)

inst_13481:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000000000001; valaddr_reg:x3; val_offset:40443*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40443*0 + 3*425*FLEN/8, x4, x1, x2)

inst_13482:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000000000003; valaddr_reg:x3; val_offset:40446*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40446*0 + 3*426*FLEN/8, x4, x1, x2)

inst_13483:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000000000007; valaddr_reg:x3; val_offset:40449*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40449*0 + 3*427*FLEN/8, x4, x1, x2)

inst_13484:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000000000000f; valaddr_reg:x3; val_offset:40452*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40452*0 + 3*428*FLEN/8, x4, x1, x2)

inst_13485:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000000000001f; valaddr_reg:x3; val_offset:40455*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40455*0 + 3*429*FLEN/8, x4, x1, x2)

inst_13486:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000000000003f; valaddr_reg:x3; val_offset:40458*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40458*0 + 3*430*FLEN/8, x4, x1, x2)

inst_13487:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000000000007f; valaddr_reg:x3; val_offset:40461*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40461*0 + 3*431*FLEN/8, x4, x1, x2)

inst_13488:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00000000000ff; valaddr_reg:x3; val_offset:40464*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40464*0 + 3*432*FLEN/8, x4, x1, x2)

inst_13489:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00000000001ff; valaddr_reg:x3; val_offset:40467*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40467*0 + 3*433*FLEN/8, x4, x1, x2)

inst_13490:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00000000003ff; valaddr_reg:x3; val_offset:40470*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40470*0 + 3*434*FLEN/8, x4, x1, x2)

inst_13491:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00000000007ff; valaddr_reg:x3; val_offset:40473*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40473*0 + 3*435*FLEN/8, x4, x1, x2)

inst_13492:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000000000fff; valaddr_reg:x3; val_offset:40476*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40476*0 + 3*436*FLEN/8, x4, x1, x2)

inst_13493:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000000001fff; valaddr_reg:x3; val_offset:40479*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40479*0 + 3*437*FLEN/8, x4, x1, x2)

inst_13494:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000000003fff; valaddr_reg:x3; val_offset:40482*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40482*0 + 3*438*FLEN/8, x4, x1, x2)

inst_13495:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000000007fff; valaddr_reg:x3; val_offset:40485*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40485*0 + 3*439*FLEN/8, x4, x1, x2)

inst_13496:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000000000ffff; valaddr_reg:x3; val_offset:40488*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40488*0 + 3*440*FLEN/8, x4, x1, x2)

inst_13497:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000000001ffff; valaddr_reg:x3; val_offset:40491*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40491*0 + 3*441*FLEN/8, x4, x1, x2)

inst_13498:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000000003ffff; valaddr_reg:x3; val_offset:40494*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40494*0 + 3*442*FLEN/8, x4, x1, x2)

inst_13499:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000000007ffff; valaddr_reg:x3; val_offset:40497*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40497*0 + 3*443*FLEN/8, x4, x1, x2)

inst_13500:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00000000fffff; valaddr_reg:x3; val_offset:40500*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40500*0 + 3*444*FLEN/8, x4, x1, x2)

inst_13501:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00000001fffff; valaddr_reg:x3; val_offset:40503*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40503*0 + 3*445*FLEN/8, x4, x1, x2)

inst_13502:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00000003fffff; valaddr_reg:x3; val_offset:40506*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40506*0 + 3*446*FLEN/8, x4, x1, x2)

inst_13503:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00000007fffff; valaddr_reg:x3; val_offset:40509*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40509*0 + 3*447*FLEN/8, x4, x1, x2)

inst_13504:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000000ffffff; valaddr_reg:x3; val_offset:40512*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40512*0 + 3*448*FLEN/8, x4, x1, x2)

inst_13505:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000001ffffff; valaddr_reg:x3; val_offset:40515*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40515*0 + 3*449*FLEN/8, x4, x1, x2)

inst_13506:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000003ffffff; valaddr_reg:x3; val_offset:40518*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40518*0 + 3*450*FLEN/8, x4, x1, x2)

inst_13507:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000007ffffff; valaddr_reg:x3; val_offset:40521*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40521*0 + 3*451*FLEN/8, x4, x1, x2)

inst_13508:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000000fffffff; valaddr_reg:x3; val_offset:40524*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40524*0 + 3*452*FLEN/8, x4, x1, x2)

inst_13509:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000001fffffff; valaddr_reg:x3; val_offset:40527*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40527*0 + 3*453*FLEN/8, x4, x1, x2)

inst_13510:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000003fffffff; valaddr_reg:x3; val_offset:40530*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40530*0 + 3*454*FLEN/8, x4, x1, x2)

inst_13511:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000007fffffff; valaddr_reg:x3; val_offset:40533*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40533*0 + 3*455*FLEN/8, x4, x1, x2)

inst_13512:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00000ffffffff; valaddr_reg:x3; val_offset:40536*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40536*0 + 3*456*FLEN/8, x4, x1, x2)

inst_13513:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00001ffffffff; valaddr_reg:x3; val_offset:40539*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40539*0 + 3*457*FLEN/8, x4, x1, x2)

inst_13514:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00003ffffffff; valaddr_reg:x3; val_offset:40542*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40542*0 + 3*458*FLEN/8, x4, x1, x2)

inst_13515:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00007ffffffff; valaddr_reg:x3; val_offset:40545*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40545*0 + 3*459*FLEN/8, x4, x1, x2)

inst_13516:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0000fffffffff; valaddr_reg:x3; val_offset:40548*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40548*0 + 3*460*FLEN/8, x4, x1, x2)

inst_13517:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0001fffffffff; valaddr_reg:x3; val_offset:40551*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40551*0 + 3*461*FLEN/8, x4, x1, x2)

inst_13518:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0003fffffffff; valaddr_reg:x3; val_offset:40554*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40554*0 + 3*462*FLEN/8, x4, x1, x2)

inst_13519:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0007fffffffff; valaddr_reg:x3; val_offset:40557*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40557*0 + 3*463*FLEN/8, x4, x1, x2)

inst_13520:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b000ffffffffff; valaddr_reg:x3; val_offset:40560*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40560*0 + 3*464*FLEN/8, x4, x1, x2)

inst_13521:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b001ffffffffff; valaddr_reg:x3; val_offset:40563*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40563*0 + 3*465*FLEN/8, x4, x1, x2)

inst_13522:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b003ffffffffff; valaddr_reg:x3; val_offset:40566*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40566*0 + 3*466*FLEN/8, x4, x1, x2)

inst_13523:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b007ffffffffff; valaddr_reg:x3; val_offset:40569*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40569*0 + 3*467*FLEN/8, x4, x1, x2)

inst_13524:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b00fffffffffff; valaddr_reg:x3; val_offset:40572*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40572*0 + 3*468*FLEN/8, x4, x1, x2)

inst_13525:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b01fffffffffff; valaddr_reg:x3; val_offset:40575*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40575*0 + 3*469*FLEN/8, x4, x1, x2)

inst_13526:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b03fffffffffff; valaddr_reg:x3; val_offset:40578*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40578*0 + 3*470*FLEN/8, x4, x1, x2)

inst_13527:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b07fffffffffff; valaddr_reg:x3; val_offset:40581*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40581*0 + 3*471*FLEN/8, x4, x1, x2)

inst_13528:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b0ffffffffffff; valaddr_reg:x3; val_offset:40584*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40584*0 + 3*472*FLEN/8, x4, x1, x2)

inst_13529:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b1ffffffffffff; valaddr_reg:x3; val_offset:40587*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40587*0 + 3*473*FLEN/8, x4, x1, x2)

inst_13530:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b3ffffffffffff; valaddr_reg:x3; val_offset:40590*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40590*0 + 3*474*FLEN/8, x4, x1, x2)

inst_13531:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b7ffffffffffff; valaddr_reg:x3; val_offset:40593*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40593*0 + 3*475*FLEN/8, x4, x1, x2)

inst_13532:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82b8000000000000; valaddr_reg:x3; val_offset:40596*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40596*0 + 3*476*FLEN/8, x4, x1, x2)

inst_13533:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bc000000000000; valaddr_reg:x3; val_offset:40599*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40599*0 + 3*477*FLEN/8, x4, x1, x2)

inst_13534:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82be000000000000; valaddr_reg:x3; val_offset:40602*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40602*0 + 3*478*FLEN/8, x4, x1, x2)

inst_13535:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bf000000000000; valaddr_reg:x3; val_offset:40605*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40605*0 + 3*479*FLEN/8, x4, x1, x2)

inst_13536:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bf800000000000; valaddr_reg:x3; val_offset:40608*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40608*0 + 3*480*FLEN/8, x4, x1, x2)

inst_13537:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfc00000000000; valaddr_reg:x3; val_offset:40611*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40611*0 + 3*481*FLEN/8, x4, x1, x2)

inst_13538:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfe00000000000; valaddr_reg:x3; val_offset:40614*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40614*0 + 3*482*FLEN/8, x4, x1, x2)

inst_13539:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bff00000000000; valaddr_reg:x3; val_offset:40617*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40617*0 + 3*483*FLEN/8, x4, x1, x2)

inst_13540:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bff80000000000; valaddr_reg:x3; val_offset:40620*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40620*0 + 3*484*FLEN/8, x4, x1, x2)

inst_13541:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffc0000000000; valaddr_reg:x3; val_offset:40623*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40623*0 + 3*485*FLEN/8, x4, x1, x2)

inst_13542:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffe0000000000; valaddr_reg:x3; val_offset:40626*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40626*0 + 3*486*FLEN/8, x4, x1, x2)

inst_13543:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfff0000000000; valaddr_reg:x3; val_offset:40629*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40629*0 + 3*487*FLEN/8, x4, x1, x2)

inst_13544:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfff8000000000; valaddr_reg:x3; val_offset:40632*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40632*0 + 3*488*FLEN/8, x4, x1, x2)

inst_13545:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffc000000000; valaddr_reg:x3; val_offset:40635*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40635*0 + 3*489*FLEN/8, x4, x1, x2)

inst_13546:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffe000000000; valaddr_reg:x3; val_offset:40638*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40638*0 + 3*490*FLEN/8, x4, x1, x2)

inst_13547:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffff000000000; valaddr_reg:x3; val_offset:40641*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40641*0 + 3*491*FLEN/8, x4, x1, x2)

inst_13548:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffff800000000; valaddr_reg:x3; val_offset:40644*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40644*0 + 3*492*FLEN/8, x4, x1, x2)

inst_13549:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffc00000000; valaddr_reg:x3; val_offset:40647*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40647*0 + 3*493*FLEN/8, x4, x1, x2)

inst_13550:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffe00000000; valaddr_reg:x3; val_offset:40650*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40650*0 + 3*494*FLEN/8, x4, x1, x2)

inst_13551:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffff00000000; valaddr_reg:x3; val_offset:40653*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40653*0 + 3*495*FLEN/8, x4, x1, x2)

inst_13552:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffff80000000; valaddr_reg:x3; val_offset:40656*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40656*0 + 3*496*FLEN/8, x4, x1, x2)

inst_13553:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffc0000000; valaddr_reg:x3; val_offset:40659*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40659*0 + 3*497*FLEN/8, x4, x1, x2)

inst_13554:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffe0000000; valaddr_reg:x3; val_offset:40662*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40662*0 + 3*498*FLEN/8, x4, x1, x2)

inst_13555:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffff0000000; valaddr_reg:x3; val_offset:40665*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40665*0 + 3*499*FLEN/8, x4, x1, x2)

inst_13556:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffff8000000; valaddr_reg:x3; val_offset:40668*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40668*0 + 3*500*FLEN/8, x4, x1, x2)

inst_13557:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffc000000; valaddr_reg:x3; val_offset:40671*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40671*0 + 3*501*FLEN/8, x4, x1, x2)

inst_13558:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffe000000; valaddr_reg:x3; val_offset:40674*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40674*0 + 3*502*FLEN/8, x4, x1, x2)

inst_13559:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffff000000; valaddr_reg:x3; val_offset:40677*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40677*0 + 3*503*FLEN/8, x4, x1, x2)

inst_13560:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffff800000; valaddr_reg:x3; val_offset:40680*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40680*0 + 3*504*FLEN/8, x4, x1, x2)

inst_13561:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffffc00000; valaddr_reg:x3; val_offset:40683*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40683*0 + 3*505*FLEN/8, x4, x1, x2)

inst_13562:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffffe00000; valaddr_reg:x3; val_offset:40686*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40686*0 + 3*506*FLEN/8, x4, x1, x2)

inst_13563:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffff00000; valaddr_reg:x3; val_offset:40689*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40689*0 + 3*507*FLEN/8, x4, x1, x2)

inst_13564:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffff80000; valaddr_reg:x3; val_offset:40692*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40692*0 + 3*508*FLEN/8, x4, x1, x2)

inst_13565:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffffc0000; valaddr_reg:x3; val_offset:40695*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40695*0 + 3*509*FLEN/8, x4, x1, x2)

inst_13566:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffffe0000; valaddr_reg:x3; val_offset:40698*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40698*0 + 3*510*FLEN/8, x4, x1, x2)

inst_13567:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffffff0000; valaddr_reg:x3; val_offset:40701*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40701*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_13568:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffffff8000; valaddr_reg:x3; val_offset:40704*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40704*0 + 3*512*FLEN/8, x4, x1, x2)

inst_13569:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffffffc000; valaddr_reg:x3; val_offset:40707*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40707*0 + 3*513*FLEN/8, x4, x1, x2)

inst_13570:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffffffe000; valaddr_reg:x3; val_offset:40710*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40710*0 + 3*514*FLEN/8, x4, x1, x2)

inst_13571:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffffff000; valaddr_reg:x3; val_offset:40713*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40713*0 + 3*515*FLEN/8, x4, x1, x2)

inst_13572:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffffff800; valaddr_reg:x3; val_offset:40716*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40716*0 + 3*516*FLEN/8, x4, x1, x2)

inst_13573:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffffffc00; valaddr_reg:x3; val_offset:40719*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40719*0 + 3*517*FLEN/8, x4, x1, x2)

inst_13574:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffffffe00; valaddr_reg:x3; val_offset:40722*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40722*0 + 3*518*FLEN/8, x4, x1, x2)

inst_13575:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffffffff00; valaddr_reg:x3; val_offset:40725*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40725*0 + 3*519*FLEN/8, x4, x1, x2)

inst_13576:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffffffff80; valaddr_reg:x3; val_offset:40728*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40728*0 + 3*520*FLEN/8, x4, x1, x2)

inst_13577:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffffffffc0; valaddr_reg:x3; val_offset:40731*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40731*0 + 3*521*FLEN/8, x4, x1, x2)

inst_13578:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffffffffe0; valaddr_reg:x3; val_offset:40734*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40734*0 + 3*522*FLEN/8, x4, x1, x2)

inst_13579:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffffffff0; valaddr_reg:x3; val_offset:40737*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40737*0 + 3*523*FLEN/8, x4, x1, x2)

inst_13580:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffffffff8; valaddr_reg:x3; val_offset:40740*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40740*0 + 3*524*FLEN/8, x4, x1, x2)

inst_13581:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffffffffc; valaddr_reg:x3; val_offset:40743*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40743*0 + 3*525*FLEN/8, x4, x1, x2)

inst_13582:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bffffffffffffe; valaddr_reg:x3; val_offset:40746*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40746*0 + 3*526*FLEN/8, x4, x1, x2)

inst_13583:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcc5a8af41138f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cc5a8af41138f; op2val:0x8000;
op3val:0x82bfffffffffffff; valaddr_reg:x3; val_offset:40749*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40749*0 + 3*527*FLEN/8, x4, x1, x2)

inst_13584:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:40752*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40752*0 + 3*528*FLEN/8, x4, x1, x2)

inst_13585:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:40755*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40755*0 + 3*529*FLEN/8, x4, x1, x2)

inst_13586:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:40758*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40758*0 + 3*530*FLEN/8, x4, x1, x2)

inst_13587:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:40761*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40761*0 + 3*531*FLEN/8, x4, x1, x2)

inst_13588:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:40764*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40764*0 + 3*532*FLEN/8, x4, x1, x2)

inst_13589:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:40767*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40767*0 + 3*533*FLEN/8, x4, x1, x2)

inst_13590:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:40770*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40770*0 + 3*534*FLEN/8, x4, x1, x2)

inst_13591:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:40773*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40773*0 + 3*535*FLEN/8, x4, x1, x2)

inst_13592:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:40776*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40776*0 + 3*536*FLEN/8, x4, x1, x2)

inst_13593:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:40779*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40779*0 + 3*537*FLEN/8, x4, x1, x2)

inst_13594:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:40782*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40782*0 + 3*538*FLEN/8, x4, x1, x2)

inst_13595:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:40785*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40785*0 + 3*539*FLEN/8, x4, x1, x2)

inst_13596:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:40788*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40788*0 + 3*540*FLEN/8, x4, x1, x2)

inst_13597:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:40791*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40791*0 + 3*541*FLEN/8, x4, x1, x2)

inst_13598:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:40794*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40794*0 + 3*542*FLEN/8, x4, x1, x2)

inst_13599:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:40797*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40797*0 + 3*543*FLEN/8, x4, x1, x2)

inst_13600:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:40800*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40800*0 + 3*544*FLEN/8, x4, x1, x2)

inst_13601:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:40803*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40803*0 + 3*545*FLEN/8, x4, x1, x2)

inst_13602:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:40806*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40806*0 + 3*546*FLEN/8, x4, x1, x2)

inst_13603:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:40809*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40809*0 + 3*547*FLEN/8, x4, x1, x2)

inst_13604:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:40812*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40812*0 + 3*548*FLEN/8, x4, x1, x2)

inst_13605:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:40815*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40815*0 + 3*549*FLEN/8, x4, x1, x2)

inst_13606:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000000000000; valaddr_reg:x3; val_offset:40818*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40818*0 + 3*550*FLEN/8, x4, x1, x2)

inst_13607:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000000000001; valaddr_reg:x3; val_offset:40821*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40821*0 + 3*551*FLEN/8, x4, x1, x2)

inst_13608:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000000000003; valaddr_reg:x3; val_offset:40824*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40824*0 + 3*552*FLEN/8, x4, x1, x2)

inst_13609:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000000000007; valaddr_reg:x3; val_offset:40827*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40827*0 + 3*553*FLEN/8, x4, x1, x2)

inst_13610:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000000000000f; valaddr_reg:x3; val_offset:40830*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40830*0 + 3*554*FLEN/8, x4, x1, x2)

inst_13611:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000000000001f; valaddr_reg:x3; val_offset:40833*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40833*0 + 3*555*FLEN/8, x4, x1, x2)

inst_13612:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000000000003f; valaddr_reg:x3; val_offset:40836*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40836*0 + 3*556*FLEN/8, x4, x1, x2)

inst_13613:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000000000007f; valaddr_reg:x3; val_offset:40839*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40839*0 + 3*557*FLEN/8, x4, x1, x2)

inst_13614:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600000000000ff; valaddr_reg:x3; val_offset:40842*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40842*0 + 3*558*FLEN/8, x4, x1, x2)

inst_13615:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600000000001ff; valaddr_reg:x3; val_offset:40845*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40845*0 + 3*559*FLEN/8, x4, x1, x2)

inst_13616:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600000000003ff; valaddr_reg:x3; val_offset:40848*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40848*0 + 3*560*FLEN/8, x4, x1, x2)

inst_13617:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600000000007ff; valaddr_reg:x3; val_offset:40851*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40851*0 + 3*561*FLEN/8, x4, x1, x2)

inst_13618:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000000000fff; valaddr_reg:x3; val_offset:40854*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40854*0 + 3*562*FLEN/8, x4, x1, x2)

inst_13619:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000000001fff; valaddr_reg:x3; val_offset:40857*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40857*0 + 3*563*FLEN/8, x4, x1, x2)

inst_13620:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000000003fff; valaddr_reg:x3; val_offset:40860*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40860*0 + 3*564*FLEN/8, x4, x1, x2)

inst_13621:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000000007fff; valaddr_reg:x3; val_offset:40863*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40863*0 + 3*565*FLEN/8, x4, x1, x2)

inst_13622:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000000000ffff; valaddr_reg:x3; val_offset:40866*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40866*0 + 3*566*FLEN/8, x4, x1, x2)

inst_13623:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000000001ffff; valaddr_reg:x3; val_offset:40869*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40869*0 + 3*567*FLEN/8, x4, x1, x2)

inst_13624:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000000003ffff; valaddr_reg:x3; val_offset:40872*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40872*0 + 3*568*FLEN/8, x4, x1, x2)

inst_13625:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000000007ffff; valaddr_reg:x3; val_offset:40875*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40875*0 + 3*569*FLEN/8, x4, x1, x2)

inst_13626:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600000000fffff; valaddr_reg:x3; val_offset:40878*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40878*0 + 3*570*FLEN/8, x4, x1, x2)

inst_13627:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600000001fffff; valaddr_reg:x3; val_offset:40881*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40881*0 + 3*571*FLEN/8, x4, x1, x2)

inst_13628:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600000003fffff; valaddr_reg:x3; val_offset:40884*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40884*0 + 3*572*FLEN/8, x4, x1, x2)

inst_13629:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600000007fffff; valaddr_reg:x3; val_offset:40887*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40887*0 + 3*573*FLEN/8, x4, x1, x2)

inst_13630:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000000ffffff; valaddr_reg:x3; val_offset:40890*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40890*0 + 3*574*FLEN/8, x4, x1, x2)

inst_13631:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000001ffffff; valaddr_reg:x3; val_offset:40893*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40893*0 + 3*575*FLEN/8, x4, x1, x2)

inst_13632:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000003ffffff; valaddr_reg:x3; val_offset:40896*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40896*0 + 3*576*FLEN/8, x4, x1, x2)

inst_13633:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000007ffffff; valaddr_reg:x3; val_offset:40899*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40899*0 + 3*577*FLEN/8, x4, x1, x2)

inst_13634:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000000fffffff; valaddr_reg:x3; val_offset:40902*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40902*0 + 3*578*FLEN/8, x4, x1, x2)

inst_13635:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000001fffffff; valaddr_reg:x3; val_offset:40905*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40905*0 + 3*579*FLEN/8, x4, x1, x2)

inst_13636:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000003fffffff; valaddr_reg:x3; val_offset:40908*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40908*0 + 3*580*FLEN/8, x4, x1, x2)

inst_13637:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000007fffffff; valaddr_reg:x3; val_offset:40911*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40911*0 + 3*581*FLEN/8, x4, x1, x2)

inst_13638:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600000ffffffff; valaddr_reg:x3; val_offset:40914*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40914*0 + 3*582*FLEN/8, x4, x1, x2)

inst_13639:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600001ffffffff; valaddr_reg:x3; val_offset:40917*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40917*0 + 3*583*FLEN/8, x4, x1, x2)

inst_13640:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600003ffffffff; valaddr_reg:x3; val_offset:40920*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40920*0 + 3*584*FLEN/8, x4, x1, x2)

inst_13641:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600007ffffffff; valaddr_reg:x3; val_offset:40923*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40923*0 + 3*585*FLEN/8, x4, x1, x2)

inst_13642:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060000fffffffff; valaddr_reg:x3; val_offset:40926*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40926*0 + 3*586*FLEN/8, x4, x1, x2)

inst_13643:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060001fffffffff; valaddr_reg:x3; val_offset:40929*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40929*0 + 3*587*FLEN/8, x4, x1, x2)

inst_13644:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060003fffffffff; valaddr_reg:x3; val_offset:40932*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40932*0 + 3*588*FLEN/8, x4, x1, x2)

inst_13645:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060007fffffffff; valaddr_reg:x3; val_offset:40935*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40935*0 + 3*589*FLEN/8, x4, x1, x2)

inst_13646:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806000ffffffffff; valaddr_reg:x3; val_offset:40938*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40938*0 + 3*590*FLEN/8, x4, x1, x2)

inst_13647:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806001ffffffffff; valaddr_reg:x3; val_offset:40941*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40941*0 + 3*591*FLEN/8, x4, x1, x2)

inst_13648:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806003ffffffffff; valaddr_reg:x3; val_offset:40944*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40944*0 + 3*592*FLEN/8, x4, x1, x2)

inst_13649:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806007ffffffffff; valaddr_reg:x3; val_offset:40947*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40947*0 + 3*593*FLEN/8, x4, x1, x2)

inst_13650:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80600fffffffffff; valaddr_reg:x3; val_offset:40950*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40950*0 + 3*594*FLEN/8, x4, x1, x2)

inst_13651:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80601fffffffffff; valaddr_reg:x3; val_offset:40953*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40953*0 + 3*595*FLEN/8, x4, x1, x2)

inst_13652:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80603fffffffffff; valaddr_reg:x3; val_offset:40956*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40956*0 + 3*596*FLEN/8, x4, x1, x2)

inst_13653:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x80607fffffffffff; valaddr_reg:x3; val_offset:40959*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40959*0 + 3*597*FLEN/8, x4, x1, x2)

inst_13654:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8060ffffffffffff; valaddr_reg:x3; val_offset:40962*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40962*0 + 3*598*FLEN/8, x4, x1, x2)

inst_13655:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8061ffffffffffff; valaddr_reg:x3; val_offset:40965*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40965*0 + 3*599*FLEN/8, x4, x1, x2)

inst_13656:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8063ffffffffffff; valaddr_reg:x3; val_offset:40968*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40968*0 + 3*600*FLEN/8, x4, x1, x2)

inst_13657:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8067ffffffffffff; valaddr_reg:x3; val_offset:40971*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40971*0 + 3*601*FLEN/8, x4, x1, x2)

inst_13658:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x8068000000000000; valaddr_reg:x3; val_offset:40974*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40974*0 + 3*602*FLEN/8, x4, x1, x2)

inst_13659:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806c000000000000; valaddr_reg:x3; val_offset:40977*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40977*0 + 3*603*FLEN/8, x4, x1, x2)

inst_13660:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806e000000000000; valaddr_reg:x3; val_offset:40980*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40980*0 + 3*604*FLEN/8, x4, x1, x2)

inst_13661:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806f000000000000; valaddr_reg:x3; val_offset:40983*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40983*0 + 3*605*FLEN/8, x4, x1, x2)

inst_13662:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806f800000000000; valaddr_reg:x3; val_offset:40986*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40986*0 + 3*606*FLEN/8, x4, x1, x2)

inst_13663:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fc00000000000; valaddr_reg:x3; val_offset:40989*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40989*0 + 3*607*FLEN/8, x4, x1, x2)

inst_13664:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fe00000000000; valaddr_reg:x3; val_offset:40992*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40992*0 + 3*608*FLEN/8, x4, x1, x2)

inst_13665:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ff00000000000; valaddr_reg:x3; val_offset:40995*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40995*0 + 3*609*FLEN/8, x4, x1, x2)

inst_13666:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ff80000000000; valaddr_reg:x3; val_offset:40998*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40998*0 + 3*610*FLEN/8, x4, x1, x2)

inst_13667:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffc0000000000; valaddr_reg:x3; val_offset:41001*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41001*0 + 3*611*FLEN/8, x4, x1, x2)

inst_13668:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffe0000000000; valaddr_reg:x3; val_offset:41004*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41004*0 + 3*612*FLEN/8, x4, x1, x2)

inst_13669:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fff0000000000; valaddr_reg:x3; val_offset:41007*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41007*0 + 3*613*FLEN/8, x4, x1, x2)

inst_13670:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fff8000000000; valaddr_reg:x3; val_offset:41010*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41010*0 + 3*614*FLEN/8, x4, x1, x2)

inst_13671:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffc000000000; valaddr_reg:x3; val_offset:41013*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41013*0 + 3*615*FLEN/8, x4, x1, x2)

inst_13672:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffe000000000; valaddr_reg:x3; val_offset:41016*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41016*0 + 3*616*FLEN/8, x4, x1, x2)

inst_13673:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffff000000000; valaddr_reg:x3; val_offset:41019*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41019*0 + 3*617*FLEN/8, x4, x1, x2)

inst_13674:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffff800000000; valaddr_reg:x3; val_offset:41022*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41022*0 + 3*618*FLEN/8, x4, x1, x2)

inst_13675:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffc00000000; valaddr_reg:x3; val_offset:41025*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41025*0 + 3*619*FLEN/8, x4, x1, x2)

inst_13676:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffe00000000; valaddr_reg:x3; val_offset:41028*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41028*0 + 3*620*FLEN/8, x4, x1, x2)

inst_13677:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffff00000000; valaddr_reg:x3; val_offset:41031*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41031*0 + 3*621*FLEN/8, x4, x1, x2)

inst_13678:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffff80000000; valaddr_reg:x3; val_offset:41034*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41034*0 + 3*622*FLEN/8, x4, x1, x2)

inst_13679:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffc0000000; valaddr_reg:x3; val_offset:41037*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41037*0 + 3*623*FLEN/8, x4, x1, x2)

inst_13680:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffe0000000; valaddr_reg:x3; val_offset:41040*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41040*0 + 3*624*FLEN/8, x4, x1, x2)

inst_13681:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffff0000000; valaddr_reg:x3; val_offset:41043*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41043*0 + 3*625*FLEN/8, x4, x1, x2)

inst_13682:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffff8000000; valaddr_reg:x3; val_offset:41046*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41046*0 + 3*626*FLEN/8, x4, x1, x2)

inst_13683:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffc000000; valaddr_reg:x3; val_offset:41049*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41049*0 + 3*627*FLEN/8, x4, x1, x2)

inst_13684:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffe000000; valaddr_reg:x3; val_offset:41052*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41052*0 + 3*628*FLEN/8, x4, x1, x2)

inst_13685:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffff000000; valaddr_reg:x3; val_offset:41055*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41055*0 + 3*629*FLEN/8, x4, x1, x2)

inst_13686:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffff800000; valaddr_reg:x3; val_offset:41058*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41058*0 + 3*630*FLEN/8, x4, x1, x2)

inst_13687:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffffc00000; valaddr_reg:x3; val_offset:41061*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41061*0 + 3*631*FLEN/8, x4, x1, x2)

inst_13688:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffffe00000; valaddr_reg:x3; val_offset:41064*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41064*0 + 3*632*FLEN/8, x4, x1, x2)

inst_13689:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffff00000; valaddr_reg:x3; val_offset:41067*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41067*0 + 3*633*FLEN/8, x4, x1, x2)

inst_13690:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffff80000; valaddr_reg:x3; val_offset:41070*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41070*0 + 3*634*FLEN/8, x4, x1, x2)

inst_13691:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffffc0000; valaddr_reg:x3; val_offset:41073*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41073*0 + 3*635*FLEN/8, x4, x1, x2)

inst_13692:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffffe0000; valaddr_reg:x3; val_offset:41076*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41076*0 + 3*636*FLEN/8, x4, x1, x2)

inst_13693:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffffff0000; valaddr_reg:x3; val_offset:41079*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41079*0 + 3*637*FLEN/8, x4, x1, x2)

inst_13694:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffffff8000; valaddr_reg:x3; val_offset:41082*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41082*0 + 3*638*FLEN/8, x4, x1, x2)

inst_13695:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffffffc000; valaddr_reg:x3; val_offset:41085*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41085*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_13696:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffffffe000; valaddr_reg:x3; val_offset:41088*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41088*0 + 3*640*FLEN/8, x4, x1, x2)

inst_13697:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffffff000; valaddr_reg:x3; val_offset:41091*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41091*0 + 3*641*FLEN/8, x4, x1, x2)

inst_13698:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffffff800; valaddr_reg:x3; val_offset:41094*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41094*0 + 3*642*FLEN/8, x4, x1, x2)

inst_13699:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffffffc00; valaddr_reg:x3; val_offset:41097*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41097*0 + 3*643*FLEN/8, x4, x1, x2)

inst_13700:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffffffe00; valaddr_reg:x3; val_offset:41100*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41100*0 + 3*644*FLEN/8, x4, x1, x2)

inst_13701:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffffffff00; valaddr_reg:x3; val_offset:41103*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41103*0 + 3*645*FLEN/8, x4, x1, x2)

inst_13702:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffffffff80; valaddr_reg:x3; val_offset:41106*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41106*0 + 3*646*FLEN/8, x4, x1, x2)

inst_13703:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffffffffc0; valaddr_reg:x3; val_offset:41109*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41109*0 + 3*647*FLEN/8, x4, x1, x2)

inst_13704:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffffffffe0; valaddr_reg:x3; val_offset:41112*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41112*0 + 3*648*FLEN/8, x4, x1, x2)

inst_13705:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffffffff0; valaddr_reg:x3; val_offset:41115*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41115*0 + 3*649*FLEN/8, x4, x1, x2)

inst_13706:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffffffff8; valaddr_reg:x3; val_offset:41118*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41118*0 + 3*650*FLEN/8, x4, x1, x2)

inst_13707:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffffffffc; valaddr_reg:x3; val_offset:41121*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41121*0 + 3*651*FLEN/8, x4, x1, x2)

inst_13708:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806ffffffffffffe; valaddr_reg:x3; val_offset:41124*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41124*0 + 3*652*FLEN/8, x4, x1, x2)

inst_13709:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd0ab984a97eef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x006 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d0ab984a97eef; op2val:0x8000;
op3val:0x806fffffffffffff; valaddr_reg:x3; val_offset:41127*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41127*0 + 3*653*FLEN/8, x4, x1, x2)

inst_13710:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:41130*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41130*0 + 3*654*FLEN/8, x4, x1, x2)

inst_13711:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:41133*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41133*0 + 3*655*FLEN/8, x4, x1, x2)

inst_13712:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:41136*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41136*0 + 3*656*FLEN/8, x4, x1, x2)

inst_13713:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:41139*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41139*0 + 3*657*FLEN/8, x4, x1, x2)

inst_13714:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:41142*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41142*0 + 3*658*FLEN/8, x4, x1, x2)

inst_13715:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:41145*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41145*0 + 3*659*FLEN/8, x4, x1, x2)

inst_13716:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:41148*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41148*0 + 3*660*FLEN/8, x4, x1, x2)

inst_13717:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:41151*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41151*0 + 3*661*FLEN/8, x4, x1, x2)

inst_13718:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:41154*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41154*0 + 3*662*FLEN/8, x4, x1, x2)

inst_13719:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:41157*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41157*0 + 3*663*FLEN/8, x4, x1, x2)

inst_13720:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:41160*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41160*0 + 3*664*FLEN/8, x4, x1, x2)

inst_13721:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:41163*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41163*0 + 3*665*FLEN/8, x4, x1, x2)

inst_13722:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:41166*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41166*0 + 3*666*FLEN/8, x4, x1, x2)

inst_13723:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:41169*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41169*0 + 3*667*FLEN/8, x4, x1, x2)

inst_13724:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:41172*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41172*0 + 3*668*FLEN/8, x4, x1, x2)

inst_13725:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:41175*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41175*0 + 3*669*FLEN/8, x4, x1, x2)

inst_13726:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:41178*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41178*0 + 3*670*FLEN/8, x4, x1, x2)

inst_13727:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:41181*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41181*0 + 3*671*FLEN/8, x4, x1, x2)

inst_13728:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:41184*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41184*0 + 3*672*FLEN/8, x4, x1, x2)

inst_13729:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:41187*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41187*0 + 3*673*FLEN/8, x4, x1, x2)

inst_13730:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:41190*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41190*0 + 3*674*FLEN/8, x4, x1, x2)

inst_13731:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:41193*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41193*0 + 3*675*FLEN/8, x4, x1, x2)

inst_13732:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000000000000; valaddr_reg:x3; val_offset:41196*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41196*0 + 3*676*FLEN/8, x4, x1, x2)

inst_13733:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000000000001; valaddr_reg:x3; val_offset:41199*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41199*0 + 3*677*FLEN/8, x4, x1, x2)

inst_13734:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000000000003; valaddr_reg:x3; val_offset:41202*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41202*0 + 3*678*FLEN/8, x4, x1, x2)

inst_13735:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000000000007; valaddr_reg:x3; val_offset:41205*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41205*0 + 3*679*FLEN/8, x4, x1, x2)

inst_13736:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000000000000f; valaddr_reg:x3; val_offset:41208*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41208*0 + 3*680*FLEN/8, x4, x1, x2)

inst_13737:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000000000001f; valaddr_reg:x3; val_offset:41211*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41211*0 + 3*681*FLEN/8, x4, x1, x2)

inst_13738:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000000000003f; valaddr_reg:x3; val_offset:41214*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41214*0 + 3*682*FLEN/8, x4, x1, x2)

inst_13739:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000000000007f; valaddr_reg:x3; val_offset:41217*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41217*0 + 3*683*FLEN/8, x4, x1, x2)

inst_13740:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00000000000ff; valaddr_reg:x3; val_offset:41220*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41220*0 + 3*684*FLEN/8, x4, x1, x2)

inst_13741:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00000000001ff; valaddr_reg:x3; val_offset:41223*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41223*0 + 3*685*FLEN/8, x4, x1, x2)

inst_13742:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00000000003ff; valaddr_reg:x3; val_offset:41226*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41226*0 + 3*686*FLEN/8, x4, x1, x2)

inst_13743:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00000000007ff; valaddr_reg:x3; val_offset:41229*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41229*0 + 3*687*FLEN/8, x4, x1, x2)

inst_13744:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000000000fff; valaddr_reg:x3; val_offset:41232*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41232*0 + 3*688*FLEN/8, x4, x1, x2)

inst_13745:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000000001fff; valaddr_reg:x3; val_offset:41235*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41235*0 + 3*689*FLEN/8, x4, x1, x2)

inst_13746:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000000003fff; valaddr_reg:x3; val_offset:41238*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41238*0 + 3*690*FLEN/8, x4, x1, x2)

inst_13747:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000000007fff; valaddr_reg:x3; val_offset:41241*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41241*0 + 3*691*FLEN/8, x4, x1, x2)

inst_13748:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000000000ffff; valaddr_reg:x3; val_offset:41244*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41244*0 + 3*692*FLEN/8, x4, x1, x2)

inst_13749:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000000001ffff; valaddr_reg:x3; val_offset:41247*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41247*0 + 3*693*FLEN/8, x4, x1, x2)

inst_13750:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000000003ffff; valaddr_reg:x3; val_offset:41250*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41250*0 + 3*694*FLEN/8, x4, x1, x2)

inst_13751:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000000007ffff; valaddr_reg:x3; val_offset:41253*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41253*0 + 3*695*FLEN/8, x4, x1, x2)

inst_13752:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00000000fffff; valaddr_reg:x3; val_offset:41256*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41256*0 + 3*696*FLEN/8, x4, x1, x2)

inst_13753:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00000001fffff; valaddr_reg:x3; val_offset:41259*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41259*0 + 3*697*FLEN/8, x4, x1, x2)

inst_13754:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00000003fffff; valaddr_reg:x3; val_offset:41262*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41262*0 + 3*698*FLEN/8, x4, x1, x2)

inst_13755:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00000007fffff; valaddr_reg:x3; val_offset:41265*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41265*0 + 3*699*FLEN/8, x4, x1, x2)

inst_13756:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000000ffffff; valaddr_reg:x3; val_offset:41268*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41268*0 + 3*700*FLEN/8, x4, x1, x2)

inst_13757:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000001ffffff; valaddr_reg:x3; val_offset:41271*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41271*0 + 3*701*FLEN/8, x4, x1, x2)

inst_13758:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000003ffffff; valaddr_reg:x3; val_offset:41274*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41274*0 + 3*702*FLEN/8, x4, x1, x2)

inst_13759:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000007ffffff; valaddr_reg:x3; val_offset:41277*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41277*0 + 3*703*FLEN/8, x4, x1, x2)

inst_13760:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000000fffffff; valaddr_reg:x3; val_offset:41280*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41280*0 + 3*704*FLEN/8, x4, x1, x2)

inst_13761:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000001fffffff; valaddr_reg:x3; val_offset:41283*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41283*0 + 3*705*FLEN/8, x4, x1, x2)

inst_13762:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000003fffffff; valaddr_reg:x3; val_offset:41286*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41286*0 + 3*706*FLEN/8, x4, x1, x2)

inst_13763:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000007fffffff; valaddr_reg:x3; val_offset:41289*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41289*0 + 3*707*FLEN/8, x4, x1, x2)

inst_13764:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00000ffffffff; valaddr_reg:x3; val_offset:41292*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41292*0 + 3*708*FLEN/8, x4, x1, x2)

inst_13765:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00001ffffffff; valaddr_reg:x3; val_offset:41295*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41295*0 + 3*709*FLEN/8, x4, x1, x2)

inst_13766:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00003ffffffff; valaddr_reg:x3; val_offset:41298*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41298*0 + 3*710*FLEN/8, x4, x1, x2)

inst_13767:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00007ffffffff; valaddr_reg:x3; val_offset:41301*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41301*0 + 3*711*FLEN/8, x4, x1, x2)

inst_13768:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0000fffffffff; valaddr_reg:x3; val_offset:41304*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41304*0 + 3*712*FLEN/8, x4, x1, x2)

inst_13769:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0001fffffffff; valaddr_reg:x3; val_offset:41307*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41307*0 + 3*713*FLEN/8, x4, x1, x2)

inst_13770:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0003fffffffff; valaddr_reg:x3; val_offset:41310*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41310*0 + 3*714*FLEN/8, x4, x1, x2)

inst_13771:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0007fffffffff; valaddr_reg:x3; val_offset:41313*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41313*0 + 3*715*FLEN/8, x4, x1, x2)

inst_13772:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d000ffffffffff; valaddr_reg:x3; val_offset:41316*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41316*0 + 3*716*FLEN/8, x4, x1, x2)

inst_13773:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d001ffffffffff; valaddr_reg:x3; val_offset:41319*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41319*0 + 3*717*FLEN/8, x4, x1, x2)

inst_13774:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d003ffffffffff; valaddr_reg:x3; val_offset:41322*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41322*0 + 3*718*FLEN/8, x4, x1, x2)

inst_13775:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d007ffffffffff; valaddr_reg:x3; val_offset:41325*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41325*0 + 3*719*FLEN/8, x4, x1, x2)

inst_13776:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d00fffffffffff; valaddr_reg:x3; val_offset:41328*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41328*0 + 3*720*FLEN/8, x4, x1, x2)

inst_13777:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d01fffffffffff; valaddr_reg:x3; val_offset:41331*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41331*0 + 3*721*FLEN/8, x4, x1, x2)

inst_13778:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d03fffffffffff; valaddr_reg:x3; val_offset:41334*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41334*0 + 3*722*FLEN/8, x4, x1, x2)

inst_13779:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d07fffffffffff; valaddr_reg:x3; val_offset:41337*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41337*0 + 3*723*FLEN/8, x4, x1, x2)

inst_13780:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d0ffffffffffff; valaddr_reg:x3; val_offset:41340*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41340*0 + 3*724*FLEN/8, x4, x1, x2)

inst_13781:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d1ffffffffffff; valaddr_reg:x3; val_offset:41343*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41343*0 + 3*725*FLEN/8, x4, x1, x2)

inst_13782:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d3ffffffffffff; valaddr_reg:x3; val_offset:41346*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41346*0 + 3*726*FLEN/8, x4, x1, x2)

inst_13783:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d7ffffffffffff; valaddr_reg:x3; val_offset:41349*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41349*0 + 3*727*FLEN/8, x4, x1, x2)

inst_13784:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2d8000000000000; valaddr_reg:x3; val_offset:41352*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41352*0 + 3*728*FLEN/8, x4, x1, x2)

inst_13785:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dc000000000000; valaddr_reg:x3; val_offset:41355*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41355*0 + 3*729*FLEN/8, x4, x1, x2)

inst_13786:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2de000000000000; valaddr_reg:x3; val_offset:41358*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41358*0 + 3*730*FLEN/8, x4, x1, x2)

inst_13787:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2df000000000000; valaddr_reg:x3; val_offset:41361*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41361*0 + 3*731*FLEN/8, x4, x1, x2)

inst_13788:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2df800000000000; valaddr_reg:x3; val_offset:41364*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41364*0 + 3*732*FLEN/8, x4, x1, x2)

inst_13789:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfc00000000000; valaddr_reg:x3; val_offset:41367*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41367*0 + 3*733*FLEN/8, x4, x1, x2)

inst_13790:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfe00000000000; valaddr_reg:x3; val_offset:41370*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41370*0 + 3*734*FLEN/8, x4, x1, x2)

inst_13791:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dff00000000000; valaddr_reg:x3; val_offset:41373*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41373*0 + 3*735*FLEN/8, x4, x1, x2)

inst_13792:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dff80000000000; valaddr_reg:x3; val_offset:41376*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41376*0 + 3*736*FLEN/8, x4, x1, x2)

inst_13793:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffc0000000000; valaddr_reg:x3; val_offset:41379*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41379*0 + 3*737*FLEN/8, x4, x1, x2)

inst_13794:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffe0000000000; valaddr_reg:x3; val_offset:41382*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41382*0 + 3*738*FLEN/8, x4, x1, x2)

inst_13795:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfff0000000000; valaddr_reg:x3; val_offset:41385*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41385*0 + 3*739*FLEN/8, x4, x1, x2)

inst_13796:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfff8000000000; valaddr_reg:x3; val_offset:41388*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41388*0 + 3*740*FLEN/8, x4, x1, x2)

inst_13797:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffc000000000; valaddr_reg:x3; val_offset:41391*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41391*0 + 3*741*FLEN/8, x4, x1, x2)

inst_13798:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffe000000000; valaddr_reg:x3; val_offset:41394*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41394*0 + 3*742*FLEN/8, x4, x1, x2)

inst_13799:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffff000000000; valaddr_reg:x3; val_offset:41397*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41397*0 + 3*743*FLEN/8, x4, x1, x2)

inst_13800:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffff800000000; valaddr_reg:x3; val_offset:41400*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41400*0 + 3*744*FLEN/8, x4, x1, x2)

inst_13801:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffc00000000; valaddr_reg:x3; val_offset:41403*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41403*0 + 3*745*FLEN/8, x4, x1, x2)

inst_13802:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffe00000000; valaddr_reg:x3; val_offset:41406*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41406*0 + 3*746*FLEN/8, x4, x1, x2)

inst_13803:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffff00000000; valaddr_reg:x3; val_offset:41409*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41409*0 + 3*747*FLEN/8, x4, x1, x2)

inst_13804:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffff80000000; valaddr_reg:x3; val_offset:41412*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41412*0 + 3*748*FLEN/8, x4, x1, x2)

inst_13805:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffc0000000; valaddr_reg:x3; val_offset:41415*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41415*0 + 3*749*FLEN/8, x4, x1, x2)

inst_13806:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffe0000000; valaddr_reg:x3; val_offset:41418*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41418*0 + 3*750*FLEN/8, x4, x1, x2)

inst_13807:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffff0000000; valaddr_reg:x3; val_offset:41421*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41421*0 + 3*751*FLEN/8, x4, x1, x2)

inst_13808:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffff8000000; valaddr_reg:x3; val_offset:41424*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41424*0 + 3*752*FLEN/8, x4, x1, x2)

inst_13809:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffc000000; valaddr_reg:x3; val_offset:41427*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41427*0 + 3*753*FLEN/8, x4, x1, x2)

inst_13810:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffe000000; valaddr_reg:x3; val_offset:41430*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41430*0 + 3*754*FLEN/8, x4, x1, x2)

inst_13811:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffff000000; valaddr_reg:x3; val_offset:41433*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41433*0 + 3*755*FLEN/8, x4, x1, x2)

inst_13812:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffff800000; valaddr_reg:x3; val_offset:41436*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41436*0 + 3*756*FLEN/8, x4, x1, x2)

inst_13813:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffffc00000; valaddr_reg:x3; val_offset:41439*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41439*0 + 3*757*FLEN/8, x4, x1, x2)

inst_13814:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffffe00000; valaddr_reg:x3; val_offset:41442*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41442*0 + 3*758*FLEN/8, x4, x1, x2)

inst_13815:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffff00000; valaddr_reg:x3; val_offset:41445*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41445*0 + 3*759*FLEN/8, x4, x1, x2)

inst_13816:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffff80000; valaddr_reg:x3; val_offset:41448*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41448*0 + 3*760*FLEN/8, x4, x1, x2)

inst_13817:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffffc0000; valaddr_reg:x3; val_offset:41451*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41451*0 + 3*761*FLEN/8, x4, x1, x2)

inst_13818:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffffe0000; valaddr_reg:x3; val_offset:41454*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41454*0 + 3*762*FLEN/8, x4, x1, x2)

inst_13819:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffffff0000; valaddr_reg:x3; val_offset:41457*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41457*0 + 3*763*FLEN/8, x4, x1, x2)

inst_13820:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffffff8000; valaddr_reg:x3; val_offset:41460*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41460*0 + 3*764*FLEN/8, x4, x1, x2)

inst_13821:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffffffc000; valaddr_reg:x3; val_offset:41463*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41463*0 + 3*765*FLEN/8, x4, x1, x2)

inst_13822:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dfffffffffe000; valaddr_reg:x3; val_offset:41466*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41466*0 + 3*766*FLEN/8, x4, x1, x2)

inst_13823:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd4d119898a6d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d4d119898a6d7; op2val:0x0;
op3val:0x2dffffffffff000; valaddr_reg:x3; val_offset:41469*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41469*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412998098944,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413002293248,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413004390400,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005438976,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005963264,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006225408,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006356480,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006422016,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006454784,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006471168,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006479360,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006483456,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006485504,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006486528,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487040,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487296,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487424,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487488,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487520,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487536,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487544,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487548,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487550,64,FLEN)
NAN_BOXED(6880092244475607967,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487551,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891904,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891905,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891907,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891911,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891919,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891935,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891967,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892031,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892159,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892415,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892927,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056893951,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056895999,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056900095,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056908287,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056924671,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056957439,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057022975,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057154047,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057416191,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057940479,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391058989055,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391061086207,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391065280511,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391073669119,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391090446335,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391124000767,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391191109631,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391325327359,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391593762815,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086392130633727,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086393204375551,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086395351859199,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086399646826495,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086408236761087,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086425416630271,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086459776368639,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086528495845375,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086665934798847,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086940812705791,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108087490568519679,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108088590080147455,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108090789103403007,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108095187149914111,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108103983242936319,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108121575428980735,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108156759801069567,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108227128545247231,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108367866033602559,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108649341010313215,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(109212290963734527,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(110338190870577151,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(110338190870577152,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(111464090777419776,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112027040730841088,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112308515707551744,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112449253195907072,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112519621940084736,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112554806312173568,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112572398498217984,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112581194591240192,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112585592637751296,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112587791661006848,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112588891172634624,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589440928448512,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589715806355456,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589853245308928,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589921964785664,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589956324524032,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589973504393216,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589982094327808,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589986389295104,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589988536778752,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589989610520576,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990147391488,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990415826944,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990550044672,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990617153536,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990650707968,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990667485184,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990675873792,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990680068096,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990682165248,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990683213824,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990683738112,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684000256,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684131328,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684196864,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684229632,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684246016,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684254208,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684258304,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684260352,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684261376,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684261888,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262144,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262272,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262336,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262368,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262384,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262392,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262396,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262398,64,FLEN)
NAN_BOXED(6880319586137075887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262399,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226368,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226369,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226371,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226375,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226383,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226399,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226431,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226495,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226623,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226879,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703227391,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703228415,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703230463,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703234559,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703242751,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703259135,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703291903,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703357439,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703488511,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703750655,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787704274943,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787705323519,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787707420671,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787711614975,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787720003583,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787736780799,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787770335231,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787837444095,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787971661823,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618788240097279,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618788776968191,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618789850710015,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618791998193663,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618796293160959,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618804883095551,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618822062964735,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618856422703103,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618925142179839,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148619062581133311,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148619337459040255,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148619887214854143,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148620986726481919,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148623185749737471,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148627583796248575,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148636379889270783,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148653972075315199,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148689156447404031,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148759525191581695,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148900262679937023,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(149181737656647679,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(149744687610068991,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(150870587516911615,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(150870587516911616,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(151996487423754240,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(152559437377175552,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(152840912353886208,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(152981649842241536,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153052018586419200,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153087202958508032,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153104795144552448,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153113591237574656,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153117989284085760,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153120188307341312,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153121287818969088,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153121837574782976,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122112452689920,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122249891643392,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122318611120128,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122352970858496,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122370150727680,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122378740662272,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122383035629568,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122385183113216,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122386256855040,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122386793725952,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387062161408,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387196379136,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387263488000,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387297042432,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387313819648,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387322208256,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387326402560,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387328499712,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387329548288,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330072576,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330334720,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330465792,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330531328,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330564096,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330580480,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330588672,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330592768,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330594816,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330595840,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596352,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596608,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596736,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596800,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596832,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596848,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596856,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596860,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596862,64,FLEN)
NAN_BOXED(6880491202617240319,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596863,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262400,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262401,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262403,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262407,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262415,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262431,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262463,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262527,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262655,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262911,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684263423,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684264447,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684266495,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684270591,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684278783,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684295167,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684327935,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684393471,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684524543,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684786687,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990685310975,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990686359551,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990688456703,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990692651007,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990701039615,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990717816831,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990751371263,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990818480127,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990952697855,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589991221133311,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589991758004223,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589992831746047,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589994979229695,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589999274196991,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590007864131583,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590025044000767,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590059403739135,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590128123215871,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590265562169343,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590540440076287,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112591090195890175,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112592189707517951,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112594388730773503,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112598786777284607,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112607582870306815,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112625175056351231,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112660359428440063,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112730728172617727,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112871465660973055,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(113152940637683711,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(113715890591105023,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(114841790497947647,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(114841790497947648,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(115967690404790272,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116530640358211584,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116812115334922240,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116952852823277568,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117023221567455232,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117058405939544064,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117075998125588480,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117084794218610688,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117089192265121792,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117091391288377344,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117092490800005120,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093040555819008,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093315433725952,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093452872679424,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093521592156160,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093555951894528,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093573131763712,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093581721698304,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093586016665600,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093588164149248,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093589237891072,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093589774761984,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590043197440,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590177415168,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590244524032,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590278078464,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590294855680,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590303244288,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590307438592,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590309535744,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590310584320,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311108608,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311370752,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311501824,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311567360,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311600128,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311616512,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311624704,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311628800,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311630848,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311631872,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632384,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632640,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632768,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632832,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632864,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632880,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632888,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632892,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632894,64,FLEN)
NAN_BOXED(6880574920483184543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632895,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707136,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707137,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707139,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707143,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707151,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707167,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707199,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707263,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707391,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707647,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831708159,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831709183,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831711231,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831715327,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831723519,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831739903,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831772671,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831838207,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831969279,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820832231423,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820832755711,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820833804287,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820835901439,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820840095743,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820848484351,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820865261567,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820898815999,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820965924863,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026821100142591,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026821368578047,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026821905448959,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026822979190783,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026825126674431,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026829421641727,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026838011576319,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026855191445503,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026889551183871,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026958270660607,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417027095709614079,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417027370587521023,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417027920343334911,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417029019854962687,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417031218878218239,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417035616924729343,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417044413017751551,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417062005203795967,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417097189575884799,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417167558320062463,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417308295808417791,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417589770785128447,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9418152720738549759,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9419278620645392383,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9419278620645392384,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9420404520552235008,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9420967470505656320,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421248945482366976,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421389682970722304,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421460051714899968,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421495236086988800,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421512828273033216,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421521624366055424,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421526022412566528,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421528221435822080,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421529320947449856,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421529870703263744,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530145581170688,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530283020124160,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530351739600896,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530386099339264,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530403279208448,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530411869143040,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530416164110336,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530418311593984,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530419385335808,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530419922206720,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420190642176,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420324859904,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420391968768,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420425523200,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420442300416,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420450689024,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420454883328,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420456980480,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458029056,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458553344,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458815488,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458946560,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459012096,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459044864,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459061248,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459069440,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459073536,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459075584,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459076608,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077120,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077376,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077504,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077568,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077600,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077616,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077624,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077628,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077630,64,FLEN)
NAN_BOXED(6880591659000730511,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077631,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998784,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998785,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998787,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998791,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998799,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998815,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998847,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998911,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999039,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999295,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618999807,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619000831,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619002879,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619006975,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619015167,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619031551,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619064319,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619129855,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619260927,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634619523071,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634620047359,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634621095935,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634623193087,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634627387391,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634635775999,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634652553215,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634686107647,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634753216511,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634887434239,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635155869695,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393635692740607,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393636766482431,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393638913966079,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393643208933375,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393651798867967,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393668978737151,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393703338475519,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393772057952255,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393909496905727,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394184374812671,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250394734130626559,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250395833642254335,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250398032665509887,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250402430712020991,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250411226805043199,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250428818991087615,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250464003363176447,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250534372107354111,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250675109595709439,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250956584572420095,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9251519534525841407,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684031,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9252645434432684032,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9253771334339526656,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254334284292947968,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254615759269658624,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254756496758013952,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254826865502191616,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254862049874280448,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254879642060324864,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254888438153347072,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254892836199858176,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254895035223113728,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896134734741504,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896684490555392,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254896959368462336,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897096807415808,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897165526892544,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897199886630912,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897217066500096,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897225656434688,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897229951401984,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897232098885632,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233172627456,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233709498368,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897233977933824,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234112151552,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234179260416,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234212814848,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234229592064,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234237980672,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234242174976,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234244272128,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245320704,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234245844992,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246107136,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246238208,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246303744,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246336512,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246352896,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246361088,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246365184,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246367232,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246368256,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246368768,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369024,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369152,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369216,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369248,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369264,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369272,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369276,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369278,64,FLEN)
NAN_BOXED(6880667597602914031,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9254897234246369279,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672320,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672321,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672323,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672327,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672335,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672351,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672383,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672447,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672575,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672831,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231673343,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231674367,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231676415,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231680511,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231688703,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231705087,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231737855,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231803391,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231934463,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232196607,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232720895,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983233769471,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983235866623,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983240060927,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983248449535,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983265226751,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983298781183,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983365890047,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983500107775,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983768543231,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661984305414143,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661985379155967,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661987526639615,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661991821606911,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662000411541503,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662017591410687,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662051951149055,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662120670625791,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662258109579263,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662532987486207,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202663082743300095,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202664182254927871,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202666381278183423,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202670779324694527,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202679575417716735,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202697167603761151,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202732351975849983,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202802720720027647,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202943458208382975,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203224933185093631,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203787883138514943,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357567,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357568,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206039682952200192,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206602632905621504,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206884107882332160,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207024845370687488,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207095214114865152,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207130398486953984,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207147990672998400,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207156786766020608,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207161184812531712,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207163383835787264,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207164483347415040,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165033103228928,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165307981135872,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165445420089344,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165514139566080,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165548499304448,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165565679173632,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165574269108224,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165578564075520,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165580711559168,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165581785300992,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582322171904,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582590607360,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582724825088,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582791933952,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582825488384,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582842265600,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582850654208,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582854848512,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582856945664,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582857994240,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858518528,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858780672,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858911744,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858977280,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859010048,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859026432,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859034624,64,FLEN)
NAN_BOXED(6880740543661909719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859038720,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
