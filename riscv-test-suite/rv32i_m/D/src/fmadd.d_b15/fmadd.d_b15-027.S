
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_19968:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffe0000000000; valaddr_reg:x3; val_offset:59904*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59904*0 + 3*0*FLEN/8, x4, x1, x2)

inst_19969:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fff0000000000; valaddr_reg:x3; val_offset:59907*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59907*0 + 3*1*FLEN/8, x4, x1, x2)

inst_19970:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fff8000000000; valaddr_reg:x3; val_offset:59910*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59910*0 + 3*2*FLEN/8, x4, x1, x2)

inst_19971:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffc000000000; valaddr_reg:x3; val_offset:59913*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59913*0 + 3*3*FLEN/8, x4, x1, x2)

inst_19972:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffe000000000; valaddr_reg:x3; val_offset:59916*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59916*0 + 3*4*FLEN/8, x4, x1, x2)

inst_19973:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffff000000000; valaddr_reg:x3; val_offset:59919*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59919*0 + 3*5*FLEN/8, x4, x1, x2)

inst_19974:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffff800000000; valaddr_reg:x3; val_offset:59922*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59922*0 + 3*6*FLEN/8, x4, x1, x2)

inst_19975:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffc00000000; valaddr_reg:x3; val_offset:59925*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59925*0 + 3*7*FLEN/8, x4, x1, x2)

inst_19976:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffe00000000; valaddr_reg:x3; val_offset:59928*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59928*0 + 3*8*FLEN/8, x4, x1, x2)

inst_19977:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffff00000000; valaddr_reg:x3; val_offset:59931*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59931*0 + 3*9*FLEN/8, x4, x1, x2)

inst_19978:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffff80000000; valaddr_reg:x3; val_offset:59934*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59934*0 + 3*10*FLEN/8, x4, x1, x2)

inst_19979:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffc0000000; valaddr_reg:x3; val_offset:59937*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59937*0 + 3*11*FLEN/8, x4, x1, x2)

inst_19980:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffe0000000; valaddr_reg:x3; val_offset:59940*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59940*0 + 3*12*FLEN/8, x4, x1, x2)

inst_19981:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffff0000000; valaddr_reg:x3; val_offset:59943*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59943*0 + 3*13*FLEN/8, x4, x1, x2)

inst_19982:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffff8000000; valaddr_reg:x3; val_offset:59946*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59946*0 + 3*14*FLEN/8, x4, x1, x2)

inst_19983:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffc000000; valaddr_reg:x3; val_offset:59949*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59949*0 + 3*15*FLEN/8, x4, x1, x2)

inst_19984:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffe000000; valaddr_reg:x3; val_offset:59952*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59952*0 + 3*16*FLEN/8, x4, x1, x2)

inst_19985:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffff000000; valaddr_reg:x3; val_offset:59955*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59955*0 + 3*17*FLEN/8, x4, x1, x2)

inst_19986:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffff800000; valaddr_reg:x3; val_offset:59958*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59958*0 + 3*18*FLEN/8, x4, x1, x2)

inst_19987:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffffc00000; valaddr_reg:x3; val_offset:59961*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59961*0 + 3*19*FLEN/8, x4, x1, x2)

inst_19988:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffffe00000; valaddr_reg:x3; val_offset:59964*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59964*0 + 3*20*FLEN/8, x4, x1, x2)

inst_19989:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffff00000; valaddr_reg:x3; val_offset:59967*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59967*0 + 3*21*FLEN/8, x4, x1, x2)

inst_19990:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffff80000; valaddr_reg:x3; val_offset:59970*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59970*0 + 3*22*FLEN/8, x4, x1, x2)

inst_19991:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffffc0000; valaddr_reg:x3; val_offset:59973*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59973*0 + 3*23*FLEN/8, x4, x1, x2)

inst_19992:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffffe0000; valaddr_reg:x3; val_offset:59976*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59976*0 + 3*24*FLEN/8, x4, x1, x2)

inst_19993:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffffff0000; valaddr_reg:x3; val_offset:59979*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59979*0 + 3*25*FLEN/8, x4, x1, x2)

inst_19994:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffffff8000; valaddr_reg:x3; val_offset:59982*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59982*0 + 3*26*FLEN/8, x4, x1, x2)

inst_19995:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffffffc000; valaddr_reg:x3; val_offset:59985*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59985*0 + 3*27*FLEN/8, x4, x1, x2)

inst_19996:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffffffe000; valaddr_reg:x3; val_offset:59988*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59988*0 + 3*28*FLEN/8, x4, x1, x2)

inst_19997:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffffff000; valaddr_reg:x3; val_offset:59991*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59991*0 + 3*29*FLEN/8, x4, x1, x2)

inst_19998:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffffff800; valaddr_reg:x3; val_offset:59994*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59994*0 + 3*30*FLEN/8, x4, x1, x2)

inst_19999:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffffffc00; valaddr_reg:x3; val_offset:59997*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 59997*0 + 3*31*FLEN/8, x4, x1, x2)

inst_20000:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffffffe00; valaddr_reg:x3; val_offset:60000*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60000*0 + 3*32*FLEN/8, x4, x1, x2)

inst_20001:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffffffff00; valaddr_reg:x3; val_offset:60003*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60003*0 + 3*33*FLEN/8, x4, x1, x2)

inst_20002:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffffffff80; valaddr_reg:x3; val_offset:60006*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60006*0 + 3*34*FLEN/8, x4, x1, x2)

inst_20003:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffffffffc0; valaddr_reg:x3; val_offset:60009*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60009*0 + 3*35*FLEN/8, x4, x1, x2)

inst_20004:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffffffffe0; valaddr_reg:x3; val_offset:60012*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60012*0 + 3*36*FLEN/8, x4, x1, x2)

inst_20005:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffffffff0; valaddr_reg:x3; val_offset:60015*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60015*0 + 3*37*FLEN/8, x4, x1, x2)

inst_20006:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffffffff8; valaddr_reg:x3; val_offset:60018*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60018*0 + 3*38*FLEN/8, x4, x1, x2)

inst_20007:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffffffffc; valaddr_reg:x3; val_offset:60021*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60021*0 + 3*39*FLEN/8, x4, x1, x2)

inst_20008:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20ffffffffffffe; valaddr_reg:x3; val_offset:60024*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60024*0 + 3*40*FLEN/8, x4, x1, x2)

inst_20009:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x65dc9e3f7a273 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f865dc9e3f7a273; op2val:0x0;
op3val:0x20fffffffffffff; valaddr_reg:x3; val_offset:60027*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60027*0 + 3*41*FLEN/8, x4, x1, x2)

inst_20010:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000000000000; valaddr_reg:x3; val_offset:60030*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60030*0 + 3*42*FLEN/8, x4, x1, x2)

inst_20011:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000000000001; valaddr_reg:x3; val_offset:60033*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60033*0 + 3*43*FLEN/8, x4, x1, x2)

inst_20012:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000000000003; valaddr_reg:x3; val_offset:60036*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60036*0 + 3*44*FLEN/8, x4, x1, x2)

inst_20013:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000000000007; valaddr_reg:x3; val_offset:60039*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60039*0 + 3*45*FLEN/8, x4, x1, x2)

inst_20014:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000000000000f; valaddr_reg:x3; val_offset:60042*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60042*0 + 3*46*FLEN/8, x4, x1, x2)

inst_20015:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000000000001f; valaddr_reg:x3; val_offset:60045*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60045*0 + 3*47*FLEN/8, x4, x1, x2)

inst_20016:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000000000003f; valaddr_reg:x3; val_offset:60048*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60048*0 + 3*48*FLEN/8, x4, x1, x2)

inst_20017:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000000000007f; valaddr_reg:x3; val_offset:60051*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60051*0 + 3*49*FLEN/8, x4, x1, x2)

inst_20018:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00000000000ff; valaddr_reg:x3; val_offset:60054*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60054*0 + 3*50*FLEN/8, x4, x1, x2)

inst_20019:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00000000001ff; valaddr_reg:x3; val_offset:60057*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60057*0 + 3*51*FLEN/8, x4, x1, x2)

inst_20020:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00000000003ff; valaddr_reg:x3; val_offset:60060*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60060*0 + 3*52*FLEN/8, x4, x1, x2)

inst_20021:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00000000007ff; valaddr_reg:x3; val_offset:60063*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60063*0 + 3*53*FLEN/8, x4, x1, x2)

inst_20022:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000000000fff; valaddr_reg:x3; val_offset:60066*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60066*0 + 3*54*FLEN/8, x4, x1, x2)

inst_20023:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000000001fff; valaddr_reg:x3; val_offset:60069*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60069*0 + 3*55*FLEN/8, x4, x1, x2)

inst_20024:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000000003fff; valaddr_reg:x3; val_offset:60072*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60072*0 + 3*56*FLEN/8, x4, x1, x2)

inst_20025:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000000007fff; valaddr_reg:x3; val_offset:60075*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60075*0 + 3*57*FLEN/8, x4, x1, x2)

inst_20026:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000000000ffff; valaddr_reg:x3; val_offset:60078*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60078*0 + 3*58*FLEN/8, x4, x1, x2)

inst_20027:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000000001ffff; valaddr_reg:x3; val_offset:60081*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60081*0 + 3*59*FLEN/8, x4, x1, x2)

inst_20028:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000000003ffff; valaddr_reg:x3; val_offset:60084*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60084*0 + 3*60*FLEN/8, x4, x1, x2)

inst_20029:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000000007ffff; valaddr_reg:x3; val_offset:60087*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60087*0 + 3*61*FLEN/8, x4, x1, x2)

inst_20030:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00000000fffff; valaddr_reg:x3; val_offset:60090*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60090*0 + 3*62*FLEN/8, x4, x1, x2)

inst_20031:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00000001fffff; valaddr_reg:x3; val_offset:60093*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60093*0 + 3*63*FLEN/8, x4, x1, x2)

inst_20032:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00000003fffff; valaddr_reg:x3; val_offset:60096*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60096*0 + 3*64*FLEN/8, x4, x1, x2)

inst_20033:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00000007fffff; valaddr_reg:x3; val_offset:60099*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60099*0 + 3*65*FLEN/8, x4, x1, x2)

inst_20034:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000000ffffff; valaddr_reg:x3; val_offset:60102*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60102*0 + 3*66*FLEN/8, x4, x1, x2)

inst_20035:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000001ffffff; valaddr_reg:x3; val_offset:60105*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60105*0 + 3*67*FLEN/8, x4, x1, x2)

inst_20036:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000003ffffff; valaddr_reg:x3; val_offset:60108*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60108*0 + 3*68*FLEN/8, x4, x1, x2)

inst_20037:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000007ffffff; valaddr_reg:x3; val_offset:60111*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60111*0 + 3*69*FLEN/8, x4, x1, x2)

inst_20038:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000000fffffff; valaddr_reg:x3; val_offset:60114*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60114*0 + 3*70*FLEN/8, x4, x1, x2)

inst_20039:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000001fffffff; valaddr_reg:x3; val_offset:60117*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60117*0 + 3*71*FLEN/8, x4, x1, x2)

inst_20040:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000003fffffff; valaddr_reg:x3; val_offset:60120*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60120*0 + 3*72*FLEN/8, x4, x1, x2)

inst_20041:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000007fffffff; valaddr_reg:x3; val_offset:60123*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60123*0 + 3*73*FLEN/8, x4, x1, x2)

inst_20042:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00000ffffffff; valaddr_reg:x3; val_offset:60126*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60126*0 + 3*74*FLEN/8, x4, x1, x2)

inst_20043:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00001ffffffff; valaddr_reg:x3; val_offset:60129*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60129*0 + 3*75*FLEN/8, x4, x1, x2)

inst_20044:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00003ffffffff; valaddr_reg:x3; val_offset:60132*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60132*0 + 3*76*FLEN/8, x4, x1, x2)

inst_20045:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00007ffffffff; valaddr_reg:x3; val_offset:60135*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60135*0 + 3*77*FLEN/8, x4, x1, x2)

inst_20046:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0000fffffffff; valaddr_reg:x3; val_offset:60138*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60138*0 + 3*78*FLEN/8, x4, x1, x2)

inst_20047:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0001fffffffff; valaddr_reg:x3; val_offset:60141*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60141*0 + 3*79*FLEN/8, x4, x1, x2)

inst_20048:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0003fffffffff; valaddr_reg:x3; val_offset:60144*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60144*0 + 3*80*FLEN/8, x4, x1, x2)

inst_20049:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0007fffffffff; valaddr_reg:x3; val_offset:60147*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60147*0 + 3*81*FLEN/8, x4, x1, x2)

inst_20050:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc000ffffffffff; valaddr_reg:x3; val_offset:60150*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60150*0 + 3*82*FLEN/8, x4, x1, x2)

inst_20051:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc001ffffffffff; valaddr_reg:x3; val_offset:60153*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60153*0 + 3*83*FLEN/8, x4, x1, x2)

inst_20052:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc003ffffffffff; valaddr_reg:x3; val_offset:60156*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60156*0 + 3*84*FLEN/8, x4, x1, x2)

inst_20053:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc007ffffffffff; valaddr_reg:x3; val_offset:60159*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60159*0 + 3*85*FLEN/8, x4, x1, x2)

inst_20054:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc00fffffffffff; valaddr_reg:x3; val_offset:60162*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60162*0 + 3*86*FLEN/8, x4, x1, x2)

inst_20055:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc01fffffffffff; valaddr_reg:x3; val_offset:60165*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60165*0 + 3*87*FLEN/8, x4, x1, x2)

inst_20056:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc03fffffffffff; valaddr_reg:x3; val_offset:60168*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60168*0 + 3*88*FLEN/8, x4, x1, x2)

inst_20057:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc07fffffffffff; valaddr_reg:x3; val_offset:60171*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60171*0 + 3*89*FLEN/8, x4, x1, x2)

inst_20058:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc0ffffffffffff; valaddr_reg:x3; val_offset:60174*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60174*0 + 3*90*FLEN/8, x4, x1, x2)

inst_20059:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc1ffffffffffff; valaddr_reg:x3; val_offset:60177*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60177*0 + 3*91*FLEN/8, x4, x1, x2)

inst_20060:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc3ffffffffffff; valaddr_reg:x3; val_offset:60180*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60180*0 + 3*92*FLEN/8, x4, x1, x2)

inst_20061:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc7ffffffffffff; valaddr_reg:x3; val_offset:60183*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60183*0 + 3*93*FLEN/8, x4, x1, x2)

inst_20062:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fc8000000000000; valaddr_reg:x3; val_offset:60186*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60186*0 + 3*94*FLEN/8, x4, x1, x2)

inst_20063:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcc000000000000; valaddr_reg:x3; val_offset:60189*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60189*0 + 3*95*FLEN/8, x4, x1, x2)

inst_20064:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fce000000000000; valaddr_reg:x3; val_offset:60192*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60192*0 + 3*96*FLEN/8, x4, x1, x2)

inst_20065:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcf000000000000; valaddr_reg:x3; val_offset:60195*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60195*0 + 3*97*FLEN/8, x4, x1, x2)

inst_20066:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcf800000000000; valaddr_reg:x3; val_offset:60198*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60198*0 + 3*98*FLEN/8, x4, x1, x2)

inst_20067:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfc00000000000; valaddr_reg:x3; val_offset:60201*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60201*0 + 3*99*FLEN/8, x4, x1, x2)

inst_20068:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfe00000000000; valaddr_reg:x3; val_offset:60204*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60204*0 + 3*100*FLEN/8, x4, x1, x2)

inst_20069:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcff00000000000; valaddr_reg:x3; val_offset:60207*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60207*0 + 3*101*FLEN/8, x4, x1, x2)

inst_20070:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcff80000000000; valaddr_reg:x3; val_offset:60210*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60210*0 + 3*102*FLEN/8, x4, x1, x2)

inst_20071:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffc0000000000; valaddr_reg:x3; val_offset:60213*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60213*0 + 3*103*FLEN/8, x4, x1, x2)

inst_20072:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffe0000000000; valaddr_reg:x3; val_offset:60216*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60216*0 + 3*104*FLEN/8, x4, x1, x2)

inst_20073:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfff0000000000; valaddr_reg:x3; val_offset:60219*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60219*0 + 3*105*FLEN/8, x4, x1, x2)

inst_20074:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfff8000000000; valaddr_reg:x3; val_offset:60222*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60222*0 + 3*106*FLEN/8, x4, x1, x2)

inst_20075:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffc000000000; valaddr_reg:x3; val_offset:60225*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60225*0 + 3*107*FLEN/8, x4, x1, x2)

inst_20076:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffe000000000; valaddr_reg:x3; val_offset:60228*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60228*0 + 3*108*FLEN/8, x4, x1, x2)

inst_20077:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffff000000000; valaddr_reg:x3; val_offset:60231*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60231*0 + 3*109*FLEN/8, x4, x1, x2)

inst_20078:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffff800000000; valaddr_reg:x3; val_offset:60234*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60234*0 + 3*110*FLEN/8, x4, x1, x2)

inst_20079:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffc00000000; valaddr_reg:x3; val_offset:60237*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60237*0 + 3*111*FLEN/8, x4, x1, x2)

inst_20080:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffe00000000; valaddr_reg:x3; val_offset:60240*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60240*0 + 3*112*FLEN/8, x4, x1, x2)

inst_20081:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffff00000000; valaddr_reg:x3; val_offset:60243*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60243*0 + 3*113*FLEN/8, x4, x1, x2)

inst_20082:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffff80000000; valaddr_reg:x3; val_offset:60246*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60246*0 + 3*114*FLEN/8, x4, x1, x2)

inst_20083:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffc0000000; valaddr_reg:x3; val_offset:60249*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60249*0 + 3*115*FLEN/8, x4, x1, x2)

inst_20084:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffe0000000; valaddr_reg:x3; val_offset:60252*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60252*0 + 3*116*FLEN/8, x4, x1, x2)

inst_20085:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffff0000000; valaddr_reg:x3; val_offset:60255*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60255*0 + 3*117*FLEN/8, x4, x1, x2)

inst_20086:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffff8000000; valaddr_reg:x3; val_offset:60258*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60258*0 + 3*118*FLEN/8, x4, x1, x2)

inst_20087:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffc000000; valaddr_reg:x3; val_offset:60261*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60261*0 + 3*119*FLEN/8, x4, x1, x2)

inst_20088:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffe000000; valaddr_reg:x3; val_offset:60264*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60264*0 + 3*120*FLEN/8, x4, x1, x2)

inst_20089:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffff000000; valaddr_reg:x3; val_offset:60267*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60267*0 + 3*121*FLEN/8, x4, x1, x2)

inst_20090:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffff800000; valaddr_reg:x3; val_offset:60270*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60270*0 + 3*122*FLEN/8, x4, x1, x2)

inst_20091:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffffc00000; valaddr_reg:x3; val_offset:60273*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60273*0 + 3*123*FLEN/8, x4, x1, x2)

inst_20092:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffffe00000; valaddr_reg:x3; val_offset:60276*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60276*0 + 3*124*FLEN/8, x4, x1, x2)

inst_20093:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffff00000; valaddr_reg:x3; val_offset:60279*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60279*0 + 3*125*FLEN/8, x4, x1, x2)

inst_20094:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffff80000; valaddr_reg:x3; val_offset:60282*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60282*0 + 3*126*FLEN/8, x4, x1, x2)

inst_20095:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffffc0000; valaddr_reg:x3; val_offset:60285*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60285*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_20096:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffffe0000; valaddr_reg:x3; val_offset:60288*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60288*0 + 3*128*FLEN/8, x4, x1, x2)

inst_20097:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffffff0000; valaddr_reg:x3; val_offset:60291*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60291*0 + 3*129*FLEN/8, x4, x1, x2)

inst_20098:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffffff8000; valaddr_reg:x3; val_offset:60294*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60294*0 + 3*130*FLEN/8, x4, x1, x2)

inst_20099:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffffffc000; valaddr_reg:x3; val_offset:60297*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60297*0 + 3*131*FLEN/8, x4, x1, x2)

inst_20100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffffffe000; valaddr_reg:x3; val_offset:60300*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60300*0 + 3*132*FLEN/8, x4, x1, x2)

inst_20101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffffff000; valaddr_reg:x3; val_offset:60303*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60303*0 + 3*133*FLEN/8, x4, x1, x2)

inst_20102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffffff800; valaddr_reg:x3; val_offset:60306*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60306*0 + 3*134*FLEN/8, x4, x1, x2)

inst_20103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffffffc00; valaddr_reg:x3; val_offset:60309*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60309*0 + 3*135*FLEN/8, x4, x1, x2)

inst_20104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffffffe00; valaddr_reg:x3; val_offset:60312*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60312*0 + 3*136*FLEN/8, x4, x1, x2)

inst_20105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffffffff00; valaddr_reg:x3; val_offset:60315*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60315*0 + 3*137*FLEN/8, x4, x1, x2)

inst_20106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffffffff80; valaddr_reg:x3; val_offset:60318*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60318*0 + 3*138*FLEN/8, x4, x1, x2)

inst_20107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffffffffc0; valaddr_reg:x3; val_offset:60321*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60321*0 + 3*139*FLEN/8, x4, x1, x2)

inst_20108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffffffffe0; valaddr_reg:x3; val_offset:60324*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60324*0 + 3*140*FLEN/8, x4, x1, x2)

inst_20109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffffffff0; valaddr_reg:x3; val_offset:60327*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60327*0 + 3*141*FLEN/8, x4, x1, x2)

inst_20110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffffffff8; valaddr_reg:x3; val_offset:60330*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60330*0 + 3*142*FLEN/8, x4, x1, x2)

inst_20111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffffffffc; valaddr_reg:x3; val_offset:60333*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60333*0 + 3*143*FLEN/8, x4, x1, x2)

inst_20112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcffffffffffffe; valaddr_reg:x3; val_offset:60336*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60336*0 + 3*144*FLEN/8, x4, x1, x2)

inst_20113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fcfffffffffffff; valaddr_reg:x3; val_offset:60339*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60339*0 + 3*145*FLEN/8, x4, x1, x2)

inst_20114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:60342*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60342*0 + 3*146*FLEN/8, x4, x1, x2)

inst_20115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:60345*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60345*0 + 3*147*FLEN/8, x4, x1, x2)

inst_20116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:60348*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60348*0 + 3*148*FLEN/8, x4, x1, x2)

inst_20117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:60351*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60351*0 + 3*149*FLEN/8, x4, x1, x2)

inst_20118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:60354*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60354*0 + 3*150*FLEN/8, x4, x1, x2)

inst_20119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:60357*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60357*0 + 3*151*FLEN/8, x4, x1, x2)

inst_20120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:60360*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60360*0 + 3*152*FLEN/8, x4, x1, x2)

inst_20121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:60363*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60363*0 + 3*153*FLEN/8, x4, x1, x2)

inst_20122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:60366*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60366*0 + 3*154*FLEN/8, x4, x1, x2)

inst_20123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:60369*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60369*0 + 3*155*FLEN/8, x4, x1, x2)

inst_20124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:60372*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60372*0 + 3*156*FLEN/8, x4, x1, x2)

inst_20125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:60375*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60375*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:60378*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60378*0 + 3*158*FLEN/8, x4, x1, x2)

inst_20127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:60381*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60381*0 + 3*159*FLEN/8, x4, x1, x2)

inst_20128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:60384*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60384*0 + 3*160*FLEN/8, x4, x1, x2)

inst_20129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:60387*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60387*0 + 3*161*FLEN/8, x4, x1, x2)

inst_20130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:60390*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60390*0 + 3*162*FLEN/8, x4, x1, x2)

inst_20131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:60393*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60393*0 + 3*163*FLEN/8, x4, x1, x2)

inst_20132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:60396*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60396*0 + 3*164*FLEN/8, x4, x1, x2)

inst_20133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:60399*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60399*0 + 3*165*FLEN/8, x4, x1, x2)

inst_20134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:60402*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60402*0 + 3*166*FLEN/8, x4, x1, x2)

inst_20135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6d226d3535453 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x66f817c9b65f2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86d226d3535453; op2val:0x20566f817c9b65f2;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:60405*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60405*0 + 3*167*FLEN/8, x4, x1, x2)

inst_20136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000000000000; valaddr_reg:x3; val_offset:60408*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60408*0 + 3*168*FLEN/8, x4, x1, x2)

inst_20137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000000000001; valaddr_reg:x3; val_offset:60411*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60411*0 + 3*169*FLEN/8, x4, x1, x2)

inst_20138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000000000003; valaddr_reg:x3; val_offset:60414*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60414*0 + 3*170*FLEN/8, x4, x1, x2)

inst_20139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000000000007; valaddr_reg:x3; val_offset:60417*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60417*0 + 3*171*FLEN/8, x4, x1, x2)

inst_20140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000000000000f; valaddr_reg:x3; val_offset:60420*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60420*0 + 3*172*FLEN/8, x4, x1, x2)

inst_20141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000000000001f; valaddr_reg:x3; val_offset:60423*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60423*0 + 3*173*FLEN/8, x4, x1, x2)

inst_20142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000000000003f; valaddr_reg:x3; val_offset:60426*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60426*0 + 3*174*FLEN/8, x4, x1, x2)

inst_20143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000000000007f; valaddr_reg:x3; val_offset:60429*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60429*0 + 3*175*FLEN/8, x4, x1, x2)

inst_20144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500000000000ff; valaddr_reg:x3; val_offset:60432*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60432*0 + 3*176*FLEN/8, x4, x1, x2)

inst_20145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500000000001ff; valaddr_reg:x3; val_offset:60435*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60435*0 + 3*177*FLEN/8, x4, x1, x2)

inst_20146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500000000003ff; valaddr_reg:x3; val_offset:60438*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60438*0 + 3*178*FLEN/8, x4, x1, x2)

inst_20147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500000000007ff; valaddr_reg:x3; val_offset:60441*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60441*0 + 3*179*FLEN/8, x4, x1, x2)

inst_20148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000000000fff; valaddr_reg:x3; val_offset:60444*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60444*0 + 3*180*FLEN/8, x4, x1, x2)

inst_20149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000000001fff; valaddr_reg:x3; val_offset:60447*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60447*0 + 3*181*FLEN/8, x4, x1, x2)

inst_20150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000000003fff; valaddr_reg:x3; val_offset:60450*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60450*0 + 3*182*FLEN/8, x4, x1, x2)

inst_20151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000000007fff; valaddr_reg:x3; val_offset:60453*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60453*0 + 3*183*FLEN/8, x4, x1, x2)

inst_20152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000000000ffff; valaddr_reg:x3; val_offset:60456*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60456*0 + 3*184*FLEN/8, x4, x1, x2)

inst_20153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000000001ffff; valaddr_reg:x3; val_offset:60459*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60459*0 + 3*185*FLEN/8, x4, x1, x2)

inst_20154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000000003ffff; valaddr_reg:x3; val_offset:60462*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60462*0 + 3*186*FLEN/8, x4, x1, x2)

inst_20155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000000007ffff; valaddr_reg:x3; val_offset:60465*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60465*0 + 3*187*FLEN/8, x4, x1, x2)

inst_20156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500000000fffff; valaddr_reg:x3; val_offset:60468*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60468*0 + 3*188*FLEN/8, x4, x1, x2)

inst_20157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500000001fffff; valaddr_reg:x3; val_offset:60471*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60471*0 + 3*189*FLEN/8, x4, x1, x2)

inst_20158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500000003fffff; valaddr_reg:x3; val_offset:60474*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60474*0 + 3*190*FLEN/8, x4, x1, x2)

inst_20159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500000007fffff; valaddr_reg:x3; val_offset:60477*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60477*0 + 3*191*FLEN/8, x4, x1, x2)

inst_20160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000000ffffff; valaddr_reg:x3; val_offset:60480*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60480*0 + 3*192*FLEN/8, x4, x1, x2)

inst_20161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000001ffffff; valaddr_reg:x3; val_offset:60483*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60483*0 + 3*193*FLEN/8, x4, x1, x2)

inst_20162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000003ffffff; valaddr_reg:x3; val_offset:60486*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60486*0 + 3*194*FLEN/8, x4, x1, x2)

inst_20163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000007ffffff; valaddr_reg:x3; val_offset:60489*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60489*0 + 3*195*FLEN/8, x4, x1, x2)

inst_20164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000000fffffff; valaddr_reg:x3; val_offset:60492*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60492*0 + 3*196*FLEN/8, x4, x1, x2)

inst_20165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000001fffffff; valaddr_reg:x3; val_offset:60495*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60495*0 + 3*197*FLEN/8, x4, x1, x2)

inst_20166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000003fffffff; valaddr_reg:x3; val_offset:60498*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60498*0 + 3*198*FLEN/8, x4, x1, x2)

inst_20167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000007fffffff; valaddr_reg:x3; val_offset:60501*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60501*0 + 3*199*FLEN/8, x4, x1, x2)

inst_20168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500000ffffffff; valaddr_reg:x3; val_offset:60504*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60504*0 + 3*200*FLEN/8, x4, x1, x2)

inst_20169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500001ffffffff; valaddr_reg:x3; val_offset:60507*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60507*0 + 3*201*FLEN/8, x4, x1, x2)

inst_20170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500003ffffffff; valaddr_reg:x3; val_offset:60510*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60510*0 + 3*202*FLEN/8, x4, x1, x2)

inst_20171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500007ffffffff; valaddr_reg:x3; val_offset:60513*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60513*0 + 3*203*FLEN/8, x4, x1, x2)

inst_20172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850000fffffffff; valaddr_reg:x3; val_offset:60516*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60516*0 + 3*204*FLEN/8, x4, x1, x2)

inst_20173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850001fffffffff; valaddr_reg:x3; val_offset:60519*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60519*0 + 3*205*FLEN/8, x4, x1, x2)

inst_20174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850003fffffffff; valaddr_reg:x3; val_offset:60522*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60522*0 + 3*206*FLEN/8, x4, x1, x2)

inst_20175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850007fffffffff; valaddr_reg:x3; val_offset:60525*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60525*0 + 3*207*FLEN/8, x4, x1, x2)

inst_20176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85000ffffffffff; valaddr_reg:x3; val_offset:60528*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60528*0 + 3*208*FLEN/8, x4, x1, x2)

inst_20177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85001ffffffffff; valaddr_reg:x3; val_offset:60531*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60531*0 + 3*209*FLEN/8, x4, x1, x2)

inst_20178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85003ffffffffff; valaddr_reg:x3; val_offset:60534*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60534*0 + 3*210*FLEN/8, x4, x1, x2)

inst_20179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85007ffffffffff; valaddr_reg:x3; val_offset:60537*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60537*0 + 3*211*FLEN/8, x4, x1, x2)

inst_20180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8500fffffffffff; valaddr_reg:x3; val_offset:60540*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60540*0 + 3*212*FLEN/8, x4, x1, x2)

inst_20181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8501fffffffffff; valaddr_reg:x3; val_offset:60543*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60543*0 + 3*213*FLEN/8, x4, x1, x2)

inst_20182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8503fffffffffff; valaddr_reg:x3; val_offset:60546*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60546*0 + 3*214*FLEN/8, x4, x1, x2)

inst_20183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb8507fffffffffff; valaddr_reg:x3; val_offset:60549*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60549*0 + 3*215*FLEN/8, x4, x1, x2)

inst_20184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb850ffffffffffff; valaddr_reg:x3; val_offset:60552*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60552*0 + 3*216*FLEN/8, x4, x1, x2)

inst_20185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb851ffffffffffff; valaddr_reg:x3; val_offset:60555*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60555*0 + 3*217*FLEN/8, x4, x1, x2)

inst_20186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb853ffffffffffff; valaddr_reg:x3; val_offset:60558*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60558*0 + 3*218*FLEN/8, x4, x1, x2)

inst_20187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb857ffffffffffff; valaddr_reg:x3; val_offset:60561*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60561*0 + 3*219*FLEN/8, x4, x1, x2)

inst_20188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb858000000000000; valaddr_reg:x3; val_offset:60564*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60564*0 + 3*220*FLEN/8, x4, x1, x2)

inst_20189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85c000000000000; valaddr_reg:x3; val_offset:60567*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60567*0 + 3*221*FLEN/8, x4, x1, x2)

inst_20190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85e000000000000; valaddr_reg:x3; val_offset:60570*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60570*0 + 3*222*FLEN/8, x4, x1, x2)

inst_20191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85f000000000000; valaddr_reg:x3; val_offset:60573*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60573*0 + 3*223*FLEN/8, x4, x1, x2)

inst_20192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85f800000000000; valaddr_reg:x3; val_offset:60576*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60576*0 + 3*224*FLEN/8, x4, x1, x2)

inst_20193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fc00000000000; valaddr_reg:x3; val_offset:60579*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60579*0 + 3*225*FLEN/8, x4, x1, x2)

inst_20194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fe00000000000; valaddr_reg:x3; val_offset:60582*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60582*0 + 3*226*FLEN/8, x4, x1, x2)

inst_20195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ff00000000000; valaddr_reg:x3; val_offset:60585*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60585*0 + 3*227*FLEN/8, x4, x1, x2)

inst_20196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ff80000000000; valaddr_reg:x3; val_offset:60588*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60588*0 + 3*228*FLEN/8, x4, x1, x2)

inst_20197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffc0000000000; valaddr_reg:x3; val_offset:60591*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60591*0 + 3*229*FLEN/8, x4, x1, x2)

inst_20198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffe0000000000; valaddr_reg:x3; val_offset:60594*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60594*0 + 3*230*FLEN/8, x4, x1, x2)

inst_20199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fff0000000000; valaddr_reg:x3; val_offset:60597*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60597*0 + 3*231*FLEN/8, x4, x1, x2)

inst_20200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fff8000000000; valaddr_reg:x3; val_offset:60600*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60600*0 + 3*232*FLEN/8, x4, x1, x2)

inst_20201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffc000000000; valaddr_reg:x3; val_offset:60603*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60603*0 + 3*233*FLEN/8, x4, x1, x2)

inst_20202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffe000000000; valaddr_reg:x3; val_offset:60606*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60606*0 + 3*234*FLEN/8, x4, x1, x2)

inst_20203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffff000000000; valaddr_reg:x3; val_offset:60609*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60609*0 + 3*235*FLEN/8, x4, x1, x2)

inst_20204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffff800000000; valaddr_reg:x3; val_offset:60612*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60612*0 + 3*236*FLEN/8, x4, x1, x2)

inst_20205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffc00000000; valaddr_reg:x3; val_offset:60615*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60615*0 + 3*237*FLEN/8, x4, x1, x2)

inst_20206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffe00000000; valaddr_reg:x3; val_offset:60618*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60618*0 + 3*238*FLEN/8, x4, x1, x2)

inst_20207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffff00000000; valaddr_reg:x3; val_offset:60621*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60621*0 + 3*239*FLEN/8, x4, x1, x2)

inst_20208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffff80000000; valaddr_reg:x3; val_offset:60624*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60624*0 + 3*240*FLEN/8, x4, x1, x2)

inst_20209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffc0000000; valaddr_reg:x3; val_offset:60627*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60627*0 + 3*241*FLEN/8, x4, x1, x2)

inst_20210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffe0000000; valaddr_reg:x3; val_offset:60630*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60630*0 + 3*242*FLEN/8, x4, x1, x2)

inst_20211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffff0000000; valaddr_reg:x3; val_offset:60633*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60633*0 + 3*243*FLEN/8, x4, x1, x2)

inst_20212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffff8000000; valaddr_reg:x3; val_offset:60636*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60636*0 + 3*244*FLEN/8, x4, x1, x2)

inst_20213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffc000000; valaddr_reg:x3; val_offset:60639*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60639*0 + 3*245*FLEN/8, x4, x1, x2)

inst_20214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffe000000; valaddr_reg:x3; val_offset:60642*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60642*0 + 3*246*FLEN/8, x4, x1, x2)

inst_20215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffff000000; valaddr_reg:x3; val_offset:60645*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60645*0 + 3*247*FLEN/8, x4, x1, x2)

inst_20216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffff800000; valaddr_reg:x3; val_offset:60648*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60648*0 + 3*248*FLEN/8, x4, x1, x2)

inst_20217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffffc00000; valaddr_reg:x3; val_offset:60651*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60651*0 + 3*249*FLEN/8, x4, x1, x2)

inst_20218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffffe00000; valaddr_reg:x3; val_offset:60654*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60654*0 + 3*250*FLEN/8, x4, x1, x2)

inst_20219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffff00000; valaddr_reg:x3; val_offset:60657*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60657*0 + 3*251*FLEN/8, x4, x1, x2)

inst_20220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffff80000; valaddr_reg:x3; val_offset:60660*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60660*0 + 3*252*FLEN/8, x4, x1, x2)

inst_20221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffffc0000; valaddr_reg:x3; val_offset:60663*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60663*0 + 3*253*FLEN/8, x4, x1, x2)

inst_20222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffffe0000; valaddr_reg:x3; val_offset:60666*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60666*0 + 3*254*FLEN/8, x4, x1, x2)

inst_20223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffffff0000; valaddr_reg:x3; val_offset:60669*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60669*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_20224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffffff8000; valaddr_reg:x3; val_offset:60672*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60672*0 + 3*256*FLEN/8, x4, x1, x2)

inst_20225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffffffc000; valaddr_reg:x3; val_offset:60675*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60675*0 + 3*257*FLEN/8, x4, x1, x2)

inst_20226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffffffe000; valaddr_reg:x3; val_offset:60678*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60678*0 + 3*258*FLEN/8, x4, x1, x2)

inst_20227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffffff000; valaddr_reg:x3; val_offset:60681*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60681*0 + 3*259*FLEN/8, x4, x1, x2)

inst_20228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffffff800; valaddr_reg:x3; val_offset:60684*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60684*0 + 3*260*FLEN/8, x4, x1, x2)

inst_20229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffffffc00; valaddr_reg:x3; val_offset:60687*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60687*0 + 3*261*FLEN/8, x4, x1, x2)

inst_20230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffffffe00; valaddr_reg:x3; val_offset:60690*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60690*0 + 3*262*FLEN/8, x4, x1, x2)

inst_20231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffffffff00; valaddr_reg:x3; val_offset:60693*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60693*0 + 3*263*FLEN/8, x4, x1, x2)

inst_20232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffffffff80; valaddr_reg:x3; val_offset:60696*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60696*0 + 3*264*FLEN/8, x4, x1, x2)

inst_20233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffffffffc0; valaddr_reg:x3; val_offset:60699*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60699*0 + 3*265*FLEN/8, x4, x1, x2)

inst_20234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffffffffe0; valaddr_reg:x3; val_offset:60702*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60702*0 + 3*266*FLEN/8, x4, x1, x2)

inst_20235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffffffff0; valaddr_reg:x3; val_offset:60705*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60705*0 + 3*267*FLEN/8, x4, x1, x2)

inst_20236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffffffff8; valaddr_reg:x3; val_offset:60708*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60708*0 + 3*268*FLEN/8, x4, x1, x2)

inst_20237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffffffffc; valaddr_reg:x3; val_offset:60711*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60711*0 + 3*269*FLEN/8, x4, x1, x2)

inst_20238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85ffffffffffffe; valaddr_reg:x3; val_offset:60714*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60714*0 + 3*270*FLEN/8, x4, x1, x2)

inst_20239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x385 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xb85fffffffffffff; valaddr_reg:x3; val_offset:60717*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60717*0 + 3*271*FLEN/8, x4, x1, x2)

inst_20240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:60720*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60720*0 + 3*272*FLEN/8, x4, x1, x2)

inst_20241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:60723*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60723*0 + 3*273*FLEN/8, x4, x1, x2)

inst_20242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:60726*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60726*0 + 3*274*FLEN/8, x4, x1, x2)

inst_20243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:60729*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60729*0 + 3*275*FLEN/8, x4, x1, x2)

inst_20244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:60732*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60732*0 + 3*276*FLEN/8, x4, x1, x2)

inst_20245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:60735*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60735*0 + 3*277*FLEN/8, x4, x1, x2)

inst_20246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:60738*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60738*0 + 3*278*FLEN/8, x4, x1, x2)

inst_20247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:60741*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60741*0 + 3*279*FLEN/8, x4, x1, x2)

inst_20248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:60744*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60744*0 + 3*280*FLEN/8, x4, x1, x2)

inst_20249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:60747*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60747*0 + 3*281*FLEN/8, x4, x1, x2)

inst_20250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:60750*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60750*0 + 3*282*FLEN/8, x4, x1, x2)

inst_20251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:60753*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60753*0 + 3*283*FLEN/8, x4, x1, x2)

inst_20252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:60756*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60756*0 + 3*284*FLEN/8, x4, x1, x2)

inst_20253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:60759*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60759*0 + 3*285*FLEN/8, x4, x1, x2)

inst_20254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:60762*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60762*0 + 3*286*FLEN/8, x4, x1, x2)

inst_20255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:60765*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60765*0 + 3*287*FLEN/8, x4, x1, x2)

inst_20256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:60768*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60768*0 + 3*288*FLEN/8, x4, x1, x2)

inst_20257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:60771*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60771*0 + 3*289*FLEN/8, x4, x1, x2)

inst_20258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:60774*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60774*0 + 3*290*FLEN/8, x4, x1, x2)

inst_20259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:60777*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60777*0 + 3*291*FLEN/8, x4, x1, x2)

inst_20260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:60780*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60780*0 + 3*292*FLEN/8, x4, x1, x2)

inst_20261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6fcb3adb66bfb and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x645f9fe7a9aa6 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f86fcb3adb66bfb; op2val:0x9fe645f9fe7a9aa6;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:60783*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60783*0 + 3*293*FLEN/8, x4, x1, x2)

inst_20262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:60786*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60786*0 + 3*294*FLEN/8, x4, x1, x2)

inst_20263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:60789*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60789*0 + 3*295*FLEN/8, x4, x1, x2)

inst_20264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:60792*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60792*0 + 3*296*FLEN/8, x4, x1, x2)

inst_20265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:60795*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60795*0 + 3*297*FLEN/8, x4, x1, x2)

inst_20266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:60798*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60798*0 + 3*298*FLEN/8, x4, x1, x2)

inst_20267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:60801*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60801*0 + 3*299*FLEN/8, x4, x1, x2)

inst_20268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:60804*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60804*0 + 3*300*FLEN/8, x4, x1, x2)

inst_20269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:60807*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60807*0 + 3*301*FLEN/8, x4, x1, x2)

inst_20270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:60810*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60810*0 + 3*302*FLEN/8, x4, x1, x2)

inst_20271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:60813*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60813*0 + 3*303*FLEN/8, x4, x1, x2)

inst_20272:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:60816*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60816*0 + 3*304*FLEN/8, x4, x1, x2)

inst_20273:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:60819*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60819*0 + 3*305*FLEN/8, x4, x1, x2)

inst_20274:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:60822*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60822*0 + 3*306*FLEN/8, x4, x1, x2)

inst_20275:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:60825*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60825*0 + 3*307*FLEN/8, x4, x1, x2)

inst_20276:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:60828*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60828*0 + 3*308*FLEN/8, x4, x1, x2)

inst_20277:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:60831*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60831*0 + 3*309*FLEN/8, x4, x1, x2)

inst_20278:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:60834*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60834*0 + 3*310*FLEN/8, x4, x1, x2)

inst_20279:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:60837*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60837*0 + 3*311*FLEN/8, x4, x1, x2)

inst_20280:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:60840*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60840*0 + 3*312*FLEN/8, x4, x1, x2)

inst_20281:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:60843*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60843*0 + 3*313*FLEN/8, x4, x1, x2)

inst_20282:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:60846*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60846*0 + 3*314*FLEN/8, x4, x1, x2)

inst_20283:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:60849*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60849*0 + 3*315*FLEN/8, x4, x1, x2)

inst_20284:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000000000000; valaddr_reg:x3; val_offset:60852*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60852*0 + 3*316*FLEN/8, x4, x1, x2)

inst_20285:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000000000001; valaddr_reg:x3; val_offset:60855*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60855*0 + 3*317*FLEN/8, x4, x1, x2)

inst_20286:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000000000003; valaddr_reg:x3; val_offset:60858*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60858*0 + 3*318*FLEN/8, x4, x1, x2)

inst_20287:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000000000007; valaddr_reg:x3; val_offset:60861*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60861*0 + 3*319*FLEN/8, x4, x1, x2)

inst_20288:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000000000000f; valaddr_reg:x3; val_offset:60864*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60864*0 + 3*320*FLEN/8, x4, x1, x2)

inst_20289:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000000000001f; valaddr_reg:x3; val_offset:60867*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60867*0 + 3*321*FLEN/8, x4, x1, x2)

inst_20290:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000000000003f; valaddr_reg:x3; val_offset:60870*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60870*0 + 3*322*FLEN/8, x4, x1, x2)

inst_20291:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000000000007f; valaddr_reg:x3; val_offset:60873*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60873*0 + 3*323*FLEN/8, x4, x1, x2)

inst_20292:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00000000000ff; valaddr_reg:x3; val_offset:60876*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60876*0 + 3*324*FLEN/8, x4, x1, x2)

inst_20293:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00000000001ff; valaddr_reg:x3; val_offset:60879*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60879*0 + 3*325*FLEN/8, x4, x1, x2)

inst_20294:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00000000003ff; valaddr_reg:x3; val_offset:60882*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60882*0 + 3*326*FLEN/8, x4, x1, x2)

inst_20295:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00000000007ff; valaddr_reg:x3; val_offset:60885*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60885*0 + 3*327*FLEN/8, x4, x1, x2)

inst_20296:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000000000fff; valaddr_reg:x3; val_offset:60888*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60888*0 + 3*328*FLEN/8, x4, x1, x2)

inst_20297:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000000001fff; valaddr_reg:x3; val_offset:60891*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60891*0 + 3*329*FLEN/8, x4, x1, x2)

inst_20298:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000000003fff; valaddr_reg:x3; val_offset:60894*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60894*0 + 3*330*FLEN/8, x4, x1, x2)

inst_20299:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000000007fff; valaddr_reg:x3; val_offset:60897*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60897*0 + 3*331*FLEN/8, x4, x1, x2)

inst_20300:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000000000ffff; valaddr_reg:x3; val_offset:60900*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60900*0 + 3*332*FLEN/8, x4, x1, x2)

inst_20301:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000000001ffff; valaddr_reg:x3; val_offset:60903*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60903*0 + 3*333*FLEN/8, x4, x1, x2)

inst_20302:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000000003ffff; valaddr_reg:x3; val_offset:60906*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60906*0 + 3*334*FLEN/8, x4, x1, x2)

inst_20303:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000000007ffff; valaddr_reg:x3; val_offset:60909*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60909*0 + 3*335*FLEN/8, x4, x1, x2)

inst_20304:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00000000fffff; valaddr_reg:x3; val_offset:60912*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60912*0 + 3*336*FLEN/8, x4, x1, x2)

inst_20305:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00000001fffff; valaddr_reg:x3; val_offset:60915*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60915*0 + 3*337*FLEN/8, x4, x1, x2)

inst_20306:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00000003fffff; valaddr_reg:x3; val_offset:60918*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60918*0 + 3*338*FLEN/8, x4, x1, x2)

inst_20307:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00000007fffff; valaddr_reg:x3; val_offset:60921*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60921*0 + 3*339*FLEN/8, x4, x1, x2)

inst_20308:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000000ffffff; valaddr_reg:x3; val_offset:60924*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60924*0 + 3*340*FLEN/8, x4, x1, x2)

inst_20309:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000001ffffff; valaddr_reg:x3; val_offset:60927*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60927*0 + 3*341*FLEN/8, x4, x1, x2)

inst_20310:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000003ffffff; valaddr_reg:x3; val_offset:60930*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60930*0 + 3*342*FLEN/8, x4, x1, x2)

inst_20311:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000007ffffff; valaddr_reg:x3; val_offset:60933*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60933*0 + 3*343*FLEN/8, x4, x1, x2)

inst_20312:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000000fffffff; valaddr_reg:x3; val_offset:60936*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60936*0 + 3*344*FLEN/8, x4, x1, x2)

inst_20313:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000001fffffff; valaddr_reg:x3; val_offset:60939*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60939*0 + 3*345*FLEN/8, x4, x1, x2)

inst_20314:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000003fffffff; valaddr_reg:x3; val_offset:60942*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60942*0 + 3*346*FLEN/8, x4, x1, x2)

inst_20315:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000007fffffff; valaddr_reg:x3; val_offset:60945*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60945*0 + 3*347*FLEN/8, x4, x1, x2)

inst_20316:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00000ffffffff; valaddr_reg:x3; val_offset:60948*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60948*0 + 3*348*FLEN/8, x4, x1, x2)

inst_20317:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00001ffffffff; valaddr_reg:x3; val_offset:60951*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60951*0 + 3*349*FLEN/8, x4, x1, x2)

inst_20318:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00003ffffffff; valaddr_reg:x3; val_offset:60954*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60954*0 + 3*350*FLEN/8, x4, x1, x2)

inst_20319:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00007ffffffff; valaddr_reg:x3; val_offset:60957*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60957*0 + 3*351*FLEN/8, x4, x1, x2)

inst_20320:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0000fffffffff; valaddr_reg:x3; val_offset:60960*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60960*0 + 3*352*FLEN/8, x4, x1, x2)

inst_20321:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0001fffffffff; valaddr_reg:x3; val_offset:60963*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60963*0 + 3*353*FLEN/8, x4, x1, x2)

inst_20322:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0003fffffffff; valaddr_reg:x3; val_offset:60966*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60966*0 + 3*354*FLEN/8, x4, x1, x2)

inst_20323:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0007fffffffff; valaddr_reg:x3; val_offset:60969*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60969*0 + 3*355*FLEN/8, x4, x1, x2)

inst_20324:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c000ffffffffff; valaddr_reg:x3; val_offset:60972*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60972*0 + 3*356*FLEN/8, x4, x1, x2)

inst_20325:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c001ffffffffff; valaddr_reg:x3; val_offset:60975*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60975*0 + 3*357*FLEN/8, x4, x1, x2)

inst_20326:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c003ffffffffff; valaddr_reg:x3; val_offset:60978*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60978*0 + 3*358*FLEN/8, x4, x1, x2)

inst_20327:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c007ffffffffff; valaddr_reg:x3; val_offset:60981*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60981*0 + 3*359*FLEN/8, x4, x1, x2)

inst_20328:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c00fffffffffff; valaddr_reg:x3; val_offset:60984*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60984*0 + 3*360*FLEN/8, x4, x1, x2)

inst_20329:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c01fffffffffff; valaddr_reg:x3; val_offset:60987*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60987*0 + 3*361*FLEN/8, x4, x1, x2)

inst_20330:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c03fffffffffff; valaddr_reg:x3; val_offset:60990*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60990*0 + 3*362*FLEN/8, x4, x1, x2)

inst_20331:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c07fffffffffff; valaddr_reg:x3; val_offset:60993*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60993*0 + 3*363*FLEN/8, x4, x1, x2)

inst_20332:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c0ffffffffffff; valaddr_reg:x3; val_offset:60996*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60996*0 + 3*364*FLEN/8, x4, x1, x2)

inst_20333:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c1ffffffffffff; valaddr_reg:x3; val_offset:60999*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 60999*0 + 3*365*FLEN/8, x4, x1, x2)

inst_20334:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c3ffffffffffff; valaddr_reg:x3; val_offset:61002*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61002*0 + 3*366*FLEN/8, x4, x1, x2)

inst_20335:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c7ffffffffffff; valaddr_reg:x3; val_offset:61005*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61005*0 + 3*367*FLEN/8, x4, x1, x2)

inst_20336:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81c8000000000000; valaddr_reg:x3; val_offset:61008*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61008*0 + 3*368*FLEN/8, x4, x1, x2)

inst_20337:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cc000000000000; valaddr_reg:x3; val_offset:61011*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61011*0 + 3*369*FLEN/8, x4, x1, x2)

inst_20338:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81ce000000000000; valaddr_reg:x3; val_offset:61014*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61014*0 + 3*370*FLEN/8, x4, x1, x2)

inst_20339:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cf000000000000; valaddr_reg:x3; val_offset:61017*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61017*0 + 3*371*FLEN/8, x4, x1, x2)

inst_20340:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cf800000000000; valaddr_reg:x3; val_offset:61020*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61020*0 + 3*372*FLEN/8, x4, x1, x2)

inst_20341:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfc00000000000; valaddr_reg:x3; val_offset:61023*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61023*0 + 3*373*FLEN/8, x4, x1, x2)

inst_20342:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfe00000000000; valaddr_reg:x3; val_offset:61026*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61026*0 + 3*374*FLEN/8, x4, x1, x2)

inst_20343:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cff00000000000; valaddr_reg:x3; val_offset:61029*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61029*0 + 3*375*FLEN/8, x4, x1, x2)

inst_20344:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cff80000000000; valaddr_reg:x3; val_offset:61032*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61032*0 + 3*376*FLEN/8, x4, x1, x2)

inst_20345:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffc0000000000; valaddr_reg:x3; val_offset:61035*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61035*0 + 3*377*FLEN/8, x4, x1, x2)

inst_20346:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffe0000000000; valaddr_reg:x3; val_offset:61038*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61038*0 + 3*378*FLEN/8, x4, x1, x2)

inst_20347:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfff0000000000; valaddr_reg:x3; val_offset:61041*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61041*0 + 3*379*FLEN/8, x4, x1, x2)

inst_20348:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfff8000000000; valaddr_reg:x3; val_offset:61044*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61044*0 + 3*380*FLEN/8, x4, x1, x2)

inst_20349:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffc000000000; valaddr_reg:x3; val_offset:61047*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61047*0 + 3*381*FLEN/8, x4, x1, x2)

inst_20350:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffe000000000; valaddr_reg:x3; val_offset:61050*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61050*0 + 3*382*FLEN/8, x4, x1, x2)

inst_20351:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffff000000000; valaddr_reg:x3; val_offset:61053*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61053*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_20352:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffff800000000; valaddr_reg:x3; val_offset:61056*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61056*0 + 3*384*FLEN/8, x4, x1, x2)

inst_20353:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffc00000000; valaddr_reg:x3; val_offset:61059*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61059*0 + 3*385*FLEN/8, x4, x1, x2)

inst_20354:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffe00000000; valaddr_reg:x3; val_offset:61062*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61062*0 + 3*386*FLEN/8, x4, x1, x2)

inst_20355:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffff00000000; valaddr_reg:x3; val_offset:61065*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61065*0 + 3*387*FLEN/8, x4, x1, x2)

inst_20356:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffff80000000; valaddr_reg:x3; val_offset:61068*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61068*0 + 3*388*FLEN/8, x4, x1, x2)

inst_20357:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffc0000000; valaddr_reg:x3; val_offset:61071*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61071*0 + 3*389*FLEN/8, x4, x1, x2)

inst_20358:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffe0000000; valaddr_reg:x3; val_offset:61074*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61074*0 + 3*390*FLEN/8, x4, x1, x2)

inst_20359:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffff0000000; valaddr_reg:x3; val_offset:61077*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61077*0 + 3*391*FLEN/8, x4, x1, x2)

inst_20360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffff8000000; valaddr_reg:x3; val_offset:61080*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61080*0 + 3*392*FLEN/8, x4, x1, x2)

inst_20361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffc000000; valaddr_reg:x3; val_offset:61083*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61083*0 + 3*393*FLEN/8, x4, x1, x2)

inst_20362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffe000000; valaddr_reg:x3; val_offset:61086*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61086*0 + 3*394*FLEN/8, x4, x1, x2)

inst_20363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffff000000; valaddr_reg:x3; val_offset:61089*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61089*0 + 3*395*FLEN/8, x4, x1, x2)

inst_20364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffff800000; valaddr_reg:x3; val_offset:61092*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61092*0 + 3*396*FLEN/8, x4, x1, x2)

inst_20365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffffc00000; valaddr_reg:x3; val_offset:61095*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61095*0 + 3*397*FLEN/8, x4, x1, x2)

inst_20366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffffe00000; valaddr_reg:x3; val_offset:61098*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61098*0 + 3*398*FLEN/8, x4, x1, x2)

inst_20367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffff00000; valaddr_reg:x3; val_offset:61101*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61101*0 + 3*399*FLEN/8, x4, x1, x2)

inst_20368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffff80000; valaddr_reg:x3; val_offset:61104*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61104*0 + 3*400*FLEN/8, x4, x1, x2)

inst_20369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffffc0000; valaddr_reg:x3; val_offset:61107*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61107*0 + 3*401*FLEN/8, x4, x1, x2)

inst_20370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffffe0000; valaddr_reg:x3; val_offset:61110*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61110*0 + 3*402*FLEN/8, x4, x1, x2)

inst_20371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffffff0000; valaddr_reg:x3; val_offset:61113*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61113*0 + 3*403*FLEN/8, x4, x1, x2)

inst_20372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffffff8000; valaddr_reg:x3; val_offset:61116*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61116*0 + 3*404*FLEN/8, x4, x1, x2)

inst_20373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffffffc000; valaddr_reg:x3; val_offset:61119*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61119*0 + 3*405*FLEN/8, x4, x1, x2)

inst_20374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffffffe000; valaddr_reg:x3; val_offset:61122*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61122*0 + 3*406*FLEN/8, x4, x1, x2)

inst_20375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffffff000; valaddr_reg:x3; val_offset:61125*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61125*0 + 3*407*FLEN/8, x4, x1, x2)

inst_20376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffffff800; valaddr_reg:x3; val_offset:61128*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61128*0 + 3*408*FLEN/8, x4, x1, x2)

inst_20377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffffffc00; valaddr_reg:x3; val_offset:61131*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61131*0 + 3*409*FLEN/8, x4, x1, x2)

inst_20378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffffffe00; valaddr_reg:x3; val_offset:61134*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61134*0 + 3*410*FLEN/8, x4, x1, x2)

inst_20379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffffffff00; valaddr_reg:x3; val_offset:61137*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61137*0 + 3*411*FLEN/8, x4, x1, x2)

inst_20380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffffffff80; valaddr_reg:x3; val_offset:61140*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61140*0 + 3*412*FLEN/8, x4, x1, x2)

inst_20381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffffffffc0; valaddr_reg:x3; val_offset:61143*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61143*0 + 3*413*FLEN/8, x4, x1, x2)

inst_20382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffffffffe0; valaddr_reg:x3; val_offset:61146*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61146*0 + 3*414*FLEN/8, x4, x1, x2)

inst_20383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffffffff0; valaddr_reg:x3; val_offset:61149*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61149*0 + 3*415*FLEN/8, x4, x1, x2)

inst_20384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffffffff8; valaddr_reg:x3; val_offset:61152*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61152*0 + 3*416*FLEN/8, x4, x1, x2)

inst_20385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffffffffc; valaddr_reg:x3; val_offset:61155*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61155*0 + 3*417*FLEN/8, x4, x1, x2)

inst_20386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cffffffffffffe; valaddr_reg:x3; val_offset:61158*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61158*0 + 3*418*FLEN/8, x4, x1, x2)

inst_20387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x716ffe3fee2fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8716ffe3fee2fb; op2val:0x8000;
op3val:0x81cfffffffffffff; valaddr_reg:x3; val_offset:61161*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61161*0 + 3*419*FLEN/8, x4, x1, x2)

inst_20388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:61164*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61164*0 + 3*420*FLEN/8, x4, x1, x2)

inst_20389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:61167*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61167*0 + 3*421*FLEN/8, x4, x1, x2)

inst_20390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:61170*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61170*0 + 3*422*FLEN/8, x4, x1, x2)

inst_20391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:61173*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61173*0 + 3*423*FLEN/8, x4, x1, x2)

inst_20392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:61176*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61176*0 + 3*424*FLEN/8, x4, x1, x2)

inst_20393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:61179*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61179*0 + 3*425*FLEN/8, x4, x1, x2)

inst_20394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:61182*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61182*0 + 3*426*FLEN/8, x4, x1, x2)

inst_20395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:61185*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61185*0 + 3*427*FLEN/8, x4, x1, x2)

inst_20396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:61188*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61188*0 + 3*428*FLEN/8, x4, x1, x2)

inst_20397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:61191*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61191*0 + 3*429*FLEN/8, x4, x1, x2)

inst_20398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:61194*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61194*0 + 3*430*FLEN/8, x4, x1, x2)

inst_20399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:61197*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61197*0 + 3*431*FLEN/8, x4, x1, x2)

inst_20400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:61200*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61200*0 + 3*432*FLEN/8, x4, x1, x2)

inst_20401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:61203*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61203*0 + 3*433*FLEN/8, x4, x1, x2)

inst_20402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:61206*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61206*0 + 3*434*FLEN/8, x4, x1, x2)

inst_20403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:61209*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61209*0 + 3*435*FLEN/8, x4, x1, x2)

inst_20404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:61212*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61212*0 + 3*436*FLEN/8, x4, x1, x2)

inst_20405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:61215*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61215*0 + 3*437*FLEN/8, x4, x1, x2)

inst_20406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:61218*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61218*0 + 3*438*FLEN/8, x4, x1, x2)

inst_20407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:61221*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61221*0 + 3*439*FLEN/8, x4, x1, x2)

inst_20408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:61224*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61224*0 + 3*440*FLEN/8, x4, x1, x2)

inst_20409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:61227*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61227*0 + 3*441*FLEN/8, x4, x1, x2)

inst_20410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000000000000; valaddr_reg:x3; val_offset:61230*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61230*0 + 3*442*FLEN/8, x4, x1, x2)

inst_20411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000000000001; valaddr_reg:x3; val_offset:61233*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61233*0 + 3*443*FLEN/8, x4, x1, x2)

inst_20412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000000000003; valaddr_reg:x3; val_offset:61236*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61236*0 + 3*444*FLEN/8, x4, x1, x2)

inst_20413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000000000007; valaddr_reg:x3; val_offset:61239*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61239*0 + 3*445*FLEN/8, x4, x1, x2)

inst_20414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000000000000f; valaddr_reg:x3; val_offset:61242*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61242*0 + 3*446*FLEN/8, x4, x1, x2)

inst_20415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000000000001f; valaddr_reg:x3; val_offset:61245*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61245*0 + 3*447*FLEN/8, x4, x1, x2)

inst_20416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000000000003f; valaddr_reg:x3; val_offset:61248*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61248*0 + 3*448*FLEN/8, x4, x1, x2)

inst_20417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000000000007f; valaddr_reg:x3; val_offset:61251*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61251*0 + 3*449*FLEN/8, x4, x1, x2)

inst_20418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00000000000ff; valaddr_reg:x3; val_offset:61254*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61254*0 + 3*450*FLEN/8, x4, x1, x2)

inst_20419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00000000001ff; valaddr_reg:x3; val_offset:61257*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61257*0 + 3*451*FLEN/8, x4, x1, x2)

inst_20420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00000000003ff; valaddr_reg:x3; val_offset:61260*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61260*0 + 3*452*FLEN/8, x4, x1, x2)

inst_20421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00000000007ff; valaddr_reg:x3; val_offset:61263*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61263*0 + 3*453*FLEN/8, x4, x1, x2)

inst_20422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000000000fff; valaddr_reg:x3; val_offset:61266*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61266*0 + 3*454*FLEN/8, x4, x1, x2)

inst_20423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000000001fff; valaddr_reg:x3; val_offset:61269*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61269*0 + 3*455*FLEN/8, x4, x1, x2)

inst_20424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000000003fff; valaddr_reg:x3; val_offset:61272*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61272*0 + 3*456*FLEN/8, x4, x1, x2)

inst_20425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000000007fff; valaddr_reg:x3; val_offset:61275*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61275*0 + 3*457*FLEN/8, x4, x1, x2)

inst_20426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000000000ffff; valaddr_reg:x3; val_offset:61278*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61278*0 + 3*458*FLEN/8, x4, x1, x2)

inst_20427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000000001ffff; valaddr_reg:x3; val_offset:61281*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61281*0 + 3*459*FLEN/8, x4, x1, x2)

inst_20428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000000003ffff; valaddr_reg:x3; val_offset:61284*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61284*0 + 3*460*FLEN/8, x4, x1, x2)

inst_20429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000000007ffff; valaddr_reg:x3; val_offset:61287*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61287*0 + 3*461*FLEN/8, x4, x1, x2)

inst_20430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00000000fffff; valaddr_reg:x3; val_offset:61290*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61290*0 + 3*462*FLEN/8, x4, x1, x2)

inst_20431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00000001fffff; valaddr_reg:x3; val_offset:61293*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61293*0 + 3*463*FLEN/8, x4, x1, x2)

inst_20432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00000003fffff; valaddr_reg:x3; val_offset:61296*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61296*0 + 3*464*FLEN/8, x4, x1, x2)

inst_20433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00000007fffff; valaddr_reg:x3; val_offset:61299*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61299*0 + 3*465*FLEN/8, x4, x1, x2)

inst_20434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000000ffffff; valaddr_reg:x3; val_offset:61302*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61302*0 + 3*466*FLEN/8, x4, x1, x2)

inst_20435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000001ffffff; valaddr_reg:x3; val_offset:61305*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61305*0 + 3*467*FLEN/8, x4, x1, x2)

inst_20436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000003ffffff; valaddr_reg:x3; val_offset:61308*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61308*0 + 3*468*FLEN/8, x4, x1, x2)

inst_20437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000007ffffff; valaddr_reg:x3; val_offset:61311*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61311*0 + 3*469*FLEN/8, x4, x1, x2)

inst_20438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000000fffffff; valaddr_reg:x3; val_offset:61314*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61314*0 + 3*470*FLEN/8, x4, x1, x2)

inst_20439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000001fffffff; valaddr_reg:x3; val_offset:61317*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61317*0 + 3*471*FLEN/8, x4, x1, x2)

inst_20440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000003fffffff; valaddr_reg:x3; val_offset:61320*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61320*0 + 3*472*FLEN/8, x4, x1, x2)

inst_20441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000007fffffff; valaddr_reg:x3; val_offset:61323*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61323*0 + 3*473*FLEN/8, x4, x1, x2)

inst_20442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00000ffffffff; valaddr_reg:x3; val_offset:61326*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61326*0 + 3*474*FLEN/8, x4, x1, x2)

inst_20443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00001ffffffff; valaddr_reg:x3; val_offset:61329*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61329*0 + 3*475*FLEN/8, x4, x1, x2)

inst_20444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00003ffffffff; valaddr_reg:x3; val_offset:61332*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61332*0 + 3*476*FLEN/8, x4, x1, x2)

inst_20445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00007ffffffff; valaddr_reg:x3; val_offset:61335*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61335*0 + 3*477*FLEN/8, x4, x1, x2)

inst_20446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0000fffffffff; valaddr_reg:x3; val_offset:61338*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61338*0 + 3*478*FLEN/8, x4, x1, x2)

inst_20447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0001fffffffff; valaddr_reg:x3; val_offset:61341*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61341*0 + 3*479*FLEN/8, x4, x1, x2)

inst_20448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0003fffffffff; valaddr_reg:x3; val_offset:61344*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61344*0 + 3*480*FLEN/8, x4, x1, x2)

inst_20449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0007fffffffff; valaddr_reg:x3; val_offset:61347*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61347*0 + 3*481*FLEN/8, x4, x1, x2)

inst_20450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd000ffffffffff; valaddr_reg:x3; val_offset:61350*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61350*0 + 3*482*FLEN/8, x4, x1, x2)

inst_20451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd001ffffffffff; valaddr_reg:x3; val_offset:61353*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61353*0 + 3*483*FLEN/8, x4, x1, x2)

inst_20452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd003ffffffffff; valaddr_reg:x3; val_offset:61356*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61356*0 + 3*484*FLEN/8, x4, x1, x2)

inst_20453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd007ffffffffff; valaddr_reg:x3; val_offset:61359*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61359*0 + 3*485*FLEN/8, x4, x1, x2)

inst_20454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd00fffffffffff; valaddr_reg:x3; val_offset:61362*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61362*0 + 3*486*FLEN/8, x4, x1, x2)

inst_20455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd01fffffffffff; valaddr_reg:x3; val_offset:61365*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61365*0 + 3*487*FLEN/8, x4, x1, x2)

inst_20456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd03fffffffffff; valaddr_reg:x3; val_offset:61368*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61368*0 + 3*488*FLEN/8, x4, x1, x2)

inst_20457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd07fffffffffff; valaddr_reg:x3; val_offset:61371*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61371*0 + 3*489*FLEN/8, x4, x1, x2)

inst_20458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd0ffffffffffff; valaddr_reg:x3; val_offset:61374*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61374*0 + 3*490*FLEN/8, x4, x1, x2)

inst_20459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd1ffffffffffff; valaddr_reg:x3; val_offset:61377*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61377*0 + 3*491*FLEN/8, x4, x1, x2)

inst_20460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd3ffffffffffff; valaddr_reg:x3; val_offset:61380*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61380*0 + 3*492*FLEN/8, x4, x1, x2)

inst_20461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd7ffffffffffff; valaddr_reg:x3; val_offset:61383*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61383*0 + 3*493*FLEN/8, x4, x1, x2)

inst_20462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfd8000000000000; valaddr_reg:x3; val_offset:61386*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61386*0 + 3*494*FLEN/8, x4, x1, x2)

inst_20463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdc000000000000; valaddr_reg:x3; val_offset:61389*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61389*0 + 3*495*FLEN/8, x4, x1, x2)

inst_20464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfde000000000000; valaddr_reg:x3; val_offset:61392*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61392*0 + 3*496*FLEN/8, x4, x1, x2)

inst_20465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdf000000000000; valaddr_reg:x3; val_offset:61395*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61395*0 + 3*497*FLEN/8, x4, x1, x2)

inst_20466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdf800000000000; valaddr_reg:x3; val_offset:61398*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61398*0 + 3*498*FLEN/8, x4, x1, x2)

inst_20467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfc00000000000; valaddr_reg:x3; val_offset:61401*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61401*0 + 3*499*FLEN/8, x4, x1, x2)

inst_20468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfe00000000000; valaddr_reg:x3; val_offset:61404*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61404*0 + 3*500*FLEN/8, x4, x1, x2)

inst_20469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdff00000000000; valaddr_reg:x3; val_offset:61407*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61407*0 + 3*501*FLEN/8, x4, x1, x2)

inst_20470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdff80000000000; valaddr_reg:x3; val_offset:61410*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61410*0 + 3*502*FLEN/8, x4, x1, x2)

inst_20471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffc0000000000; valaddr_reg:x3; val_offset:61413*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61413*0 + 3*503*FLEN/8, x4, x1, x2)

inst_20472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffe0000000000; valaddr_reg:x3; val_offset:61416*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61416*0 + 3*504*FLEN/8, x4, x1, x2)

inst_20473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfff0000000000; valaddr_reg:x3; val_offset:61419*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61419*0 + 3*505*FLEN/8, x4, x1, x2)

inst_20474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfff8000000000; valaddr_reg:x3; val_offset:61422*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61422*0 + 3*506*FLEN/8, x4, x1, x2)

inst_20475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffc000000000; valaddr_reg:x3; val_offset:61425*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61425*0 + 3*507*FLEN/8, x4, x1, x2)

inst_20476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffe000000000; valaddr_reg:x3; val_offset:61428*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61428*0 + 3*508*FLEN/8, x4, x1, x2)

inst_20477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffff000000000; valaddr_reg:x3; val_offset:61431*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61431*0 + 3*509*FLEN/8, x4, x1, x2)

inst_20478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffff800000000; valaddr_reg:x3; val_offset:61434*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61434*0 + 3*510*FLEN/8, x4, x1, x2)

inst_20479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffc00000000; valaddr_reg:x3; val_offset:61437*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61437*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_20480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffe00000000; valaddr_reg:x3; val_offset:61440*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61440*0 + 3*512*FLEN/8, x4, x1, x2)

inst_20481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffff00000000; valaddr_reg:x3; val_offset:61443*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61443*0 + 3*513*FLEN/8, x4, x1, x2)

inst_20482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffff80000000; valaddr_reg:x3; val_offset:61446*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61446*0 + 3*514*FLEN/8, x4, x1, x2)

inst_20483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffc0000000; valaddr_reg:x3; val_offset:61449*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61449*0 + 3*515*FLEN/8, x4, x1, x2)

inst_20484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffe0000000; valaddr_reg:x3; val_offset:61452*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61452*0 + 3*516*FLEN/8, x4, x1, x2)

inst_20485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffff0000000; valaddr_reg:x3; val_offset:61455*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61455*0 + 3*517*FLEN/8, x4, x1, x2)

inst_20486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffff8000000; valaddr_reg:x3; val_offset:61458*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61458*0 + 3*518*FLEN/8, x4, x1, x2)

inst_20487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffc000000; valaddr_reg:x3; val_offset:61461*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61461*0 + 3*519*FLEN/8, x4, x1, x2)

inst_20488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffe000000; valaddr_reg:x3; val_offset:61464*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61464*0 + 3*520*FLEN/8, x4, x1, x2)

inst_20489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffff000000; valaddr_reg:x3; val_offset:61467*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61467*0 + 3*521*FLEN/8, x4, x1, x2)

inst_20490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffff800000; valaddr_reg:x3; val_offset:61470*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61470*0 + 3*522*FLEN/8, x4, x1, x2)

inst_20491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffffc00000; valaddr_reg:x3; val_offset:61473*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61473*0 + 3*523*FLEN/8, x4, x1, x2)

inst_20492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffffe00000; valaddr_reg:x3; val_offset:61476*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61476*0 + 3*524*FLEN/8, x4, x1, x2)

inst_20493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffff00000; valaddr_reg:x3; val_offset:61479*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61479*0 + 3*525*FLEN/8, x4, x1, x2)

inst_20494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffff80000; valaddr_reg:x3; val_offset:61482*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61482*0 + 3*526*FLEN/8, x4, x1, x2)

inst_20495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffffc0000; valaddr_reg:x3; val_offset:61485*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61485*0 + 3*527*FLEN/8, x4, x1, x2)

inst_20496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffffe0000; valaddr_reg:x3; val_offset:61488*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61488*0 + 3*528*FLEN/8, x4, x1, x2)

inst_20497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffffff0000; valaddr_reg:x3; val_offset:61491*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61491*0 + 3*529*FLEN/8, x4, x1, x2)

inst_20498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffffff8000; valaddr_reg:x3; val_offset:61494*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61494*0 + 3*530*FLEN/8, x4, x1, x2)

inst_20499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffffffc000; valaddr_reg:x3; val_offset:61497*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61497*0 + 3*531*FLEN/8, x4, x1, x2)

inst_20500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffffffe000; valaddr_reg:x3; val_offset:61500*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61500*0 + 3*532*FLEN/8, x4, x1, x2)

inst_20501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffffff000; valaddr_reg:x3; val_offset:61503*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61503*0 + 3*533*FLEN/8, x4, x1, x2)

inst_20502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffffff800; valaddr_reg:x3; val_offset:61506*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61506*0 + 3*534*FLEN/8, x4, x1, x2)

inst_20503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffffffc00; valaddr_reg:x3; val_offset:61509*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61509*0 + 3*535*FLEN/8, x4, x1, x2)

inst_20504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffffffe00; valaddr_reg:x3; val_offset:61512*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61512*0 + 3*536*FLEN/8, x4, x1, x2)

inst_20505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffffffff00; valaddr_reg:x3; val_offset:61515*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61515*0 + 3*537*FLEN/8, x4, x1, x2)

inst_20506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffffffff80; valaddr_reg:x3; val_offset:61518*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61518*0 + 3*538*FLEN/8, x4, x1, x2)

inst_20507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffffffffc0; valaddr_reg:x3; val_offset:61521*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61521*0 + 3*539*FLEN/8, x4, x1, x2)

inst_20508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffffffffe0; valaddr_reg:x3; val_offset:61524*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61524*0 + 3*540*FLEN/8, x4, x1, x2)

inst_20509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffffffff0; valaddr_reg:x3; val_offset:61527*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61527*0 + 3*541*FLEN/8, x4, x1, x2)

inst_20510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffffffff8; valaddr_reg:x3; val_offset:61530*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61530*0 + 3*542*FLEN/8, x4, x1, x2)

inst_20511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffffffffc; valaddr_reg:x3; val_offset:61533*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61533*0 + 3*543*FLEN/8, x4, x1, x2)

inst_20512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdffffffffffffe; valaddr_reg:x3; val_offset:61536*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61536*0 + 3*544*FLEN/8, x4, x1, x2)

inst_20513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x74ac1f4d6cd77 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x5fb55a40b557e and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f874ac1f4d6cd77; op2val:0x9fe5fb55a40b557e;
op3val:0xbfdfffffffffffff; valaddr_reg:x3; val_offset:61539*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61539*0 + 3*545*FLEN/8, x4, x1, x2)

inst_20514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000000000000; valaddr_reg:x3; val_offset:61542*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61542*0 + 3*546*FLEN/8, x4, x1, x2)

inst_20515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000000000001; valaddr_reg:x3; val_offset:61545*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61545*0 + 3*547*FLEN/8, x4, x1, x2)

inst_20516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000000000003; valaddr_reg:x3; val_offset:61548*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61548*0 + 3*548*FLEN/8, x4, x1, x2)

inst_20517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000000000007; valaddr_reg:x3; val_offset:61551*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61551*0 + 3*549*FLEN/8, x4, x1, x2)

inst_20518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000000000000f; valaddr_reg:x3; val_offset:61554*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61554*0 + 3*550*FLEN/8, x4, x1, x2)

inst_20519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000000000001f; valaddr_reg:x3; val_offset:61557*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61557*0 + 3*551*FLEN/8, x4, x1, x2)

inst_20520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000000000003f; valaddr_reg:x3; val_offset:61560*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61560*0 + 3*552*FLEN/8, x4, x1, x2)

inst_20521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000000000007f; valaddr_reg:x3; val_offset:61563*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61563*0 + 3*553*FLEN/8, x4, x1, x2)

inst_20522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00000000000ff; valaddr_reg:x3; val_offset:61566*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61566*0 + 3*554*FLEN/8, x4, x1, x2)

inst_20523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00000000001ff; valaddr_reg:x3; val_offset:61569*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61569*0 + 3*555*FLEN/8, x4, x1, x2)

inst_20524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00000000003ff; valaddr_reg:x3; val_offset:61572*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61572*0 + 3*556*FLEN/8, x4, x1, x2)

inst_20525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00000000007ff; valaddr_reg:x3; val_offset:61575*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61575*0 + 3*557*FLEN/8, x4, x1, x2)

inst_20526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000000000fff; valaddr_reg:x3; val_offset:61578*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61578*0 + 3*558*FLEN/8, x4, x1, x2)

inst_20527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000000001fff; valaddr_reg:x3; val_offset:61581*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61581*0 + 3*559*FLEN/8, x4, x1, x2)

inst_20528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000000003fff; valaddr_reg:x3; val_offset:61584*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61584*0 + 3*560*FLEN/8, x4, x1, x2)

inst_20529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000000007fff; valaddr_reg:x3; val_offset:61587*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61587*0 + 3*561*FLEN/8, x4, x1, x2)

inst_20530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000000000ffff; valaddr_reg:x3; val_offset:61590*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61590*0 + 3*562*FLEN/8, x4, x1, x2)

inst_20531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000000001ffff; valaddr_reg:x3; val_offset:61593*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61593*0 + 3*563*FLEN/8, x4, x1, x2)

inst_20532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000000003ffff; valaddr_reg:x3; val_offset:61596*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61596*0 + 3*564*FLEN/8, x4, x1, x2)

inst_20533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000000007ffff; valaddr_reg:x3; val_offset:61599*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61599*0 + 3*565*FLEN/8, x4, x1, x2)

inst_20534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00000000fffff; valaddr_reg:x3; val_offset:61602*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61602*0 + 3*566*FLEN/8, x4, x1, x2)

inst_20535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00000001fffff; valaddr_reg:x3; val_offset:61605*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61605*0 + 3*567*FLEN/8, x4, x1, x2)

inst_20536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00000003fffff; valaddr_reg:x3; val_offset:61608*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61608*0 + 3*568*FLEN/8, x4, x1, x2)

inst_20537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00000007fffff; valaddr_reg:x3; val_offset:61611*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61611*0 + 3*569*FLEN/8, x4, x1, x2)

inst_20538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000000ffffff; valaddr_reg:x3; val_offset:61614*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61614*0 + 3*570*FLEN/8, x4, x1, x2)

inst_20539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000001ffffff; valaddr_reg:x3; val_offset:61617*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61617*0 + 3*571*FLEN/8, x4, x1, x2)

inst_20540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000003ffffff; valaddr_reg:x3; val_offset:61620*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61620*0 + 3*572*FLEN/8, x4, x1, x2)

inst_20541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000007ffffff; valaddr_reg:x3; val_offset:61623*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61623*0 + 3*573*FLEN/8, x4, x1, x2)

inst_20542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000000fffffff; valaddr_reg:x3; val_offset:61626*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61626*0 + 3*574*FLEN/8, x4, x1, x2)

inst_20543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000001fffffff; valaddr_reg:x3; val_offset:61629*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61629*0 + 3*575*FLEN/8, x4, x1, x2)

inst_20544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000003fffffff; valaddr_reg:x3; val_offset:61632*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61632*0 + 3*576*FLEN/8, x4, x1, x2)

inst_20545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000007fffffff; valaddr_reg:x3; val_offset:61635*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61635*0 + 3*577*FLEN/8, x4, x1, x2)

inst_20546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00000ffffffff; valaddr_reg:x3; val_offset:61638*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61638*0 + 3*578*FLEN/8, x4, x1, x2)

inst_20547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00001ffffffff; valaddr_reg:x3; val_offset:61641*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61641*0 + 3*579*FLEN/8, x4, x1, x2)

inst_20548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00003ffffffff; valaddr_reg:x3; val_offset:61644*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61644*0 + 3*580*FLEN/8, x4, x1, x2)

inst_20549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00007ffffffff; valaddr_reg:x3; val_offset:61647*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61647*0 + 3*581*FLEN/8, x4, x1, x2)

inst_20550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0000fffffffff; valaddr_reg:x3; val_offset:61650*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61650*0 + 3*582*FLEN/8, x4, x1, x2)

inst_20551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0001fffffffff; valaddr_reg:x3; val_offset:61653*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61653*0 + 3*583*FLEN/8, x4, x1, x2)

inst_20552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0003fffffffff; valaddr_reg:x3; val_offset:61656*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61656*0 + 3*584*FLEN/8, x4, x1, x2)

inst_20553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0007fffffffff; valaddr_reg:x3; val_offset:61659*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61659*0 + 3*585*FLEN/8, x4, x1, x2)

inst_20554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de000ffffffffff; valaddr_reg:x3; val_offset:61662*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61662*0 + 3*586*FLEN/8, x4, x1, x2)

inst_20555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de001ffffffffff; valaddr_reg:x3; val_offset:61665*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61665*0 + 3*587*FLEN/8, x4, x1, x2)

inst_20556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de003ffffffffff; valaddr_reg:x3; val_offset:61668*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61668*0 + 3*588*FLEN/8, x4, x1, x2)

inst_20557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de007ffffffffff; valaddr_reg:x3; val_offset:61671*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61671*0 + 3*589*FLEN/8, x4, x1, x2)

inst_20558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de00fffffffffff; valaddr_reg:x3; val_offset:61674*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61674*0 + 3*590*FLEN/8, x4, x1, x2)

inst_20559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de01fffffffffff; valaddr_reg:x3; val_offset:61677*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61677*0 + 3*591*FLEN/8, x4, x1, x2)

inst_20560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de03fffffffffff; valaddr_reg:x3; val_offset:61680*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61680*0 + 3*592*FLEN/8, x4, x1, x2)

inst_20561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de07fffffffffff; valaddr_reg:x3; val_offset:61683*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61683*0 + 3*593*FLEN/8, x4, x1, x2)

inst_20562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de0ffffffffffff; valaddr_reg:x3; val_offset:61686*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61686*0 + 3*594*FLEN/8, x4, x1, x2)

inst_20563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de1ffffffffffff; valaddr_reg:x3; val_offset:61689*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61689*0 + 3*595*FLEN/8, x4, x1, x2)

inst_20564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de3ffffffffffff; valaddr_reg:x3; val_offset:61692*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61692*0 + 3*596*FLEN/8, x4, x1, x2)

inst_20565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de7ffffffffffff; valaddr_reg:x3; val_offset:61695*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61695*0 + 3*597*FLEN/8, x4, x1, x2)

inst_20566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3de8000000000000; valaddr_reg:x3; val_offset:61698*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61698*0 + 3*598*FLEN/8, x4, x1, x2)

inst_20567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3dec000000000000; valaddr_reg:x3; val_offset:61701*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61701*0 + 3*599*FLEN/8, x4, x1, x2)

inst_20568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3dee000000000000; valaddr_reg:x3; val_offset:61704*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61704*0 + 3*600*FLEN/8, x4, x1, x2)

inst_20569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3def000000000000; valaddr_reg:x3; val_offset:61707*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61707*0 + 3*601*FLEN/8, x4, x1, x2)

inst_20570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3def800000000000; valaddr_reg:x3; val_offset:61710*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61710*0 + 3*602*FLEN/8, x4, x1, x2)

inst_20571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defc00000000000; valaddr_reg:x3; val_offset:61713*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61713*0 + 3*603*FLEN/8, x4, x1, x2)

inst_20572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defe00000000000; valaddr_reg:x3; val_offset:61716*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61716*0 + 3*604*FLEN/8, x4, x1, x2)

inst_20573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deff00000000000; valaddr_reg:x3; val_offset:61719*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61719*0 + 3*605*FLEN/8, x4, x1, x2)

inst_20574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deff80000000000; valaddr_reg:x3; val_offset:61722*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61722*0 + 3*606*FLEN/8, x4, x1, x2)

inst_20575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffc0000000000; valaddr_reg:x3; val_offset:61725*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61725*0 + 3*607*FLEN/8, x4, x1, x2)

inst_20576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffe0000000000; valaddr_reg:x3; val_offset:61728*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61728*0 + 3*608*FLEN/8, x4, x1, x2)

inst_20577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defff0000000000; valaddr_reg:x3; val_offset:61731*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61731*0 + 3*609*FLEN/8, x4, x1, x2)

inst_20578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defff8000000000; valaddr_reg:x3; val_offset:61734*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61734*0 + 3*610*FLEN/8, x4, x1, x2)

inst_20579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffc000000000; valaddr_reg:x3; val_offset:61737*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61737*0 + 3*611*FLEN/8, x4, x1, x2)

inst_20580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffe000000000; valaddr_reg:x3; val_offset:61740*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61740*0 + 3*612*FLEN/8, x4, x1, x2)

inst_20581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffff000000000; valaddr_reg:x3; val_offset:61743*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61743*0 + 3*613*FLEN/8, x4, x1, x2)

inst_20582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffff800000000; valaddr_reg:x3; val_offset:61746*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61746*0 + 3*614*FLEN/8, x4, x1, x2)

inst_20583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffc00000000; valaddr_reg:x3; val_offset:61749*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61749*0 + 3*615*FLEN/8, x4, x1, x2)

inst_20584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffe00000000; valaddr_reg:x3; val_offset:61752*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61752*0 + 3*616*FLEN/8, x4, x1, x2)

inst_20585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffff00000000; valaddr_reg:x3; val_offset:61755*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61755*0 + 3*617*FLEN/8, x4, x1, x2)

inst_20586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffff80000000; valaddr_reg:x3; val_offset:61758*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61758*0 + 3*618*FLEN/8, x4, x1, x2)

inst_20587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffc0000000; valaddr_reg:x3; val_offset:61761*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61761*0 + 3*619*FLEN/8, x4, x1, x2)

inst_20588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffe0000000; valaddr_reg:x3; val_offset:61764*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61764*0 + 3*620*FLEN/8, x4, x1, x2)

inst_20589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffff0000000; valaddr_reg:x3; val_offset:61767*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61767*0 + 3*621*FLEN/8, x4, x1, x2)

inst_20590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffff8000000; valaddr_reg:x3; val_offset:61770*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61770*0 + 3*622*FLEN/8, x4, x1, x2)

inst_20591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffc000000; valaddr_reg:x3; val_offset:61773*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61773*0 + 3*623*FLEN/8, x4, x1, x2)

inst_20592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffe000000; valaddr_reg:x3; val_offset:61776*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61776*0 + 3*624*FLEN/8, x4, x1, x2)

inst_20593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffff000000; valaddr_reg:x3; val_offset:61779*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61779*0 + 3*625*FLEN/8, x4, x1, x2)

inst_20594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffff800000; valaddr_reg:x3; val_offset:61782*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61782*0 + 3*626*FLEN/8, x4, x1, x2)

inst_20595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffffc00000; valaddr_reg:x3; val_offset:61785*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61785*0 + 3*627*FLEN/8, x4, x1, x2)

inst_20596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffffe00000; valaddr_reg:x3; val_offset:61788*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61788*0 + 3*628*FLEN/8, x4, x1, x2)

inst_20597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffff00000; valaddr_reg:x3; val_offset:61791*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61791*0 + 3*629*FLEN/8, x4, x1, x2)

inst_20598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffff80000; valaddr_reg:x3; val_offset:61794*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61794*0 + 3*630*FLEN/8, x4, x1, x2)

inst_20599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffffc0000; valaddr_reg:x3; val_offset:61797*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61797*0 + 3*631*FLEN/8, x4, x1, x2)

inst_20600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffffe0000; valaddr_reg:x3; val_offset:61800*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61800*0 + 3*632*FLEN/8, x4, x1, x2)

inst_20601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffffff0000; valaddr_reg:x3; val_offset:61803*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61803*0 + 3*633*FLEN/8, x4, x1, x2)

inst_20602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffffff8000; valaddr_reg:x3; val_offset:61806*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61806*0 + 3*634*FLEN/8, x4, x1, x2)

inst_20603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffffffc000; valaddr_reg:x3; val_offset:61809*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61809*0 + 3*635*FLEN/8, x4, x1, x2)

inst_20604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffffffe000; valaddr_reg:x3; val_offset:61812*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61812*0 + 3*636*FLEN/8, x4, x1, x2)

inst_20605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffffff000; valaddr_reg:x3; val_offset:61815*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61815*0 + 3*637*FLEN/8, x4, x1, x2)

inst_20606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffffff800; valaddr_reg:x3; val_offset:61818*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61818*0 + 3*638*FLEN/8, x4, x1, x2)

inst_20607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffffffc00; valaddr_reg:x3; val_offset:61821*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61821*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_20608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffffffe00; valaddr_reg:x3; val_offset:61824*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61824*0 + 3*640*FLEN/8, x4, x1, x2)

inst_20609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffffffff00; valaddr_reg:x3; val_offset:61827*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61827*0 + 3*641*FLEN/8, x4, x1, x2)

inst_20610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffffffff80; valaddr_reg:x3; val_offset:61830*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61830*0 + 3*642*FLEN/8, x4, x1, x2)

inst_20611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffffffffc0; valaddr_reg:x3; val_offset:61833*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61833*0 + 3*643*FLEN/8, x4, x1, x2)

inst_20612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffffffffe0; valaddr_reg:x3; val_offset:61836*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61836*0 + 3*644*FLEN/8, x4, x1, x2)

inst_20613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffffffff0; valaddr_reg:x3; val_offset:61839*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61839*0 + 3*645*FLEN/8, x4, x1, x2)

inst_20614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffffffff8; valaddr_reg:x3; val_offset:61842*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61842*0 + 3*646*FLEN/8, x4, x1, x2)

inst_20615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffffffffc; valaddr_reg:x3; val_offset:61845*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61845*0 + 3*647*FLEN/8, x4, x1, x2)

inst_20616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3deffffffffffffe; valaddr_reg:x3; val_offset:61848*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61848*0 + 3*648*FLEN/8, x4, x1, x2)

inst_20617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3de and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3defffffffffffff; valaddr_reg:x3; val_offset:61851*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61851*0 + 3*649*FLEN/8, x4, x1, x2)

inst_20618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:61854*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61854*0 + 3*650*FLEN/8, x4, x1, x2)

inst_20619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:61857*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61857*0 + 3*651*FLEN/8, x4, x1, x2)

inst_20620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:61860*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61860*0 + 3*652*FLEN/8, x4, x1, x2)

inst_20621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:61863*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61863*0 + 3*653*FLEN/8, x4, x1, x2)

inst_20622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:61866*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61866*0 + 3*654*FLEN/8, x4, x1, x2)

inst_20623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:61869*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61869*0 + 3*655*FLEN/8, x4, x1, x2)

inst_20624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:61872*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61872*0 + 3*656*FLEN/8, x4, x1, x2)

inst_20625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:61875*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61875*0 + 3*657*FLEN/8, x4, x1, x2)

inst_20626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:61878*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61878*0 + 3*658*FLEN/8, x4, x1, x2)

inst_20627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:61881*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61881*0 + 3*659*FLEN/8, x4, x1, x2)

inst_20628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:61884*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61884*0 + 3*660*FLEN/8, x4, x1, x2)

inst_20629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:61887*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61887*0 + 3*661*FLEN/8, x4, x1, x2)

inst_20630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:61890*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61890*0 + 3*662*FLEN/8, x4, x1, x2)

inst_20631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:61893*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61893*0 + 3*663*FLEN/8, x4, x1, x2)

inst_20632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:61896*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61896*0 + 3*664*FLEN/8, x4, x1, x2)

inst_20633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:61899*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61899*0 + 3*665*FLEN/8, x4, x1, x2)

inst_20634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:61902*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61902*0 + 3*666*FLEN/8, x4, x1, x2)

inst_20635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:61905*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61905*0 + 3*667*FLEN/8, x4, x1, x2)

inst_20636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:61908*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61908*0 + 3*668*FLEN/8, x4, x1, x2)

inst_20637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:61911*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61911*0 + 3*669*FLEN/8, x4, x1, x2)

inst_20638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:61914*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61914*0 + 3*670*FLEN/8, x4, x1, x2)

inst_20639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x75305c19a570f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x5f38b9ffb18cd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f875305c19a570f; op2val:0x2055f38b9ffb18cd;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:61917*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61917*0 + 3*671*FLEN/8, x4, x1, x2)

inst_20640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:61920*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61920*0 + 3*672*FLEN/8, x4, x1, x2)

inst_20641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:61923*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61923*0 + 3*673*FLEN/8, x4, x1, x2)

inst_20642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:61926*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61926*0 + 3*674*FLEN/8, x4, x1, x2)

inst_20643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:61929*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61929*0 + 3*675*FLEN/8, x4, x1, x2)

inst_20644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:61932*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61932*0 + 3*676*FLEN/8, x4, x1, x2)

inst_20645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:61935*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61935*0 + 3*677*FLEN/8, x4, x1, x2)

inst_20646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:61938*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61938*0 + 3*678*FLEN/8, x4, x1, x2)

inst_20647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:61941*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61941*0 + 3*679*FLEN/8, x4, x1, x2)

inst_20648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:61944*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61944*0 + 3*680*FLEN/8, x4, x1, x2)

inst_20649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:61947*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61947*0 + 3*681*FLEN/8, x4, x1, x2)

inst_20650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:61950*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61950*0 + 3*682*FLEN/8, x4, x1, x2)

inst_20651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:61953*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61953*0 + 3*683*FLEN/8, x4, x1, x2)

inst_20652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:61956*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61956*0 + 3*684*FLEN/8, x4, x1, x2)

inst_20653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:61959*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61959*0 + 3*685*FLEN/8, x4, x1, x2)

inst_20654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:61962*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61962*0 + 3*686*FLEN/8, x4, x1, x2)

inst_20655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:61965*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61965*0 + 3*687*FLEN/8, x4, x1, x2)

inst_20656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:61968*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61968*0 + 3*688*FLEN/8, x4, x1, x2)

inst_20657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:61971*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61971*0 + 3*689*FLEN/8, x4, x1, x2)

inst_20658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:61974*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61974*0 + 3*690*FLEN/8, x4, x1, x2)

inst_20659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:61977*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61977*0 + 3*691*FLEN/8, x4, x1, x2)

inst_20660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:61980*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61980*0 + 3*692*FLEN/8, x4, x1, x2)

inst_20661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:61983*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61983*0 + 3*693*FLEN/8, x4, x1, x2)

inst_20662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000000000000; valaddr_reg:x3; val_offset:61986*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61986*0 + 3*694*FLEN/8, x4, x1, x2)

inst_20663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000000000001; valaddr_reg:x3; val_offset:61989*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61989*0 + 3*695*FLEN/8, x4, x1, x2)

inst_20664:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000000000003; valaddr_reg:x3; val_offset:61992*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61992*0 + 3*696*FLEN/8, x4, x1, x2)

inst_20665:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000000000007; valaddr_reg:x3; val_offset:61995*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61995*0 + 3*697*FLEN/8, x4, x1, x2)

inst_20666:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000000000000f; valaddr_reg:x3; val_offset:61998*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 61998*0 + 3*698*FLEN/8, x4, x1, x2)

inst_20667:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000000000001f; valaddr_reg:x3; val_offset:62001*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62001*0 + 3*699*FLEN/8, x4, x1, x2)

inst_20668:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000000000003f; valaddr_reg:x3; val_offset:62004*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62004*0 + 3*700*FLEN/8, x4, x1, x2)

inst_20669:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000000000007f; valaddr_reg:x3; val_offset:62007*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62007*0 + 3*701*FLEN/8, x4, x1, x2)

inst_20670:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600000000000ff; valaddr_reg:x3; val_offset:62010*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62010*0 + 3*702*FLEN/8, x4, x1, x2)

inst_20671:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600000000001ff; valaddr_reg:x3; val_offset:62013*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62013*0 + 3*703*FLEN/8, x4, x1, x2)

inst_20672:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600000000003ff; valaddr_reg:x3; val_offset:62016*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62016*0 + 3*704*FLEN/8, x4, x1, x2)

inst_20673:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600000000007ff; valaddr_reg:x3; val_offset:62019*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62019*0 + 3*705*FLEN/8, x4, x1, x2)

inst_20674:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000000000fff; valaddr_reg:x3; val_offset:62022*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62022*0 + 3*706*FLEN/8, x4, x1, x2)

inst_20675:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000000001fff; valaddr_reg:x3; val_offset:62025*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62025*0 + 3*707*FLEN/8, x4, x1, x2)

inst_20676:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000000003fff; valaddr_reg:x3; val_offset:62028*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62028*0 + 3*708*FLEN/8, x4, x1, x2)

inst_20677:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000000007fff; valaddr_reg:x3; val_offset:62031*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62031*0 + 3*709*FLEN/8, x4, x1, x2)

inst_20678:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000000000ffff; valaddr_reg:x3; val_offset:62034*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62034*0 + 3*710*FLEN/8, x4, x1, x2)

inst_20679:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000000001ffff; valaddr_reg:x3; val_offset:62037*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62037*0 + 3*711*FLEN/8, x4, x1, x2)

inst_20680:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000000003ffff; valaddr_reg:x3; val_offset:62040*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62040*0 + 3*712*FLEN/8, x4, x1, x2)

inst_20681:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000000007ffff; valaddr_reg:x3; val_offset:62043*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62043*0 + 3*713*FLEN/8, x4, x1, x2)

inst_20682:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600000000fffff; valaddr_reg:x3; val_offset:62046*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62046*0 + 3*714*FLEN/8, x4, x1, x2)

inst_20683:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600000001fffff; valaddr_reg:x3; val_offset:62049*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62049*0 + 3*715*FLEN/8, x4, x1, x2)

inst_20684:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600000003fffff; valaddr_reg:x3; val_offset:62052*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62052*0 + 3*716*FLEN/8, x4, x1, x2)

inst_20685:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600000007fffff; valaddr_reg:x3; val_offset:62055*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62055*0 + 3*717*FLEN/8, x4, x1, x2)

inst_20686:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000000ffffff; valaddr_reg:x3; val_offset:62058*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62058*0 + 3*718*FLEN/8, x4, x1, x2)

inst_20687:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000001ffffff; valaddr_reg:x3; val_offset:62061*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62061*0 + 3*719*FLEN/8, x4, x1, x2)

inst_20688:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000003ffffff; valaddr_reg:x3; val_offset:62064*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62064*0 + 3*720*FLEN/8, x4, x1, x2)

inst_20689:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000007ffffff; valaddr_reg:x3; val_offset:62067*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62067*0 + 3*721*FLEN/8, x4, x1, x2)

inst_20690:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000000fffffff; valaddr_reg:x3; val_offset:62070*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62070*0 + 3*722*FLEN/8, x4, x1, x2)

inst_20691:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000001fffffff; valaddr_reg:x3; val_offset:62073*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62073*0 + 3*723*FLEN/8, x4, x1, x2)

inst_20692:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000003fffffff; valaddr_reg:x3; val_offset:62076*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62076*0 + 3*724*FLEN/8, x4, x1, x2)

inst_20693:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000007fffffff; valaddr_reg:x3; val_offset:62079*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62079*0 + 3*725*FLEN/8, x4, x1, x2)

inst_20694:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600000ffffffff; valaddr_reg:x3; val_offset:62082*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62082*0 + 3*726*FLEN/8, x4, x1, x2)

inst_20695:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600001ffffffff; valaddr_reg:x3; val_offset:62085*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62085*0 + 3*727*FLEN/8, x4, x1, x2)

inst_20696:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600003ffffffff; valaddr_reg:x3; val_offset:62088*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62088*0 + 3*728*FLEN/8, x4, x1, x2)

inst_20697:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600007ffffffff; valaddr_reg:x3; val_offset:62091*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62091*0 + 3*729*FLEN/8, x4, x1, x2)

inst_20698:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360000fffffffff; valaddr_reg:x3; val_offset:62094*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62094*0 + 3*730*FLEN/8, x4, x1, x2)

inst_20699:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360001fffffffff; valaddr_reg:x3; val_offset:62097*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62097*0 + 3*731*FLEN/8, x4, x1, x2)

inst_20700:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360003fffffffff; valaddr_reg:x3; val_offset:62100*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62100*0 + 3*732*FLEN/8, x4, x1, x2)

inst_20701:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360007fffffffff; valaddr_reg:x3; val_offset:62103*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62103*0 + 3*733*FLEN/8, x4, x1, x2)

inst_20702:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836000ffffffffff; valaddr_reg:x3; val_offset:62106*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62106*0 + 3*734*FLEN/8, x4, x1, x2)

inst_20703:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836001ffffffffff; valaddr_reg:x3; val_offset:62109*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62109*0 + 3*735*FLEN/8, x4, x1, x2)

inst_20704:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836003ffffffffff; valaddr_reg:x3; val_offset:62112*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62112*0 + 3*736*FLEN/8, x4, x1, x2)

inst_20705:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836007ffffffffff; valaddr_reg:x3; val_offset:62115*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62115*0 + 3*737*FLEN/8, x4, x1, x2)

inst_20706:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83600fffffffffff; valaddr_reg:x3; val_offset:62118*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62118*0 + 3*738*FLEN/8, x4, x1, x2)

inst_20707:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83601fffffffffff; valaddr_reg:x3; val_offset:62121*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62121*0 + 3*739*FLEN/8, x4, x1, x2)

inst_20708:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83603fffffffffff; valaddr_reg:x3; val_offset:62124*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62124*0 + 3*740*FLEN/8, x4, x1, x2)

inst_20709:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x83607fffffffffff; valaddr_reg:x3; val_offset:62127*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62127*0 + 3*741*FLEN/8, x4, x1, x2)

inst_20710:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8360ffffffffffff; valaddr_reg:x3; val_offset:62130*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62130*0 + 3*742*FLEN/8, x4, x1, x2)

inst_20711:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8361ffffffffffff; valaddr_reg:x3; val_offset:62133*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62133*0 + 3*743*FLEN/8, x4, x1, x2)

inst_20712:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8363ffffffffffff; valaddr_reg:x3; val_offset:62136*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62136*0 + 3*744*FLEN/8, x4, x1, x2)

inst_20713:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8367ffffffffffff; valaddr_reg:x3; val_offset:62139*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62139*0 + 3*745*FLEN/8, x4, x1, x2)

inst_20714:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x8368000000000000; valaddr_reg:x3; val_offset:62142*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62142*0 + 3*746*FLEN/8, x4, x1, x2)

inst_20715:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836c000000000000; valaddr_reg:x3; val_offset:62145*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62145*0 + 3*747*FLEN/8, x4, x1, x2)

inst_20716:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836e000000000000; valaddr_reg:x3; val_offset:62148*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62148*0 + 3*748*FLEN/8, x4, x1, x2)

inst_20717:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836f000000000000; valaddr_reg:x3; val_offset:62151*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62151*0 + 3*749*FLEN/8, x4, x1, x2)

inst_20718:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836f800000000000; valaddr_reg:x3; val_offset:62154*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62154*0 + 3*750*FLEN/8, x4, x1, x2)

inst_20719:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836fc00000000000; valaddr_reg:x3; val_offset:62157*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62157*0 + 3*751*FLEN/8, x4, x1, x2)

inst_20720:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836fe00000000000; valaddr_reg:x3; val_offset:62160*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62160*0 + 3*752*FLEN/8, x4, x1, x2)

inst_20721:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836ff00000000000; valaddr_reg:x3; val_offset:62163*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62163*0 + 3*753*FLEN/8, x4, x1, x2)

inst_20722:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836ff80000000000; valaddr_reg:x3; val_offset:62166*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62166*0 + 3*754*FLEN/8, x4, x1, x2)

inst_20723:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836ffc0000000000; valaddr_reg:x3; val_offset:62169*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62169*0 + 3*755*FLEN/8, x4, x1, x2)

inst_20724:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836ffe0000000000; valaddr_reg:x3; val_offset:62172*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62172*0 + 3*756*FLEN/8, x4, x1, x2)

inst_20725:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836fff0000000000; valaddr_reg:x3; val_offset:62175*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62175*0 + 3*757*FLEN/8, x4, x1, x2)

inst_20726:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836fff8000000000; valaddr_reg:x3; val_offset:62178*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62178*0 + 3*758*FLEN/8, x4, x1, x2)

inst_20727:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836fffc000000000; valaddr_reg:x3; val_offset:62181*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62181*0 + 3*759*FLEN/8, x4, x1, x2)

inst_20728:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836fffe000000000; valaddr_reg:x3; val_offset:62184*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62184*0 + 3*760*FLEN/8, x4, x1, x2)

inst_20729:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836ffff000000000; valaddr_reg:x3; val_offset:62187*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62187*0 + 3*761*FLEN/8, x4, x1, x2)

inst_20730:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836ffff800000000; valaddr_reg:x3; val_offset:62190*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62190*0 + 3*762*FLEN/8, x4, x1, x2)

inst_20731:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836ffffc00000000; valaddr_reg:x3; val_offset:62193*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62193*0 + 3*763*FLEN/8, x4, x1, x2)

inst_20732:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836ffffe00000000; valaddr_reg:x3; val_offset:62196*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62196*0 + 3*764*FLEN/8, x4, x1, x2)

inst_20733:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836fffff00000000; valaddr_reg:x3; val_offset:62199*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62199*0 + 3*765*FLEN/8, x4, x1, x2)

inst_20734:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836fffff80000000; valaddr_reg:x3; val_offset:62202*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62202*0 + 3*766*FLEN/8, x4, x1, x2)

inst_20735:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x78ecdf97d01e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f878ecdf97d01e3; op2val:0x8000;
op3val:0x836fffffc0000000; valaddr_reg:x3; val_offset:62205*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62205*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148616588679970816,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148617688191598592,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618237947412480,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618512825319424,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618650264272896,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618718983749632,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618753343488000,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618770523357184,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618779113291776,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618783408259072,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618785555742720,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618786629484544,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787166355456,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787434790912,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787569008640,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787636117504,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787669671936,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787686449152,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787694837760,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787699032064,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787701129216,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702177792,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702702080,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702964224,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703095296,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703160832,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703193600,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703209984,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703218176,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703222272,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703224320,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703225344,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703225856,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226112,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226240,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226304,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226336,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226352,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226360,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226364,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226366,64,FLEN)
NAN_BOXED(6883292202176848499,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226367,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917905920,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917905921,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917905923,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917905927,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917905935,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917905951,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917905983,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917906047,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917906175,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917906431,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917906943,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917907967,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917910015,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917914111,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917922303,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917938687,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619917971455,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619918036991,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619918168063,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619918430207,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619918954495,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619920003071,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619922100223,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619926294527,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619934683135,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619951460351,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671619985014783,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671620052123647,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671620186341375,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671620454776831,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671620991647743,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671622065389567,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671624212873215,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671628507840511,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671637097775103,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671654277644287,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671688637382655,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671757356859391,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593671894795812863,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593672169673719807,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593672719429533695,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593673818941161471,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593676017964417023,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593680416010928127,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593689212103950335,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593706804289994751,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593741988662083583,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593812357406261247,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4593953094894616575,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4594234569871327231,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4594797519824748543,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4595923419731591167,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4595923419731591168,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4597049319638433792,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4597612269591855104,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4597893744568565760,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598034482056921088,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598104850801098752,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598140035173187584,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598157627359232000,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598166423452254208,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598170821498765312,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598173020522020864,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598174120033648640,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598174669789462528,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598174944667369472,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175082106322944,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175150825799680,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175185185538048,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175202365407232,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175210955341824,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175215250309120,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175217397792768,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175218471534592,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219008405504,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219276840960,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219411058688,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219478167552,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219511721984,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219528499200,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219536887808,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219541082112,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219543179264,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219544227840,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219544752128,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545014272,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545145344,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545210880,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545243648,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545260032,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545268224,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545272320,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545274368,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545275392,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545275904,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545276160,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545276288,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545276352,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545276384,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545276400,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545276408,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545276412,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545276414,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4598175219545276415,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6883420144678425683,64,FLEN)
NAN_BOXED(2330172459142833650,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115592704,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115592705,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115592707,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115592711,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115592719,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115592735,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115592767,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115592831,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115592959,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115593215,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115593727,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115594751,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115596799,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115600895,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115609087,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115625471,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115658239,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115723775,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301115854847,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301116116991,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301116641279,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301117689855,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301119787007,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301123981311,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301132369919,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301149147135,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301182701567,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301249810431,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301384028159,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115301652463615,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115302189334527,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115303263076351,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115305410559999,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115309705527295,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115318295461887,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115335475331071,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115369835069439,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115438554546175,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115575993499647,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281115850871406591,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281116400627220479,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281117500138848255,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281119699162103807,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281124097208614911,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281132893301637119,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281150485487681535,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281185669859770367,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281256038603948031,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281396776092303359,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13281678251069014015,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13282241201022435327,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13283367100929277951,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13283367100929277952,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13284493000836120576,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285055950789541888,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285337425766252544,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285478163254607872,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285548531998785536,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285583716370874368,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285601308556918784,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285610104649940992,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285614502696452096,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285616701719707648,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285617801231335424,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618350987149312,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618625865056256,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618763304009728,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618832023486464,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618866383224832,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618883563094016,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618892153028608,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618896447995904,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618898595479552,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618899669221376,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900206092288,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900474527744,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900608745472,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900675854336,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900709408768,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900726185984,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900734574592,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900738768896,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900740866048,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900741914624,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742438912,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742701056,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742832128,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742897664,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742930432,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742946816,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742955008,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742959104,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742961152,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742962176,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742962688,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742962944,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742963072,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742963136,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742963168,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742963184,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742963192,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742963196,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742963198,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13285618900742963199,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6883466929126140923,64,FLEN)
NAN_BOXED(11521973636692613798,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149696,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149697,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149699,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149703,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149711,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149727,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149759,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149823,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421149951,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421150207,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421150719,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421151743,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421153791,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421157887,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421166079,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421182463,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421215231,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421280767,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421411839,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826421673983,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826422198271,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826423246847,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826425343999,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826429538303,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826437926911,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826454704127,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826488258559,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826555367423,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826689585151,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472826958020607,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472827494891519,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472828568633343,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472830716116991,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472835011084287,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472843601018879,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472860780888063,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472895140626431,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349472963860103167,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349473101299056639,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349473376176963583,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349473925932777471,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349475025444405247,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349477224467660799,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349481622514171903,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349490418607194111,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349508010793238527,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349543195165327359,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349613563909505023,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9349754301397860351,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9350035776374571007,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9350598726327992319,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9351724626234834943,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9351724626234834944,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9352850526141677568,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353413476095098880,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353694951071809536,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353835688560164864,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353906057304342528,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353941241676431360,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353958833862475776,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353967629955497984,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353972028002009088,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353974227025264640,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353975326536892416,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353975876292706304,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976151170613248,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976288609566720,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976357329043456,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976391688781824,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976408868651008,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976417458585600,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976421753552896,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976423901036544,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976424974778368,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976425511649280,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976425780084736,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976425914302464,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976425981411328,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426014965760,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426031742976,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426040131584,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426044325888,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426046423040,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426047471616,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426047995904,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048258048,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048389120,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048454656,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048487424,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048503808,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048512000,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048516096,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048518144,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048519168,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048519680,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048519936,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520064,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520128,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520160,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520176,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520184,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520188,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520190,64,FLEN)
NAN_BOXED(6883495843756696315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520191,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400052224,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400052225,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400052227,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400052231,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400052239,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400052255,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400052287,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400052351,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400052479,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400052735,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400053247,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400054271,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400056319,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400060415,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400068607,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400084991,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400117759,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400183295,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400314367,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256400576511,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256401100799,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256402149375,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256404246527,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256408440831,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256416829439,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256433606655,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256467161087,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256534269951,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256668487679,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547256936923135,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547257473794047,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547258547535871,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547260695019519,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547264989986815,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547273579921407,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547290759790591,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547325119528959,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547393839005695,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547531277959167,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821547806155866111,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821548355911679999,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821549455423307775,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821551654446563327,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821556052493074431,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821564848586096639,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821582440772141055,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821617625144229887,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821687993888407551,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13821828731376762879,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13822110206353473535,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13822673156306894847,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13823799056213737471,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13823799056213737472,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13824924956120580096,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13825487906074001408,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13825769381050712064,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13825910118539067392,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13825980487283245056,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826015671655333888,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826033263841378304,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826042059934400512,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826046457980911616,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826048657004167168,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826049756515794944,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050306271608832,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050581149515776,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050718588469248,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050787307945984,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050821667684352,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050838847553536,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050847437488128,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050851732455424,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050853879939072,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050854953680896,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050855490551808,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050855758987264,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050855893204992,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050855960313856,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050855993868288,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856010645504,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856019034112,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856023228416,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856025325568,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856026374144,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856026898432,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027160576,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027291648,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027357184,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027389952,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027406336,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027414528,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027418624,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027420672,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027421696,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027422208,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027422464,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027422592,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027422656,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027422688,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027422704,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027422712,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027422716,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027422718,64,FLEN)
NAN_BOXED(6883552752355954039,64,FLEN)
NAN_BOXED(11521891566940280190,64,FLEN)
NAN_BOXED(13826050856027422719,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096791040,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096791041,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096791043,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096791047,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096791055,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096791071,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096791103,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096791167,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096791295,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096791551,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096792063,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096793087,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096795135,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096799231,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096807423,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096823807,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096856575,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631096922111,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631097053183,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631097315327,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631097839615,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631098888191,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631100985343,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631105179647,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631113568255,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631130345471,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631163899903,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631231008767,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631365226495,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563631633661951,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563632170532863,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563633244274687,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563635391758335,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563639686725631,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563648276660223,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563665456529407,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563699816267775,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563768535744511,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458563905974697983,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458564180852604927,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458564730608418815,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458565830120046591,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458568029143302143,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458572427189813247,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458581223282835455,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458598815468879871,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458633999840968703,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458704368585146367,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4458845106073501695,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4459126581050212351,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4459689531003633663,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4460815430910476287,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4460815430910476288,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4461941330817318912,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4462504280770740224,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4462785755747450880,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4462926493235806208,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4462996861979983872,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463032046352072704,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463049638538117120,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463058434631139328,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463062832677650432,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463065031700905984,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463066131212533760,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463066680968347648,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463066955846254592,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067093285208064,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067162004684800,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067196364423168,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067213544292352,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067222134226944,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067226429194240,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067228576677888,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067229650419712,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230187290624,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230455726080,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230589943808,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230657052672,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230690607104,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230707384320,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230715772928,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230719967232,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230722064384,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230723112960,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230723637248,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230723899392,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724030464,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724096000,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724128768,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724145152,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724153344,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724157440,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724159488,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724160512,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724161024,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724161280,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724161408,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724161472,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724161504,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724161520,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724161528,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724161532,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724161534,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4463067230724161535,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6883561839647151887,64,FLEN)
NAN_BOXED(2330036163244136653,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782592,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782593,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782595,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782599,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782607,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782623,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782655,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782719,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782847,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732783103,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732783615,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732784639,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732786687,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732790783,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732798975,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732815359,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732848127,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732913663,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416733044735,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416733306879,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416733831167,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416734879743,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416736976895,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416741171199,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416749559807,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416766337023,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416799891455,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416867000319,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566417001218047,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566417269653503,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566417806524415,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566418880266239,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566421027749887,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566425322717183,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566433912651775,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566451092520959,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566485452259327,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566554171736063,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566691610689535,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566966488596479,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466567516244410367,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466568615756038143,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466570814779293695,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466575212825804799,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466584008918827007,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466601601104871423,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466636785476960255,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466707154221137919,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466847891709493247,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9467129366686203903,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9467692316639625215,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9468818216546467839,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9468818216546467840,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9469944116453310464,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470507066406731776,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470788541383442432,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470929278871797760,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470999647615975424,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471034831988064256,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471052424174108672,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471061220267130880,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471065618313641984,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471067817336897536,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471068916848525312,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069466604339200,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069741482246144,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069878921199616,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069947640676352,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069982000414720,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069999180283904,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070007770218496,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070012065185792,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070014212669440,64,FLEN)
NAN_BOXED(6883627570764251619,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070015286411264,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
