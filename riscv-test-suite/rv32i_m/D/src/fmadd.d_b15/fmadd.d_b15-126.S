
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_96000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x82300000ffffffff; valaddr_reg:x3; val_offset:288000*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288000*0 + 3*0*FLEN/8, x4, x1, x2)

inst_96001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x82300001ffffffff; valaddr_reg:x3; val_offset:288003*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288003*0 + 3*1*FLEN/8, x4, x1, x2)

inst_96002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x82300003ffffffff; valaddr_reg:x3; val_offset:288006*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288006*0 + 3*2*FLEN/8, x4, x1, x2)

inst_96003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x82300007ffffffff; valaddr_reg:x3; val_offset:288009*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288009*0 + 3*3*FLEN/8, x4, x1, x2)

inst_96004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x8230000fffffffff; valaddr_reg:x3; val_offset:288012*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288012*0 + 3*4*FLEN/8, x4, x1, x2)

inst_96005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x8230001fffffffff; valaddr_reg:x3; val_offset:288015*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288015*0 + 3*5*FLEN/8, x4, x1, x2)

inst_96006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x8230003fffffffff; valaddr_reg:x3; val_offset:288018*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288018*0 + 3*6*FLEN/8, x4, x1, x2)

inst_96007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x8230007fffffffff; valaddr_reg:x3; val_offset:288021*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288021*0 + 3*7*FLEN/8, x4, x1, x2)

inst_96008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823000ffffffffff; valaddr_reg:x3; val_offset:288024*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288024*0 + 3*8*FLEN/8, x4, x1, x2)

inst_96009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823001ffffffffff; valaddr_reg:x3; val_offset:288027*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288027*0 + 3*9*FLEN/8, x4, x1, x2)

inst_96010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823003ffffffffff; valaddr_reg:x3; val_offset:288030*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288030*0 + 3*10*FLEN/8, x4, x1, x2)

inst_96011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823007ffffffffff; valaddr_reg:x3; val_offset:288033*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288033*0 + 3*11*FLEN/8, x4, x1, x2)

inst_96012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x82300fffffffffff; valaddr_reg:x3; val_offset:288036*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288036*0 + 3*12*FLEN/8, x4, x1, x2)

inst_96013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x82301fffffffffff; valaddr_reg:x3; val_offset:288039*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288039*0 + 3*13*FLEN/8, x4, x1, x2)

inst_96014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x82303fffffffffff; valaddr_reg:x3; val_offset:288042*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288042*0 + 3*14*FLEN/8, x4, x1, x2)

inst_96015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x82307fffffffffff; valaddr_reg:x3; val_offset:288045*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288045*0 + 3*15*FLEN/8, x4, x1, x2)

inst_96016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x8230ffffffffffff; valaddr_reg:x3; val_offset:288048*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288048*0 + 3*16*FLEN/8, x4, x1, x2)

inst_96017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x8231ffffffffffff; valaddr_reg:x3; val_offset:288051*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288051*0 + 3*17*FLEN/8, x4, x1, x2)

inst_96018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x8233ffffffffffff; valaddr_reg:x3; val_offset:288054*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288054*0 + 3*18*FLEN/8, x4, x1, x2)

inst_96019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x8237ffffffffffff; valaddr_reg:x3; val_offset:288057*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288057*0 + 3*19*FLEN/8, x4, x1, x2)

inst_96020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x8238000000000000; valaddr_reg:x3; val_offset:288060*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288060*0 + 3*20*FLEN/8, x4, x1, x2)

inst_96021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823c000000000000; valaddr_reg:x3; val_offset:288063*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288063*0 + 3*21*FLEN/8, x4, x1, x2)

inst_96022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823e000000000000; valaddr_reg:x3; val_offset:288066*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288066*0 + 3*22*FLEN/8, x4, x1, x2)

inst_96023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823f000000000000; valaddr_reg:x3; val_offset:288069*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288069*0 + 3*23*FLEN/8, x4, x1, x2)

inst_96024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823f800000000000; valaddr_reg:x3; val_offset:288072*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288072*0 + 3*24*FLEN/8, x4, x1, x2)

inst_96025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fc00000000000; valaddr_reg:x3; val_offset:288075*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288075*0 + 3*25*FLEN/8, x4, x1, x2)

inst_96026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fe00000000000; valaddr_reg:x3; val_offset:288078*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288078*0 + 3*26*FLEN/8, x4, x1, x2)

inst_96027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ff00000000000; valaddr_reg:x3; val_offset:288081*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288081*0 + 3*27*FLEN/8, x4, x1, x2)

inst_96028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ff80000000000; valaddr_reg:x3; val_offset:288084*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288084*0 + 3*28*FLEN/8, x4, x1, x2)

inst_96029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffc0000000000; valaddr_reg:x3; val_offset:288087*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288087*0 + 3*29*FLEN/8, x4, x1, x2)

inst_96030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffe0000000000; valaddr_reg:x3; val_offset:288090*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288090*0 + 3*30*FLEN/8, x4, x1, x2)

inst_96031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fff0000000000; valaddr_reg:x3; val_offset:288093*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288093*0 + 3*31*FLEN/8, x4, x1, x2)

inst_96032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fff8000000000; valaddr_reg:x3; val_offset:288096*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288096*0 + 3*32*FLEN/8, x4, x1, x2)

inst_96033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffc000000000; valaddr_reg:x3; val_offset:288099*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288099*0 + 3*33*FLEN/8, x4, x1, x2)

inst_96034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffe000000000; valaddr_reg:x3; val_offset:288102*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288102*0 + 3*34*FLEN/8, x4, x1, x2)

inst_96035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffff000000000; valaddr_reg:x3; val_offset:288105*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288105*0 + 3*35*FLEN/8, x4, x1, x2)

inst_96036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffff800000000; valaddr_reg:x3; val_offset:288108*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288108*0 + 3*36*FLEN/8, x4, x1, x2)

inst_96037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffc00000000; valaddr_reg:x3; val_offset:288111*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288111*0 + 3*37*FLEN/8, x4, x1, x2)

inst_96038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffe00000000; valaddr_reg:x3; val_offset:288114*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288114*0 + 3*38*FLEN/8, x4, x1, x2)

inst_96039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffff00000000; valaddr_reg:x3; val_offset:288117*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288117*0 + 3*39*FLEN/8, x4, x1, x2)

inst_96040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffff80000000; valaddr_reg:x3; val_offset:288120*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288120*0 + 3*40*FLEN/8, x4, x1, x2)

inst_96041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffc0000000; valaddr_reg:x3; val_offset:288123*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288123*0 + 3*41*FLEN/8, x4, x1, x2)

inst_96042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffe0000000; valaddr_reg:x3; val_offset:288126*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288126*0 + 3*42*FLEN/8, x4, x1, x2)

inst_96043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffff0000000; valaddr_reg:x3; val_offset:288129*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288129*0 + 3*43*FLEN/8, x4, x1, x2)

inst_96044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffff8000000; valaddr_reg:x3; val_offset:288132*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288132*0 + 3*44*FLEN/8, x4, x1, x2)

inst_96045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffc000000; valaddr_reg:x3; val_offset:288135*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288135*0 + 3*45*FLEN/8, x4, x1, x2)

inst_96046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffe000000; valaddr_reg:x3; val_offset:288138*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288138*0 + 3*46*FLEN/8, x4, x1, x2)

inst_96047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffff000000; valaddr_reg:x3; val_offset:288141*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288141*0 + 3*47*FLEN/8, x4, x1, x2)

inst_96048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffff800000; valaddr_reg:x3; val_offset:288144*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288144*0 + 3*48*FLEN/8, x4, x1, x2)

inst_96049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffffc00000; valaddr_reg:x3; val_offset:288147*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288147*0 + 3*49*FLEN/8, x4, x1, x2)

inst_96050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffffe00000; valaddr_reg:x3; val_offset:288150*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288150*0 + 3*50*FLEN/8, x4, x1, x2)

inst_96051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffff00000; valaddr_reg:x3; val_offset:288153*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288153*0 + 3*51*FLEN/8, x4, x1, x2)

inst_96052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffff80000; valaddr_reg:x3; val_offset:288156*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288156*0 + 3*52*FLEN/8, x4, x1, x2)

inst_96053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffffc0000; valaddr_reg:x3; val_offset:288159*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288159*0 + 3*53*FLEN/8, x4, x1, x2)

inst_96054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffffe0000; valaddr_reg:x3; val_offset:288162*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288162*0 + 3*54*FLEN/8, x4, x1, x2)

inst_96055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffffff0000; valaddr_reg:x3; val_offset:288165*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288165*0 + 3*55*FLEN/8, x4, x1, x2)

inst_96056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffffff8000; valaddr_reg:x3; val_offset:288168*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288168*0 + 3*56*FLEN/8, x4, x1, x2)

inst_96057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffffffc000; valaddr_reg:x3; val_offset:288171*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288171*0 + 3*57*FLEN/8, x4, x1, x2)

inst_96058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffffffe000; valaddr_reg:x3; val_offset:288174*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288174*0 + 3*58*FLEN/8, x4, x1, x2)

inst_96059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffffff000; valaddr_reg:x3; val_offset:288177*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288177*0 + 3*59*FLEN/8, x4, x1, x2)

inst_96060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffffff800; valaddr_reg:x3; val_offset:288180*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288180*0 + 3*60*FLEN/8, x4, x1, x2)

inst_96061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffffffc00; valaddr_reg:x3; val_offset:288183*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288183*0 + 3*61*FLEN/8, x4, x1, x2)

inst_96062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffffffe00; valaddr_reg:x3; val_offset:288186*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288186*0 + 3*62*FLEN/8, x4, x1, x2)

inst_96063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffffffff00; valaddr_reg:x3; val_offset:288189*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288189*0 + 3*63*FLEN/8, x4, x1, x2)

inst_96064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffffffff80; valaddr_reg:x3; val_offset:288192*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288192*0 + 3*64*FLEN/8, x4, x1, x2)

inst_96065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffffffffc0; valaddr_reg:x3; val_offset:288195*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288195*0 + 3*65*FLEN/8, x4, x1, x2)

inst_96066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffffffffe0; valaddr_reg:x3; val_offset:288198*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288198*0 + 3*66*FLEN/8, x4, x1, x2)

inst_96067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffffffff0; valaddr_reg:x3; val_offset:288201*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288201*0 + 3*67*FLEN/8, x4, x1, x2)

inst_96068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffffffff8; valaddr_reg:x3; val_offset:288204*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288204*0 + 3*68*FLEN/8, x4, x1, x2)

inst_96069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffffffffc; valaddr_reg:x3; val_offset:288207*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288207*0 + 3*69*FLEN/8, x4, x1, x2)

inst_96070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823ffffffffffffe; valaddr_reg:x3; val_offset:288210*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288210*0 + 3*70*FLEN/8, x4, x1, x2)

inst_96071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae063e979a868f; op2val:0x8000;
op3val:0x823fffffffffffff; valaddr_reg:x3; val_offset:288213*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288213*0 + 3*71*FLEN/8, x4, x1, x2)

inst_96072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:288216*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288216*0 + 3*72*FLEN/8, x4, x1, x2)

inst_96073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:288219*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288219*0 + 3*73*FLEN/8, x4, x1, x2)

inst_96074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:288222*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288222*0 + 3*74*FLEN/8, x4, x1, x2)

inst_96075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:288225*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288225*0 + 3*75*FLEN/8, x4, x1, x2)

inst_96076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:288228*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288228*0 + 3*76*FLEN/8, x4, x1, x2)

inst_96077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:288231*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288231*0 + 3*77*FLEN/8, x4, x1, x2)

inst_96078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:288234*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288234*0 + 3*78*FLEN/8, x4, x1, x2)

inst_96079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:288237*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288237*0 + 3*79*FLEN/8, x4, x1, x2)

inst_96080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:288240*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288240*0 + 3*80*FLEN/8, x4, x1, x2)

inst_96081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:288243*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288243*0 + 3*81*FLEN/8, x4, x1, x2)

inst_96082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:288246*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288246*0 + 3*82*FLEN/8, x4, x1, x2)

inst_96083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:288249*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288249*0 + 3*83*FLEN/8, x4, x1, x2)

inst_96084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:288252*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288252*0 + 3*84*FLEN/8, x4, x1, x2)

inst_96085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:288255*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288255*0 + 3*85*FLEN/8, x4, x1, x2)

inst_96086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:288258*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288258*0 + 3*86*FLEN/8, x4, x1, x2)

inst_96087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:288261*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288261*0 + 3*87*FLEN/8, x4, x1, x2)

inst_96088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:288264*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288264*0 + 3*88*FLEN/8, x4, x1, x2)

inst_96089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:288267*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288267*0 + 3*89*FLEN/8, x4, x1, x2)

inst_96090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:288270*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288270*0 + 3*90*FLEN/8, x4, x1, x2)

inst_96091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:288273*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288273*0 + 3*91*FLEN/8, x4, x1, x2)

inst_96092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:288276*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288276*0 + 3*92*FLEN/8, x4, x1, x2)

inst_96093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:288279*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288279*0 + 3*93*FLEN/8, x4, x1, x2)

inst_96094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000000000000; valaddr_reg:x3; val_offset:288282*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288282*0 + 3*94*FLEN/8, x4, x1, x2)

inst_96095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000000000001; valaddr_reg:x3; val_offset:288285*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288285*0 + 3*95*FLEN/8, x4, x1, x2)

inst_96096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000000000003; valaddr_reg:x3; val_offset:288288*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288288*0 + 3*96*FLEN/8, x4, x1, x2)

inst_96097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000000000007; valaddr_reg:x3; val_offset:288291*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288291*0 + 3*97*FLEN/8, x4, x1, x2)

inst_96098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000000000000f; valaddr_reg:x3; val_offset:288294*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288294*0 + 3*98*FLEN/8, x4, x1, x2)

inst_96099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000000000001f; valaddr_reg:x3; val_offset:288297*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288297*0 + 3*99*FLEN/8, x4, x1, x2)

inst_96100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000000000003f; valaddr_reg:x3; val_offset:288300*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288300*0 + 3*100*FLEN/8, x4, x1, x2)

inst_96101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000000000007f; valaddr_reg:x3; val_offset:288303*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288303*0 + 3*101*FLEN/8, x4, x1, x2)

inst_96102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00000000000ff; valaddr_reg:x3; val_offset:288306*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288306*0 + 3*102*FLEN/8, x4, x1, x2)

inst_96103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00000000001ff; valaddr_reg:x3; val_offset:288309*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288309*0 + 3*103*FLEN/8, x4, x1, x2)

inst_96104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00000000003ff; valaddr_reg:x3; val_offset:288312*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288312*0 + 3*104*FLEN/8, x4, x1, x2)

inst_96105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00000000007ff; valaddr_reg:x3; val_offset:288315*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288315*0 + 3*105*FLEN/8, x4, x1, x2)

inst_96106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000000000fff; valaddr_reg:x3; val_offset:288318*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288318*0 + 3*106*FLEN/8, x4, x1, x2)

inst_96107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000000001fff; valaddr_reg:x3; val_offset:288321*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288321*0 + 3*107*FLEN/8, x4, x1, x2)

inst_96108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000000003fff; valaddr_reg:x3; val_offset:288324*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288324*0 + 3*108*FLEN/8, x4, x1, x2)

inst_96109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000000007fff; valaddr_reg:x3; val_offset:288327*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288327*0 + 3*109*FLEN/8, x4, x1, x2)

inst_96110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000000000ffff; valaddr_reg:x3; val_offset:288330*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288330*0 + 3*110*FLEN/8, x4, x1, x2)

inst_96111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000000001ffff; valaddr_reg:x3; val_offset:288333*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288333*0 + 3*111*FLEN/8, x4, x1, x2)

inst_96112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000000003ffff; valaddr_reg:x3; val_offset:288336*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288336*0 + 3*112*FLEN/8, x4, x1, x2)

inst_96113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000000007ffff; valaddr_reg:x3; val_offset:288339*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288339*0 + 3*113*FLEN/8, x4, x1, x2)

inst_96114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00000000fffff; valaddr_reg:x3; val_offset:288342*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288342*0 + 3*114*FLEN/8, x4, x1, x2)

inst_96115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00000001fffff; valaddr_reg:x3; val_offset:288345*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288345*0 + 3*115*FLEN/8, x4, x1, x2)

inst_96116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00000003fffff; valaddr_reg:x3; val_offset:288348*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288348*0 + 3*116*FLEN/8, x4, x1, x2)

inst_96117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00000007fffff; valaddr_reg:x3; val_offset:288351*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288351*0 + 3*117*FLEN/8, x4, x1, x2)

inst_96118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000000ffffff; valaddr_reg:x3; val_offset:288354*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288354*0 + 3*118*FLEN/8, x4, x1, x2)

inst_96119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000001ffffff; valaddr_reg:x3; val_offset:288357*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288357*0 + 3*119*FLEN/8, x4, x1, x2)

inst_96120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000003ffffff; valaddr_reg:x3; val_offset:288360*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288360*0 + 3*120*FLEN/8, x4, x1, x2)

inst_96121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000007ffffff; valaddr_reg:x3; val_offset:288363*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288363*0 + 3*121*FLEN/8, x4, x1, x2)

inst_96122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000000fffffff; valaddr_reg:x3; val_offset:288366*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288366*0 + 3*122*FLEN/8, x4, x1, x2)

inst_96123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000001fffffff; valaddr_reg:x3; val_offset:288369*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288369*0 + 3*123*FLEN/8, x4, x1, x2)

inst_96124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000003fffffff; valaddr_reg:x3; val_offset:288372*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288372*0 + 3*124*FLEN/8, x4, x1, x2)

inst_96125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000007fffffff; valaddr_reg:x3; val_offset:288375*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288375*0 + 3*125*FLEN/8, x4, x1, x2)

inst_96126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00000ffffffff; valaddr_reg:x3; val_offset:288378*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288378*0 + 3*126*FLEN/8, x4, x1, x2)

inst_96127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00001ffffffff; valaddr_reg:x3; val_offset:288381*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288381*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_96128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00003ffffffff; valaddr_reg:x3; val_offset:288384*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288384*0 + 3*128*FLEN/8, x4, x1, x2)

inst_96129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00007ffffffff; valaddr_reg:x3; val_offset:288387*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288387*0 + 3*129*FLEN/8, x4, x1, x2)

inst_96130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0000fffffffff; valaddr_reg:x3; val_offset:288390*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288390*0 + 3*130*FLEN/8, x4, x1, x2)

inst_96131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0001fffffffff; valaddr_reg:x3; val_offset:288393*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288393*0 + 3*131*FLEN/8, x4, x1, x2)

inst_96132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0003fffffffff; valaddr_reg:x3; val_offset:288396*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288396*0 + 3*132*FLEN/8, x4, x1, x2)

inst_96133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0007fffffffff; valaddr_reg:x3; val_offset:288399*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288399*0 + 3*133*FLEN/8, x4, x1, x2)

inst_96134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa000ffffffffff; valaddr_reg:x3; val_offset:288402*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288402*0 + 3*134*FLEN/8, x4, x1, x2)

inst_96135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa001ffffffffff; valaddr_reg:x3; val_offset:288405*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288405*0 + 3*135*FLEN/8, x4, x1, x2)

inst_96136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa003ffffffffff; valaddr_reg:x3; val_offset:288408*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288408*0 + 3*136*FLEN/8, x4, x1, x2)

inst_96137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa007ffffffffff; valaddr_reg:x3; val_offset:288411*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288411*0 + 3*137*FLEN/8, x4, x1, x2)

inst_96138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa00fffffffffff; valaddr_reg:x3; val_offset:288414*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288414*0 + 3*138*FLEN/8, x4, x1, x2)

inst_96139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa01fffffffffff; valaddr_reg:x3; val_offset:288417*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288417*0 + 3*139*FLEN/8, x4, x1, x2)

inst_96140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa03fffffffffff; valaddr_reg:x3; val_offset:288420*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288420*0 + 3*140*FLEN/8, x4, x1, x2)

inst_96141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa07fffffffffff; valaddr_reg:x3; val_offset:288423*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288423*0 + 3*141*FLEN/8, x4, x1, x2)

inst_96142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa0ffffffffffff; valaddr_reg:x3; val_offset:288426*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288426*0 + 3*142*FLEN/8, x4, x1, x2)

inst_96143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa1ffffffffffff; valaddr_reg:x3; val_offset:288429*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288429*0 + 3*143*FLEN/8, x4, x1, x2)

inst_96144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa3ffffffffffff; valaddr_reg:x3; val_offset:288432*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288432*0 + 3*144*FLEN/8, x4, x1, x2)

inst_96145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa7ffffffffffff; valaddr_reg:x3; val_offset:288435*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288435*0 + 3*145*FLEN/8, x4, x1, x2)

inst_96146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xa8000000000000; valaddr_reg:x3; val_offset:288438*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288438*0 + 3*146*FLEN/8, x4, x1, x2)

inst_96147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xac000000000000; valaddr_reg:x3; val_offset:288441*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288441*0 + 3*147*FLEN/8, x4, x1, x2)

inst_96148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xae000000000000; valaddr_reg:x3; val_offset:288444*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288444*0 + 3*148*FLEN/8, x4, x1, x2)

inst_96149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaf000000000000; valaddr_reg:x3; val_offset:288447*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288447*0 + 3*149*FLEN/8, x4, x1, x2)

inst_96150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaf800000000000; valaddr_reg:x3; val_offset:288450*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288450*0 + 3*150*FLEN/8, x4, x1, x2)

inst_96151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafc00000000000; valaddr_reg:x3; val_offset:288453*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288453*0 + 3*151*FLEN/8, x4, x1, x2)

inst_96152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafe00000000000; valaddr_reg:x3; val_offset:288456*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288456*0 + 3*152*FLEN/8, x4, x1, x2)

inst_96153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaff00000000000; valaddr_reg:x3; val_offset:288459*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288459*0 + 3*153*FLEN/8, x4, x1, x2)

inst_96154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaff80000000000; valaddr_reg:x3; val_offset:288462*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288462*0 + 3*154*FLEN/8, x4, x1, x2)

inst_96155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffc0000000000; valaddr_reg:x3; val_offset:288465*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288465*0 + 3*155*FLEN/8, x4, x1, x2)

inst_96156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffe0000000000; valaddr_reg:x3; val_offset:288468*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288468*0 + 3*156*FLEN/8, x4, x1, x2)

inst_96157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafff0000000000; valaddr_reg:x3; val_offset:288471*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288471*0 + 3*157*FLEN/8, x4, x1, x2)

inst_96158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafff8000000000; valaddr_reg:x3; val_offset:288474*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288474*0 + 3*158*FLEN/8, x4, x1, x2)

inst_96159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffc000000000; valaddr_reg:x3; val_offset:288477*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288477*0 + 3*159*FLEN/8, x4, x1, x2)

inst_96160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffe000000000; valaddr_reg:x3; val_offset:288480*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288480*0 + 3*160*FLEN/8, x4, x1, x2)

inst_96161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffff000000000; valaddr_reg:x3; val_offset:288483*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288483*0 + 3*161*FLEN/8, x4, x1, x2)

inst_96162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffff800000000; valaddr_reg:x3; val_offset:288486*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288486*0 + 3*162*FLEN/8, x4, x1, x2)

inst_96163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffc00000000; valaddr_reg:x3; val_offset:288489*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288489*0 + 3*163*FLEN/8, x4, x1, x2)

inst_96164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffe00000000; valaddr_reg:x3; val_offset:288492*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288492*0 + 3*164*FLEN/8, x4, x1, x2)

inst_96165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffff00000000; valaddr_reg:x3; val_offset:288495*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288495*0 + 3*165*FLEN/8, x4, x1, x2)

inst_96166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffff80000000; valaddr_reg:x3; val_offset:288498*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288498*0 + 3*166*FLEN/8, x4, x1, x2)

inst_96167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffc0000000; valaddr_reg:x3; val_offset:288501*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288501*0 + 3*167*FLEN/8, x4, x1, x2)

inst_96168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffe0000000; valaddr_reg:x3; val_offset:288504*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288504*0 + 3*168*FLEN/8, x4, x1, x2)

inst_96169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffff0000000; valaddr_reg:x3; val_offset:288507*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288507*0 + 3*169*FLEN/8, x4, x1, x2)

inst_96170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffff8000000; valaddr_reg:x3; val_offset:288510*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288510*0 + 3*170*FLEN/8, x4, x1, x2)

inst_96171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffc000000; valaddr_reg:x3; val_offset:288513*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288513*0 + 3*171*FLEN/8, x4, x1, x2)

inst_96172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffe000000; valaddr_reg:x3; val_offset:288516*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288516*0 + 3*172*FLEN/8, x4, x1, x2)

inst_96173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffff000000; valaddr_reg:x3; val_offset:288519*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288519*0 + 3*173*FLEN/8, x4, x1, x2)

inst_96174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffff800000; valaddr_reg:x3; val_offset:288522*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288522*0 + 3*174*FLEN/8, x4, x1, x2)

inst_96175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffffc00000; valaddr_reg:x3; val_offset:288525*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288525*0 + 3*175*FLEN/8, x4, x1, x2)

inst_96176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffffe00000; valaddr_reg:x3; val_offset:288528*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288528*0 + 3*176*FLEN/8, x4, x1, x2)

inst_96177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffff00000; valaddr_reg:x3; val_offset:288531*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288531*0 + 3*177*FLEN/8, x4, x1, x2)

inst_96178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffff80000; valaddr_reg:x3; val_offset:288534*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288534*0 + 3*178*FLEN/8, x4, x1, x2)

inst_96179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffffc0000; valaddr_reg:x3; val_offset:288537*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288537*0 + 3*179*FLEN/8, x4, x1, x2)

inst_96180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffffe0000; valaddr_reg:x3; val_offset:288540*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288540*0 + 3*180*FLEN/8, x4, x1, x2)

inst_96181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffffff0000; valaddr_reg:x3; val_offset:288543*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288543*0 + 3*181*FLEN/8, x4, x1, x2)

inst_96182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffffff8000; valaddr_reg:x3; val_offset:288546*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288546*0 + 3*182*FLEN/8, x4, x1, x2)

inst_96183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffffffc000; valaddr_reg:x3; val_offset:288549*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288549*0 + 3*183*FLEN/8, x4, x1, x2)

inst_96184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffffffe000; valaddr_reg:x3; val_offset:288552*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288552*0 + 3*184*FLEN/8, x4, x1, x2)

inst_96185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffffff000; valaddr_reg:x3; val_offset:288555*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288555*0 + 3*185*FLEN/8, x4, x1, x2)

inst_96186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffffff800; valaddr_reg:x3; val_offset:288558*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288558*0 + 3*186*FLEN/8, x4, x1, x2)

inst_96187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffffffc00; valaddr_reg:x3; val_offset:288561*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288561*0 + 3*187*FLEN/8, x4, x1, x2)

inst_96188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffffffe00; valaddr_reg:x3; val_offset:288564*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288564*0 + 3*188*FLEN/8, x4, x1, x2)

inst_96189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffffffff00; valaddr_reg:x3; val_offset:288567*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288567*0 + 3*189*FLEN/8, x4, x1, x2)

inst_96190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffffffff80; valaddr_reg:x3; val_offset:288570*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288570*0 + 3*190*FLEN/8, x4, x1, x2)

inst_96191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffffffffc0; valaddr_reg:x3; val_offset:288573*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288573*0 + 3*191*FLEN/8, x4, x1, x2)

inst_96192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffffffffe0; valaddr_reg:x3; val_offset:288576*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288576*0 + 3*192*FLEN/8, x4, x1, x2)

inst_96193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffffffff0; valaddr_reg:x3; val_offset:288579*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288579*0 + 3*193*FLEN/8, x4, x1, x2)

inst_96194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffffffff8; valaddr_reg:x3; val_offset:288582*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288582*0 + 3*194*FLEN/8, x4, x1, x2)

inst_96195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffffffffc; valaddr_reg:x3; val_offset:288585*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288585*0 + 3*195*FLEN/8, x4, x1, x2)

inst_96196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xaffffffffffffe; valaddr_reg:x3; val_offset:288588*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288588*0 + 3*196*FLEN/8, x4, x1, x2)

inst_96197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe23bbfc24cbd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae23bbfc24cbd5; op2val:0x0;
op3val:0xafffffffffffff; valaddr_reg:x3; val_offset:288591*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288591*0 + 3*197*FLEN/8, x4, x1, x2)

inst_96198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:288594*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288594*0 + 3*198*FLEN/8, x4, x1, x2)

inst_96199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:288597*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288597*0 + 3*199*FLEN/8, x4, x1, x2)

inst_96200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:288600*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288600*0 + 3*200*FLEN/8, x4, x1, x2)

inst_96201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:288603*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288603*0 + 3*201*FLEN/8, x4, x1, x2)

inst_96202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:288606*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288606*0 + 3*202*FLEN/8, x4, x1, x2)

inst_96203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:288609*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288609*0 + 3*203*FLEN/8, x4, x1, x2)

inst_96204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:288612*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288612*0 + 3*204*FLEN/8, x4, x1, x2)

inst_96205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:288615*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288615*0 + 3*205*FLEN/8, x4, x1, x2)

inst_96206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:288618*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288618*0 + 3*206*FLEN/8, x4, x1, x2)

inst_96207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:288621*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288621*0 + 3*207*FLEN/8, x4, x1, x2)

inst_96208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:288624*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288624*0 + 3*208*FLEN/8, x4, x1, x2)

inst_96209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:288627*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288627*0 + 3*209*FLEN/8, x4, x1, x2)

inst_96210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:288630*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288630*0 + 3*210*FLEN/8, x4, x1, x2)

inst_96211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:288633*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288633*0 + 3*211*FLEN/8, x4, x1, x2)

inst_96212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:288636*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288636*0 + 3*212*FLEN/8, x4, x1, x2)

inst_96213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:288639*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288639*0 + 3*213*FLEN/8, x4, x1, x2)

inst_96214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:288642*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288642*0 + 3*214*FLEN/8, x4, x1, x2)

inst_96215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:288645*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288645*0 + 3*215*FLEN/8, x4, x1, x2)

inst_96216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:288648*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288648*0 + 3*216*FLEN/8, x4, x1, x2)

inst_96217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:288651*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288651*0 + 3*217*FLEN/8, x4, x1, x2)

inst_96218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:288654*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288654*0 + 3*218*FLEN/8, x4, x1, x2)

inst_96219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:288657*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288657*0 + 3*219*FLEN/8, x4, x1, x2)

inst_96220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000000000000; valaddr_reg:x3; val_offset:288660*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288660*0 + 3*220*FLEN/8, x4, x1, x2)

inst_96221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000000000001; valaddr_reg:x3; val_offset:288663*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288663*0 + 3*221*FLEN/8, x4, x1, x2)

inst_96222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000000000003; valaddr_reg:x3; val_offset:288666*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288666*0 + 3*222*FLEN/8, x4, x1, x2)

inst_96223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000000000007; valaddr_reg:x3; val_offset:288669*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288669*0 + 3*223*FLEN/8, x4, x1, x2)

inst_96224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000000000000f; valaddr_reg:x3; val_offset:288672*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288672*0 + 3*224*FLEN/8, x4, x1, x2)

inst_96225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000000000001f; valaddr_reg:x3; val_offset:288675*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288675*0 + 3*225*FLEN/8, x4, x1, x2)

inst_96226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000000000003f; valaddr_reg:x3; val_offset:288678*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288678*0 + 3*226*FLEN/8, x4, x1, x2)

inst_96227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000000000007f; valaddr_reg:x3; val_offset:288681*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288681*0 + 3*227*FLEN/8, x4, x1, x2)

inst_96228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00000000000ff; valaddr_reg:x3; val_offset:288684*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288684*0 + 3*228*FLEN/8, x4, x1, x2)

inst_96229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00000000001ff; valaddr_reg:x3; val_offset:288687*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288687*0 + 3*229*FLEN/8, x4, x1, x2)

inst_96230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00000000003ff; valaddr_reg:x3; val_offset:288690*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288690*0 + 3*230*FLEN/8, x4, x1, x2)

inst_96231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00000000007ff; valaddr_reg:x3; val_offset:288693*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288693*0 + 3*231*FLEN/8, x4, x1, x2)

inst_96232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000000000fff; valaddr_reg:x3; val_offset:288696*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288696*0 + 3*232*FLEN/8, x4, x1, x2)

inst_96233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000000001fff; valaddr_reg:x3; val_offset:288699*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288699*0 + 3*233*FLEN/8, x4, x1, x2)

inst_96234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000000003fff; valaddr_reg:x3; val_offset:288702*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288702*0 + 3*234*FLEN/8, x4, x1, x2)

inst_96235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000000007fff; valaddr_reg:x3; val_offset:288705*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288705*0 + 3*235*FLEN/8, x4, x1, x2)

inst_96236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000000000ffff; valaddr_reg:x3; val_offset:288708*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288708*0 + 3*236*FLEN/8, x4, x1, x2)

inst_96237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000000001ffff; valaddr_reg:x3; val_offset:288711*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288711*0 + 3*237*FLEN/8, x4, x1, x2)

inst_96238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000000003ffff; valaddr_reg:x3; val_offset:288714*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288714*0 + 3*238*FLEN/8, x4, x1, x2)

inst_96239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000000007ffff; valaddr_reg:x3; val_offset:288717*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288717*0 + 3*239*FLEN/8, x4, x1, x2)

inst_96240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00000000fffff; valaddr_reg:x3; val_offset:288720*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288720*0 + 3*240*FLEN/8, x4, x1, x2)

inst_96241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00000001fffff; valaddr_reg:x3; val_offset:288723*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288723*0 + 3*241*FLEN/8, x4, x1, x2)

inst_96242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00000003fffff; valaddr_reg:x3; val_offset:288726*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288726*0 + 3*242*FLEN/8, x4, x1, x2)

inst_96243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00000007fffff; valaddr_reg:x3; val_offset:288729*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288729*0 + 3*243*FLEN/8, x4, x1, x2)

inst_96244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000000ffffff; valaddr_reg:x3; val_offset:288732*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288732*0 + 3*244*FLEN/8, x4, x1, x2)

inst_96245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000001ffffff; valaddr_reg:x3; val_offset:288735*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288735*0 + 3*245*FLEN/8, x4, x1, x2)

inst_96246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000003ffffff; valaddr_reg:x3; val_offset:288738*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288738*0 + 3*246*FLEN/8, x4, x1, x2)

inst_96247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000007ffffff; valaddr_reg:x3; val_offset:288741*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288741*0 + 3*247*FLEN/8, x4, x1, x2)

inst_96248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000000fffffff; valaddr_reg:x3; val_offset:288744*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288744*0 + 3*248*FLEN/8, x4, x1, x2)

inst_96249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000001fffffff; valaddr_reg:x3; val_offset:288747*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288747*0 + 3*249*FLEN/8, x4, x1, x2)

inst_96250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000003fffffff; valaddr_reg:x3; val_offset:288750*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288750*0 + 3*250*FLEN/8, x4, x1, x2)

inst_96251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000007fffffff; valaddr_reg:x3; val_offset:288753*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288753*0 + 3*251*FLEN/8, x4, x1, x2)

inst_96252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00000ffffffff; valaddr_reg:x3; val_offset:288756*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288756*0 + 3*252*FLEN/8, x4, x1, x2)

inst_96253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00001ffffffff; valaddr_reg:x3; val_offset:288759*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288759*0 + 3*253*FLEN/8, x4, x1, x2)

inst_96254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00003ffffffff; valaddr_reg:x3; val_offset:288762*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288762*0 + 3*254*FLEN/8, x4, x1, x2)

inst_96255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00007ffffffff; valaddr_reg:x3; val_offset:288765*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288765*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_96256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0000fffffffff; valaddr_reg:x3; val_offset:288768*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288768*0 + 3*256*FLEN/8, x4, x1, x2)

inst_96257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0001fffffffff; valaddr_reg:x3; val_offset:288771*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288771*0 + 3*257*FLEN/8, x4, x1, x2)

inst_96258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0003fffffffff; valaddr_reg:x3; val_offset:288774*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288774*0 + 3*258*FLEN/8, x4, x1, x2)

inst_96259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0007fffffffff; valaddr_reg:x3; val_offset:288777*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288777*0 + 3*259*FLEN/8, x4, x1, x2)

inst_96260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c000ffffffffff; valaddr_reg:x3; val_offset:288780*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288780*0 + 3*260*FLEN/8, x4, x1, x2)

inst_96261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c001ffffffffff; valaddr_reg:x3; val_offset:288783*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288783*0 + 3*261*FLEN/8, x4, x1, x2)

inst_96262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c003ffffffffff; valaddr_reg:x3; val_offset:288786*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288786*0 + 3*262*FLEN/8, x4, x1, x2)

inst_96263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c007ffffffffff; valaddr_reg:x3; val_offset:288789*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288789*0 + 3*263*FLEN/8, x4, x1, x2)

inst_96264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c00fffffffffff; valaddr_reg:x3; val_offset:288792*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288792*0 + 3*264*FLEN/8, x4, x1, x2)

inst_96265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c01fffffffffff; valaddr_reg:x3; val_offset:288795*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288795*0 + 3*265*FLEN/8, x4, x1, x2)

inst_96266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c03fffffffffff; valaddr_reg:x3; val_offset:288798*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288798*0 + 3*266*FLEN/8, x4, x1, x2)

inst_96267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c07fffffffffff; valaddr_reg:x3; val_offset:288801*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288801*0 + 3*267*FLEN/8, x4, x1, x2)

inst_96268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c0ffffffffffff; valaddr_reg:x3; val_offset:288804*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288804*0 + 3*268*FLEN/8, x4, x1, x2)

inst_96269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c1ffffffffffff; valaddr_reg:x3; val_offset:288807*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288807*0 + 3*269*FLEN/8, x4, x1, x2)

inst_96270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c3ffffffffffff; valaddr_reg:x3; val_offset:288810*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288810*0 + 3*270*FLEN/8, x4, x1, x2)

inst_96271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c7ffffffffffff; valaddr_reg:x3; val_offset:288813*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288813*0 + 3*271*FLEN/8, x4, x1, x2)

inst_96272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83c8000000000000; valaddr_reg:x3; val_offset:288816*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288816*0 + 3*272*FLEN/8, x4, x1, x2)

inst_96273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cc000000000000; valaddr_reg:x3; val_offset:288819*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288819*0 + 3*273*FLEN/8, x4, x1, x2)

inst_96274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83ce000000000000; valaddr_reg:x3; val_offset:288822*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288822*0 + 3*274*FLEN/8, x4, x1, x2)

inst_96275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cf000000000000; valaddr_reg:x3; val_offset:288825*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288825*0 + 3*275*FLEN/8, x4, x1, x2)

inst_96276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cf800000000000; valaddr_reg:x3; val_offset:288828*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288828*0 + 3*276*FLEN/8, x4, x1, x2)

inst_96277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfc00000000000; valaddr_reg:x3; val_offset:288831*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288831*0 + 3*277*FLEN/8, x4, x1, x2)

inst_96278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfe00000000000; valaddr_reg:x3; val_offset:288834*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288834*0 + 3*278*FLEN/8, x4, x1, x2)

inst_96279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cff00000000000; valaddr_reg:x3; val_offset:288837*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288837*0 + 3*279*FLEN/8, x4, x1, x2)

inst_96280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cff80000000000; valaddr_reg:x3; val_offset:288840*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288840*0 + 3*280*FLEN/8, x4, x1, x2)

inst_96281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffc0000000000; valaddr_reg:x3; val_offset:288843*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288843*0 + 3*281*FLEN/8, x4, x1, x2)

inst_96282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffe0000000000; valaddr_reg:x3; val_offset:288846*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288846*0 + 3*282*FLEN/8, x4, x1, x2)

inst_96283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfff0000000000; valaddr_reg:x3; val_offset:288849*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288849*0 + 3*283*FLEN/8, x4, x1, x2)

inst_96284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfff8000000000; valaddr_reg:x3; val_offset:288852*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288852*0 + 3*284*FLEN/8, x4, x1, x2)

inst_96285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffc000000000; valaddr_reg:x3; val_offset:288855*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288855*0 + 3*285*FLEN/8, x4, x1, x2)

inst_96286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffe000000000; valaddr_reg:x3; val_offset:288858*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288858*0 + 3*286*FLEN/8, x4, x1, x2)

inst_96287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffff000000000; valaddr_reg:x3; val_offset:288861*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288861*0 + 3*287*FLEN/8, x4, x1, x2)

inst_96288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffff800000000; valaddr_reg:x3; val_offset:288864*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288864*0 + 3*288*FLEN/8, x4, x1, x2)

inst_96289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffc00000000; valaddr_reg:x3; val_offset:288867*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288867*0 + 3*289*FLEN/8, x4, x1, x2)

inst_96290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffe00000000; valaddr_reg:x3; val_offset:288870*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288870*0 + 3*290*FLEN/8, x4, x1, x2)

inst_96291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffff00000000; valaddr_reg:x3; val_offset:288873*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288873*0 + 3*291*FLEN/8, x4, x1, x2)

inst_96292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffff80000000; valaddr_reg:x3; val_offset:288876*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288876*0 + 3*292*FLEN/8, x4, x1, x2)

inst_96293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffc0000000; valaddr_reg:x3; val_offset:288879*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288879*0 + 3*293*FLEN/8, x4, x1, x2)

inst_96294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffe0000000; valaddr_reg:x3; val_offset:288882*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288882*0 + 3*294*FLEN/8, x4, x1, x2)

inst_96295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffff0000000; valaddr_reg:x3; val_offset:288885*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288885*0 + 3*295*FLEN/8, x4, x1, x2)

inst_96296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffff8000000; valaddr_reg:x3; val_offset:288888*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288888*0 + 3*296*FLEN/8, x4, x1, x2)

inst_96297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffc000000; valaddr_reg:x3; val_offset:288891*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288891*0 + 3*297*FLEN/8, x4, x1, x2)

inst_96298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffe000000; valaddr_reg:x3; val_offset:288894*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288894*0 + 3*298*FLEN/8, x4, x1, x2)

inst_96299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffff000000; valaddr_reg:x3; val_offset:288897*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288897*0 + 3*299*FLEN/8, x4, x1, x2)

inst_96300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffff800000; valaddr_reg:x3; val_offset:288900*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288900*0 + 3*300*FLEN/8, x4, x1, x2)

inst_96301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffffc00000; valaddr_reg:x3; val_offset:288903*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288903*0 + 3*301*FLEN/8, x4, x1, x2)

inst_96302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffffe00000; valaddr_reg:x3; val_offset:288906*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288906*0 + 3*302*FLEN/8, x4, x1, x2)

inst_96303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffff00000; valaddr_reg:x3; val_offset:288909*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288909*0 + 3*303*FLEN/8, x4, x1, x2)

inst_96304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffff80000; valaddr_reg:x3; val_offset:288912*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288912*0 + 3*304*FLEN/8, x4, x1, x2)

inst_96305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffffc0000; valaddr_reg:x3; val_offset:288915*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288915*0 + 3*305*FLEN/8, x4, x1, x2)

inst_96306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffffe0000; valaddr_reg:x3; val_offset:288918*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288918*0 + 3*306*FLEN/8, x4, x1, x2)

inst_96307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffffff0000; valaddr_reg:x3; val_offset:288921*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288921*0 + 3*307*FLEN/8, x4, x1, x2)

inst_96308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffffff8000; valaddr_reg:x3; val_offset:288924*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288924*0 + 3*308*FLEN/8, x4, x1, x2)

inst_96309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffffffc000; valaddr_reg:x3; val_offset:288927*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288927*0 + 3*309*FLEN/8, x4, x1, x2)

inst_96310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffffffe000; valaddr_reg:x3; val_offset:288930*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288930*0 + 3*310*FLEN/8, x4, x1, x2)

inst_96311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffffff000; valaddr_reg:x3; val_offset:288933*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288933*0 + 3*311*FLEN/8, x4, x1, x2)

inst_96312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffffff800; valaddr_reg:x3; val_offset:288936*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288936*0 + 3*312*FLEN/8, x4, x1, x2)

inst_96313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffffffc00; valaddr_reg:x3; val_offset:288939*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288939*0 + 3*313*FLEN/8, x4, x1, x2)

inst_96314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffffffe00; valaddr_reg:x3; val_offset:288942*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288942*0 + 3*314*FLEN/8, x4, x1, x2)

inst_96315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffffffff00; valaddr_reg:x3; val_offset:288945*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288945*0 + 3*315*FLEN/8, x4, x1, x2)

inst_96316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffffffff80; valaddr_reg:x3; val_offset:288948*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288948*0 + 3*316*FLEN/8, x4, x1, x2)

inst_96317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffffffffc0; valaddr_reg:x3; val_offset:288951*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288951*0 + 3*317*FLEN/8, x4, x1, x2)

inst_96318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffffffffe0; valaddr_reg:x3; val_offset:288954*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288954*0 + 3*318*FLEN/8, x4, x1, x2)

inst_96319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffffffff0; valaddr_reg:x3; val_offset:288957*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288957*0 + 3*319*FLEN/8, x4, x1, x2)

inst_96320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffffffff8; valaddr_reg:x3; val_offset:288960*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288960*0 + 3*320*FLEN/8, x4, x1, x2)

inst_96321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffffffffc; valaddr_reg:x3; val_offset:288963*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288963*0 + 3*321*FLEN/8, x4, x1, x2)

inst_96322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cffffffffffffe; valaddr_reg:x3; val_offset:288966*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288966*0 + 3*322*FLEN/8, x4, x1, x2)

inst_96323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe42ff54803ddc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae42ff54803ddc; op2val:0x8000;
op3val:0x83cfffffffffffff; valaddr_reg:x3; val_offset:288969*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288969*0 + 3*323*FLEN/8, x4, x1, x2)

inst_96324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000000000000; valaddr_reg:x3; val_offset:288972*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288972*0 + 3*324*FLEN/8, x4, x1, x2)

inst_96325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000000000001; valaddr_reg:x3; val_offset:288975*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288975*0 + 3*325*FLEN/8, x4, x1, x2)

inst_96326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000000000003; valaddr_reg:x3; val_offset:288978*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288978*0 + 3*326*FLEN/8, x4, x1, x2)

inst_96327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000000000007; valaddr_reg:x3; val_offset:288981*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288981*0 + 3*327*FLEN/8, x4, x1, x2)

inst_96328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000000000000f; valaddr_reg:x3; val_offset:288984*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288984*0 + 3*328*FLEN/8, x4, x1, x2)

inst_96329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000000000001f; valaddr_reg:x3; val_offset:288987*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288987*0 + 3*329*FLEN/8, x4, x1, x2)

inst_96330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000000000003f; valaddr_reg:x3; val_offset:288990*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288990*0 + 3*330*FLEN/8, x4, x1, x2)

inst_96331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000000000007f; valaddr_reg:x3; val_offset:288993*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288993*0 + 3*331*FLEN/8, x4, x1, x2)

inst_96332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800000000000ff; valaddr_reg:x3; val_offset:288996*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288996*0 + 3*332*FLEN/8, x4, x1, x2)

inst_96333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800000000001ff; valaddr_reg:x3; val_offset:288999*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288999*0 + 3*333*FLEN/8, x4, x1, x2)

inst_96334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800000000003ff; valaddr_reg:x3; val_offset:289002*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289002*0 + 3*334*FLEN/8, x4, x1, x2)

inst_96335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800000000007ff; valaddr_reg:x3; val_offset:289005*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289005*0 + 3*335*FLEN/8, x4, x1, x2)

inst_96336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000000000fff; valaddr_reg:x3; val_offset:289008*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289008*0 + 3*336*FLEN/8, x4, x1, x2)

inst_96337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000000001fff; valaddr_reg:x3; val_offset:289011*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289011*0 + 3*337*FLEN/8, x4, x1, x2)

inst_96338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000000003fff; valaddr_reg:x3; val_offset:289014*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289014*0 + 3*338*FLEN/8, x4, x1, x2)

inst_96339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000000007fff; valaddr_reg:x3; val_offset:289017*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289017*0 + 3*339*FLEN/8, x4, x1, x2)

inst_96340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000000000ffff; valaddr_reg:x3; val_offset:289020*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289020*0 + 3*340*FLEN/8, x4, x1, x2)

inst_96341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000000001ffff; valaddr_reg:x3; val_offset:289023*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289023*0 + 3*341*FLEN/8, x4, x1, x2)

inst_96342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000000003ffff; valaddr_reg:x3; val_offset:289026*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289026*0 + 3*342*FLEN/8, x4, x1, x2)

inst_96343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000000007ffff; valaddr_reg:x3; val_offset:289029*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289029*0 + 3*343*FLEN/8, x4, x1, x2)

inst_96344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800000000fffff; valaddr_reg:x3; val_offset:289032*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289032*0 + 3*344*FLEN/8, x4, x1, x2)

inst_96345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800000001fffff; valaddr_reg:x3; val_offset:289035*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289035*0 + 3*345*FLEN/8, x4, x1, x2)

inst_96346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800000003fffff; valaddr_reg:x3; val_offset:289038*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289038*0 + 3*346*FLEN/8, x4, x1, x2)

inst_96347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800000007fffff; valaddr_reg:x3; val_offset:289041*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289041*0 + 3*347*FLEN/8, x4, x1, x2)

inst_96348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000000ffffff; valaddr_reg:x3; val_offset:289044*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289044*0 + 3*348*FLEN/8, x4, x1, x2)

inst_96349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000001ffffff; valaddr_reg:x3; val_offset:289047*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289047*0 + 3*349*FLEN/8, x4, x1, x2)

inst_96350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000003ffffff; valaddr_reg:x3; val_offset:289050*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289050*0 + 3*350*FLEN/8, x4, x1, x2)

inst_96351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000007ffffff; valaddr_reg:x3; val_offset:289053*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289053*0 + 3*351*FLEN/8, x4, x1, x2)

inst_96352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000000fffffff; valaddr_reg:x3; val_offset:289056*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289056*0 + 3*352*FLEN/8, x4, x1, x2)

inst_96353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000001fffffff; valaddr_reg:x3; val_offset:289059*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289059*0 + 3*353*FLEN/8, x4, x1, x2)

inst_96354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000003fffffff; valaddr_reg:x3; val_offset:289062*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289062*0 + 3*354*FLEN/8, x4, x1, x2)

inst_96355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000007fffffff; valaddr_reg:x3; val_offset:289065*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289065*0 + 3*355*FLEN/8, x4, x1, x2)

inst_96356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800000ffffffff; valaddr_reg:x3; val_offset:289068*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289068*0 + 3*356*FLEN/8, x4, x1, x2)

inst_96357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800001ffffffff; valaddr_reg:x3; val_offset:289071*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289071*0 + 3*357*FLEN/8, x4, x1, x2)

inst_96358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800003ffffffff; valaddr_reg:x3; val_offset:289074*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289074*0 + 3*358*FLEN/8, x4, x1, x2)

inst_96359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800007ffffffff; valaddr_reg:x3; val_offset:289077*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289077*0 + 3*359*FLEN/8, x4, x1, x2)

inst_96360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80000fffffffff; valaddr_reg:x3; val_offset:289080*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289080*0 + 3*360*FLEN/8, x4, x1, x2)

inst_96361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80001fffffffff; valaddr_reg:x3; val_offset:289083*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289083*0 + 3*361*FLEN/8, x4, x1, x2)

inst_96362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80003fffffffff; valaddr_reg:x3; val_offset:289086*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289086*0 + 3*362*FLEN/8, x4, x1, x2)

inst_96363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80007fffffffff; valaddr_reg:x3; val_offset:289089*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289089*0 + 3*363*FLEN/8, x4, x1, x2)

inst_96364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8000ffffffffff; valaddr_reg:x3; val_offset:289092*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289092*0 + 3*364*FLEN/8, x4, x1, x2)

inst_96365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8001ffffffffff; valaddr_reg:x3; val_offset:289095*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289095*0 + 3*365*FLEN/8, x4, x1, x2)

inst_96366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8003ffffffffff; valaddr_reg:x3; val_offset:289098*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289098*0 + 3*366*FLEN/8, x4, x1, x2)

inst_96367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8007ffffffffff; valaddr_reg:x3; val_offset:289101*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289101*0 + 3*367*FLEN/8, x4, x1, x2)

inst_96368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb800fffffffffff; valaddr_reg:x3; val_offset:289104*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289104*0 + 3*368*FLEN/8, x4, x1, x2)

inst_96369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb801fffffffffff; valaddr_reg:x3; val_offset:289107*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289107*0 + 3*369*FLEN/8, x4, x1, x2)

inst_96370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb803fffffffffff; valaddr_reg:x3; val_offset:289110*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289110*0 + 3*370*FLEN/8, x4, x1, x2)

inst_96371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb807fffffffffff; valaddr_reg:x3; val_offset:289113*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289113*0 + 3*371*FLEN/8, x4, x1, x2)

inst_96372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb80ffffffffffff; valaddr_reg:x3; val_offset:289116*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289116*0 + 3*372*FLEN/8, x4, x1, x2)

inst_96373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb81ffffffffffff; valaddr_reg:x3; val_offset:289119*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289119*0 + 3*373*FLEN/8, x4, x1, x2)

inst_96374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb83ffffffffffff; valaddr_reg:x3; val_offset:289122*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289122*0 + 3*374*FLEN/8, x4, x1, x2)

inst_96375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb87ffffffffffff; valaddr_reg:x3; val_offset:289125*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289125*0 + 3*375*FLEN/8, x4, x1, x2)

inst_96376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb88000000000000; valaddr_reg:x3; val_offset:289128*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289128*0 + 3*376*FLEN/8, x4, x1, x2)

inst_96377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8c000000000000; valaddr_reg:x3; val_offset:289131*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289131*0 + 3*377*FLEN/8, x4, x1, x2)

inst_96378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8e000000000000; valaddr_reg:x3; val_offset:289134*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289134*0 + 3*378*FLEN/8, x4, x1, x2)

inst_96379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8f000000000000; valaddr_reg:x3; val_offset:289137*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289137*0 + 3*379*FLEN/8, x4, x1, x2)

inst_96380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8f800000000000; valaddr_reg:x3; val_offset:289140*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289140*0 + 3*380*FLEN/8, x4, x1, x2)

inst_96381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fc00000000000; valaddr_reg:x3; val_offset:289143*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289143*0 + 3*381*FLEN/8, x4, x1, x2)

inst_96382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fe00000000000; valaddr_reg:x3; val_offset:289146*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289146*0 + 3*382*FLEN/8, x4, x1, x2)

inst_96383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ff00000000000; valaddr_reg:x3; val_offset:289149*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289149*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_96384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ff80000000000; valaddr_reg:x3; val_offset:289152*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289152*0 + 3*384*FLEN/8, x4, x1, x2)

inst_96385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffc0000000000; valaddr_reg:x3; val_offset:289155*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289155*0 + 3*385*FLEN/8, x4, x1, x2)

inst_96386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffe0000000000; valaddr_reg:x3; val_offset:289158*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289158*0 + 3*386*FLEN/8, x4, x1, x2)

inst_96387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fff0000000000; valaddr_reg:x3; val_offset:289161*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289161*0 + 3*387*FLEN/8, x4, x1, x2)

inst_96388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fff8000000000; valaddr_reg:x3; val_offset:289164*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289164*0 + 3*388*FLEN/8, x4, x1, x2)

inst_96389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffc000000000; valaddr_reg:x3; val_offset:289167*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289167*0 + 3*389*FLEN/8, x4, x1, x2)

inst_96390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffe000000000; valaddr_reg:x3; val_offset:289170*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289170*0 + 3*390*FLEN/8, x4, x1, x2)

inst_96391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffff000000000; valaddr_reg:x3; val_offset:289173*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289173*0 + 3*391*FLEN/8, x4, x1, x2)

inst_96392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffff800000000; valaddr_reg:x3; val_offset:289176*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289176*0 + 3*392*FLEN/8, x4, x1, x2)

inst_96393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffc00000000; valaddr_reg:x3; val_offset:289179*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289179*0 + 3*393*FLEN/8, x4, x1, x2)

inst_96394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffe00000000; valaddr_reg:x3; val_offset:289182*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289182*0 + 3*394*FLEN/8, x4, x1, x2)

inst_96395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffff00000000; valaddr_reg:x3; val_offset:289185*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289185*0 + 3*395*FLEN/8, x4, x1, x2)

inst_96396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffff80000000; valaddr_reg:x3; val_offset:289188*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289188*0 + 3*396*FLEN/8, x4, x1, x2)

inst_96397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffc0000000; valaddr_reg:x3; val_offset:289191*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289191*0 + 3*397*FLEN/8, x4, x1, x2)

inst_96398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffe0000000; valaddr_reg:x3; val_offset:289194*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289194*0 + 3*398*FLEN/8, x4, x1, x2)

inst_96399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffff0000000; valaddr_reg:x3; val_offset:289197*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289197*0 + 3*399*FLEN/8, x4, x1, x2)

inst_96400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffff8000000; valaddr_reg:x3; val_offset:289200*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289200*0 + 3*400*FLEN/8, x4, x1, x2)

inst_96401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffc000000; valaddr_reg:x3; val_offset:289203*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289203*0 + 3*401*FLEN/8, x4, x1, x2)

inst_96402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffe000000; valaddr_reg:x3; val_offset:289206*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289206*0 + 3*402*FLEN/8, x4, x1, x2)

inst_96403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffff000000; valaddr_reg:x3; val_offset:289209*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289209*0 + 3*403*FLEN/8, x4, x1, x2)

inst_96404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffff800000; valaddr_reg:x3; val_offset:289212*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289212*0 + 3*404*FLEN/8, x4, x1, x2)

inst_96405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffffc00000; valaddr_reg:x3; val_offset:289215*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289215*0 + 3*405*FLEN/8, x4, x1, x2)

inst_96406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffffe00000; valaddr_reg:x3; val_offset:289218*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289218*0 + 3*406*FLEN/8, x4, x1, x2)

inst_96407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffff00000; valaddr_reg:x3; val_offset:289221*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289221*0 + 3*407*FLEN/8, x4, x1, x2)

inst_96408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffff80000; valaddr_reg:x3; val_offset:289224*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289224*0 + 3*408*FLEN/8, x4, x1, x2)

inst_96409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffffc0000; valaddr_reg:x3; val_offset:289227*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289227*0 + 3*409*FLEN/8, x4, x1, x2)

inst_96410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffffe0000; valaddr_reg:x3; val_offset:289230*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289230*0 + 3*410*FLEN/8, x4, x1, x2)

inst_96411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffffff0000; valaddr_reg:x3; val_offset:289233*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289233*0 + 3*411*FLEN/8, x4, x1, x2)

inst_96412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffffff8000; valaddr_reg:x3; val_offset:289236*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289236*0 + 3*412*FLEN/8, x4, x1, x2)

inst_96413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffffffc000; valaddr_reg:x3; val_offset:289239*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289239*0 + 3*413*FLEN/8, x4, x1, x2)

inst_96414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffffffe000; valaddr_reg:x3; val_offset:289242*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289242*0 + 3*414*FLEN/8, x4, x1, x2)

inst_96415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffffff000; valaddr_reg:x3; val_offset:289245*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289245*0 + 3*415*FLEN/8, x4, x1, x2)

inst_96416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffffff800; valaddr_reg:x3; val_offset:289248*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289248*0 + 3*416*FLEN/8, x4, x1, x2)

inst_96417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffffffc00; valaddr_reg:x3; val_offset:289251*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289251*0 + 3*417*FLEN/8, x4, x1, x2)

inst_96418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffffffe00; valaddr_reg:x3; val_offset:289254*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289254*0 + 3*418*FLEN/8, x4, x1, x2)

inst_96419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffffffff00; valaddr_reg:x3; val_offset:289257*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289257*0 + 3*419*FLEN/8, x4, x1, x2)

inst_96420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffffffff80; valaddr_reg:x3; val_offset:289260*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289260*0 + 3*420*FLEN/8, x4, x1, x2)

inst_96421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffffffffc0; valaddr_reg:x3; val_offset:289263*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289263*0 + 3*421*FLEN/8, x4, x1, x2)

inst_96422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffffffffe0; valaddr_reg:x3; val_offset:289266*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289266*0 + 3*422*FLEN/8, x4, x1, x2)

inst_96423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffffffff0; valaddr_reg:x3; val_offset:289269*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289269*0 + 3*423*FLEN/8, x4, x1, x2)

inst_96424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffffffff8; valaddr_reg:x3; val_offset:289272*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289272*0 + 3*424*FLEN/8, x4, x1, x2)

inst_96425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffffffffc; valaddr_reg:x3; val_offset:289275*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289275*0 + 3*425*FLEN/8, x4, x1, x2)

inst_96426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8ffffffffffffe; valaddr_reg:x3; val_offset:289278*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289278*0 + 3*426*FLEN/8, x4, x1, x2)

inst_96427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbb8fffffffffffff; valaddr_reg:x3; val_offset:289281*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289281*0 + 3*427*FLEN/8, x4, x1, x2)

inst_96428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:289284*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289284*0 + 3*428*FLEN/8, x4, x1, x2)

inst_96429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:289287*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289287*0 + 3*429*FLEN/8, x4, x1, x2)

inst_96430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:289290*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289290*0 + 3*430*FLEN/8, x4, x1, x2)

inst_96431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:289293*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289293*0 + 3*431*FLEN/8, x4, x1, x2)

inst_96432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:289296*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289296*0 + 3*432*FLEN/8, x4, x1, x2)

inst_96433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:289299*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289299*0 + 3*433*FLEN/8, x4, x1, x2)

inst_96434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:289302*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289302*0 + 3*434*FLEN/8, x4, x1, x2)

inst_96435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:289305*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289305*0 + 3*435*FLEN/8, x4, x1, x2)

inst_96436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:289308*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289308*0 + 3*436*FLEN/8, x4, x1, x2)

inst_96437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:289311*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289311*0 + 3*437*FLEN/8, x4, x1, x2)

inst_96438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:289314*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289314*0 + 3*438*FLEN/8, x4, x1, x2)

inst_96439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:289317*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289317*0 + 3*439*FLEN/8, x4, x1, x2)

inst_96440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:289320*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289320*0 + 3*440*FLEN/8, x4, x1, x2)

inst_96441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:289323*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289323*0 + 3*441*FLEN/8, x4, x1, x2)

inst_96442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:289326*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289326*0 + 3*442*FLEN/8, x4, x1, x2)

inst_96443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:289329*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289329*0 + 3*443*FLEN/8, x4, x1, x2)

inst_96444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:289332*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289332*0 + 3*444*FLEN/8, x4, x1, x2)

inst_96445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:289335*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289335*0 + 3*445*FLEN/8, x4, x1, x2)

inst_96446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:289338*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289338*0 + 3*446*FLEN/8, x4, x1, x2)

inst_96447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:289341*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289341*0 + 3*447*FLEN/8, x4, x1, x2)

inst_96448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:289344*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289344*0 + 3*448*FLEN/8, x4, x1, x2)

inst_96449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe55b30b309254 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x0e0d9ec3e76a3 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae55b30b309254; op2val:0x9fc0e0d9ec3e76a3;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:289347*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289347*0 + 3*449*FLEN/8, x4, x1, x2)

inst_96450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000000000000; valaddr_reg:x3; val_offset:289350*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289350*0 + 3*450*FLEN/8, x4, x1, x2)

inst_96451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000000000001; valaddr_reg:x3; val_offset:289353*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289353*0 + 3*451*FLEN/8, x4, x1, x2)

inst_96452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000000000003; valaddr_reg:x3; val_offset:289356*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289356*0 + 3*452*FLEN/8, x4, x1, x2)

inst_96453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000000000007; valaddr_reg:x3; val_offset:289359*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289359*0 + 3*453*FLEN/8, x4, x1, x2)

inst_96454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000000000000f; valaddr_reg:x3; val_offset:289362*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289362*0 + 3*454*FLEN/8, x4, x1, x2)

inst_96455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000000000001f; valaddr_reg:x3; val_offset:289365*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289365*0 + 3*455*FLEN/8, x4, x1, x2)

inst_96456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000000000003f; valaddr_reg:x3; val_offset:289368*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289368*0 + 3*456*FLEN/8, x4, x1, x2)

inst_96457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000000000007f; valaddr_reg:x3; val_offset:289371*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289371*0 + 3*457*FLEN/8, x4, x1, x2)

inst_96458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100000000000ff; valaddr_reg:x3; val_offset:289374*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289374*0 + 3*458*FLEN/8, x4, x1, x2)

inst_96459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100000000001ff; valaddr_reg:x3; val_offset:289377*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289377*0 + 3*459*FLEN/8, x4, x1, x2)

inst_96460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100000000003ff; valaddr_reg:x3; val_offset:289380*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289380*0 + 3*460*FLEN/8, x4, x1, x2)

inst_96461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100000000007ff; valaddr_reg:x3; val_offset:289383*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289383*0 + 3*461*FLEN/8, x4, x1, x2)

inst_96462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000000000fff; valaddr_reg:x3; val_offset:289386*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289386*0 + 3*462*FLEN/8, x4, x1, x2)

inst_96463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000000001fff; valaddr_reg:x3; val_offset:289389*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289389*0 + 3*463*FLEN/8, x4, x1, x2)

inst_96464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000000003fff; valaddr_reg:x3; val_offset:289392*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289392*0 + 3*464*FLEN/8, x4, x1, x2)

inst_96465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000000007fff; valaddr_reg:x3; val_offset:289395*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289395*0 + 3*465*FLEN/8, x4, x1, x2)

inst_96466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000000000ffff; valaddr_reg:x3; val_offset:289398*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289398*0 + 3*466*FLEN/8, x4, x1, x2)

inst_96467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000000001ffff; valaddr_reg:x3; val_offset:289401*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289401*0 + 3*467*FLEN/8, x4, x1, x2)

inst_96468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000000003ffff; valaddr_reg:x3; val_offset:289404*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289404*0 + 3*468*FLEN/8, x4, x1, x2)

inst_96469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000000007ffff; valaddr_reg:x3; val_offset:289407*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289407*0 + 3*469*FLEN/8, x4, x1, x2)

inst_96470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100000000fffff; valaddr_reg:x3; val_offset:289410*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289410*0 + 3*470*FLEN/8, x4, x1, x2)

inst_96471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100000001fffff; valaddr_reg:x3; val_offset:289413*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289413*0 + 3*471*FLEN/8, x4, x1, x2)

inst_96472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100000003fffff; valaddr_reg:x3; val_offset:289416*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289416*0 + 3*472*FLEN/8, x4, x1, x2)

inst_96473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100000007fffff; valaddr_reg:x3; val_offset:289419*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289419*0 + 3*473*FLEN/8, x4, x1, x2)

inst_96474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000000ffffff; valaddr_reg:x3; val_offset:289422*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289422*0 + 3*474*FLEN/8, x4, x1, x2)

inst_96475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000001ffffff; valaddr_reg:x3; val_offset:289425*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289425*0 + 3*475*FLEN/8, x4, x1, x2)

inst_96476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000003ffffff; valaddr_reg:x3; val_offset:289428*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289428*0 + 3*476*FLEN/8, x4, x1, x2)

inst_96477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000007ffffff; valaddr_reg:x3; val_offset:289431*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289431*0 + 3*477*FLEN/8, x4, x1, x2)

inst_96478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000000fffffff; valaddr_reg:x3; val_offset:289434*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289434*0 + 3*478*FLEN/8, x4, x1, x2)

inst_96479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000001fffffff; valaddr_reg:x3; val_offset:289437*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289437*0 + 3*479*FLEN/8, x4, x1, x2)

inst_96480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000003fffffff; valaddr_reg:x3; val_offset:289440*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289440*0 + 3*480*FLEN/8, x4, x1, x2)

inst_96481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000007fffffff; valaddr_reg:x3; val_offset:289443*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289443*0 + 3*481*FLEN/8, x4, x1, x2)

inst_96482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100000ffffffff; valaddr_reg:x3; val_offset:289446*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289446*0 + 3*482*FLEN/8, x4, x1, x2)

inst_96483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100001ffffffff; valaddr_reg:x3; val_offset:289449*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289449*0 + 3*483*FLEN/8, x4, x1, x2)

inst_96484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100003ffffffff; valaddr_reg:x3; val_offset:289452*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289452*0 + 3*484*FLEN/8, x4, x1, x2)

inst_96485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100007ffffffff; valaddr_reg:x3; val_offset:289455*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289455*0 + 3*485*FLEN/8, x4, x1, x2)

inst_96486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10000fffffffff; valaddr_reg:x3; val_offset:289458*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289458*0 + 3*486*FLEN/8, x4, x1, x2)

inst_96487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10001fffffffff; valaddr_reg:x3; val_offset:289461*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289461*0 + 3*487*FLEN/8, x4, x1, x2)

inst_96488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10003fffffffff; valaddr_reg:x3; val_offset:289464*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289464*0 + 3*488*FLEN/8, x4, x1, x2)

inst_96489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10007fffffffff; valaddr_reg:x3; val_offset:289467*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289467*0 + 3*489*FLEN/8, x4, x1, x2)

inst_96490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1000ffffffffff; valaddr_reg:x3; val_offset:289470*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289470*0 + 3*490*FLEN/8, x4, x1, x2)

inst_96491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1001ffffffffff; valaddr_reg:x3; val_offset:289473*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289473*0 + 3*491*FLEN/8, x4, x1, x2)

inst_96492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1003ffffffffff; valaddr_reg:x3; val_offset:289476*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289476*0 + 3*492*FLEN/8, x4, x1, x2)

inst_96493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1007ffffffffff; valaddr_reg:x3; val_offset:289479*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289479*0 + 3*493*FLEN/8, x4, x1, x2)

inst_96494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d100fffffffffff; valaddr_reg:x3; val_offset:289482*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289482*0 + 3*494*FLEN/8, x4, x1, x2)

inst_96495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d101fffffffffff; valaddr_reg:x3; val_offset:289485*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289485*0 + 3*495*FLEN/8, x4, x1, x2)

inst_96496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d103fffffffffff; valaddr_reg:x3; val_offset:289488*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289488*0 + 3*496*FLEN/8, x4, x1, x2)

inst_96497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d107fffffffffff; valaddr_reg:x3; val_offset:289491*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289491*0 + 3*497*FLEN/8, x4, x1, x2)

inst_96498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d10ffffffffffff; valaddr_reg:x3; val_offset:289494*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289494*0 + 3*498*FLEN/8, x4, x1, x2)

inst_96499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d11ffffffffffff; valaddr_reg:x3; val_offset:289497*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289497*0 + 3*499*FLEN/8, x4, x1, x2)

inst_96500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d13ffffffffffff; valaddr_reg:x3; val_offset:289500*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289500*0 + 3*500*FLEN/8, x4, x1, x2)

inst_96501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d17ffffffffffff; valaddr_reg:x3; val_offset:289503*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289503*0 + 3*501*FLEN/8, x4, x1, x2)

inst_96502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d18000000000000; valaddr_reg:x3; val_offset:289506*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289506*0 + 3*502*FLEN/8, x4, x1, x2)

inst_96503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1c000000000000; valaddr_reg:x3; val_offset:289509*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289509*0 + 3*503*FLEN/8, x4, x1, x2)

inst_96504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1e000000000000; valaddr_reg:x3; val_offset:289512*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289512*0 + 3*504*FLEN/8, x4, x1, x2)

inst_96505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1f000000000000; valaddr_reg:x3; val_offset:289515*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289515*0 + 3*505*FLEN/8, x4, x1, x2)

inst_96506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1f800000000000; valaddr_reg:x3; val_offset:289518*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289518*0 + 3*506*FLEN/8, x4, x1, x2)

inst_96507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fc00000000000; valaddr_reg:x3; val_offset:289521*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289521*0 + 3*507*FLEN/8, x4, x1, x2)

inst_96508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fe00000000000; valaddr_reg:x3; val_offset:289524*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289524*0 + 3*508*FLEN/8, x4, x1, x2)

inst_96509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ff00000000000; valaddr_reg:x3; val_offset:289527*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289527*0 + 3*509*FLEN/8, x4, x1, x2)

inst_96510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ff80000000000; valaddr_reg:x3; val_offset:289530*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289530*0 + 3*510*FLEN/8, x4, x1, x2)

inst_96511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffc0000000000; valaddr_reg:x3; val_offset:289533*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289533*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_96512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffe0000000000; valaddr_reg:x3; val_offset:289536*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289536*0 + 3*512*FLEN/8, x4, x1, x2)

inst_96513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fff0000000000; valaddr_reg:x3; val_offset:289539*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289539*0 + 3*513*FLEN/8, x4, x1, x2)

inst_96514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fff8000000000; valaddr_reg:x3; val_offset:289542*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289542*0 + 3*514*FLEN/8, x4, x1, x2)

inst_96515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffc000000000; valaddr_reg:x3; val_offset:289545*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289545*0 + 3*515*FLEN/8, x4, x1, x2)

inst_96516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffe000000000; valaddr_reg:x3; val_offset:289548*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289548*0 + 3*516*FLEN/8, x4, x1, x2)

inst_96517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffff000000000; valaddr_reg:x3; val_offset:289551*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289551*0 + 3*517*FLEN/8, x4, x1, x2)

inst_96518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffff800000000; valaddr_reg:x3; val_offset:289554*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289554*0 + 3*518*FLEN/8, x4, x1, x2)

inst_96519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffc00000000; valaddr_reg:x3; val_offset:289557*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289557*0 + 3*519*FLEN/8, x4, x1, x2)

inst_96520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffe00000000; valaddr_reg:x3; val_offset:289560*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289560*0 + 3*520*FLEN/8, x4, x1, x2)

inst_96521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffff00000000; valaddr_reg:x3; val_offset:289563*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289563*0 + 3*521*FLEN/8, x4, x1, x2)

inst_96522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffff80000000; valaddr_reg:x3; val_offset:289566*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289566*0 + 3*522*FLEN/8, x4, x1, x2)

inst_96523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffc0000000; valaddr_reg:x3; val_offset:289569*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289569*0 + 3*523*FLEN/8, x4, x1, x2)

inst_96524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffe0000000; valaddr_reg:x3; val_offset:289572*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289572*0 + 3*524*FLEN/8, x4, x1, x2)

inst_96525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffff0000000; valaddr_reg:x3; val_offset:289575*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289575*0 + 3*525*FLEN/8, x4, x1, x2)

inst_96526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffff8000000; valaddr_reg:x3; val_offset:289578*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289578*0 + 3*526*FLEN/8, x4, x1, x2)

inst_96527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffc000000; valaddr_reg:x3; val_offset:289581*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289581*0 + 3*527*FLEN/8, x4, x1, x2)

inst_96528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffe000000; valaddr_reg:x3; val_offset:289584*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289584*0 + 3*528*FLEN/8, x4, x1, x2)

inst_96529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffff000000; valaddr_reg:x3; val_offset:289587*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289587*0 + 3*529*FLEN/8, x4, x1, x2)

inst_96530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffff800000; valaddr_reg:x3; val_offset:289590*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289590*0 + 3*530*FLEN/8, x4, x1, x2)

inst_96531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffffc00000; valaddr_reg:x3; val_offset:289593*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289593*0 + 3*531*FLEN/8, x4, x1, x2)

inst_96532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffffe00000; valaddr_reg:x3; val_offset:289596*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289596*0 + 3*532*FLEN/8, x4, x1, x2)

inst_96533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffff00000; valaddr_reg:x3; val_offset:289599*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289599*0 + 3*533*FLEN/8, x4, x1, x2)

inst_96534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffff80000; valaddr_reg:x3; val_offset:289602*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289602*0 + 3*534*FLEN/8, x4, x1, x2)

inst_96535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffffc0000; valaddr_reg:x3; val_offset:289605*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289605*0 + 3*535*FLEN/8, x4, x1, x2)

inst_96536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffffe0000; valaddr_reg:x3; val_offset:289608*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289608*0 + 3*536*FLEN/8, x4, x1, x2)

inst_96537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffffff0000; valaddr_reg:x3; val_offset:289611*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289611*0 + 3*537*FLEN/8, x4, x1, x2)

inst_96538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffffff8000; valaddr_reg:x3; val_offset:289614*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289614*0 + 3*538*FLEN/8, x4, x1, x2)

inst_96539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffffffc000; valaddr_reg:x3; val_offset:289617*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289617*0 + 3*539*FLEN/8, x4, x1, x2)

inst_96540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffffffe000; valaddr_reg:x3; val_offset:289620*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289620*0 + 3*540*FLEN/8, x4, x1, x2)

inst_96541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffffff000; valaddr_reg:x3; val_offset:289623*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289623*0 + 3*541*FLEN/8, x4, x1, x2)

inst_96542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffffff800; valaddr_reg:x3; val_offset:289626*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289626*0 + 3*542*FLEN/8, x4, x1, x2)

inst_96543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffffffc00; valaddr_reg:x3; val_offset:289629*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289629*0 + 3*543*FLEN/8, x4, x1, x2)

inst_96544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffffffe00; valaddr_reg:x3; val_offset:289632*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289632*0 + 3*544*FLEN/8, x4, x1, x2)

inst_96545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffffffff00; valaddr_reg:x3; val_offset:289635*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289635*0 + 3*545*FLEN/8, x4, x1, x2)

inst_96546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffffffff80; valaddr_reg:x3; val_offset:289638*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289638*0 + 3*546*FLEN/8, x4, x1, x2)

inst_96547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffffffffc0; valaddr_reg:x3; val_offset:289641*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289641*0 + 3*547*FLEN/8, x4, x1, x2)

inst_96548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffffffffe0; valaddr_reg:x3; val_offset:289644*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289644*0 + 3*548*FLEN/8, x4, x1, x2)

inst_96549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffffffff0; valaddr_reg:x3; val_offset:289647*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289647*0 + 3*549*FLEN/8, x4, x1, x2)

inst_96550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffffffff8; valaddr_reg:x3; val_offset:289650*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289650*0 + 3*550*FLEN/8, x4, x1, x2)

inst_96551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffffffffc; valaddr_reg:x3; val_offset:289653*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289653*0 + 3*551*FLEN/8, x4, x1, x2)

inst_96552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1ffffffffffffe; valaddr_reg:x3; val_offset:289656*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289656*0 + 3*552*FLEN/8, x4, x1, x2)

inst_96553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3d1 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3d1fffffffffffff; valaddr_reg:x3; val_offset:289659*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289659*0 + 3*553*FLEN/8, x4, x1, x2)

inst_96554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:289662*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289662*0 + 3*554*FLEN/8, x4, x1, x2)

inst_96555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:289665*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289665*0 + 3*555*FLEN/8, x4, x1, x2)

inst_96556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:289668*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289668*0 + 3*556*FLEN/8, x4, x1, x2)

inst_96557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:289671*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289671*0 + 3*557*FLEN/8, x4, x1, x2)

inst_96558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:289674*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289674*0 + 3*558*FLEN/8, x4, x1, x2)

inst_96559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:289677*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289677*0 + 3*559*FLEN/8, x4, x1, x2)

inst_96560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:289680*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289680*0 + 3*560*FLEN/8, x4, x1, x2)

inst_96561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:289683*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289683*0 + 3*561*FLEN/8, x4, x1, x2)

inst_96562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:289686*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289686*0 + 3*562*FLEN/8, x4, x1, x2)

inst_96563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:289689*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289689*0 + 3*563*FLEN/8, x4, x1, x2)

inst_96564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:289692*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289692*0 + 3*564*FLEN/8, x4, x1, x2)

inst_96565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:289695*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289695*0 + 3*565*FLEN/8, x4, x1, x2)

inst_96566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:289698*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289698*0 + 3*566*FLEN/8, x4, x1, x2)

inst_96567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:289701*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289701*0 + 3*567*FLEN/8, x4, x1, x2)

inst_96568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:289704*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289704*0 + 3*568*FLEN/8, x4, x1, x2)

inst_96569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:289707*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289707*0 + 3*569*FLEN/8, x4, x1, x2)

inst_96570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:289710*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289710*0 + 3*570*FLEN/8, x4, x1, x2)

inst_96571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:289713*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289713*0 + 3*571*FLEN/8, x4, x1, x2)

inst_96572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:289716*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289716*0 + 3*572*FLEN/8, x4, x1, x2)

inst_96573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:289719*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289719*0 + 3*573*FLEN/8, x4, x1, x2)

inst_96574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:289722*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289722*0 + 3*574*FLEN/8, x4, x1, x2)

inst_96575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe62b182b6cca2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x0d9a229599e67 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae62b182b6cca2; op2val:0x2030d9a229599e67;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:289725*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289725*0 + 3*575*FLEN/8, x4, x1, x2)

inst_96576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:289728*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289728*0 + 3*576*FLEN/8, x4, x1, x2)

inst_96577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:289731*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289731*0 + 3*577*FLEN/8, x4, x1, x2)

inst_96578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:289734*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289734*0 + 3*578*FLEN/8, x4, x1, x2)

inst_96579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:289737*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289737*0 + 3*579*FLEN/8, x4, x1, x2)

inst_96580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:289740*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289740*0 + 3*580*FLEN/8, x4, x1, x2)

inst_96581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:289743*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289743*0 + 3*581*FLEN/8, x4, x1, x2)

inst_96582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:289746*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289746*0 + 3*582*FLEN/8, x4, x1, x2)

inst_96583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:289749*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289749*0 + 3*583*FLEN/8, x4, x1, x2)

inst_96584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:289752*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289752*0 + 3*584*FLEN/8, x4, x1, x2)

inst_96585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:289755*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289755*0 + 3*585*FLEN/8, x4, x1, x2)

inst_96586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:289758*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289758*0 + 3*586*FLEN/8, x4, x1, x2)

inst_96587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:289761*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289761*0 + 3*587*FLEN/8, x4, x1, x2)

inst_96588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:289764*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289764*0 + 3*588*FLEN/8, x4, x1, x2)

inst_96589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:289767*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289767*0 + 3*589*FLEN/8, x4, x1, x2)

inst_96590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:289770*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289770*0 + 3*590*FLEN/8, x4, x1, x2)

inst_96591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:289773*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289773*0 + 3*591*FLEN/8, x4, x1, x2)

inst_96592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:289776*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289776*0 + 3*592*FLEN/8, x4, x1, x2)

inst_96593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:289779*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289779*0 + 3*593*FLEN/8, x4, x1, x2)

inst_96594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:289782*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289782*0 + 3*594*FLEN/8, x4, x1, x2)

inst_96595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:289785*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289785*0 + 3*595*FLEN/8, x4, x1, x2)

inst_96596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:289788*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289788*0 + 3*596*FLEN/8, x4, x1, x2)

inst_96597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:289791*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289791*0 + 3*597*FLEN/8, x4, x1, x2)

inst_96598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000000000000; valaddr_reg:x3; val_offset:289794*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289794*0 + 3*598*FLEN/8, x4, x1, x2)

inst_96599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000000000001; valaddr_reg:x3; val_offset:289797*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289797*0 + 3*599*FLEN/8, x4, x1, x2)

inst_96600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000000000003; valaddr_reg:x3; val_offset:289800*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289800*0 + 3*600*FLEN/8, x4, x1, x2)

inst_96601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000000000007; valaddr_reg:x3; val_offset:289803*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289803*0 + 3*601*FLEN/8, x4, x1, x2)

inst_96602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000000000000f; valaddr_reg:x3; val_offset:289806*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289806*0 + 3*602*FLEN/8, x4, x1, x2)

inst_96603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000000000001f; valaddr_reg:x3; val_offset:289809*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289809*0 + 3*603*FLEN/8, x4, x1, x2)

inst_96604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000000000003f; valaddr_reg:x3; val_offset:289812*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289812*0 + 3*604*FLEN/8, x4, x1, x2)

inst_96605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000000000007f; valaddr_reg:x3; val_offset:289815*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289815*0 + 3*605*FLEN/8, x4, x1, x2)

inst_96606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400000000000ff; valaddr_reg:x3; val_offset:289818*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289818*0 + 3*606*FLEN/8, x4, x1, x2)

inst_96607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400000000001ff; valaddr_reg:x3; val_offset:289821*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289821*0 + 3*607*FLEN/8, x4, x1, x2)

inst_96608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400000000003ff; valaddr_reg:x3; val_offset:289824*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289824*0 + 3*608*FLEN/8, x4, x1, x2)

inst_96609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400000000007ff; valaddr_reg:x3; val_offset:289827*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289827*0 + 3*609*FLEN/8, x4, x1, x2)

inst_96610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000000000fff; valaddr_reg:x3; val_offset:289830*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289830*0 + 3*610*FLEN/8, x4, x1, x2)

inst_96611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000000001fff; valaddr_reg:x3; val_offset:289833*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289833*0 + 3*611*FLEN/8, x4, x1, x2)

inst_96612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000000003fff; valaddr_reg:x3; val_offset:289836*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289836*0 + 3*612*FLEN/8, x4, x1, x2)

inst_96613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000000007fff; valaddr_reg:x3; val_offset:289839*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289839*0 + 3*613*FLEN/8, x4, x1, x2)

inst_96614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000000000ffff; valaddr_reg:x3; val_offset:289842*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289842*0 + 3*614*FLEN/8, x4, x1, x2)

inst_96615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000000001ffff; valaddr_reg:x3; val_offset:289845*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289845*0 + 3*615*FLEN/8, x4, x1, x2)

inst_96616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000000003ffff; valaddr_reg:x3; val_offset:289848*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289848*0 + 3*616*FLEN/8, x4, x1, x2)

inst_96617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000000007ffff; valaddr_reg:x3; val_offset:289851*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289851*0 + 3*617*FLEN/8, x4, x1, x2)

inst_96618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400000000fffff; valaddr_reg:x3; val_offset:289854*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289854*0 + 3*618*FLEN/8, x4, x1, x2)

inst_96619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400000001fffff; valaddr_reg:x3; val_offset:289857*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289857*0 + 3*619*FLEN/8, x4, x1, x2)

inst_96620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400000003fffff; valaddr_reg:x3; val_offset:289860*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289860*0 + 3*620*FLEN/8, x4, x1, x2)

inst_96621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400000007fffff; valaddr_reg:x3; val_offset:289863*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289863*0 + 3*621*FLEN/8, x4, x1, x2)

inst_96622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000000ffffff; valaddr_reg:x3; val_offset:289866*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289866*0 + 3*622*FLEN/8, x4, x1, x2)

inst_96623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000001ffffff; valaddr_reg:x3; val_offset:289869*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289869*0 + 3*623*FLEN/8, x4, x1, x2)

inst_96624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000003ffffff; valaddr_reg:x3; val_offset:289872*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289872*0 + 3*624*FLEN/8, x4, x1, x2)

inst_96625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000007ffffff; valaddr_reg:x3; val_offset:289875*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289875*0 + 3*625*FLEN/8, x4, x1, x2)

inst_96626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000000fffffff; valaddr_reg:x3; val_offset:289878*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289878*0 + 3*626*FLEN/8, x4, x1, x2)

inst_96627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000001fffffff; valaddr_reg:x3; val_offset:289881*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289881*0 + 3*627*FLEN/8, x4, x1, x2)

inst_96628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000003fffffff; valaddr_reg:x3; val_offset:289884*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289884*0 + 3*628*FLEN/8, x4, x1, x2)

inst_96629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000007fffffff; valaddr_reg:x3; val_offset:289887*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289887*0 + 3*629*FLEN/8, x4, x1, x2)

inst_96630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400000ffffffff; valaddr_reg:x3; val_offset:289890*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289890*0 + 3*630*FLEN/8, x4, x1, x2)

inst_96631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400001ffffffff; valaddr_reg:x3; val_offset:289893*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289893*0 + 3*631*FLEN/8, x4, x1, x2)

inst_96632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400003ffffffff; valaddr_reg:x3; val_offset:289896*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289896*0 + 3*632*FLEN/8, x4, x1, x2)

inst_96633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400007ffffffff; valaddr_reg:x3; val_offset:289899*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289899*0 + 3*633*FLEN/8, x4, x1, x2)

inst_96634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140000fffffffff; valaddr_reg:x3; val_offset:289902*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289902*0 + 3*634*FLEN/8, x4, x1, x2)

inst_96635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140001fffffffff; valaddr_reg:x3; val_offset:289905*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289905*0 + 3*635*FLEN/8, x4, x1, x2)

inst_96636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140003fffffffff; valaddr_reg:x3; val_offset:289908*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289908*0 + 3*636*FLEN/8, x4, x1, x2)

inst_96637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140007fffffffff; valaddr_reg:x3; val_offset:289911*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289911*0 + 3*637*FLEN/8, x4, x1, x2)

inst_96638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814000ffffffffff; valaddr_reg:x3; val_offset:289914*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289914*0 + 3*638*FLEN/8, x4, x1, x2)

inst_96639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814001ffffffffff; valaddr_reg:x3; val_offset:289917*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289917*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_96640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814003ffffffffff; valaddr_reg:x3; val_offset:289920*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289920*0 + 3*640*FLEN/8, x4, x1, x2)

inst_96641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814007ffffffffff; valaddr_reg:x3; val_offset:289923*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289923*0 + 3*641*FLEN/8, x4, x1, x2)

inst_96642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81400fffffffffff; valaddr_reg:x3; val_offset:289926*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289926*0 + 3*642*FLEN/8, x4, x1, x2)

inst_96643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81401fffffffffff; valaddr_reg:x3; val_offset:289929*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289929*0 + 3*643*FLEN/8, x4, x1, x2)

inst_96644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81403fffffffffff; valaddr_reg:x3; val_offset:289932*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289932*0 + 3*644*FLEN/8, x4, x1, x2)

inst_96645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x81407fffffffffff; valaddr_reg:x3; val_offset:289935*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289935*0 + 3*645*FLEN/8, x4, x1, x2)

inst_96646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8140ffffffffffff; valaddr_reg:x3; val_offset:289938*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289938*0 + 3*646*FLEN/8, x4, x1, x2)

inst_96647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8141ffffffffffff; valaddr_reg:x3; val_offset:289941*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289941*0 + 3*647*FLEN/8, x4, x1, x2)

inst_96648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8143ffffffffffff; valaddr_reg:x3; val_offset:289944*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289944*0 + 3*648*FLEN/8, x4, x1, x2)

inst_96649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8147ffffffffffff; valaddr_reg:x3; val_offset:289947*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289947*0 + 3*649*FLEN/8, x4, x1, x2)

inst_96650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x8148000000000000; valaddr_reg:x3; val_offset:289950*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289950*0 + 3*650*FLEN/8, x4, x1, x2)

inst_96651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814c000000000000; valaddr_reg:x3; val_offset:289953*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289953*0 + 3*651*FLEN/8, x4, x1, x2)

inst_96652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814e000000000000; valaddr_reg:x3; val_offset:289956*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289956*0 + 3*652*FLEN/8, x4, x1, x2)

inst_96653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814f000000000000; valaddr_reg:x3; val_offset:289959*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289959*0 + 3*653*FLEN/8, x4, x1, x2)

inst_96654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814f800000000000; valaddr_reg:x3; val_offset:289962*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289962*0 + 3*654*FLEN/8, x4, x1, x2)

inst_96655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fc00000000000; valaddr_reg:x3; val_offset:289965*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289965*0 + 3*655*FLEN/8, x4, x1, x2)

inst_96656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fe00000000000; valaddr_reg:x3; val_offset:289968*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289968*0 + 3*656*FLEN/8, x4, x1, x2)

inst_96657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ff00000000000; valaddr_reg:x3; val_offset:289971*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289971*0 + 3*657*FLEN/8, x4, x1, x2)

inst_96658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ff80000000000; valaddr_reg:x3; val_offset:289974*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289974*0 + 3*658*FLEN/8, x4, x1, x2)

inst_96659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffc0000000000; valaddr_reg:x3; val_offset:289977*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289977*0 + 3*659*FLEN/8, x4, x1, x2)

inst_96660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffe0000000000; valaddr_reg:x3; val_offset:289980*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289980*0 + 3*660*FLEN/8, x4, x1, x2)

inst_96661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fff0000000000; valaddr_reg:x3; val_offset:289983*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289983*0 + 3*661*FLEN/8, x4, x1, x2)

inst_96662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fff8000000000; valaddr_reg:x3; val_offset:289986*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289986*0 + 3*662*FLEN/8, x4, x1, x2)

inst_96663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffc000000000; valaddr_reg:x3; val_offset:289989*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289989*0 + 3*663*FLEN/8, x4, x1, x2)

inst_96664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffe000000000; valaddr_reg:x3; val_offset:289992*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289992*0 + 3*664*FLEN/8, x4, x1, x2)

inst_96665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffff000000000; valaddr_reg:x3; val_offset:289995*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289995*0 + 3*665*FLEN/8, x4, x1, x2)

inst_96666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffff800000000; valaddr_reg:x3; val_offset:289998*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 289998*0 + 3*666*FLEN/8, x4, x1, x2)

inst_96667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffc00000000; valaddr_reg:x3; val_offset:290001*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290001*0 + 3*667*FLEN/8, x4, x1, x2)

inst_96668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffe00000000; valaddr_reg:x3; val_offset:290004*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290004*0 + 3*668*FLEN/8, x4, x1, x2)

inst_96669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffff00000000; valaddr_reg:x3; val_offset:290007*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290007*0 + 3*669*FLEN/8, x4, x1, x2)

inst_96670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffff80000000; valaddr_reg:x3; val_offset:290010*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290010*0 + 3*670*FLEN/8, x4, x1, x2)

inst_96671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffc0000000; valaddr_reg:x3; val_offset:290013*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290013*0 + 3*671*FLEN/8, x4, x1, x2)

inst_96672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffe0000000; valaddr_reg:x3; val_offset:290016*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290016*0 + 3*672*FLEN/8, x4, x1, x2)

inst_96673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffff0000000; valaddr_reg:x3; val_offset:290019*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290019*0 + 3*673*FLEN/8, x4, x1, x2)

inst_96674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffff8000000; valaddr_reg:x3; val_offset:290022*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290022*0 + 3*674*FLEN/8, x4, x1, x2)

inst_96675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffc000000; valaddr_reg:x3; val_offset:290025*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290025*0 + 3*675*FLEN/8, x4, x1, x2)

inst_96676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffe000000; valaddr_reg:x3; val_offset:290028*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290028*0 + 3*676*FLEN/8, x4, x1, x2)

inst_96677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffff000000; valaddr_reg:x3; val_offset:290031*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290031*0 + 3*677*FLEN/8, x4, x1, x2)

inst_96678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffff800000; valaddr_reg:x3; val_offset:290034*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290034*0 + 3*678*FLEN/8, x4, x1, x2)

inst_96679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffffc00000; valaddr_reg:x3; val_offset:290037*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290037*0 + 3*679*FLEN/8, x4, x1, x2)

inst_96680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffffe00000; valaddr_reg:x3; val_offset:290040*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290040*0 + 3*680*FLEN/8, x4, x1, x2)

inst_96681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffff00000; valaddr_reg:x3; val_offset:290043*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290043*0 + 3*681*FLEN/8, x4, x1, x2)

inst_96682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffff80000; valaddr_reg:x3; val_offset:290046*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290046*0 + 3*682*FLEN/8, x4, x1, x2)

inst_96683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffffc0000; valaddr_reg:x3; val_offset:290049*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290049*0 + 3*683*FLEN/8, x4, x1, x2)

inst_96684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffffe0000; valaddr_reg:x3; val_offset:290052*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290052*0 + 3*684*FLEN/8, x4, x1, x2)

inst_96685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffffff0000; valaddr_reg:x3; val_offset:290055*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290055*0 + 3*685*FLEN/8, x4, x1, x2)

inst_96686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffffff8000; valaddr_reg:x3; val_offset:290058*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290058*0 + 3*686*FLEN/8, x4, x1, x2)

inst_96687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffffffc000; valaddr_reg:x3; val_offset:290061*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290061*0 + 3*687*FLEN/8, x4, x1, x2)

inst_96688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffffffe000; valaddr_reg:x3; val_offset:290064*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290064*0 + 3*688*FLEN/8, x4, x1, x2)

inst_96689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffffff000; valaddr_reg:x3; val_offset:290067*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290067*0 + 3*689*FLEN/8, x4, x1, x2)

inst_96690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffffff800; valaddr_reg:x3; val_offset:290070*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290070*0 + 3*690*FLEN/8, x4, x1, x2)

inst_96691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffffffc00; valaddr_reg:x3; val_offset:290073*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290073*0 + 3*691*FLEN/8, x4, x1, x2)

inst_96692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffffffe00; valaddr_reg:x3; val_offset:290076*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290076*0 + 3*692*FLEN/8, x4, x1, x2)

inst_96693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffffffff00; valaddr_reg:x3; val_offset:290079*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290079*0 + 3*693*FLEN/8, x4, x1, x2)

inst_96694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffffffff80; valaddr_reg:x3; val_offset:290082*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290082*0 + 3*694*FLEN/8, x4, x1, x2)

inst_96695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffffffffc0; valaddr_reg:x3; val_offset:290085*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290085*0 + 3*695*FLEN/8, x4, x1, x2)

inst_96696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffffffffe0; valaddr_reg:x3; val_offset:290088*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290088*0 + 3*696*FLEN/8, x4, x1, x2)

inst_96697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffffffff0; valaddr_reg:x3; val_offset:290091*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290091*0 + 3*697*FLEN/8, x4, x1, x2)

inst_96698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffffffff8; valaddr_reg:x3; val_offset:290094*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290094*0 + 3*698*FLEN/8, x4, x1, x2)

inst_96699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffffffffc; valaddr_reg:x3; val_offset:290097*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290097*0 + 3*699*FLEN/8, x4, x1, x2)

inst_96700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814ffffffffffffe; valaddr_reg:x3; val_offset:290100*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290100*0 + 3*700*FLEN/8, x4, x1, x2)

inst_96701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae64794dad7d48; op2val:0x8000;
op3val:0x814fffffffffffff; valaddr_reg:x3; val_offset:290103*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290103*0 + 3*701*FLEN/8, x4, x1, x2)

inst_96702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:290106*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290106*0 + 3*702*FLEN/8, x4, x1, x2)

inst_96703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:290109*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290109*0 + 3*703*FLEN/8, x4, x1, x2)

inst_96704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:290112*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290112*0 + 3*704*FLEN/8, x4, x1, x2)

inst_96705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:290115*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290115*0 + 3*705*FLEN/8, x4, x1, x2)

inst_96706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:290118*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290118*0 + 3*706*FLEN/8, x4, x1, x2)

inst_96707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:290121*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290121*0 + 3*707*FLEN/8, x4, x1, x2)

inst_96708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:290124*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290124*0 + 3*708*FLEN/8, x4, x1, x2)

inst_96709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:290127*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290127*0 + 3*709*FLEN/8, x4, x1, x2)

inst_96710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:290130*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290130*0 + 3*710*FLEN/8, x4, x1, x2)

inst_96711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:290133*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290133*0 + 3*711*FLEN/8, x4, x1, x2)

inst_96712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:290136*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290136*0 + 3*712*FLEN/8, x4, x1, x2)

inst_96713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:290139*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290139*0 + 3*713*FLEN/8, x4, x1, x2)

inst_96714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:290142*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290142*0 + 3*714*FLEN/8, x4, x1, x2)

inst_96715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:290145*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290145*0 + 3*715*FLEN/8, x4, x1, x2)

inst_96716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:290148*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290148*0 + 3*716*FLEN/8, x4, x1, x2)

inst_96717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:290151*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290151*0 + 3*717*FLEN/8, x4, x1, x2)

inst_96718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:290154*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290154*0 + 3*718*FLEN/8, x4, x1, x2)

inst_96719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:290157*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290157*0 + 3*719*FLEN/8, x4, x1, x2)

inst_96720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:290160*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290160*0 + 3*720*FLEN/8, x4, x1, x2)

inst_96721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:290163*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290163*0 + 3*721*FLEN/8, x4, x1, x2)

inst_96722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:290166*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290166*0 + 3*722*FLEN/8, x4, x1, x2)

inst_96723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:290169*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290169*0 + 3*723*FLEN/8, x4, x1, x2)

inst_96724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000000000000; valaddr_reg:x3; val_offset:290172*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290172*0 + 3*724*FLEN/8, x4, x1, x2)

inst_96725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000000000001; valaddr_reg:x3; val_offset:290175*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290175*0 + 3*725*FLEN/8, x4, x1, x2)

inst_96726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000000000003; valaddr_reg:x3; val_offset:290178*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290178*0 + 3*726*FLEN/8, x4, x1, x2)

inst_96727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000000000007; valaddr_reg:x3; val_offset:290181*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290181*0 + 3*727*FLEN/8, x4, x1, x2)

inst_96728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000000000000f; valaddr_reg:x3; val_offset:290184*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290184*0 + 3*728*FLEN/8, x4, x1, x2)

inst_96729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000000000001f; valaddr_reg:x3; val_offset:290187*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290187*0 + 3*729*FLEN/8, x4, x1, x2)

inst_96730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000000000003f; valaddr_reg:x3; val_offset:290190*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290190*0 + 3*730*FLEN/8, x4, x1, x2)

inst_96731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000000000007f; valaddr_reg:x3; val_offset:290193*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290193*0 + 3*731*FLEN/8, x4, x1, x2)

inst_96732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1500000000000ff; valaddr_reg:x3; val_offset:290196*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290196*0 + 3*732*FLEN/8, x4, x1, x2)

inst_96733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1500000000001ff; valaddr_reg:x3; val_offset:290199*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290199*0 + 3*733*FLEN/8, x4, x1, x2)

inst_96734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1500000000003ff; valaddr_reg:x3; val_offset:290202*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290202*0 + 3*734*FLEN/8, x4, x1, x2)

inst_96735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1500000000007ff; valaddr_reg:x3; val_offset:290205*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290205*0 + 3*735*FLEN/8, x4, x1, x2)

inst_96736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000000000fff; valaddr_reg:x3; val_offset:290208*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290208*0 + 3*736*FLEN/8, x4, x1, x2)

inst_96737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000000001fff; valaddr_reg:x3; val_offset:290211*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290211*0 + 3*737*FLEN/8, x4, x1, x2)

inst_96738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000000003fff; valaddr_reg:x3; val_offset:290214*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290214*0 + 3*738*FLEN/8, x4, x1, x2)

inst_96739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000000007fff; valaddr_reg:x3; val_offset:290217*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290217*0 + 3*739*FLEN/8, x4, x1, x2)

inst_96740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000000000ffff; valaddr_reg:x3; val_offset:290220*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290220*0 + 3*740*FLEN/8, x4, x1, x2)

inst_96741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000000001ffff; valaddr_reg:x3; val_offset:290223*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290223*0 + 3*741*FLEN/8, x4, x1, x2)

inst_96742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000000003ffff; valaddr_reg:x3; val_offset:290226*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290226*0 + 3*742*FLEN/8, x4, x1, x2)

inst_96743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000000007ffff; valaddr_reg:x3; val_offset:290229*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290229*0 + 3*743*FLEN/8, x4, x1, x2)

inst_96744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1500000000fffff; valaddr_reg:x3; val_offset:290232*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290232*0 + 3*744*FLEN/8, x4, x1, x2)

inst_96745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1500000001fffff; valaddr_reg:x3; val_offset:290235*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290235*0 + 3*745*FLEN/8, x4, x1, x2)

inst_96746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1500000003fffff; valaddr_reg:x3; val_offset:290238*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290238*0 + 3*746*FLEN/8, x4, x1, x2)

inst_96747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1500000007fffff; valaddr_reg:x3; val_offset:290241*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290241*0 + 3*747*FLEN/8, x4, x1, x2)

inst_96748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000000ffffff; valaddr_reg:x3; val_offset:290244*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290244*0 + 3*748*FLEN/8, x4, x1, x2)

inst_96749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000001ffffff; valaddr_reg:x3; val_offset:290247*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290247*0 + 3*749*FLEN/8, x4, x1, x2)

inst_96750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000003ffffff; valaddr_reg:x3; val_offset:290250*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290250*0 + 3*750*FLEN/8, x4, x1, x2)

inst_96751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000007ffffff; valaddr_reg:x3; val_offset:290253*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290253*0 + 3*751*FLEN/8, x4, x1, x2)

inst_96752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000000fffffff; valaddr_reg:x3; val_offset:290256*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290256*0 + 3*752*FLEN/8, x4, x1, x2)

inst_96753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000001fffffff; valaddr_reg:x3; val_offset:290259*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290259*0 + 3*753*FLEN/8, x4, x1, x2)

inst_96754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000003fffffff; valaddr_reg:x3; val_offset:290262*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290262*0 + 3*754*FLEN/8, x4, x1, x2)

inst_96755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000007fffffff; valaddr_reg:x3; val_offset:290265*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290265*0 + 3*755*FLEN/8, x4, x1, x2)

inst_96756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1500000ffffffff; valaddr_reg:x3; val_offset:290268*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290268*0 + 3*756*FLEN/8, x4, x1, x2)

inst_96757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1500001ffffffff; valaddr_reg:x3; val_offset:290271*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290271*0 + 3*757*FLEN/8, x4, x1, x2)

inst_96758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1500003ffffffff; valaddr_reg:x3; val_offset:290274*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290274*0 + 3*758*FLEN/8, x4, x1, x2)

inst_96759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x1500007ffffffff; valaddr_reg:x3; val_offset:290277*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290277*0 + 3*759*FLEN/8, x4, x1, x2)

inst_96760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150000fffffffff; valaddr_reg:x3; val_offset:290280*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290280*0 + 3*760*FLEN/8, x4, x1, x2)

inst_96761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150001fffffffff; valaddr_reg:x3; val_offset:290283*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290283*0 + 3*761*FLEN/8, x4, x1, x2)

inst_96762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150003fffffffff; valaddr_reg:x3; val_offset:290286*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290286*0 + 3*762*FLEN/8, x4, x1, x2)

inst_96763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x150007fffffffff; valaddr_reg:x3; val_offset:290289*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290289*0 + 3*763*FLEN/8, x4, x1, x2)

inst_96764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15000ffffffffff; valaddr_reg:x3; val_offset:290292*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290292*0 + 3*764*FLEN/8, x4, x1, x2)

inst_96765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15001ffffffffff; valaddr_reg:x3; val_offset:290295*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290295*0 + 3*765*FLEN/8, x4, x1, x2)

inst_96766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15003ffffffffff; valaddr_reg:x3; val_offset:290298*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290298*0 + 3*766*FLEN/8, x4, x1, x2)

inst_96767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe7993b1e23057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fae7993b1e23057; op2val:0x0;
op3val:0x15007ffffffffff; valaddr_reg:x3; val_offset:290301*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 290301*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998028107710463,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998032402677759,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998040992612351,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998058172481535,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998092532219903,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998161251696639,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998298690650111,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998573568557055,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380999123324370943,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381000222835998719,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381002421859254271,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381006819905765375,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381015615998787583,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381033208184831999,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381068392556920831,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381138761301098495,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381279498789453823,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381560973766164479,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9382123923719585791,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9383249823626428415,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9383249823626428416,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9384375723533271040,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9384938673486692352,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385220148463403008,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385360885951758336,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385431254695936000,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385466439068024832,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385484031254069248,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385492827347091456,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385497225393602560,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385499424416858112,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385500523928485888,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501073684299776,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501348562206720,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501486001160192,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501554720636928,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501589080375296,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501606260244480,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501614850179072,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501619145146368,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501621292630016,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501622366371840,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501622903242752,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623171678208,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623305895936,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623373004800,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623406559232,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623423336448,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623431725056,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623435919360,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623438016512,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439065088,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439589376,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439851520,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439982592,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440048128,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440080896,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440097280,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440105472,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440109568,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440111616,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440112640,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113152,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113408,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113536,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113600,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113632,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113648,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113656,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113660,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113662,64,FLEN)
NAN_BOXED(6894454945452033679,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113663,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704960,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704961,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704963,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704967,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704975,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704991,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705023,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705087,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705215,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705471,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705983,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273707007,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273709055,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273713151,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273721343,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273737727,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273770495,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273836031,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273967103,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996274229247,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996274753535,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996275802111,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996277899263,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996282093567,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996290482175,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996307259391,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996340813823,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996407922687,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996542140415,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996810575871,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035997347446783,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035998421188607,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036000568672255,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036004863639551,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036013453574143,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036030633443327,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036064993181695,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036133712658431,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036271151611903,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45036546029518847,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45037095785332735,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45038195296960511,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45040394320216063,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45044792366727167,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45053588459749375,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45071180645793791,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45106365017882623,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45176733762060287,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45317471250415615,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45598946227126271,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(46161896180547583,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(47287796087390207,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(47287796087390208,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(48413695994232832,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(48976645947654144,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49258120924364800,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49398858412720128,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49469227156897792,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49504411528986624,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49522003715031040,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49530799808053248,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49535197854564352,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49537396877819904,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49538496389447680,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539046145261568,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539321023168512,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539458462121984,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539527181598720,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539561541337088,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539578721206272,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539587311140864,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539591606108160,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539593753591808,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539594827333632,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595364204544,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595632640000,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595766857728,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595833966592,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595867521024,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595884298240,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595892686848,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595896881152,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595898978304,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900026880,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900551168,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900813312,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595900944384,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901009920,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901042688,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901059072,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901067264,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901071360,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901073408,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901074432,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901074944,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075200,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075328,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075392,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075424,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075440,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075448,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075452,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075454,64,FLEN)
NAN_BOXED(6894487369846934485,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075455,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005568,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005569,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005571,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005575,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005583,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005599,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005631,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005695,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005823,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497006079,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497006591,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497007615,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497009663,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497013759,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497021951,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497038335,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497071103,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497136639,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497267711,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497529855,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014498054143,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014499102719,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014501199871,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014505394175,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014513782783,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014530559999,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014564114431,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014631223295,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014765441023,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015033876479,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015570747391,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588016644489215,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588018791972863,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588023086940159,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588031676874751,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588048856743935,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588083216482303,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588151935959039,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588289374912511,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588564252819455,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493589114008633343,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493590213520261119,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493592412543516671,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493596810590027775,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493605606683049983,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493623198869094399,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493658383241183231,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493728751985360895,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493869489473716223,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494150964450426879,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494713914403848191,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690815,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690816,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9496965714217533440,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497528664170954752,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497810139147665408,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497950876636020736,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498021245380198400,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498056429752287232,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498074021938331648,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498082818031353856,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498087216077864960,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498089415101120512,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498090514612748288,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091064368562176,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091339246469120,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091476685422592,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091545404899328,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091579764637696,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091596944506880,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091605534441472,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091609829408768,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091611976892416,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613050634240,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613587505152,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613855940608,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613990158336,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614057267200,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614090821632,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614107598848,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614115987456,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614120181760,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614122278912,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123327488,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123851776,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124113920,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124244992,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124310528,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124343296,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124359680,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124367872,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124371968,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124374016,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375040,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375552,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375808,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375936,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376000,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376032,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376048,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376056,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376060,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376062,64,FLEN)
NAN_BOXED(6894521743952592348,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376063,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111488000,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111488001,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111488003,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111488007,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111488015,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111488031,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111488063,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111488127,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111488255,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111488511,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111489023,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111490047,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111492095,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111496191,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111504383,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111520767,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111553535,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111619071,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882111750143,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882112012287,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882112536575,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882113585151,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882115682303,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882119876607,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882128265215,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882145042431,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882178596863,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882245705727,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882379923455,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798882648358911,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798883185229823,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798884258971647,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798886406455295,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798890701422591,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798899291357183,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798916471226367,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510798950830964735,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510799019550441471,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510799156989394943,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510799431867301887,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510799981623115775,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510801081134743551,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510803280157999103,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510807678204510207,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510816474297532415,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510834066483576831,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510869250855665663,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13510939619599843327,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13511080357088198655,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13511361832064909311,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13511924782018330623,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13513050681925173247,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13513050681925173248,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13514176581832015872,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13514739531785437184,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515021006762147840,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515161744250503168,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515232112994680832,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515267297366769664,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515284889552814080,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515293685645836288,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515298083692347392,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515300282715602944,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515301382227230720,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515301931983044608,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302206860951552,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302344299905024,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302413019381760,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302447379120128,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302464558989312,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302473148923904,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302477443891200,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302479591374848,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302480665116672,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481201987584,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481470423040,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481604640768,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481671749632,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481705304064,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481722081280,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481730469888,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481734664192,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481736761344,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481737809920,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738334208,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738596352,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738727424,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738792960,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738825728,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738842112,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738850304,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738854400,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738856448,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738857472,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738857984,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738858240,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738858368,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738858432,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738858464,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738858480,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738858488,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738858492,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738858494,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13515302481738858495,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894542307026047572,64,FLEN)
NAN_BOXED(11511447874135029411,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940974592,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940974593,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940974595,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940974599,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940974607,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940974623,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940974655,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940974719,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940974847,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940975103,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940975615,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940976639,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940978687,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940982783,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835940990975,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835941007359,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835941040127,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835941105663,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835941236735,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835941498879,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835942023167,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835943071743,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835945168895,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835949363199,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835957751807,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016835974529023,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016836008083455,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016836075192319,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016836209410047,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016836477845503,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016837014716415,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016838088458239,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016840235941887,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016844530909183,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016853120843775,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016870300712959,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016904660451327,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400016973379928063,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400017110818881535,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400017385696788479,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400017935452602367,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400019034964230143,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400021233987485695,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400025632033996799,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400034428127019007,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400052020313063423,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400087204685152255,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400157573429329919,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400298310917685247,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4400579785894395903,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4401142735847817215,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4402268635754659839,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4402268635754659840,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4403394535661502464,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4403957485614923776,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404238960591634432,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404379698079989760,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404450066824167424,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404485251196256256,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404502843382300672,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404511639475322880,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404516037521833984,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404518236545089536,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404519336056717312,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404519885812531200,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520160690438144,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520298129391616,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520366848868352,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520401208606720,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520418388475904,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520426978410496,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520431273377792,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520433420861440,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520434494603264,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435031474176,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435299909632,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435434127360,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435501236224,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435534790656,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435551567872,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435559956480,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435564150784,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435566247936,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435567296512,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435567820800,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568082944,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568214016,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568279552,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568312320,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568328704,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568336896,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568340992,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568343040,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568344064,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568344576,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568344832,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568344960,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568345024,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568345056,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568345072,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568345080,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568345084,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568345086,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4404520435568345087,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894556594092559522,64,FLEN)
NAN_BOXED(2319593098597473895,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185728,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185729,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185731,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185735,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185743,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185759,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185791,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185855,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185983,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402186239,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402186751,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402187775,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402189823,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402193919,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402202111,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402218495,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402251263,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402316799,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402447871,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402710015,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029403234303,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029404282879,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029406380031,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029410574335,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029418962943,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029435740159,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029469294591,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029536403455,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029670621183,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029939056639,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444030475927551,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444031549669375,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444033697153023,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444037992120319,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444046582054911,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444063761924095,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444098121662463,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444166841139199,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444304280092671,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444579157999615,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313445128913813503,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313446228425441279,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313448427448696831,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313452825495207935,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313461621588230143,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313479213774274559,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313514398146363391,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313584766890541055,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313725504378896383,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9314006979355607039,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9314569929309028351,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9315695829215870975,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9315695829215870976,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9316821729122713600,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317384679076134912,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317666154052845568,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317806891541200896,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317877260285378560,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317912444657467392,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317930036843511808,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317938832936534016,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317943230983045120,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317945430006300672,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317946529517928448,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947079273742336,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947354151649280,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947491590602752,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947560310079488,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947594669817856,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947611849687040,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947620439621632,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947624734588928,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947626882072576,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947627955814400,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628492685312,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628761120768,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628895338496,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628962447360,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628996001792,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629012779008,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629021167616,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629025361920,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629027459072,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629028507648,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029031936,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029294080,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029425152,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029490688,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029523456,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029539840,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029548032,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029552128,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029554176,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555200,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555712,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555968,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556096,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556160,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556192,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556208,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556216,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556220,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556222,64,FLEN)
NAN_BOXED(6894558551707843912,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556223,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780416,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780417,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780419,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780423,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780431,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780447,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780479,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780543,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780671,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780927,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174781439,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174782463,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174784511,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174788607,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174796799,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174813183,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174845951,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174911487,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175042559,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175304703,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175828991,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592176877567,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592178974719,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592183169023,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592191557631,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592208334847,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592241889279,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592308998143,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592443215871,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592711651327,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575593248522239,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575594322264063,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575596469747711,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575600764715007,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575609354649599,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575626534518783,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575660894257151,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575729613733887,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575867052687359,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94576141930594303,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94576691686408191,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94577791198035967,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94579990221291519,64,FLEN)
NAN_BOXED(6894581754802352215,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94584388267802623,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
