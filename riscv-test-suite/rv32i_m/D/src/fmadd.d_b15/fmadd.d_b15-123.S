
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_93696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97000000003ffff; valaddr_reg:x3; val_offset:281088*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281088*0 + 3*0*FLEN/8, x4, x1, x2)

inst_93697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97000000007ffff; valaddr_reg:x3; val_offset:281091*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281091*0 + 3*1*FLEN/8, x4, x1, x2)

inst_93698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb9700000000fffff; valaddr_reg:x3; val_offset:281094*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281094*0 + 3*2*FLEN/8, x4, x1, x2)

inst_93699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb9700000001fffff; valaddr_reg:x3; val_offset:281097*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281097*0 + 3*3*FLEN/8, x4, x1, x2)

inst_93700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb9700000003fffff; valaddr_reg:x3; val_offset:281100*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281100*0 + 3*4*FLEN/8, x4, x1, x2)

inst_93701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb9700000007fffff; valaddr_reg:x3; val_offset:281103*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281103*0 + 3*5*FLEN/8, x4, x1, x2)

inst_93702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb970000000ffffff; valaddr_reg:x3; val_offset:281106*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281106*0 + 3*6*FLEN/8, x4, x1, x2)

inst_93703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb970000001ffffff; valaddr_reg:x3; val_offset:281109*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281109*0 + 3*7*FLEN/8, x4, x1, x2)

inst_93704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb970000003ffffff; valaddr_reg:x3; val_offset:281112*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281112*0 + 3*8*FLEN/8, x4, x1, x2)

inst_93705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb970000007ffffff; valaddr_reg:x3; val_offset:281115*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281115*0 + 3*9*FLEN/8, x4, x1, x2)

inst_93706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97000000fffffff; valaddr_reg:x3; val_offset:281118*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281118*0 + 3*10*FLEN/8, x4, x1, x2)

inst_93707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97000001fffffff; valaddr_reg:x3; val_offset:281121*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281121*0 + 3*11*FLEN/8, x4, x1, x2)

inst_93708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97000003fffffff; valaddr_reg:x3; val_offset:281124*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281124*0 + 3*12*FLEN/8, x4, x1, x2)

inst_93709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97000007fffffff; valaddr_reg:x3; val_offset:281127*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281127*0 + 3*13*FLEN/8, x4, x1, x2)

inst_93710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb9700000ffffffff; valaddr_reg:x3; val_offset:281130*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281130*0 + 3*14*FLEN/8, x4, x1, x2)

inst_93711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb9700001ffffffff; valaddr_reg:x3; val_offset:281133*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281133*0 + 3*15*FLEN/8, x4, x1, x2)

inst_93712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb9700003ffffffff; valaddr_reg:x3; val_offset:281136*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281136*0 + 3*16*FLEN/8, x4, x1, x2)

inst_93713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb9700007ffffffff; valaddr_reg:x3; val_offset:281139*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281139*0 + 3*17*FLEN/8, x4, x1, x2)

inst_93714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb970000fffffffff; valaddr_reg:x3; val_offset:281142*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281142*0 + 3*18*FLEN/8, x4, x1, x2)

inst_93715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb970001fffffffff; valaddr_reg:x3; val_offset:281145*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281145*0 + 3*19*FLEN/8, x4, x1, x2)

inst_93716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb970003fffffffff; valaddr_reg:x3; val_offset:281148*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281148*0 + 3*20*FLEN/8, x4, x1, x2)

inst_93717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb970007fffffffff; valaddr_reg:x3; val_offset:281151*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281151*0 + 3*21*FLEN/8, x4, x1, x2)

inst_93718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97000ffffffffff; valaddr_reg:x3; val_offset:281154*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281154*0 + 3*22*FLEN/8, x4, x1, x2)

inst_93719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97001ffffffffff; valaddr_reg:x3; val_offset:281157*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281157*0 + 3*23*FLEN/8, x4, x1, x2)

inst_93720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97003ffffffffff; valaddr_reg:x3; val_offset:281160*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281160*0 + 3*24*FLEN/8, x4, x1, x2)

inst_93721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97007ffffffffff; valaddr_reg:x3; val_offset:281163*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281163*0 + 3*25*FLEN/8, x4, x1, x2)

inst_93722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb9700fffffffffff; valaddr_reg:x3; val_offset:281166*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281166*0 + 3*26*FLEN/8, x4, x1, x2)

inst_93723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb9701fffffffffff; valaddr_reg:x3; val_offset:281169*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281169*0 + 3*27*FLEN/8, x4, x1, x2)

inst_93724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb9703fffffffffff; valaddr_reg:x3; val_offset:281172*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281172*0 + 3*28*FLEN/8, x4, x1, x2)

inst_93725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb9707fffffffffff; valaddr_reg:x3; val_offset:281175*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281175*0 + 3*29*FLEN/8, x4, x1, x2)

inst_93726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb970ffffffffffff; valaddr_reg:x3; val_offset:281178*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281178*0 + 3*30*FLEN/8, x4, x1, x2)

inst_93727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb971ffffffffffff; valaddr_reg:x3; val_offset:281181*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281181*0 + 3*31*FLEN/8, x4, x1, x2)

inst_93728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb973ffffffffffff; valaddr_reg:x3; val_offset:281184*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281184*0 + 3*32*FLEN/8, x4, x1, x2)

inst_93729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb977ffffffffffff; valaddr_reg:x3; val_offset:281187*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281187*0 + 3*33*FLEN/8, x4, x1, x2)

inst_93730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb978000000000000; valaddr_reg:x3; val_offset:281190*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281190*0 + 3*34*FLEN/8, x4, x1, x2)

inst_93731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97c000000000000; valaddr_reg:x3; val_offset:281193*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281193*0 + 3*35*FLEN/8, x4, x1, x2)

inst_93732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97e000000000000; valaddr_reg:x3; val_offset:281196*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281196*0 + 3*36*FLEN/8, x4, x1, x2)

inst_93733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97f000000000000; valaddr_reg:x3; val_offset:281199*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281199*0 + 3*37*FLEN/8, x4, x1, x2)

inst_93734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97f800000000000; valaddr_reg:x3; val_offset:281202*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281202*0 + 3*38*FLEN/8, x4, x1, x2)

inst_93735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fc00000000000; valaddr_reg:x3; val_offset:281205*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281205*0 + 3*39*FLEN/8, x4, x1, x2)

inst_93736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fe00000000000; valaddr_reg:x3; val_offset:281208*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281208*0 + 3*40*FLEN/8, x4, x1, x2)

inst_93737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ff00000000000; valaddr_reg:x3; val_offset:281211*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281211*0 + 3*41*FLEN/8, x4, x1, x2)

inst_93738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ff80000000000; valaddr_reg:x3; val_offset:281214*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281214*0 + 3*42*FLEN/8, x4, x1, x2)

inst_93739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffc0000000000; valaddr_reg:x3; val_offset:281217*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281217*0 + 3*43*FLEN/8, x4, x1, x2)

inst_93740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffe0000000000; valaddr_reg:x3; val_offset:281220*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281220*0 + 3*44*FLEN/8, x4, x1, x2)

inst_93741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fff0000000000; valaddr_reg:x3; val_offset:281223*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281223*0 + 3*45*FLEN/8, x4, x1, x2)

inst_93742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fff8000000000; valaddr_reg:x3; val_offset:281226*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281226*0 + 3*46*FLEN/8, x4, x1, x2)

inst_93743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffc000000000; valaddr_reg:x3; val_offset:281229*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281229*0 + 3*47*FLEN/8, x4, x1, x2)

inst_93744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffe000000000; valaddr_reg:x3; val_offset:281232*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281232*0 + 3*48*FLEN/8, x4, x1, x2)

inst_93745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffff000000000; valaddr_reg:x3; val_offset:281235*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281235*0 + 3*49*FLEN/8, x4, x1, x2)

inst_93746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffff800000000; valaddr_reg:x3; val_offset:281238*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281238*0 + 3*50*FLEN/8, x4, x1, x2)

inst_93747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffc00000000; valaddr_reg:x3; val_offset:281241*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281241*0 + 3*51*FLEN/8, x4, x1, x2)

inst_93748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffe00000000; valaddr_reg:x3; val_offset:281244*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281244*0 + 3*52*FLEN/8, x4, x1, x2)

inst_93749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffff00000000; valaddr_reg:x3; val_offset:281247*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281247*0 + 3*53*FLEN/8, x4, x1, x2)

inst_93750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffff80000000; valaddr_reg:x3; val_offset:281250*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281250*0 + 3*54*FLEN/8, x4, x1, x2)

inst_93751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffc0000000; valaddr_reg:x3; val_offset:281253*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281253*0 + 3*55*FLEN/8, x4, x1, x2)

inst_93752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffe0000000; valaddr_reg:x3; val_offset:281256*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281256*0 + 3*56*FLEN/8, x4, x1, x2)

inst_93753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffff0000000; valaddr_reg:x3; val_offset:281259*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281259*0 + 3*57*FLEN/8, x4, x1, x2)

inst_93754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffff8000000; valaddr_reg:x3; val_offset:281262*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281262*0 + 3*58*FLEN/8, x4, x1, x2)

inst_93755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffc000000; valaddr_reg:x3; val_offset:281265*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281265*0 + 3*59*FLEN/8, x4, x1, x2)

inst_93756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffe000000; valaddr_reg:x3; val_offset:281268*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281268*0 + 3*60*FLEN/8, x4, x1, x2)

inst_93757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffff000000; valaddr_reg:x3; val_offset:281271*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281271*0 + 3*61*FLEN/8, x4, x1, x2)

inst_93758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffff800000; valaddr_reg:x3; val_offset:281274*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281274*0 + 3*62*FLEN/8, x4, x1, x2)

inst_93759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffffc00000; valaddr_reg:x3; val_offset:281277*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281277*0 + 3*63*FLEN/8, x4, x1, x2)

inst_93760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffffe00000; valaddr_reg:x3; val_offset:281280*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281280*0 + 3*64*FLEN/8, x4, x1, x2)

inst_93761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffff00000; valaddr_reg:x3; val_offset:281283*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281283*0 + 3*65*FLEN/8, x4, x1, x2)

inst_93762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffff80000; valaddr_reg:x3; val_offset:281286*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281286*0 + 3*66*FLEN/8, x4, x1, x2)

inst_93763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffffc0000; valaddr_reg:x3; val_offset:281289*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281289*0 + 3*67*FLEN/8, x4, x1, x2)

inst_93764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffffe0000; valaddr_reg:x3; val_offset:281292*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281292*0 + 3*68*FLEN/8, x4, x1, x2)

inst_93765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffffff0000; valaddr_reg:x3; val_offset:281295*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281295*0 + 3*69*FLEN/8, x4, x1, x2)

inst_93766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffffff8000; valaddr_reg:x3; val_offset:281298*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281298*0 + 3*70*FLEN/8, x4, x1, x2)

inst_93767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffffffc000; valaddr_reg:x3; val_offset:281301*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281301*0 + 3*71*FLEN/8, x4, x1, x2)

inst_93768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffffffe000; valaddr_reg:x3; val_offset:281304*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281304*0 + 3*72*FLEN/8, x4, x1, x2)

inst_93769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffffff000; valaddr_reg:x3; val_offset:281307*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281307*0 + 3*73*FLEN/8, x4, x1, x2)

inst_93770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffffff800; valaddr_reg:x3; val_offset:281310*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281310*0 + 3*74*FLEN/8, x4, x1, x2)

inst_93771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffffffc00; valaddr_reg:x3; val_offset:281313*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281313*0 + 3*75*FLEN/8, x4, x1, x2)

inst_93772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffffffe00; valaddr_reg:x3; val_offset:281316*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281316*0 + 3*76*FLEN/8, x4, x1, x2)

inst_93773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffffffff00; valaddr_reg:x3; val_offset:281319*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281319*0 + 3*77*FLEN/8, x4, x1, x2)

inst_93774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffffffff80; valaddr_reg:x3; val_offset:281322*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281322*0 + 3*78*FLEN/8, x4, x1, x2)

inst_93775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffffffffc0; valaddr_reg:x3; val_offset:281325*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281325*0 + 3*79*FLEN/8, x4, x1, x2)

inst_93776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffffffffe0; valaddr_reg:x3; val_offset:281328*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281328*0 + 3*80*FLEN/8, x4, x1, x2)

inst_93777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffffffff0; valaddr_reg:x3; val_offset:281331*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281331*0 + 3*81*FLEN/8, x4, x1, x2)

inst_93778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffffffff8; valaddr_reg:x3; val_offset:281334*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281334*0 + 3*82*FLEN/8, x4, x1, x2)

inst_93779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffffffffc; valaddr_reg:x3; val_offset:281337*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281337*0 + 3*83*FLEN/8, x4, x1, x2)

inst_93780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97ffffffffffffe; valaddr_reg:x3; val_offset:281340*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281340*0 + 3*84*FLEN/8, x4, x1, x2)

inst_93781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x397 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xb97fffffffffffff; valaddr_reg:x3; val_offset:281343*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281343*0 + 3*85*FLEN/8, x4, x1, x2)

inst_93782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:281346*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281346*0 + 3*86*FLEN/8, x4, x1, x2)

inst_93783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:281349*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281349*0 + 3*87*FLEN/8, x4, x1, x2)

inst_93784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:281352*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281352*0 + 3*88*FLEN/8, x4, x1, x2)

inst_93785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:281355*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281355*0 + 3*89*FLEN/8, x4, x1, x2)

inst_93786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:281358*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281358*0 + 3*90*FLEN/8, x4, x1, x2)

inst_93787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:281361*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281361*0 + 3*91*FLEN/8, x4, x1, x2)

inst_93788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:281364*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281364*0 + 3*92*FLEN/8, x4, x1, x2)

inst_93789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:281367*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281367*0 + 3*93*FLEN/8, x4, x1, x2)

inst_93790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:281370*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281370*0 + 3*94*FLEN/8, x4, x1, x2)

inst_93791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:281373*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281373*0 + 3*95*FLEN/8, x4, x1, x2)

inst_93792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:281376*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281376*0 + 3*96*FLEN/8, x4, x1, x2)

inst_93793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:281379*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281379*0 + 3*97*FLEN/8, x4, x1, x2)

inst_93794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:281382*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281382*0 + 3*98*FLEN/8, x4, x1, x2)

inst_93795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:281385*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281385*0 + 3*99*FLEN/8, x4, x1, x2)

inst_93796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:281388*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281388*0 + 3*100*FLEN/8, x4, x1, x2)

inst_93797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:281391*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281391*0 + 3*101*FLEN/8, x4, x1, x2)

inst_93798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:281394*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281394*0 + 3*102*FLEN/8, x4, x1, x2)

inst_93799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:281397*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281397*0 + 3*103*FLEN/8, x4, x1, x2)

inst_93800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:281400*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281400*0 + 3*104*FLEN/8, x4, x1, x2)

inst_93801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:281403*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281403*0 + 3*105*FLEN/8, x4, x1, x2)

inst_93802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:281406*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281406*0 + 3*106*FLEN/8, x4, x1, x2)

inst_93803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6e174caa8db2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x165ae21d43d11 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6e174caa8db2; op2val:0x9fc165ae21d43d11;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:281409*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281409*0 + 3*107*FLEN/8, x4, x1, x2)

inst_93804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:281412*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281412*0 + 3*108*FLEN/8, x4, x1, x2)

inst_93805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:281415*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281415*0 + 3*109*FLEN/8, x4, x1, x2)

inst_93806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:281418*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281418*0 + 3*110*FLEN/8, x4, x1, x2)

inst_93807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:281421*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281421*0 + 3*111*FLEN/8, x4, x1, x2)

inst_93808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:281424*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281424*0 + 3*112*FLEN/8, x4, x1, x2)

inst_93809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:281427*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281427*0 + 3*113*FLEN/8, x4, x1, x2)

inst_93810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:281430*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281430*0 + 3*114*FLEN/8, x4, x1, x2)

inst_93811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:281433*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281433*0 + 3*115*FLEN/8, x4, x1, x2)

inst_93812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:281436*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281436*0 + 3*116*FLEN/8, x4, x1, x2)

inst_93813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:281439*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281439*0 + 3*117*FLEN/8, x4, x1, x2)

inst_93814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:281442*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281442*0 + 3*118*FLEN/8, x4, x1, x2)

inst_93815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:281445*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281445*0 + 3*119*FLEN/8, x4, x1, x2)

inst_93816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:281448*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281448*0 + 3*120*FLEN/8, x4, x1, x2)

inst_93817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:281451*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281451*0 + 3*121*FLEN/8, x4, x1, x2)

inst_93818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:281454*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281454*0 + 3*122*FLEN/8, x4, x1, x2)

inst_93819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:281457*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281457*0 + 3*123*FLEN/8, x4, x1, x2)

inst_93820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:281460*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281460*0 + 3*124*FLEN/8, x4, x1, x2)

inst_93821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:281463*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281463*0 + 3*125*FLEN/8, x4, x1, x2)

inst_93822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:281466*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281466*0 + 3*126*FLEN/8, x4, x1, x2)

inst_93823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:281469*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281469*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_93824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:281472*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281472*0 + 3*128*FLEN/8, x4, x1, x2)

inst_93825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:281475*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281475*0 + 3*129*FLEN/8, x4, x1, x2)

inst_93826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000000000000; valaddr_reg:x3; val_offset:281478*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281478*0 + 3*130*FLEN/8, x4, x1, x2)

inst_93827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000000000001; valaddr_reg:x3; val_offset:281481*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281481*0 + 3*131*FLEN/8, x4, x1, x2)

inst_93828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000000000003; valaddr_reg:x3; val_offset:281484*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281484*0 + 3*132*FLEN/8, x4, x1, x2)

inst_93829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000000000007; valaddr_reg:x3; val_offset:281487*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281487*0 + 3*133*FLEN/8, x4, x1, x2)

inst_93830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000000000000f; valaddr_reg:x3; val_offset:281490*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281490*0 + 3*134*FLEN/8, x4, x1, x2)

inst_93831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000000000001f; valaddr_reg:x3; val_offset:281493*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281493*0 + 3*135*FLEN/8, x4, x1, x2)

inst_93832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000000000003f; valaddr_reg:x3; val_offset:281496*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281496*0 + 3*136*FLEN/8, x4, x1, x2)

inst_93833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000000000007f; valaddr_reg:x3; val_offset:281499*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281499*0 + 3*137*FLEN/8, x4, x1, x2)

inst_93834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900000000000ff; valaddr_reg:x3; val_offset:281502*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281502*0 + 3*138*FLEN/8, x4, x1, x2)

inst_93835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900000000001ff; valaddr_reg:x3; val_offset:281505*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281505*0 + 3*139*FLEN/8, x4, x1, x2)

inst_93836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900000000003ff; valaddr_reg:x3; val_offset:281508*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281508*0 + 3*140*FLEN/8, x4, x1, x2)

inst_93837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900000000007ff; valaddr_reg:x3; val_offset:281511*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281511*0 + 3*141*FLEN/8, x4, x1, x2)

inst_93838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000000000fff; valaddr_reg:x3; val_offset:281514*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281514*0 + 3*142*FLEN/8, x4, x1, x2)

inst_93839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000000001fff; valaddr_reg:x3; val_offset:281517*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281517*0 + 3*143*FLEN/8, x4, x1, x2)

inst_93840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000000003fff; valaddr_reg:x3; val_offset:281520*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281520*0 + 3*144*FLEN/8, x4, x1, x2)

inst_93841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000000007fff; valaddr_reg:x3; val_offset:281523*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281523*0 + 3*145*FLEN/8, x4, x1, x2)

inst_93842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000000000ffff; valaddr_reg:x3; val_offset:281526*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281526*0 + 3*146*FLEN/8, x4, x1, x2)

inst_93843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000000001ffff; valaddr_reg:x3; val_offset:281529*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281529*0 + 3*147*FLEN/8, x4, x1, x2)

inst_93844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000000003ffff; valaddr_reg:x3; val_offset:281532*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281532*0 + 3*148*FLEN/8, x4, x1, x2)

inst_93845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000000007ffff; valaddr_reg:x3; val_offset:281535*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281535*0 + 3*149*FLEN/8, x4, x1, x2)

inst_93846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900000000fffff; valaddr_reg:x3; val_offset:281538*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281538*0 + 3*150*FLEN/8, x4, x1, x2)

inst_93847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900000001fffff; valaddr_reg:x3; val_offset:281541*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281541*0 + 3*151*FLEN/8, x4, x1, x2)

inst_93848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900000003fffff; valaddr_reg:x3; val_offset:281544*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281544*0 + 3*152*FLEN/8, x4, x1, x2)

inst_93849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900000007fffff; valaddr_reg:x3; val_offset:281547*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281547*0 + 3*153*FLEN/8, x4, x1, x2)

inst_93850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000000ffffff; valaddr_reg:x3; val_offset:281550*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281550*0 + 3*154*FLEN/8, x4, x1, x2)

inst_93851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000001ffffff; valaddr_reg:x3; val_offset:281553*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281553*0 + 3*155*FLEN/8, x4, x1, x2)

inst_93852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000003ffffff; valaddr_reg:x3; val_offset:281556*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281556*0 + 3*156*FLEN/8, x4, x1, x2)

inst_93853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000007ffffff; valaddr_reg:x3; val_offset:281559*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281559*0 + 3*157*FLEN/8, x4, x1, x2)

inst_93854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000000fffffff; valaddr_reg:x3; val_offset:281562*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281562*0 + 3*158*FLEN/8, x4, x1, x2)

inst_93855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000001fffffff; valaddr_reg:x3; val_offset:281565*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281565*0 + 3*159*FLEN/8, x4, x1, x2)

inst_93856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000003fffffff; valaddr_reg:x3; val_offset:281568*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281568*0 + 3*160*FLEN/8, x4, x1, x2)

inst_93857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000007fffffff; valaddr_reg:x3; val_offset:281571*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281571*0 + 3*161*FLEN/8, x4, x1, x2)

inst_93858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900000ffffffff; valaddr_reg:x3; val_offset:281574*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281574*0 + 3*162*FLEN/8, x4, x1, x2)

inst_93859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900001ffffffff; valaddr_reg:x3; val_offset:281577*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281577*0 + 3*163*FLEN/8, x4, x1, x2)

inst_93860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900003ffffffff; valaddr_reg:x3; val_offset:281580*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281580*0 + 3*164*FLEN/8, x4, x1, x2)

inst_93861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900007ffffffff; valaddr_reg:x3; val_offset:281583*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281583*0 + 3*165*FLEN/8, x4, x1, x2)

inst_93862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090000fffffffff; valaddr_reg:x3; val_offset:281586*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281586*0 + 3*166*FLEN/8, x4, x1, x2)

inst_93863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090001fffffffff; valaddr_reg:x3; val_offset:281589*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281589*0 + 3*167*FLEN/8, x4, x1, x2)

inst_93864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090003fffffffff; valaddr_reg:x3; val_offset:281592*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281592*0 + 3*168*FLEN/8, x4, x1, x2)

inst_93865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090007fffffffff; valaddr_reg:x3; val_offset:281595*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281595*0 + 3*169*FLEN/8, x4, x1, x2)

inst_93866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809000ffffffffff; valaddr_reg:x3; val_offset:281598*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281598*0 + 3*170*FLEN/8, x4, x1, x2)

inst_93867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809001ffffffffff; valaddr_reg:x3; val_offset:281601*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281601*0 + 3*171*FLEN/8, x4, x1, x2)

inst_93868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809003ffffffffff; valaddr_reg:x3; val_offset:281604*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281604*0 + 3*172*FLEN/8, x4, x1, x2)

inst_93869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809007ffffffffff; valaddr_reg:x3; val_offset:281607*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281607*0 + 3*173*FLEN/8, x4, x1, x2)

inst_93870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80900fffffffffff; valaddr_reg:x3; val_offset:281610*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281610*0 + 3*174*FLEN/8, x4, x1, x2)

inst_93871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80901fffffffffff; valaddr_reg:x3; val_offset:281613*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281613*0 + 3*175*FLEN/8, x4, x1, x2)

inst_93872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80903fffffffffff; valaddr_reg:x3; val_offset:281616*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281616*0 + 3*176*FLEN/8, x4, x1, x2)

inst_93873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x80907fffffffffff; valaddr_reg:x3; val_offset:281619*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281619*0 + 3*177*FLEN/8, x4, x1, x2)

inst_93874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8090ffffffffffff; valaddr_reg:x3; val_offset:281622*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281622*0 + 3*178*FLEN/8, x4, x1, x2)

inst_93875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8091ffffffffffff; valaddr_reg:x3; val_offset:281625*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281625*0 + 3*179*FLEN/8, x4, x1, x2)

inst_93876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8093ffffffffffff; valaddr_reg:x3; val_offset:281628*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281628*0 + 3*180*FLEN/8, x4, x1, x2)

inst_93877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8097ffffffffffff; valaddr_reg:x3; val_offset:281631*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281631*0 + 3*181*FLEN/8, x4, x1, x2)

inst_93878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x8098000000000000; valaddr_reg:x3; val_offset:281634*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281634*0 + 3*182*FLEN/8, x4, x1, x2)

inst_93879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809c000000000000; valaddr_reg:x3; val_offset:281637*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281637*0 + 3*183*FLEN/8, x4, x1, x2)

inst_93880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809e000000000000; valaddr_reg:x3; val_offset:281640*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281640*0 + 3*184*FLEN/8, x4, x1, x2)

inst_93881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809f000000000000; valaddr_reg:x3; val_offset:281643*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281643*0 + 3*185*FLEN/8, x4, x1, x2)

inst_93882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809f800000000000; valaddr_reg:x3; val_offset:281646*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281646*0 + 3*186*FLEN/8, x4, x1, x2)

inst_93883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fc00000000000; valaddr_reg:x3; val_offset:281649*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281649*0 + 3*187*FLEN/8, x4, x1, x2)

inst_93884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fe00000000000; valaddr_reg:x3; val_offset:281652*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281652*0 + 3*188*FLEN/8, x4, x1, x2)

inst_93885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ff00000000000; valaddr_reg:x3; val_offset:281655*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281655*0 + 3*189*FLEN/8, x4, x1, x2)

inst_93886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ff80000000000; valaddr_reg:x3; val_offset:281658*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281658*0 + 3*190*FLEN/8, x4, x1, x2)

inst_93887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffc0000000000; valaddr_reg:x3; val_offset:281661*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281661*0 + 3*191*FLEN/8, x4, x1, x2)

inst_93888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffe0000000000; valaddr_reg:x3; val_offset:281664*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281664*0 + 3*192*FLEN/8, x4, x1, x2)

inst_93889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fff0000000000; valaddr_reg:x3; val_offset:281667*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281667*0 + 3*193*FLEN/8, x4, x1, x2)

inst_93890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fff8000000000; valaddr_reg:x3; val_offset:281670*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281670*0 + 3*194*FLEN/8, x4, x1, x2)

inst_93891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffc000000000; valaddr_reg:x3; val_offset:281673*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281673*0 + 3*195*FLEN/8, x4, x1, x2)

inst_93892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffe000000000; valaddr_reg:x3; val_offset:281676*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281676*0 + 3*196*FLEN/8, x4, x1, x2)

inst_93893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffff000000000; valaddr_reg:x3; val_offset:281679*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281679*0 + 3*197*FLEN/8, x4, x1, x2)

inst_93894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffff800000000; valaddr_reg:x3; val_offset:281682*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281682*0 + 3*198*FLEN/8, x4, x1, x2)

inst_93895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffc00000000; valaddr_reg:x3; val_offset:281685*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281685*0 + 3*199*FLEN/8, x4, x1, x2)

inst_93896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffe00000000; valaddr_reg:x3; val_offset:281688*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281688*0 + 3*200*FLEN/8, x4, x1, x2)

inst_93897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffff00000000; valaddr_reg:x3; val_offset:281691*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281691*0 + 3*201*FLEN/8, x4, x1, x2)

inst_93898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffff80000000; valaddr_reg:x3; val_offset:281694*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281694*0 + 3*202*FLEN/8, x4, x1, x2)

inst_93899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffc0000000; valaddr_reg:x3; val_offset:281697*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281697*0 + 3*203*FLEN/8, x4, x1, x2)

inst_93900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffe0000000; valaddr_reg:x3; val_offset:281700*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281700*0 + 3*204*FLEN/8, x4, x1, x2)

inst_93901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffff0000000; valaddr_reg:x3; val_offset:281703*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281703*0 + 3*205*FLEN/8, x4, x1, x2)

inst_93902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffff8000000; valaddr_reg:x3; val_offset:281706*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281706*0 + 3*206*FLEN/8, x4, x1, x2)

inst_93903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffc000000; valaddr_reg:x3; val_offset:281709*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281709*0 + 3*207*FLEN/8, x4, x1, x2)

inst_93904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffe000000; valaddr_reg:x3; val_offset:281712*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281712*0 + 3*208*FLEN/8, x4, x1, x2)

inst_93905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffff000000; valaddr_reg:x3; val_offset:281715*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281715*0 + 3*209*FLEN/8, x4, x1, x2)

inst_93906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffff800000; valaddr_reg:x3; val_offset:281718*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281718*0 + 3*210*FLEN/8, x4, x1, x2)

inst_93907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffffc00000; valaddr_reg:x3; val_offset:281721*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281721*0 + 3*211*FLEN/8, x4, x1, x2)

inst_93908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffffe00000; valaddr_reg:x3; val_offset:281724*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281724*0 + 3*212*FLEN/8, x4, x1, x2)

inst_93909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffff00000; valaddr_reg:x3; val_offset:281727*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281727*0 + 3*213*FLEN/8, x4, x1, x2)

inst_93910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffff80000; valaddr_reg:x3; val_offset:281730*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281730*0 + 3*214*FLEN/8, x4, x1, x2)

inst_93911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffffc0000; valaddr_reg:x3; val_offset:281733*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281733*0 + 3*215*FLEN/8, x4, x1, x2)

inst_93912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffffe0000; valaddr_reg:x3; val_offset:281736*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281736*0 + 3*216*FLEN/8, x4, x1, x2)

inst_93913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffffff0000; valaddr_reg:x3; val_offset:281739*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281739*0 + 3*217*FLEN/8, x4, x1, x2)

inst_93914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffffff8000; valaddr_reg:x3; val_offset:281742*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281742*0 + 3*218*FLEN/8, x4, x1, x2)

inst_93915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffffffc000; valaddr_reg:x3; val_offset:281745*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281745*0 + 3*219*FLEN/8, x4, x1, x2)

inst_93916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffffffe000; valaddr_reg:x3; val_offset:281748*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281748*0 + 3*220*FLEN/8, x4, x1, x2)

inst_93917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffffff000; valaddr_reg:x3; val_offset:281751*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281751*0 + 3*221*FLEN/8, x4, x1, x2)

inst_93918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffffff800; valaddr_reg:x3; val_offset:281754*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281754*0 + 3*222*FLEN/8, x4, x1, x2)

inst_93919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffffffc00; valaddr_reg:x3; val_offset:281757*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281757*0 + 3*223*FLEN/8, x4, x1, x2)

inst_93920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffffffe00; valaddr_reg:x3; val_offset:281760*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281760*0 + 3*224*FLEN/8, x4, x1, x2)

inst_93921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffffffff00; valaddr_reg:x3; val_offset:281763*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281763*0 + 3*225*FLEN/8, x4, x1, x2)

inst_93922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffffffff80; valaddr_reg:x3; val_offset:281766*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281766*0 + 3*226*FLEN/8, x4, x1, x2)

inst_93923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffffffffc0; valaddr_reg:x3; val_offset:281769*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281769*0 + 3*227*FLEN/8, x4, x1, x2)

inst_93924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffffffffe0; valaddr_reg:x3; val_offset:281772*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281772*0 + 3*228*FLEN/8, x4, x1, x2)

inst_93925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffffffff0; valaddr_reg:x3; val_offset:281775*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281775*0 + 3*229*FLEN/8, x4, x1, x2)

inst_93926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffffffff8; valaddr_reg:x3; val_offset:281778*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281778*0 + 3*230*FLEN/8, x4, x1, x2)

inst_93927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffffffffc; valaddr_reg:x3; val_offset:281781*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281781*0 + 3*231*FLEN/8, x4, x1, x2)

inst_93928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809ffffffffffffe; valaddr_reg:x3; val_offset:281784*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281784*0 + 3*232*FLEN/8, x4, x1, x2)

inst_93929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7075e30c49de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7075e30c49de; op2val:0x8000;
op3val:0x809fffffffffffff; valaddr_reg:x3; val_offset:281787*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281787*0 + 3*233*FLEN/8, x4, x1, x2)

inst_93930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000000000000; valaddr_reg:x3; val_offset:281790*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281790*0 + 3*234*FLEN/8, x4, x1, x2)

inst_93931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000000000001; valaddr_reg:x3; val_offset:281793*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281793*0 + 3*235*FLEN/8, x4, x1, x2)

inst_93932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000000000003; valaddr_reg:x3; val_offset:281796*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281796*0 + 3*236*FLEN/8, x4, x1, x2)

inst_93933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000000000007; valaddr_reg:x3; val_offset:281799*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281799*0 + 3*237*FLEN/8, x4, x1, x2)

inst_93934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000000000000f; valaddr_reg:x3; val_offset:281802*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281802*0 + 3*238*FLEN/8, x4, x1, x2)

inst_93935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000000000001f; valaddr_reg:x3; val_offset:281805*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281805*0 + 3*239*FLEN/8, x4, x1, x2)

inst_93936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000000000003f; valaddr_reg:x3; val_offset:281808*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281808*0 + 3*240*FLEN/8, x4, x1, x2)

inst_93937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000000000007f; valaddr_reg:x3; val_offset:281811*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281811*0 + 3*241*FLEN/8, x4, x1, x2)

inst_93938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200000000000ff; valaddr_reg:x3; val_offset:281814*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281814*0 + 3*242*FLEN/8, x4, x1, x2)

inst_93939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200000000001ff; valaddr_reg:x3; val_offset:281817*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281817*0 + 3*243*FLEN/8, x4, x1, x2)

inst_93940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200000000003ff; valaddr_reg:x3; val_offset:281820*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281820*0 + 3*244*FLEN/8, x4, x1, x2)

inst_93941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200000000007ff; valaddr_reg:x3; val_offset:281823*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281823*0 + 3*245*FLEN/8, x4, x1, x2)

inst_93942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000000000fff; valaddr_reg:x3; val_offset:281826*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281826*0 + 3*246*FLEN/8, x4, x1, x2)

inst_93943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000000001fff; valaddr_reg:x3; val_offset:281829*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281829*0 + 3*247*FLEN/8, x4, x1, x2)

inst_93944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000000003fff; valaddr_reg:x3; val_offset:281832*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281832*0 + 3*248*FLEN/8, x4, x1, x2)

inst_93945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000000007fff; valaddr_reg:x3; val_offset:281835*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281835*0 + 3*249*FLEN/8, x4, x1, x2)

inst_93946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000000000ffff; valaddr_reg:x3; val_offset:281838*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281838*0 + 3*250*FLEN/8, x4, x1, x2)

inst_93947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000000001ffff; valaddr_reg:x3; val_offset:281841*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281841*0 + 3*251*FLEN/8, x4, x1, x2)

inst_93948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000000003ffff; valaddr_reg:x3; val_offset:281844*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281844*0 + 3*252*FLEN/8, x4, x1, x2)

inst_93949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000000007ffff; valaddr_reg:x3; val_offset:281847*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281847*0 + 3*253*FLEN/8, x4, x1, x2)

inst_93950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200000000fffff; valaddr_reg:x3; val_offset:281850*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281850*0 + 3*254*FLEN/8, x4, x1, x2)

inst_93951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200000001fffff; valaddr_reg:x3; val_offset:281853*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281853*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_93952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200000003fffff; valaddr_reg:x3; val_offset:281856*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281856*0 + 3*256*FLEN/8, x4, x1, x2)

inst_93953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200000007fffff; valaddr_reg:x3; val_offset:281859*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281859*0 + 3*257*FLEN/8, x4, x1, x2)

inst_93954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000000ffffff; valaddr_reg:x3; val_offset:281862*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281862*0 + 3*258*FLEN/8, x4, x1, x2)

inst_93955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000001ffffff; valaddr_reg:x3; val_offset:281865*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281865*0 + 3*259*FLEN/8, x4, x1, x2)

inst_93956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000003ffffff; valaddr_reg:x3; val_offset:281868*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281868*0 + 3*260*FLEN/8, x4, x1, x2)

inst_93957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000007ffffff; valaddr_reg:x3; val_offset:281871*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281871*0 + 3*261*FLEN/8, x4, x1, x2)

inst_93958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000000fffffff; valaddr_reg:x3; val_offset:281874*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281874*0 + 3*262*FLEN/8, x4, x1, x2)

inst_93959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000001fffffff; valaddr_reg:x3; val_offset:281877*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281877*0 + 3*263*FLEN/8, x4, x1, x2)

inst_93960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000003fffffff; valaddr_reg:x3; val_offset:281880*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281880*0 + 3*264*FLEN/8, x4, x1, x2)

inst_93961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000007fffffff; valaddr_reg:x3; val_offset:281883*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281883*0 + 3*265*FLEN/8, x4, x1, x2)

inst_93962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200000ffffffff; valaddr_reg:x3; val_offset:281886*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281886*0 + 3*266*FLEN/8, x4, x1, x2)

inst_93963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200001ffffffff; valaddr_reg:x3; val_offset:281889*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281889*0 + 3*267*FLEN/8, x4, x1, x2)

inst_93964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200003ffffffff; valaddr_reg:x3; val_offset:281892*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281892*0 + 3*268*FLEN/8, x4, x1, x2)

inst_93965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200007ffffffff; valaddr_reg:x3; val_offset:281895*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281895*0 + 3*269*FLEN/8, x4, x1, x2)

inst_93966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920000fffffffff; valaddr_reg:x3; val_offset:281898*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281898*0 + 3*270*FLEN/8, x4, x1, x2)

inst_93967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920001fffffffff; valaddr_reg:x3; val_offset:281901*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281901*0 + 3*271*FLEN/8, x4, x1, x2)

inst_93968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920003fffffffff; valaddr_reg:x3; val_offset:281904*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281904*0 + 3*272*FLEN/8, x4, x1, x2)

inst_93969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920007fffffffff; valaddr_reg:x3; val_offset:281907*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281907*0 + 3*273*FLEN/8, x4, x1, x2)

inst_93970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392000ffffffffff; valaddr_reg:x3; val_offset:281910*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281910*0 + 3*274*FLEN/8, x4, x1, x2)

inst_93971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392001ffffffffff; valaddr_reg:x3; val_offset:281913*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281913*0 + 3*275*FLEN/8, x4, x1, x2)

inst_93972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392003ffffffffff; valaddr_reg:x3; val_offset:281916*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281916*0 + 3*276*FLEN/8, x4, x1, x2)

inst_93973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392007ffffffffff; valaddr_reg:x3; val_offset:281919*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281919*0 + 3*277*FLEN/8, x4, x1, x2)

inst_93974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39200fffffffffff; valaddr_reg:x3; val_offset:281922*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281922*0 + 3*278*FLEN/8, x4, x1, x2)

inst_93975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39201fffffffffff; valaddr_reg:x3; val_offset:281925*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281925*0 + 3*279*FLEN/8, x4, x1, x2)

inst_93976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39203fffffffffff; valaddr_reg:x3; val_offset:281928*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281928*0 + 3*280*FLEN/8, x4, x1, x2)

inst_93977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x39207fffffffffff; valaddr_reg:x3; val_offset:281931*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281931*0 + 3*281*FLEN/8, x4, x1, x2)

inst_93978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3920ffffffffffff; valaddr_reg:x3; val_offset:281934*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281934*0 + 3*282*FLEN/8, x4, x1, x2)

inst_93979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3921ffffffffffff; valaddr_reg:x3; val_offset:281937*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281937*0 + 3*283*FLEN/8, x4, x1, x2)

inst_93980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3923ffffffffffff; valaddr_reg:x3; val_offset:281940*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281940*0 + 3*284*FLEN/8, x4, x1, x2)

inst_93981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3927ffffffffffff; valaddr_reg:x3; val_offset:281943*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281943*0 + 3*285*FLEN/8, x4, x1, x2)

inst_93982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3928000000000000; valaddr_reg:x3; val_offset:281946*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281946*0 + 3*286*FLEN/8, x4, x1, x2)

inst_93983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392c000000000000; valaddr_reg:x3; val_offset:281949*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281949*0 + 3*287*FLEN/8, x4, x1, x2)

inst_93984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392e000000000000; valaddr_reg:x3; val_offset:281952*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281952*0 + 3*288*FLEN/8, x4, x1, x2)

inst_93985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392f000000000000; valaddr_reg:x3; val_offset:281955*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281955*0 + 3*289*FLEN/8, x4, x1, x2)

inst_93986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392f800000000000; valaddr_reg:x3; val_offset:281958*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281958*0 + 3*290*FLEN/8, x4, x1, x2)

inst_93987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fc00000000000; valaddr_reg:x3; val_offset:281961*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281961*0 + 3*291*FLEN/8, x4, x1, x2)

inst_93988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fe00000000000; valaddr_reg:x3; val_offset:281964*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281964*0 + 3*292*FLEN/8, x4, x1, x2)

inst_93989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ff00000000000; valaddr_reg:x3; val_offset:281967*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281967*0 + 3*293*FLEN/8, x4, x1, x2)

inst_93990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ff80000000000; valaddr_reg:x3; val_offset:281970*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281970*0 + 3*294*FLEN/8, x4, x1, x2)

inst_93991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffc0000000000; valaddr_reg:x3; val_offset:281973*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281973*0 + 3*295*FLEN/8, x4, x1, x2)

inst_93992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffe0000000000; valaddr_reg:x3; val_offset:281976*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281976*0 + 3*296*FLEN/8, x4, x1, x2)

inst_93993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fff0000000000; valaddr_reg:x3; val_offset:281979*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281979*0 + 3*297*FLEN/8, x4, x1, x2)

inst_93994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fff8000000000; valaddr_reg:x3; val_offset:281982*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281982*0 + 3*298*FLEN/8, x4, x1, x2)

inst_93995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffc000000000; valaddr_reg:x3; val_offset:281985*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281985*0 + 3*299*FLEN/8, x4, x1, x2)

inst_93996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffe000000000; valaddr_reg:x3; val_offset:281988*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281988*0 + 3*300*FLEN/8, x4, x1, x2)

inst_93997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffff000000000; valaddr_reg:x3; val_offset:281991*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281991*0 + 3*301*FLEN/8, x4, x1, x2)

inst_93998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffff800000000; valaddr_reg:x3; val_offset:281994*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281994*0 + 3*302*FLEN/8, x4, x1, x2)

inst_93999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffc00000000; valaddr_reg:x3; val_offset:281997*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281997*0 + 3*303*FLEN/8, x4, x1, x2)

inst_94000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffe00000000; valaddr_reg:x3; val_offset:282000*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282000*0 + 3*304*FLEN/8, x4, x1, x2)

inst_94001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffff00000000; valaddr_reg:x3; val_offset:282003*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282003*0 + 3*305*FLEN/8, x4, x1, x2)

inst_94002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffff80000000; valaddr_reg:x3; val_offset:282006*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282006*0 + 3*306*FLEN/8, x4, x1, x2)

inst_94003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffc0000000; valaddr_reg:x3; val_offset:282009*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282009*0 + 3*307*FLEN/8, x4, x1, x2)

inst_94004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffe0000000; valaddr_reg:x3; val_offset:282012*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282012*0 + 3*308*FLEN/8, x4, x1, x2)

inst_94005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffff0000000; valaddr_reg:x3; val_offset:282015*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282015*0 + 3*309*FLEN/8, x4, x1, x2)

inst_94006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffff8000000; valaddr_reg:x3; val_offset:282018*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282018*0 + 3*310*FLEN/8, x4, x1, x2)

inst_94007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffc000000; valaddr_reg:x3; val_offset:282021*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282021*0 + 3*311*FLEN/8, x4, x1, x2)

inst_94008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffe000000; valaddr_reg:x3; val_offset:282024*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282024*0 + 3*312*FLEN/8, x4, x1, x2)

inst_94009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffff000000; valaddr_reg:x3; val_offset:282027*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282027*0 + 3*313*FLEN/8, x4, x1, x2)

inst_94010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffff800000; valaddr_reg:x3; val_offset:282030*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282030*0 + 3*314*FLEN/8, x4, x1, x2)

inst_94011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffffc00000; valaddr_reg:x3; val_offset:282033*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282033*0 + 3*315*FLEN/8, x4, x1, x2)

inst_94012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffffe00000; valaddr_reg:x3; val_offset:282036*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282036*0 + 3*316*FLEN/8, x4, x1, x2)

inst_94013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffff00000; valaddr_reg:x3; val_offset:282039*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282039*0 + 3*317*FLEN/8, x4, x1, x2)

inst_94014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffff80000; valaddr_reg:x3; val_offset:282042*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282042*0 + 3*318*FLEN/8, x4, x1, x2)

inst_94015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffffc0000; valaddr_reg:x3; val_offset:282045*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282045*0 + 3*319*FLEN/8, x4, x1, x2)

inst_94016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffffe0000; valaddr_reg:x3; val_offset:282048*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282048*0 + 3*320*FLEN/8, x4, x1, x2)

inst_94017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffffff0000; valaddr_reg:x3; val_offset:282051*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282051*0 + 3*321*FLEN/8, x4, x1, x2)

inst_94018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffffff8000; valaddr_reg:x3; val_offset:282054*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282054*0 + 3*322*FLEN/8, x4, x1, x2)

inst_94019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffffffc000; valaddr_reg:x3; val_offset:282057*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282057*0 + 3*323*FLEN/8, x4, x1, x2)

inst_94020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffffffe000; valaddr_reg:x3; val_offset:282060*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282060*0 + 3*324*FLEN/8, x4, x1, x2)

inst_94021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffffff000; valaddr_reg:x3; val_offset:282063*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282063*0 + 3*325*FLEN/8, x4, x1, x2)

inst_94022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffffff800; valaddr_reg:x3; val_offset:282066*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282066*0 + 3*326*FLEN/8, x4, x1, x2)

inst_94023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffffffc00; valaddr_reg:x3; val_offset:282069*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282069*0 + 3*327*FLEN/8, x4, x1, x2)

inst_94024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffffffe00; valaddr_reg:x3; val_offset:282072*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282072*0 + 3*328*FLEN/8, x4, x1, x2)

inst_94025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffffffff00; valaddr_reg:x3; val_offset:282075*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282075*0 + 3*329*FLEN/8, x4, x1, x2)

inst_94026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffffffff80; valaddr_reg:x3; val_offset:282078*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282078*0 + 3*330*FLEN/8, x4, x1, x2)

inst_94027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffffffffc0; valaddr_reg:x3; val_offset:282081*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282081*0 + 3*331*FLEN/8, x4, x1, x2)

inst_94028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffffffffe0; valaddr_reg:x3; val_offset:282084*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282084*0 + 3*332*FLEN/8, x4, x1, x2)

inst_94029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffffffff0; valaddr_reg:x3; val_offset:282087*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282087*0 + 3*333*FLEN/8, x4, x1, x2)

inst_94030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffffffff8; valaddr_reg:x3; val_offset:282090*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282090*0 + 3*334*FLEN/8, x4, x1, x2)

inst_94031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffffffffc; valaddr_reg:x3; val_offset:282093*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282093*0 + 3*335*FLEN/8, x4, x1, x2)

inst_94032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392ffffffffffffe; valaddr_reg:x3; val_offset:282096*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282096*0 + 3*336*FLEN/8, x4, x1, x2)

inst_94033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x392 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x392fffffffffffff; valaddr_reg:x3; val_offset:282099*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282099*0 + 3*337*FLEN/8, x4, x1, x2)

inst_94034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:282102*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282102*0 + 3*338*FLEN/8, x4, x1, x2)

inst_94035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:282105*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282105*0 + 3*339*FLEN/8, x4, x1, x2)

inst_94036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:282108*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282108*0 + 3*340*FLEN/8, x4, x1, x2)

inst_94037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:282111*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282111*0 + 3*341*FLEN/8, x4, x1, x2)

inst_94038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:282114*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282114*0 + 3*342*FLEN/8, x4, x1, x2)

inst_94039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:282117*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282117*0 + 3*343*FLEN/8, x4, x1, x2)

inst_94040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:282120*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282120*0 + 3*344*FLEN/8, x4, x1, x2)

inst_94041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:282123*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282123*0 + 3*345*FLEN/8, x4, x1, x2)

inst_94042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:282126*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282126*0 + 3*346*FLEN/8, x4, x1, x2)

inst_94043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:282129*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282129*0 + 3*347*FLEN/8, x4, x1, x2)

inst_94044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:282132*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282132*0 + 3*348*FLEN/8, x4, x1, x2)

inst_94045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:282135*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282135*0 + 3*349*FLEN/8, x4, x1, x2)

inst_94046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:282138*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282138*0 + 3*350*FLEN/8, x4, x1, x2)

inst_94047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:282141*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282141*0 + 3*351*FLEN/8, x4, x1, x2)

inst_94048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:282144*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282144*0 + 3*352*FLEN/8, x4, x1, x2)

inst_94049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:282147*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282147*0 + 3*353*FLEN/8, x4, x1, x2)

inst_94050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:282150*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282150*0 + 3*354*FLEN/8, x4, x1, x2)

inst_94051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:282153*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282153*0 + 3*355*FLEN/8, x4, x1, x2)

inst_94052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:282156*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282156*0 + 3*356*FLEN/8, x4, x1, x2)

inst_94053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:282159*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282159*0 + 3*357*FLEN/8, x4, x1, x2)

inst_94054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:282162*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282162*0 + 3*358*FLEN/8, x4, x1, x2)

inst_94055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd7c426dc4edf7 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x15d5206bdc0c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad7c426dc4edf7; op2val:0x20315d5206bdc0c1;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:282165*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282165*0 + 3*359*FLEN/8, x4, x1, x2)

inst_94056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:282168*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282168*0 + 3*360*FLEN/8, x4, x1, x2)

inst_94057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:282171*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282171*0 + 3*361*FLEN/8, x4, x1, x2)

inst_94058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:282174*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282174*0 + 3*362*FLEN/8, x4, x1, x2)

inst_94059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:282177*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282177*0 + 3*363*FLEN/8, x4, x1, x2)

inst_94060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:282180*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282180*0 + 3*364*FLEN/8, x4, x1, x2)

inst_94061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:282183*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282183*0 + 3*365*FLEN/8, x4, x1, x2)

inst_94062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:282186*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282186*0 + 3*366*FLEN/8, x4, x1, x2)

inst_94063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:282189*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282189*0 + 3*367*FLEN/8, x4, x1, x2)

inst_94064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:282192*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282192*0 + 3*368*FLEN/8, x4, x1, x2)

inst_94065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:282195*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282195*0 + 3*369*FLEN/8, x4, x1, x2)

inst_94066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:282198*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282198*0 + 3*370*FLEN/8, x4, x1, x2)

inst_94067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:282201*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282201*0 + 3*371*FLEN/8, x4, x1, x2)

inst_94068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:282204*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282204*0 + 3*372*FLEN/8, x4, x1, x2)

inst_94069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:282207*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282207*0 + 3*373*FLEN/8, x4, x1, x2)

inst_94070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:282210*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282210*0 + 3*374*FLEN/8, x4, x1, x2)

inst_94071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:282213*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282213*0 + 3*375*FLEN/8, x4, x1, x2)

inst_94072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:282216*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282216*0 + 3*376*FLEN/8, x4, x1, x2)

inst_94073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:282219*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282219*0 + 3*377*FLEN/8, x4, x1, x2)

inst_94074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:282222*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282222*0 + 3*378*FLEN/8, x4, x1, x2)

inst_94075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:282225*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282225*0 + 3*379*FLEN/8, x4, x1, x2)

inst_94076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:282228*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282228*0 + 3*380*FLEN/8, x4, x1, x2)

inst_94077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:282231*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282231*0 + 3*381*FLEN/8, x4, x1, x2)

inst_94078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000000000000; valaddr_reg:x3; val_offset:282234*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282234*0 + 3*382*FLEN/8, x4, x1, x2)

inst_94079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000000000001; valaddr_reg:x3; val_offset:282237*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282237*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_94080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000000000003; valaddr_reg:x3; val_offset:282240*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282240*0 + 3*384*FLEN/8, x4, x1, x2)

inst_94081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000000000007; valaddr_reg:x3; val_offset:282243*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282243*0 + 3*385*FLEN/8, x4, x1, x2)

inst_94082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000000000000f; valaddr_reg:x3; val_offset:282246*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282246*0 + 3*386*FLEN/8, x4, x1, x2)

inst_94083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000000000001f; valaddr_reg:x3; val_offset:282249*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282249*0 + 3*387*FLEN/8, x4, x1, x2)

inst_94084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000000000003f; valaddr_reg:x3; val_offset:282252*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282252*0 + 3*388*FLEN/8, x4, x1, x2)

inst_94085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000000000007f; valaddr_reg:x3; val_offset:282255*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282255*0 + 3*389*FLEN/8, x4, x1, x2)

inst_94086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00000000000ff; valaddr_reg:x3; val_offset:282258*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282258*0 + 3*390*FLEN/8, x4, x1, x2)

inst_94087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00000000001ff; valaddr_reg:x3; val_offset:282261*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282261*0 + 3*391*FLEN/8, x4, x1, x2)

inst_94088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00000000003ff; valaddr_reg:x3; val_offset:282264*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282264*0 + 3*392*FLEN/8, x4, x1, x2)

inst_94089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00000000007ff; valaddr_reg:x3; val_offset:282267*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282267*0 + 3*393*FLEN/8, x4, x1, x2)

inst_94090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000000000fff; valaddr_reg:x3; val_offset:282270*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282270*0 + 3*394*FLEN/8, x4, x1, x2)

inst_94091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000000001fff; valaddr_reg:x3; val_offset:282273*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282273*0 + 3*395*FLEN/8, x4, x1, x2)

inst_94092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000000003fff; valaddr_reg:x3; val_offset:282276*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282276*0 + 3*396*FLEN/8, x4, x1, x2)

inst_94093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000000007fff; valaddr_reg:x3; val_offset:282279*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282279*0 + 3*397*FLEN/8, x4, x1, x2)

inst_94094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000000000ffff; valaddr_reg:x3; val_offset:282282*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282282*0 + 3*398*FLEN/8, x4, x1, x2)

inst_94095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000000001ffff; valaddr_reg:x3; val_offset:282285*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282285*0 + 3*399*FLEN/8, x4, x1, x2)

inst_94096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000000003ffff; valaddr_reg:x3; val_offset:282288*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282288*0 + 3*400*FLEN/8, x4, x1, x2)

inst_94097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000000007ffff; valaddr_reg:x3; val_offset:282291*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282291*0 + 3*401*FLEN/8, x4, x1, x2)

inst_94098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00000000fffff; valaddr_reg:x3; val_offset:282294*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282294*0 + 3*402*FLEN/8, x4, x1, x2)

inst_94099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00000001fffff; valaddr_reg:x3; val_offset:282297*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282297*0 + 3*403*FLEN/8, x4, x1, x2)

inst_94100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00000003fffff; valaddr_reg:x3; val_offset:282300*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282300*0 + 3*404*FLEN/8, x4, x1, x2)

inst_94101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00000007fffff; valaddr_reg:x3; val_offset:282303*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282303*0 + 3*405*FLEN/8, x4, x1, x2)

inst_94102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000000ffffff; valaddr_reg:x3; val_offset:282306*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282306*0 + 3*406*FLEN/8, x4, x1, x2)

inst_94103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000001ffffff; valaddr_reg:x3; val_offset:282309*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282309*0 + 3*407*FLEN/8, x4, x1, x2)

inst_94104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000003ffffff; valaddr_reg:x3; val_offset:282312*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282312*0 + 3*408*FLEN/8, x4, x1, x2)

inst_94105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000007ffffff; valaddr_reg:x3; val_offset:282315*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282315*0 + 3*409*FLEN/8, x4, x1, x2)

inst_94106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000000fffffff; valaddr_reg:x3; val_offset:282318*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282318*0 + 3*410*FLEN/8, x4, x1, x2)

inst_94107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000001fffffff; valaddr_reg:x3; val_offset:282321*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282321*0 + 3*411*FLEN/8, x4, x1, x2)

inst_94108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000003fffffff; valaddr_reg:x3; val_offset:282324*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282324*0 + 3*412*FLEN/8, x4, x1, x2)

inst_94109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000007fffffff; valaddr_reg:x3; val_offset:282327*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282327*0 + 3*413*FLEN/8, x4, x1, x2)

inst_94110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00000ffffffff; valaddr_reg:x3; val_offset:282330*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282330*0 + 3*414*FLEN/8, x4, x1, x2)

inst_94111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00001ffffffff; valaddr_reg:x3; val_offset:282333*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282333*0 + 3*415*FLEN/8, x4, x1, x2)

inst_94112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00003ffffffff; valaddr_reg:x3; val_offset:282336*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282336*0 + 3*416*FLEN/8, x4, x1, x2)

inst_94113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00007ffffffff; valaddr_reg:x3; val_offset:282339*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282339*0 + 3*417*FLEN/8, x4, x1, x2)

inst_94114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0000fffffffff; valaddr_reg:x3; val_offset:282342*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282342*0 + 3*418*FLEN/8, x4, x1, x2)

inst_94115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0001fffffffff; valaddr_reg:x3; val_offset:282345*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282345*0 + 3*419*FLEN/8, x4, x1, x2)

inst_94116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0003fffffffff; valaddr_reg:x3; val_offset:282348*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282348*0 + 3*420*FLEN/8, x4, x1, x2)

inst_94117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0007fffffffff; valaddr_reg:x3; val_offset:282351*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282351*0 + 3*421*FLEN/8, x4, x1, x2)

inst_94118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a000ffffffffff; valaddr_reg:x3; val_offset:282354*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282354*0 + 3*422*FLEN/8, x4, x1, x2)

inst_94119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a001ffffffffff; valaddr_reg:x3; val_offset:282357*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282357*0 + 3*423*FLEN/8, x4, x1, x2)

inst_94120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a003ffffffffff; valaddr_reg:x3; val_offset:282360*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282360*0 + 3*424*FLEN/8, x4, x1, x2)

inst_94121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a007ffffffffff; valaddr_reg:x3; val_offset:282363*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282363*0 + 3*425*FLEN/8, x4, x1, x2)

inst_94122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a00fffffffffff; valaddr_reg:x3; val_offset:282366*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282366*0 + 3*426*FLEN/8, x4, x1, x2)

inst_94123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a01fffffffffff; valaddr_reg:x3; val_offset:282369*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282369*0 + 3*427*FLEN/8, x4, x1, x2)

inst_94124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a03fffffffffff; valaddr_reg:x3; val_offset:282372*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282372*0 + 3*428*FLEN/8, x4, x1, x2)

inst_94125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a07fffffffffff; valaddr_reg:x3; val_offset:282375*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282375*0 + 3*429*FLEN/8, x4, x1, x2)

inst_94126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a0ffffffffffff; valaddr_reg:x3; val_offset:282378*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282378*0 + 3*430*FLEN/8, x4, x1, x2)

inst_94127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a1ffffffffffff; valaddr_reg:x3; val_offset:282381*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282381*0 + 3*431*FLEN/8, x4, x1, x2)

inst_94128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a3ffffffffffff; valaddr_reg:x3; val_offset:282384*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282384*0 + 3*432*FLEN/8, x4, x1, x2)

inst_94129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a7ffffffffffff; valaddr_reg:x3; val_offset:282387*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282387*0 + 3*433*FLEN/8, x4, x1, x2)

inst_94130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3a8000000000000; valaddr_reg:x3; val_offset:282390*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282390*0 + 3*434*FLEN/8, x4, x1, x2)

inst_94131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3ac000000000000; valaddr_reg:x3; val_offset:282393*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282393*0 + 3*435*FLEN/8, x4, x1, x2)

inst_94132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3ae000000000000; valaddr_reg:x3; val_offset:282396*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282396*0 + 3*436*FLEN/8, x4, x1, x2)

inst_94133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3af000000000000; valaddr_reg:x3; val_offset:282399*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282399*0 + 3*437*FLEN/8, x4, x1, x2)

inst_94134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3af800000000000; valaddr_reg:x3; val_offset:282402*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282402*0 + 3*438*FLEN/8, x4, x1, x2)

inst_94135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afc00000000000; valaddr_reg:x3; val_offset:282405*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282405*0 + 3*439*FLEN/8, x4, x1, x2)

inst_94136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afe00000000000; valaddr_reg:x3; val_offset:282408*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282408*0 + 3*440*FLEN/8, x4, x1, x2)

inst_94137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3aff00000000000; valaddr_reg:x3; val_offset:282411*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282411*0 + 3*441*FLEN/8, x4, x1, x2)

inst_94138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3aff80000000000; valaddr_reg:x3; val_offset:282414*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282414*0 + 3*442*FLEN/8, x4, x1, x2)

inst_94139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affc0000000000; valaddr_reg:x3; val_offset:282417*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282417*0 + 3*443*FLEN/8, x4, x1, x2)

inst_94140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affe0000000000; valaddr_reg:x3; val_offset:282420*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282420*0 + 3*444*FLEN/8, x4, x1, x2)

inst_94141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afff0000000000; valaddr_reg:x3; val_offset:282423*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282423*0 + 3*445*FLEN/8, x4, x1, x2)

inst_94142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afff8000000000; valaddr_reg:x3; val_offset:282426*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282426*0 + 3*446*FLEN/8, x4, x1, x2)

inst_94143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffc000000000; valaddr_reg:x3; val_offset:282429*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282429*0 + 3*447*FLEN/8, x4, x1, x2)

inst_94144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffe000000000; valaddr_reg:x3; val_offset:282432*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282432*0 + 3*448*FLEN/8, x4, x1, x2)

inst_94145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affff000000000; valaddr_reg:x3; val_offset:282435*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282435*0 + 3*449*FLEN/8, x4, x1, x2)

inst_94146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affff800000000; valaddr_reg:x3; val_offset:282438*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282438*0 + 3*450*FLEN/8, x4, x1, x2)

inst_94147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffc00000000; valaddr_reg:x3; val_offset:282441*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282441*0 + 3*451*FLEN/8, x4, x1, x2)

inst_94148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffe00000000; valaddr_reg:x3; val_offset:282444*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282444*0 + 3*452*FLEN/8, x4, x1, x2)

inst_94149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffff00000000; valaddr_reg:x3; val_offset:282447*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282447*0 + 3*453*FLEN/8, x4, x1, x2)

inst_94150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffff80000000; valaddr_reg:x3; val_offset:282450*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282450*0 + 3*454*FLEN/8, x4, x1, x2)

inst_94151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffc0000000; valaddr_reg:x3; val_offset:282453*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282453*0 + 3*455*FLEN/8, x4, x1, x2)

inst_94152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffe0000000; valaddr_reg:x3; val_offset:282456*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282456*0 + 3*456*FLEN/8, x4, x1, x2)

inst_94153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffff0000000; valaddr_reg:x3; val_offset:282459*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282459*0 + 3*457*FLEN/8, x4, x1, x2)

inst_94154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffff8000000; valaddr_reg:x3; val_offset:282462*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282462*0 + 3*458*FLEN/8, x4, x1, x2)

inst_94155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffc000000; valaddr_reg:x3; val_offset:282465*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282465*0 + 3*459*FLEN/8, x4, x1, x2)

inst_94156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffe000000; valaddr_reg:x3; val_offset:282468*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282468*0 + 3*460*FLEN/8, x4, x1, x2)

inst_94157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffff000000; valaddr_reg:x3; val_offset:282471*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282471*0 + 3*461*FLEN/8, x4, x1, x2)

inst_94158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffff800000; valaddr_reg:x3; val_offset:282474*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282474*0 + 3*462*FLEN/8, x4, x1, x2)

inst_94159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffffc00000; valaddr_reg:x3; val_offset:282477*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282477*0 + 3*463*FLEN/8, x4, x1, x2)

inst_94160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffffe00000; valaddr_reg:x3; val_offset:282480*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282480*0 + 3*464*FLEN/8, x4, x1, x2)

inst_94161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffff00000; valaddr_reg:x3; val_offset:282483*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282483*0 + 3*465*FLEN/8, x4, x1, x2)

inst_94162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffff80000; valaddr_reg:x3; val_offset:282486*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282486*0 + 3*466*FLEN/8, x4, x1, x2)

inst_94163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffffc0000; valaddr_reg:x3; val_offset:282489*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282489*0 + 3*467*FLEN/8, x4, x1, x2)

inst_94164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffffe0000; valaddr_reg:x3; val_offset:282492*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282492*0 + 3*468*FLEN/8, x4, x1, x2)

inst_94165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffffff0000; valaddr_reg:x3; val_offset:282495*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282495*0 + 3*469*FLEN/8, x4, x1, x2)

inst_94166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffffff8000; valaddr_reg:x3; val_offset:282498*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282498*0 + 3*470*FLEN/8, x4, x1, x2)

inst_94167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffffffc000; valaddr_reg:x3; val_offset:282501*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282501*0 + 3*471*FLEN/8, x4, x1, x2)

inst_94168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffffffe000; valaddr_reg:x3; val_offset:282504*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282504*0 + 3*472*FLEN/8, x4, x1, x2)

inst_94169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffffff000; valaddr_reg:x3; val_offset:282507*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282507*0 + 3*473*FLEN/8, x4, x1, x2)

inst_94170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffffff800; valaddr_reg:x3; val_offset:282510*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282510*0 + 3*474*FLEN/8, x4, x1, x2)

inst_94171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffffffc00; valaddr_reg:x3; val_offset:282513*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282513*0 + 3*475*FLEN/8, x4, x1, x2)

inst_94172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffffffe00; valaddr_reg:x3; val_offset:282516*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282516*0 + 3*476*FLEN/8, x4, x1, x2)

inst_94173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffffffff00; valaddr_reg:x3; val_offset:282519*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282519*0 + 3*477*FLEN/8, x4, x1, x2)

inst_94174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffffffff80; valaddr_reg:x3; val_offset:282522*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282522*0 + 3*478*FLEN/8, x4, x1, x2)

inst_94175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffffffffc0; valaddr_reg:x3; val_offset:282525*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282525*0 + 3*479*FLEN/8, x4, x1, x2)

inst_94176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffffffffe0; valaddr_reg:x3; val_offset:282528*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282528*0 + 3*480*FLEN/8, x4, x1, x2)

inst_94177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffffffff0; valaddr_reg:x3; val_offset:282531*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282531*0 + 3*481*FLEN/8, x4, x1, x2)

inst_94178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffffffff8; valaddr_reg:x3; val_offset:282534*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282534*0 + 3*482*FLEN/8, x4, x1, x2)

inst_94179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffffffffc; valaddr_reg:x3; val_offset:282537*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282537*0 + 3*483*FLEN/8, x4, x1, x2)

inst_94180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3affffffffffffe; valaddr_reg:x3; val_offset:282540*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282540*0 + 3*484*FLEN/8, x4, x1, x2)

inst_94181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8311de29401a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8311de29401a; op2val:0x0;
op3val:0x3afffffffffffff; valaddr_reg:x3; val_offset:282543*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282543*0 + 3*485*FLEN/8, x4, x1, x2)

inst_94182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000000000000; valaddr_reg:x3; val_offset:282546*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282546*0 + 3*486*FLEN/8, x4, x1, x2)

inst_94183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000000000001; valaddr_reg:x3; val_offset:282549*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282549*0 + 3*487*FLEN/8, x4, x1, x2)

inst_94184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000000000003; valaddr_reg:x3; val_offset:282552*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282552*0 + 3*488*FLEN/8, x4, x1, x2)

inst_94185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000000000007; valaddr_reg:x3; val_offset:282555*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282555*0 + 3*489*FLEN/8, x4, x1, x2)

inst_94186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000000000000f; valaddr_reg:x3; val_offset:282558*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282558*0 + 3*490*FLEN/8, x4, x1, x2)

inst_94187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000000000001f; valaddr_reg:x3; val_offset:282561*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282561*0 + 3*491*FLEN/8, x4, x1, x2)

inst_94188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000000000003f; valaddr_reg:x3; val_offset:282564*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282564*0 + 3*492*FLEN/8, x4, x1, x2)

inst_94189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000000000007f; valaddr_reg:x3; val_offset:282567*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282567*0 + 3*493*FLEN/8, x4, x1, x2)

inst_94190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000000000000ff; valaddr_reg:x3; val_offset:282570*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282570*0 + 3*494*FLEN/8, x4, x1, x2)

inst_94191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000000000001ff; valaddr_reg:x3; val_offset:282573*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282573*0 + 3*495*FLEN/8, x4, x1, x2)

inst_94192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000000000003ff; valaddr_reg:x3; val_offset:282576*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282576*0 + 3*496*FLEN/8, x4, x1, x2)

inst_94193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000000000007ff; valaddr_reg:x3; val_offset:282579*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282579*0 + 3*497*FLEN/8, x4, x1, x2)

inst_94194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000000000fff; valaddr_reg:x3; val_offset:282582*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282582*0 + 3*498*FLEN/8, x4, x1, x2)

inst_94195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000000001fff; valaddr_reg:x3; val_offset:282585*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282585*0 + 3*499*FLEN/8, x4, x1, x2)

inst_94196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000000003fff; valaddr_reg:x3; val_offset:282588*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282588*0 + 3*500*FLEN/8, x4, x1, x2)

inst_94197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000000007fff; valaddr_reg:x3; val_offset:282591*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282591*0 + 3*501*FLEN/8, x4, x1, x2)

inst_94198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000000000ffff; valaddr_reg:x3; val_offset:282594*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282594*0 + 3*502*FLEN/8, x4, x1, x2)

inst_94199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000000001ffff; valaddr_reg:x3; val_offset:282597*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282597*0 + 3*503*FLEN/8, x4, x1, x2)

inst_94200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000000003ffff; valaddr_reg:x3; val_offset:282600*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282600*0 + 3*504*FLEN/8, x4, x1, x2)

inst_94201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000000007ffff; valaddr_reg:x3; val_offset:282603*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282603*0 + 3*505*FLEN/8, x4, x1, x2)

inst_94202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000000000fffff; valaddr_reg:x3; val_offset:282606*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282606*0 + 3*506*FLEN/8, x4, x1, x2)

inst_94203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000000001fffff; valaddr_reg:x3; val_offset:282609*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282609*0 + 3*507*FLEN/8, x4, x1, x2)

inst_94204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000000003fffff; valaddr_reg:x3; val_offset:282612*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282612*0 + 3*508*FLEN/8, x4, x1, x2)

inst_94205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000000007fffff; valaddr_reg:x3; val_offset:282615*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282615*0 + 3*509*FLEN/8, x4, x1, x2)

inst_94206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000000ffffff; valaddr_reg:x3; val_offset:282618*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282618*0 + 3*510*FLEN/8, x4, x1, x2)

inst_94207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000001ffffff; valaddr_reg:x3; val_offset:282621*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282621*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_94208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000003ffffff; valaddr_reg:x3; val_offset:282624*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282624*0 + 3*512*FLEN/8, x4, x1, x2)

inst_94209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000007ffffff; valaddr_reg:x3; val_offset:282627*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282627*0 + 3*513*FLEN/8, x4, x1, x2)

inst_94210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000000fffffff; valaddr_reg:x3; val_offset:282630*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282630*0 + 3*514*FLEN/8, x4, x1, x2)

inst_94211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000001fffffff; valaddr_reg:x3; val_offset:282633*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282633*0 + 3*515*FLEN/8, x4, x1, x2)

inst_94212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000003fffffff; valaddr_reg:x3; val_offset:282636*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282636*0 + 3*516*FLEN/8, x4, x1, x2)

inst_94213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000007fffffff; valaddr_reg:x3; val_offset:282639*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282639*0 + 3*517*FLEN/8, x4, x1, x2)

inst_94214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000000ffffffff; valaddr_reg:x3; val_offset:282642*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282642*0 + 3*518*FLEN/8, x4, x1, x2)

inst_94215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000001ffffffff; valaddr_reg:x3; val_offset:282645*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282645*0 + 3*519*FLEN/8, x4, x1, x2)

inst_94216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000003ffffffff; valaddr_reg:x3; val_offset:282648*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282648*0 + 3*520*FLEN/8, x4, x1, x2)

inst_94217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000007ffffffff; valaddr_reg:x3; val_offset:282651*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282651*0 + 3*521*FLEN/8, x4, x1, x2)

inst_94218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00000fffffffff; valaddr_reg:x3; val_offset:282654*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282654*0 + 3*522*FLEN/8, x4, x1, x2)

inst_94219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00001fffffffff; valaddr_reg:x3; val_offset:282657*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282657*0 + 3*523*FLEN/8, x4, x1, x2)

inst_94220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00003fffffffff; valaddr_reg:x3; val_offset:282660*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282660*0 + 3*524*FLEN/8, x4, x1, x2)

inst_94221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00007fffffffff; valaddr_reg:x3; val_offset:282663*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282663*0 + 3*525*FLEN/8, x4, x1, x2)

inst_94222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0000ffffffffff; valaddr_reg:x3; val_offset:282666*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282666*0 + 3*526*FLEN/8, x4, x1, x2)

inst_94223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0001ffffffffff; valaddr_reg:x3; val_offset:282669*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282669*0 + 3*527*FLEN/8, x4, x1, x2)

inst_94224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0003ffffffffff; valaddr_reg:x3; val_offset:282672*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282672*0 + 3*528*FLEN/8, x4, x1, x2)

inst_94225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0007ffffffffff; valaddr_reg:x3; val_offset:282675*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282675*0 + 3*529*FLEN/8, x4, x1, x2)

inst_94226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e000fffffffffff; valaddr_reg:x3; val_offset:282678*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282678*0 + 3*530*FLEN/8, x4, x1, x2)

inst_94227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e001fffffffffff; valaddr_reg:x3; val_offset:282681*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282681*0 + 3*531*FLEN/8, x4, x1, x2)

inst_94228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e003fffffffffff; valaddr_reg:x3; val_offset:282684*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282684*0 + 3*532*FLEN/8, x4, x1, x2)

inst_94229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e007fffffffffff; valaddr_reg:x3; val_offset:282687*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282687*0 + 3*533*FLEN/8, x4, x1, x2)

inst_94230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e00ffffffffffff; valaddr_reg:x3; val_offset:282690*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282690*0 + 3*534*FLEN/8, x4, x1, x2)

inst_94231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e01ffffffffffff; valaddr_reg:x3; val_offset:282693*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282693*0 + 3*535*FLEN/8, x4, x1, x2)

inst_94232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e03ffffffffffff; valaddr_reg:x3; val_offset:282696*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282696*0 + 3*536*FLEN/8, x4, x1, x2)

inst_94233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e07ffffffffffff; valaddr_reg:x3; val_offset:282699*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282699*0 + 3*537*FLEN/8, x4, x1, x2)

inst_94234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e08000000000000; valaddr_reg:x3; val_offset:282702*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282702*0 + 3*538*FLEN/8, x4, x1, x2)

inst_94235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0c000000000000; valaddr_reg:x3; val_offset:282705*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282705*0 + 3*539*FLEN/8, x4, x1, x2)

inst_94236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0e000000000000; valaddr_reg:x3; val_offset:282708*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282708*0 + 3*540*FLEN/8, x4, x1, x2)

inst_94237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0f000000000000; valaddr_reg:x3; val_offset:282711*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282711*0 + 3*541*FLEN/8, x4, x1, x2)

inst_94238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0f800000000000; valaddr_reg:x3; val_offset:282714*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282714*0 + 3*542*FLEN/8, x4, x1, x2)

inst_94239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fc00000000000; valaddr_reg:x3; val_offset:282717*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282717*0 + 3*543*FLEN/8, x4, x1, x2)

inst_94240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fe00000000000; valaddr_reg:x3; val_offset:282720*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282720*0 + 3*544*FLEN/8, x4, x1, x2)

inst_94241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ff00000000000; valaddr_reg:x3; val_offset:282723*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282723*0 + 3*545*FLEN/8, x4, x1, x2)

inst_94242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ff80000000000; valaddr_reg:x3; val_offset:282726*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282726*0 + 3*546*FLEN/8, x4, x1, x2)

inst_94243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffc0000000000; valaddr_reg:x3; val_offset:282729*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282729*0 + 3*547*FLEN/8, x4, x1, x2)

inst_94244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffe0000000000; valaddr_reg:x3; val_offset:282732*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282732*0 + 3*548*FLEN/8, x4, x1, x2)

inst_94245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fff0000000000; valaddr_reg:x3; val_offset:282735*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282735*0 + 3*549*FLEN/8, x4, x1, x2)

inst_94246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fff8000000000; valaddr_reg:x3; val_offset:282738*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282738*0 + 3*550*FLEN/8, x4, x1, x2)

inst_94247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffc000000000; valaddr_reg:x3; val_offset:282741*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282741*0 + 3*551*FLEN/8, x4, x1, x2)

inst_94248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffe000000000; valaddr_reg:x3; val_offset:282744*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282744*0 + 3*552*FLEN/8, x4, x1, x2)

inst_94249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffff000000000; valaddr_reg:x3; val_offset:282747*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282747*0 + 3*553*FLEN/8, x4, x1, x2)

inst_94250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffff800000000; valaddr_reg:x3; val_offset:282750*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282750*0 + 3*554*FLEN/8, x4, x1, x2)

inst_94251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffc00000000; valaddr_reg:x3; val_offset:282753*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282753*0 + 3*555*FLEN/8, x4, x1, x2)

inst_94252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffe00000000; valaddr_reg:x3; val_offset:282756*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282756*0 + 3*556*FLEN/8, x4, x1, x2)

inst_94253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffff00000000; valaddr_reg:x3; val_offset:282759*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282759*0 + 3*557*FLEN/8, x4, x1, x2)

inst_94254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffff80000000; valaddr_reg:x3; val_offset:282762*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282762*0 + 3*558*FLEN/8, x4, x1, x2)

inst_94255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffc0000000; valaddr_reg:x3; val_offset:282765*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282765*0 + 3*559*FLEN/8, x4, x1, x2)

inst_94256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffe0000000; valaddr_reg:x3; val_offset:282768*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282768*0 + 3*560*FLEN/8, x4, x1, x2)

inst_94257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffff0000000; valaddr_reg:x3; val_offset:282771*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282771*0 + 3*561*FLEN/8, x4, x1, x2)

inst_94258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffff8000000; valaddr_reg:x3; val_offset:282774*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282774*0 + 3*562*FLEN/8, x4, x1, x2)

inst_94259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffc000000; valaddr_reg:x3; val_offset:282777*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282777*0 + 3*563*FLEN/8, x4, x1, x2)

inst_94260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffe000000; valaddr_reg:x3; val_offset:282780*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282780*0 + 3*564*FLEN/8, x4, x1, x2)

inst_94261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffff000000; valaddr_reg:x3; val_offset:282783*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282783*0 + 3*565*FLEN/8, x4, x1, x2)

inst_94262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffff800000; valaddr_reg:x3; val_offset:282786*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282786*0 + 3*566*FLEN/8, x4, x1, x2)

inst_94263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffffc00000; valaddr_reg:x3; val_offset:282789*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282789*0 + 3*567*FLEN/8, x4, x1, x2)

inst_94264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffffe00000; valaddr_reg:x3; val_offset:282792*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282792*0 + 3*568*FLEN/8, x4, x1, x2)

inst_94265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffff00000; valaddr_reg:x3; val_offset:282795*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282795*0 + 3*569*FLEN/8, x4, x1, x2)

inst_94266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffff80000; valaddr_reg:x3; val_offset:282798*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282798*0 + 3*570*FLEN/8, x4, x1, x2)

inst_94267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffffc0000; valaddr_reg:x3; val_offset:282801*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282801*0 + 3*571*FLEN/8, x4, x1, x2)

inst_94268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffffe0000; valaddr_reg:x3; val_offset:282804*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282804*0 + 3*572*FLEN/8, x4, x1, x2)

inst_94269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffffff0000; valaddr_reg:x3; val_offset:282807*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282807*0 + 3*573*FLEN/8, x4, x1, x2)

inst_94270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffffff8000; valaddr_reg:x3; val_offset:282810*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282810*0 + 3*574*FLEN/8, x4, x1, x2)

inst_94271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffffffc000; valaddr_reg:x3; val_offset:282813*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282813*0 + 3*575*FLEN/8, x4, x1, x2)

inst_94272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffffffe000; valaddr_reg:x3; val_offset:282816*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282816*0 + 3*576*FLEN/8, x4, x1, x2)

inst_94273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffffff000; valaddr_reg:x3; val_offset:282819*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282819*0 + 3*577*FLEN/8, x4, x1, x2)

inst_94274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffffff800; valaddr_reg:x3; val_offset:282822*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282822*0 + 3*578*FLEN/8, x4, x1, x2)

inst_94275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffffffc00; valaddr_reg:x3; val_offset:282825*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282825*0 + 3*579*FLEN/8, x4, x1, x2)

inst_94276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffffffe00; valaddr_reg:x3; val_offset:282828*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282828*0 + 3*580*FLEN/8, x4, x1, x2)

inst_94277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffffffff00; valaddr_reg:x3; val_offset:282831*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282831*0 + 3*581*FLEN/8, x4, x1, x2)

inst_94278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffffffff80; valaddr_reg:x3; val_offset:282834*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282834*0 + 3*582*FLEN/8, x4, x1, x2)

inst_94279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffffffffc0; valaddr_reg:x3; val_offset:282837*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282837*0 + 3*583*FLEN/8, x4, x1, x2)

inst_94280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffffffffe0; valaddr_reg:x3; val_offset:282840*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282840*0 + 3*584*FLEN/8, x4, x1, x2)

inst_94281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffffffff0; valaddr_reg:x3; val_offset:282843*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282843*0 + 3*585*FLEN/8, x4, x1, x2)

inst_94282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffffffff8; valaddr_reg:x3; val_offset:282846*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282846*0 + 3*586*FLEN/8, x4, x1, x2)

inst_94283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffffffffc; valaddr_reg:x3; val_offset:282849*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282849*0 + 3*587*FLEN/8, x4, x1, x2)

inst_94284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0ffffffffffffe; valaddr_reg:x3; val_offset:282852*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282852*0 + 3*588*FLEN/8, x4, x1, x2)

inst_94285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3e0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3e0fffffffffffff; valaddr_reg:x3; val_offset:282855*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282855*0 + 3*589*FLEN/8, x4, x1, x2)

inst_94286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:282858*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282858*0 + 3*590*FLEN/8, x4, x1, x2)

inst_94287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:282861*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282861*0 + 3*591*FLEN/8, x4, x1, x2)

inst_94288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:282864*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282864*0 + 3*592*FLEN/8, x4, x1, x2)

inst_94289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:282867*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282867*0 + 3*593*FLEN/8, x4, x1, x2)

inst_94290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:282870*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282870*0 + 3*594*FLEN/8, x4, x1, x2)

inst_94291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:282873*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282873*0 + 3*595*FLEN/8, x4, x1, x2)

inst_94292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:282876*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282876*0 + 3*596*FLEN/8, x4, x1, x2)

inst_94293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:282879*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282879*0 + 3*597*FLEN/8, x4, x1, x2)

inst_94294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:282882*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282882*0 + 3*598*FLEN/8, x4, x1, x2)

inst_94295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:282885*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282885*0 + 3*599*FLEN/8, x4, x1, x2)

inst_94296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:282888*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282888*0 + 3*600*FLEN/8, x4, x1, x2)

inst_94297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:282891*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282891*0 + 3*601*FLEN/8, x4, x1, x2)

inst_94298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:282894*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282894*0 + 3*602*FLEN/8, x4, x1, x2)

inst_94299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:282897*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282897*0 + 3*603*FLEN/8, x4, x1, x2)

inst_94300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:282900*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282900*0 + 3*604*FLEN/8, x4, x1, x2)

inst_94301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:282903*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282903*0 + 3*605*FLEN/8, x4, x1, x2)

inst_94302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:282906*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282906*0 + 3*606*FLEN/8, x4, x1, x2)

inst_94303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:282909*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282909*0 + 3*607*FLEN/8, x4, x1, x2)

inst_94304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:282912*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282912*0 + 3*608*FLEN/8, x4, x1, x2)

inst_94305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:282915*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282915*0 + 3*609*FLEN/8, x4, x1, x2)

inst_94306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:282918*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282918*0 + 3*610*FLEN/8, x4, x1, x2)

inst_94307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd875461963784 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x156cf7fd7a868 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad875461963784; op2val:0x203156cf7fd7a868;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:282921*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282921*0 + 3*611*FLEN/8, x4, x1, x2)

inst_94308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:282924*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282924*0 + 3*612*FLEN/8, x4, x1, x2)

inst_94309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:282927*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282927*0 + 3*613*FLEN/8, x4, x1, x2)

inst_94310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:282930*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282930*0 + 3*614*FLEN/8, x4, x1, x2)

inst_94311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:282933*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282933*0 + 3*615*FLEN/8, x4, x1, x2)

inst_94312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:282936*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282936*0 + 3*616*FLEN/8, x4, x1, x2)

inst_94313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:282939*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282939*0 + 3*617*FLEN/8, x4, x1, x2)

inst_94314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:282942*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282942*0 + 3*618*FLEN/8, x4, x1, x2)

inst_94315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:282945*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282945*0 + 3*619*FLEN/8, x4, x1, x2)

inst_94316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:282948*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282948*0 + 3*620*FLEN/8, x4, x1, x2)

inst_94317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:282951*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282951*0 + 3*621*FLEN/8, x4, x1, x2)

inst_94318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:282954*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282954*0 + 3*622*FLEN/8, x4, x1, x2)

inst_94319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:282957*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282957*0 + 3*623*FLEN/8, x4, x1, x2)

inst_94320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:282960*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282960*0 + 3*624*FLEN/8, x4, x1, x2)

inst_94321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:282963*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282963*0 + 3*625*FLEN/8, x4, x1, x2)

inst_94322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:282966*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282966*0 + 3*626*FLEN/8, x4, x1, x2)

inst_94323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:282969*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282969*0 + 3*627*FLEN/8, x4, x1, x2)

inst_94324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:282972*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282972*0 + 3*628*FLEN/8, x4, x1, x2)

inst_94325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:282975*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282975*0 + 3*629*FLEN/8, x4, x1, x2)

inst_94326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:282978*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282978*0 + 3*630*FLEN/8, x4, x1, x2)

inst_94327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:282981*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282981*0 + 3*631*FLEN/8, x4, x1, x2)

inst_94328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:282984*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282984*0 + 3*632*FLEN/8, x4, x1, x2)

inst_94329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:282987*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282987*0 + 3*633*FLEN/8, x4, x1, x2)

inst_94330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000000000000; valaddr_reg:x3; val_offset:282990*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282990*0 + 3*634*FLEN/8, x4, x1, x2)

inst_94331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000000000001; valaddr_reg:x3; val_offset:282993*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282993*0 + 3*635*FLEN/8, x4, x1, x2)

inst_94332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000000000003; valaddr_reg:x3; val_offset:282996*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282996*0 + 3*636*FLEN/8, x4, x1, x2)

inst_94333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000000000007; valaddr_reg:x3; val_offset:282999*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282999*0 + 3*637*FLEN/8, x4, x1, x2)

inst_94334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000000000000f; valaddr_reg:x3; val_offset:283002*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283002*0 + 3*638*FLEN/8, x4, x1, x2)

inst_94335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000000000001f; valaddr_reg:x3; val_offset:283005*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283005*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_94336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000000000003f; valaddr_reg:x3; val_offset:283008*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283008*0 + 3*640*FLEN/8, x4, x1, x2)

inst_94337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000000000007f; valaddr_reg:x3; val_offset:283011*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283011*0 + 3*641*FLEN/8, x4, x1, x2)

inst_94338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900000000000ff; valaddr_reg:x3; val_offset:283014*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283014*0 + 3*642*FLEN/8, x4, x1, x2)

inst_94339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900000000001ff; valaddr_reg:x3; val_offset:283017*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283017*0 + 3*643*FLEN/8, x4, x1, x2)

inst_94340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900000000003ff; valaddr_reg:x3; val_offset:283020*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283020*0 + 3*644*FLEN/8, x4, x1, x2)

inst_94341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900000000007ff; valaddr_reg:x3; val_offset:283023*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283023*0 + 3*645*FLEN/8, x4, x1, x2)

inst_94342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000000000fff; valaddr_reg:x3; val_offset:283026*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283026*0 + 3*646*FLEN/8, x4, x1, x2)

inst_94343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000000001fff; valaddr_reg:x3; val_offset:283029*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283029*0 + 3*647*FLEN/8, x4, x1, x2)

inst_94344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000000003fff; valaddr_reg:x3; val_offset:283032*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283032*0 + 3*648*FLEN/8, x4, x1, x2)

inst_94345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000000007fff; valaddr_reg:x3; val_offset:283035*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283035*0 + 3*649*FLEN/8, x4, x1, x2)

inst_94346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000000000ffff; valaddr_reg:x3; val_offset:283038*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283038*0 + 3*650*FLEN/8, x4, x1, x2)

inst_94347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000000001ffff; valaddr_reg:x3; val_offset:283041*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283041*0 + 3*651*FLEN/8, x4, x1, x2)

inst_94348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000000003ffff; valaddr_reg:x3; val_offset:283044*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283044*0 + 3*652*FLEN/8, x4, x1, x2)

inst_94349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000000007ffff; valaddr_reg:x3; val_offset:283047*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283047*0 + 3*653*FLEN/8, x4, x1, x2)

inst_94350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900000000fffff; valaddr_reg:x3; val_offset:283050*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283050*0 + 3*654*FLEN/8, x4, x1, x2)

inst_94351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900000001fffff; valaddr_reg:x3; val_offset:283053*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283053*0 + 3*655*FLEN/8, x4, x1, x2)

inst_94352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900000003fffff; valaddr_reg:x3; val_offset:283056*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283056*0 + 3*656*FLEN/8, x4, x1, x2)

inst_94353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900000007fffff; valaddr_reg:x3; val_offset:283059*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283059*0 + 3*657*FLEN/8, x4, x1, x2)

inst_94354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000000ffffff; valaddr_reg:x3; val_offset:283062*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283062*0 + 3*658*FLEN/8, x4, x1, x2)

inst_94355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000001ffffff; valaddr_reg:x3; val_offset:283065*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283065*0 + 3*659*FLEN/8, x4, x1, x2)

inst_94356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000003ffffff; valaddr_reg:x3; val_offset:283068*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283068*0 + 3*660*FLEN/8, x4, x1, x2)

inst_94357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000007ffffff; valaddr_reg:x3; val_offset:283071*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283071*0 + 3*661*FLEN/8, x4, x1, x2)

inst_94358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000000fffffff; valaddr_reg:x3; val_offset:283074*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283074*0 + 3*662*FLEN/8, x4, x1, x2)

inst_94359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000001fffffff; valaddr_reg:x3; val_offset:283077*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283077*0 + 3*663*FLEN/8, x4, x1, x2)

inst_94360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000003fffffff; valaddr_reg:x3; val_offset:283080*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283080*0 + 3*664*FLEN/8, x4, x1, x2)

inst_94361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000007fffffff; valaddr_reg:x3; val_offset:283083*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283083*0 + 3*665*FLEN/8, x4, x1, x2)

inst_94362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900000ffffffff; valaddr_reg:x3; val_offset:283086*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283086*0 + 3*666*FLEN/8, x4, x1, x2)

inst_94363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900001ffffffff; valaddr_reg:x3; val_offset:283089*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283089*0 + 3*667*FLEN/8, x4, x1, x2)

inst_94364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900003ffffffff; valaddr_reg:x3; val_offset:283092*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283092*0 + 3*668*FLEN/8, x4, x1, x2)

inst_94365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900007ffffffff; valaddr_reg:x3; val_offset:283095*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283095*0 + 3*669*FLEN/8, x4, x1, x2)

inst_94366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090000fffffffff; valaddr_reg:x3; val_offset:283098*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283098*0 + 3*670*FLEN/8, x4, x1, x2)

inst_94367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090001fffffffff; valaddr_reg:x3; val_offset:283101*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283101*0 + 3*671*FLEN/8, x4, x1, x2)

inst_94368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090003fffffffff; valaddr_reg:x3; val_offset:283104*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283104*0 + 3*672*FLEN/8, x4, x1, x2)

inst_94369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090007fffffffff; valaddr_reg:x3; val_offset:283107*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283107*0 + 3*673*FLEN/8, x4, x1, x2)

inst_94370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809000ffffffffff; valaddr_reg:x3; val_offset:283110*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283110*0 + 3*674*FLEN/8, x4, x1, x2)

inst_94371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809001ffffffffff; valaddr_reg:x3; val_offset:283113*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283113*0 + 3*675*FLEN/8, x4, x1, x2)

inst_94372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809003ffffffffff; valaddr_reg:x3; val_offset:283116*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283116*0 + 3*676*FLEN/8, x4, x1, x2)

inst_94373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809007ffffffffff; valaddr_reg:x3; val_offset:283119*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283119*0 + 3*677*FLEN/8, x4, x1, x2)

inst_94374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80900fffffffffff; valaddr_reg:x3; val_offset:283122*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283122*0 + 3*678*FLEN/8, x4, x1, x2)

inst_94375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80901fffffffffff; valaddr_reg:x3; val_offset:283125*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283125*0 + 3*679*FLEN/8, x4, x1, x2)

inst_94376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80903fffffffffff; valaddr_reg:x3; val_offset:283128*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283128*0 + 3*680*FLEN/8, x4, x1, x2)

inst_94377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x80907fffffffffff; valaddr_reg:x3; val_offset:283131*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283131*0 + 3*681*FLEN/8, x4, x1, x2)

inst_94378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8090ffffffffffff; valaddr_reg:x3; val_offset:283134*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283134*0 + 3*682*FLEN/8, x4, x1, x2)

inst_94379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8091ffffffffffff; valaddr_reg:x3; val_offset:283137*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283137*0 + 3*683*FLEN/8, x4, x1, x2)

inst_94380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8093ffffffffffff; valaddr_reg:x3; val_offset:283140*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283140*0 + 3*684*FLEN/8, x4, x1, x2)

inst_94381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8097ffffffffffff; valaddr_reg:x3; val_offset:283143*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283143*0 + 3*685*FLEN/8, x4, x1, x2)

inst_94382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x8098000000000000; valaddr_reg:x3; val_offset:283146*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283146*0 + 3*686*FLEN/8, x4, x1, x2)

inst_94383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809c000000000000; valaddr_reg:x3; val_offset:283149*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283149*0 + 3*687*FLEN/8, x4, x1, x2)

inst_94384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809e000000000000; valaddr_reg:x3; val_offset:283152*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283152*0 + 3*688*FLEN/8, x4, x1, x2)

inst_94385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809f000000000000; valaddr_reg:x3; val_offset:283155*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283155*0 + 3*689*FLEN/8, x4, x1, x2)

inst_94386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809f800000000000; valaddr_reg:x3; val_offset:283158*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283158*0 + 3*690*FLEN/8, x4, x1, x2)

inst_94387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fc00000000000; valaddr_reg:x3; val_offset:283161*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283161*0 + 3*691*FLEN/8, x4, x1, x2)

inst_94388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fe00000000000; valaddr_reg:x3; val_offset:283164*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283164*0 + 3*692*FLEN/8, x4, x1, x2)

inst_94389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ff00000000000; valaddr_reg:x3; val_offset:283167*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283167*0 + 3*693*FLEN/8, x4, x1, x2)

inst_94390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ff80000000000; valaddr_reg:x3; val_offset:283170*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283170*0 + 3*694*FLEN/8, x4, x1, x2)

inst_94391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffc0000000000; valaddr_reg:x3; val_offset:283173*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283173*0 + 3*695*FLEN/8, x4, x1, x2)

inst_94392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffe0000000000; valaddr_reg:x3; val_offset:283176*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283176*0 + 3*696*FLEN/8, x4, x1, x2)

inst_94393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fff0000000000; valaddr_reg:x3; val_offset:283179*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283179*0 + 3*697*FLEN/8, x4, x1, x2)

inst_94394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fff8000000000; valaddr_reg:x3; val_offset:283182*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283182*0 + 3*698*FLEN/8, x4, x1, x2)

inst_94395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffc000000000; valaddr_reg:x3; val_offset:283185*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283185*0 + 3*699*FLEN/8, x4, x1, x2)

inst_94396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffe000000000; valaddr_reg:x3; val_offset:283188*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283188*0 + 3*700*FLEN/8, x4, x1, x2)

inst_94397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffff000000000; valaddr_reg:x3; val_offset:283191*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283191*0 + 3*701*FLEN/8, x4, x1, x2)

inst_94398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffff800000000; valaddr_reg:x3; val_offset:283194*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283194*0 + 3*702*FLEN/8, x4, x1, x2)

inst_94399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffc00000000; valaddr_reg:x3; val_offset:283197*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283197*0 + 3*703*FLEN/8, x4, x1, x2)

inst_94400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffe00000000; valaddr_reg:x3; val_offset:283200*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283200*0 + 3*704*FLEN/8, x4, x1, x2)

inst_94401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffff00000000; valaddr_reg:x3; val_offset:283203*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283203*0 + 3*705*FLEN/8, x4, x1, x2)

inst_94402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffff80000000; valaddr_reg:x3; val_offset:283206*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283206*0 + 3*706*FLEN/8, x4, x1, x2)

inst_94403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffc0000000; valaddr_reg:x3; val_offset:283209*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283209*0 + 3*707*FLEN/8, x4, x1, x2)

inst_94404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffe0000000; valaddr_reg:x3; val_offset:283212*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283212*0 + 3*708*FLEN/8, x4, x1, x2)

inst_94405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffff0000000; valaddr_reg:x3; val_offset:283215*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283215*0 + 3*709*FLEN/8, x4, x1, x2)

inst_94406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffff8000000; valaddr_reg:x3; val_offset:283218*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283218*0 + 3*710*FLEN/8, x4, x1, x2)

inst_94407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffc000000; valaddr_reg:x3; val_offset:283221*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283221*0 + 3*711*FLEN/8, x4, x1, x2)

inst_94408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffe000000; valaddr_reg:x3; val_offset:283224*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283224*0 + 3*712*FLEN/8, x4, x1, x2)

inst_94409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffff000000; valaddr_reg:x3; val_offset:283227*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283227*0 + 3*713*FLEN/8, x4, x1, x2)

inst_94410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffff800000; valaddr_reg:x3; val_offset:283230*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283230*0 + 3*714*FLEN/8, x4, x1, x2)

inst_94411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffffc00000; valaddr_reg:x3; val_offset:283233*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283233*0 + 3*715*FLEN/8, x4, x1, x2)

inst_94412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffffe00000; valaddr_reg:x3; val_offset:283236*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283236*0 + 3*716*FLEN/8, x4, x1, x2)

inst_94413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffff00000; valaddr_reg:x3; val_offset:283239*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283239*0 + 3*717*FLEN/8, x4, x1, x2)

inst_94414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffff80000; valaddr_reg:x3; val_offset:283242*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283242*0 + 3*718*FLEN/8, x4, x1, x2)

inst_94415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffffc0000; valaddr_reg:x3; val_offset:283245*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283245*0 + 3*719*FLEN/8, x4, x1, x2)

inst_94416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffffe0000; valaddr_reg:x3; val_offset:283248*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283248*0 + 3*720*FLEN/8, x4, x1, x2)

inst_94417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffffff0000; valaddr_reg:x3; val_offset:283251*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283251*0 + 3*721*FLEN/8, x4, x1, x2)

inst_94418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffffff8000; valaddr_reg:x3; val_offset:283254*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283254*0 + 3*722*FLEN/8, x4, x1, x2)

inst_94419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffffffc000; valaddr_reg:x3; val_offset:283257*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283257*0 + 3*723*FLEN/8, x4, x1, x2)

inst_94420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffffffe000; valaddr_reg:x3; val_offset:283260*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283260*0 + 3*724*FLEN/8, x4, x1, x2)

inst_94421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffffff000; valaddr_reg:x3; val_offset:283263*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283263*0 + 3*725*FLEN/8, x4, x1, x2)

inst_94422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffffff800; valaddr_reg:x3; val_offset:283266*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283266*0 + 3*726*FLEN/8, x4, x1, x2)

inst_94423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffffffc00; valaddr_reg:x3; val_offset:283269*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283269*0 + 3*727*FLEN/8, x4, x1, x2)

inst_94424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffffffe00; valaddr_reg:x3; val_offset:283272*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283272*0 + 3*728*FLEN/8, x4, x1, x2)

inst_94425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffffffff00; valaddr_reg:x3; val_offset:283275*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283275*0 + 3*729*FLEN/8, x4, x1, x2)

inst_94426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffffffff80; valaddr_reg:x3; val_offset:283278*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283278*0 + 3*730*FLEN/8, x4, x1, x2)

inst_94427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffffffffc0; valaddr_reg:x3; val_offset:283281*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283281*0 + 3*731*FLEN/8, x4, x1, x2)

inst_94428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffffffffe0; valaddr_reg:x3; val_offset:283284*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283284*0 + 3*732*FLEN/8, x4, x1, x2)

inst_94429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffffffff0; valaddr_reg:x3; val_offset:283287*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283287*0 + 3*733*FLEN/8, x4, x1, x2)

inst_94430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffffffff8; valaddr_reg:x3; val_offset:283290*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283290*0 + 3*734*FLEN/8, x4, x1, x2)

inst_94431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffffffffc; valaddr_reg:x3; val_offset:283293*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283293*0 + 3*735*FLEN/8, x4, x1, x2)

inst_94432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809ffffffffffffe; valaddr_reg:x3; val_offset:283296*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283296*0 + 3*736*FLEN/8, x4, x1, x2)

inst_94433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd883cdc560c7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x009 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad883cdc560c7e; op2val:0x8000;
op3val:0x809fffffffffffff; valaddr_reg:x3; val_offset:283299*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283299*0 + 3*737*FLEN/8, x4, x1, x2)

inst_94434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:283302*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283302*0 + 3*738*FLEN/8, x4, x1, x2)

inst_94435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:283305*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283305*0 + 3*739*FLEN/8, x4, x1, x2)

inst_94436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:283308*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283308*0 + 3*740*FLEN/8, x4, x1, x2)

inst_94437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:283311*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283311*0 + 3*741*FLEN/8, x4, x1, x2)

inst_94438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:283314*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283314*0 + 3*742*FLEN/8, x4, x1, x2)

inst_94439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:283317*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283317*0 + 3*743*FLEN/8, x4, x1, x2)

inst_94440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:283320*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283320*0 + 3*744*FLEN/8, x4, x1, x2)

inst_94441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:283323*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283323*0 + 3*745*FLEN/8, x4, x1, x2)

inst_94442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:283326*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283326*0 + 3*746*FLEN/8, x4, x1, x2)

inst_94443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:283329*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283329*0 + 3*747*FLEN/8, x4, x1, x2)

inst_94444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:283332*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283332*0 + 3*748*FLEN/8, x4, x1, x2)

inst_94445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:283335*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283335*0 + 3*749*FLEN/8, x4, x1, x2)

inst_94446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:283338*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283338*0 + 3*750*FLEN/8, x4, x1, x2)

inst_94447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:283341*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283341*0 + 3*751*FLEN/8, x4, x1, x2)

inst_94448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:283344*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283344*0 + 3*752*FLEN/8, x4, x1, x2)

inst_94449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:283347*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283347*0 + 3*753*FLEN/8, x4, x1, x2)

inst_94450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:283350*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283350*0 + 3*754*FLEN/8, x4, x1, x2)

inst_94451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:283353*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283353*0 + 3*755*FLEN/8, x4, x1, x2)

inst_94452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:283356*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283356*0 + 3*756*FLEN/8, x4, x1, x2)

inst_94453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:283359*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283359*0 + 3*757*FLEN/8, x4, x1, x2)

inst_94454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:283362*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283362*0 + 3*758*FLEN/8, x4, x1, x2)

inst_94455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:283365*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283365*0 + 3*759*FLEN/8, x4, x1, x2)

inst_94456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x80b0000000000000; valaddr_reg:x3; val_offset:283368*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283368*0 + 3*760*FLEN/8, x4, x1, x2)

inst_94457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x80b0000000000001; valaddr_reg:x3; val_offset:283371*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283371*0 + 3*761*FLEN/8, x4, x1, x2)

inst_94458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x80b0000000000003; valaddr_reg:x3; val_offset:283374*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283374*0 + 3*762*FLEN/8, x4, x1, x2)

inst_94459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x80b0000000000007; valaddr_reg:x3; val_offset:283377*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283377*0 + 3*763*FLEN/8, x4, x1, x2)

inst_94460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x80b000000000000f; valaddr_reg:x3; val_offset:283380*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283380*0 + 3*764*FLEN/8, x4, x1, x2)

inst_94461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x80b000000000001f; valaddr_reg:x3; val_offset:283383*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283383*0 + 3*765*FLEN/8, x4, x1, x2)

inst_94462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x80b000000000003f; valaddr_reg:x3; val_offset:283386*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283386*0 + 3*766*FLEN/8, x4, x1, x2)

inst_94463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad89e42f5143f8; op2val:0x8000;
op3val:0x80b000000000007f; valaddr_reg:x3; val_offset:283389*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 283389*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180094408523775,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180094408785919,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180094409310207,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180094410358783,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180094412455935,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180094416650239,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180094425038847,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180094441816063,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180094475370495,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180094542479359,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180094676697087,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180094945132543,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180095482003455,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180096555745279,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180098703228927,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180102998196223,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180111588130815,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180128767999999,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180163127738367,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180231847215103,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180369286168575,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362180644164075519,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362181193919889407,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362182293431517183,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362184492454772735,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362188890501283839,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362197686594306047,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362215278780350463,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362250463152439295,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362320831896616959,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362461569384972287,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13362743044361682943,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13363305994315104255,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13364431894221946879,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13364431894221946880,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13365557794128789504,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366120744082210816,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366402219058921472,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366542956547276800,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366613325291454464,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366648509663543296,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366666101849587712,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366674897942609920,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366679295989121024,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366681495012376576,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366682594524004352,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683144279818240,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683419157725184,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683556596678656,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683625316155392,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683659675893760,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683676855762944,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683685445697536,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683689740664832,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683691888148480,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683692961890304,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683693498761216,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683693767196672,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683693901414400,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683693968523264,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694002077696,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694018854912,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694027243520,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694031437824,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694033534976,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694034583552,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035107840,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035369984,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035501056,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035566592,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035599360,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035615744,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035623936,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035628032,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035630080,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035631104,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035631616,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035631872,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035632000,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035632064,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035632096,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035632112,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035632120,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035632124,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035632126,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13366683694035632127,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894287650923646386,64,FLEN)
NAN_BOXED(11511593921101970705,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110272,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110273,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110275,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110279,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110287,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110303,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110335,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110399,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110527,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110783,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501111295,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501112319,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501114367,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501118463,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501126655,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501143039,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501175807,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501241343,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501372415,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501634559,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433502158847,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433503207423,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433505304575,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433509498879,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433517887487,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433534664703,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433568219135,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433635327999,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433769545727,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904434037981183,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904434574852095,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904435648593919,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904437796077567,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904442091044863,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904450680979455,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904467860848639,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904502220587007,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904570940063743,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904708379017215,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904983256924159,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263905533012738047,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263906632524365823,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263908831547621375,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263913229594132479,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263922025687154687,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263939617873199103,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263974802245287935,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264045170989465599,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264185908477820927,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264467383454531583,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9265030333407952895,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9266156233314795519,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9266156233314795520,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9267282133221638144,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9267845083175059456,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268126558151770112,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268267295640125440,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268337664384303104,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268372848756391936,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268390440942436352,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268399237035458560,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268403635081969664,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268405834105225216,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268406933616852992,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407483372666880,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407758250573824,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407895689527296,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407964409004032,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407998768742400,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408015948611584,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408024538546176,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408028833513472,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408030980997120,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032054738944,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032591609856,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032860045312,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032994263040,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033061371904,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033094926336,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033111703552,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033120092160,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033124286464,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033126383616,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033127432192,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033127956480,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128218624,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128349696,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128415232,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128448000,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128464384,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128472576,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128476672,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128478720,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128479744,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480256,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480512,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480640,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480704,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480736,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480752,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480760,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480764,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480766,64,FLEN)
NAN_BOXED(6894290256196815326,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480767,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416633344,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416633345,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416633347,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416633351,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416633359,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416633375,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416633407,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416633471,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416633599,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416633855,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416634367,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416635391,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416637439,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416641535,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416649727,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416666111,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416698879,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416764415,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059416895487,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059417157631,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059417681919,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059418730495,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059420827647,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059425021951,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059433410559,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059450187775,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059483742207,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059550851071,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059685068799,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290059953504255,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290060490375167,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290061564116991,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290063711600639,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290068006567935,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290076596502527,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290093776371711,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290128136110079,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290196855586815,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290334294540287,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116290609172447231,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116291158928261119,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116292258439888895,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116294457463144447,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116298855509655551,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116307651602677759,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116325243788722175,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116360428160811007,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116430796904988671,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116571534393343999,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4116853009370054655,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4117415959323475967,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4118541859230318591,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4118541859230318592,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4119667759137161216,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120230709090582528,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120512184067293184,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120652921555648512,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120723290299826176,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120758474671915008,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120776066857959424,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120784862950981632,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120789260997492736,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120791460020748288,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120792559532376064,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793109288189952,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793384166096896,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793521605050368,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793590324527104,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793624684265472,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793641864134656,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793650454069248,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793654749036544,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793656896520192,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793657970262016,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793658507132928,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793658775568384,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793658909786112,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793658976894976,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659010449408,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659027226624,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659035615232,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659039809536,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659041906688,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659042955264,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659043479552,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659043741696,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659043872768,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659043938304,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659043971072,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659043987456,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659043995648,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659043999744,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659044001792,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659044002816,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659044003328,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659044003584,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659044003712,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659044003776,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659044003808,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659044003824,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659044003832,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659044003836,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659044003838,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4120793659044003839,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894303229325405687,64,FLEN)
NAN_BOXED(2319737889954316481,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488768,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488769,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488771,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488775,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488783,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488799,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488831,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488895,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489023,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489279,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387489791,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387490815,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387492863,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387496959,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387505151,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387521535,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387554303,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387619839,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387750911,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778388013055,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778388537343,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778389585919,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778391683071,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778395877375,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778404265983,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778421043199,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778454597631,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778521706495,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778655924223,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778924359679,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208779461230591,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208780534972415,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208782682456063,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208786977423359,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208795567357951,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208812747227135,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208847106965503,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208915826442239,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209053265395711,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209328143302655,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261209877899116543,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261210977410744319,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261213176433999871,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261217574480510975,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261226370573533183,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261243962759577599,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261279147131666431,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261349515875844095,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261490253364199423,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261771728340910079,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262334678294331391,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(263460578201174015,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(263460578201174016,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(264586478108016640,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265149428061437952,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265430903038148608,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265571640526503936,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265642009270681600,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265677193642770432,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265694785828814848,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265703581921837056,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265707979968348160,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265710178991603712,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711278503231488,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265711828259045376,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712103136952320,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712240575905792,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712309295382528,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712343655120896,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712360834990080,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712369424924672,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712373719891968,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712375867375616,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712376941117440,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377477988352,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377746423808,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377880641536,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377947750400,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377981304832,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712377998082048,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378006470656,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378010664960,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378012762112,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378013810688,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014334976,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014597120,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014728192,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014793728,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014826496,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014842880,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014851072,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014855168,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014857216,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014858240,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014858752,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859008,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859136,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859200,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859232,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859248,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859256,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859260,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859262,64,FLEN)
NAN_BOXED(6894310717339025434,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859263,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351532032,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351532033,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351532035,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351532039,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351532047,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351532063,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351532095,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351532159,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351532287,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351532543,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351533055,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351534079,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351536127,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351540223,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351548415,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351564799,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351597567,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351663103,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830351794175,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830352056319,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830352580607,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830353629183,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830355726335,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830359920639,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830368309247,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830385086463,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830418640895,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830485749759,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830619967487,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570830888402943,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570831425273855,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570832499015679,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570834646499327,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570838941466623,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570847531401215,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570864711270399,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570899071008767,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467570967790485503,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467571105229438975,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467571380107345919,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467571929863159807,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467573029374787583,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467575228398043135,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467579626444554239,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467588422537576447,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467606014723620863,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467641199095709695,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467711567839887359,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4467852305328242687,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4468133780304953343,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4468696730258374655,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4469822630165217279,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4469822630165217280,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4470948530072059904,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4471511480025481216,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4471792955002191872,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4471933692490547200,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472004061234724864,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472039245606813696,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472056837792858112,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472065633885880320,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472070031932391424,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472072230955646976,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472073330467274752,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472073880223088640,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074155100995584,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074292539949056,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074361259425792,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074395619164160,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074412799033344,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074421388967936,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074425683935232,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074427831418880,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074428905160704,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429442031616,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429710467072,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429844684800,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429911793664,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429945348096,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429962125312,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429970513920,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429974708224,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429976805376,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429977853952,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978378240,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978640384,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978771456,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978836992,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978869760,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978886144,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978894336,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978898432,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978900480,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978901504,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978902016,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978902272,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978902400,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978902464,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978902496,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978902512,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978902520,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978902524,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978902526,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4472074429978902527,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894315401058334596,64,FLEN)
NAN_BOXED(2319730732275574888,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110272,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110273,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110275,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110279,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110287,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110303,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110335,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110399,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110527,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110783,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501111295,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501112319,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501114367,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501118463,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501126655,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501143039,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501175807,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501241343,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501372415,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501634559,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433502158847,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433503207423,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433505304575,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433509498879,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433517887487,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433534664703,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433568219135,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433635327999,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433769545727,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904434037981183,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904434574852095,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904435648593919,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904437796077567,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904442091044863,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904450680979455,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904467860848639,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904502220587007,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904570940063743,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904708379017215,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904983256924159,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263905533012738047,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263906632524365823,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263908831547621375,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263913229594132479,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263922025687154687,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263939617873199103,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263974802245287935,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264045170989465599,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264185908477820927,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9264467383454531583,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9265030333407952895,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9266156233314795519,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9266156233314795520,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9267282133221638144,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9267845083175059456,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268126558151770112,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268267295640125440,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268337664384303104,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268372848756391936,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268390440942436352,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268399237035458560,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268403635081969664,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268405834105225216,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268406933616852992,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407483372666880,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407758250573824,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407895689527296,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407964409004032,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268407998768742400,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408015948611584,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408024538546176,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408028833513472,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408030980997120,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032054738944,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032591609856,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032860045312,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408032994263040,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033061371904,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033094926336,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033111703552,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033120092160,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033124286464,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033126383616,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033127432192,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033127956480,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128218624,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128349696,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128415232,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128448000,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128464384,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128472576,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128476672,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128478720,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128479744,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480256,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480512,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480640,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480704,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480736,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480752,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480760,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480764,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480766,64,FLEN)
NAN_BOXED(6894316399550139518,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9268408033128480767,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851264,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851265,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851267,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851271,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851279,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851295,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851327,64,FLEN)
NAN_BOXED(6894318217713501176,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851391,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
